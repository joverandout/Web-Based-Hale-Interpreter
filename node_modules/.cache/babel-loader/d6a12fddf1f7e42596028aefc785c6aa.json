{"ast":null,"code":"/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n// src/basic-languages/scss/scss.ts\nvar conf = {\n  wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|([@$#!.:]?[\\w-?]+%?)|[@#!.]/g,\n  comments: {\n    blockComment: [\"/*\", \"*/\"],\n    lineComment: \"//\"\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\",\n    notIn: [\"string\", \"comment\"]\n  }, {\n    open: \"[\",\n    close: \"]\",\n    notIn: [\"string\", \"comment\"]\n  }, {\n    open: \"(\",\n    close: \")\",\n    notIn: [\"string\", \"comment\"]\n  }, {\n    open: '\"',\n    close: '\"',\n    notIn: [\"string\", \"comment\"]\n  }, {\n    open: \"'\",\n    close: \"'\",\n    notIn: [\"string\", \"comment\"]\n  }],\n  surroundingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/\"),\n      end: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".scss\",\n  ws: \"[ \t\\n\\r\\f]*\",\n  identifier: \"-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*\",\n  brackets: [{\n    open: \"{\",\n    close: \"}\",\n    token: \"delimiter.curly\"\n  }, {\n    open: \"[\",\n    close: \"]\",\n    token: \"delimiter.bracket\"\n  }, {\n    open: \"(\",\n    close: \")\",\n    token: \"delimiter.parenthesis\"\n  }, {\n    open: \"<\",\n    close: \">\",\n    token: \"delimiter.angle\"\n  }],\n  tokenizer: {\n    root: [{\n      include: \"@selector\"\n    }],\n    selector: [{\n      include: \"@comments\"\n    }, {\n      include: \"@import\"\n    }, {\n      include: \"@variabledeclaration\"\n    }, {\n      include: \"@warndebug\"\n    }, [\"[@](include)\", {\n      token: \"keyword\",\n      next: \"@includedeclaration\"\n    }], [\"[@](keyframes|-webkit-keyframes|-moz-keyframes|-o-keyframes)\", {\n      token: \"keyword\",\n      next: \"@keyframedeclaration\"\n    }], [\"[@](page|content|font-face|-moz-document)\", {\n      token: \"keyword\"\n    }], [\"[@](charset|namespace)\", {\n      token: \"keyword\",\n      next: \"@declarationbody\"\n    }], [\"[@](function)\", {\n      token: \"keyword\",\n      next: \"@functiondeclaration\"\n    }], [\"[@](mixin)\", {\n      token: \"keyword\",\n      next: \"@mixindeclaration\"\n    }], [\"url(\\\\-prefix)?\\\\(\", {\n      token: \"meta\",\n      next: \"@urldeclaration\"\n    }], {\n      include: \"@controlstatement\"\n    }, {\n      include: \"@selectorname\"\n    }, [\"[&\\\\*]\", \"tag\"], [\"[>\\\\+,]\", \"delimiter\"], [\"\\\\[\", {\n      token: \"delimiter.bracket\",\n      next: \"@selectorattribute\"\n    }], [\"{\", {\n      token: \"delimiter.curly\",\n      next: \"@selectorbody\"\n    }]],\n    selectorbody: [[\"[*_]?@identifier@ws:(?=(\\\\s|\\\\d|[^{;}]*[;}]))\", \"attribute.name\", \"@rulevalue\"], {\n      include: \"@selector\"\n    }, [\"[@](extend)\", {\n      token: \"keyword\",\n      next: \"@extendbody\"\n    }], [\"[@](return)\", {\n      token: \"keyword\",\n      next: \"@declarationbody\"\n    }], [\"}\", {\n      token: \"delimiter.curly\",\n      next: \"@pop\"\n    }]],\n    selectorname: [[\"#{\", {\n      token: \"meta\",\n      next: \"@variableinterpolation\"\n    }], [\"(\\\\.|#(?=[^{])|%|(@identifier)|:)+\", \"tag\"]],\n    selectorattribute: [{\n      include: \"@term\"\n    }, [\"]\", {\n      token: \"delimiter.bracket\",\n      next: \"@pop\"\n    }]],\n    term: [{\n      include: \"@comments\"\n    }, [\"url(\\\\-prefix)?\\\\(\", {\n      token: \"meta\",\n      next: \"@urldeclaration\"\n    }], {\n      include: \"@functioninvocation\"\n    }, {\n      include: \"@numbers\"\n    }, {\n      include: \"@strings\"\n    }, {\n      include: \"@variablereference\"\n    }, [\"(and\\\\b|or\\\\b|not\\\\b)\", \"operator\"], {\n      include: \"@name\"\n    }, [\"([<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,])\", \"operator\"], [\",\", \"delimiter\"], [\"!default\", \"literal\"], [\"\\\\(\", {\n      token: \"delimiter.parenthesis\",\n      next: \"@parenthizedterm\"\n    }]],\n    rulevalue: [{\n      include: \"@term\"\n    }, [\"!important\", \"literal\"], [\";\", \"delimiter\", \"@pop\"], [\"{\", {\n      token: \"delimiter.curly\",\n      switchTo: \"@nestedproperty\"\n    }], [\"(?=})\", {\n      token: \"\",\n      next: \"@pop\"\n    }]],\n    nestedproperty: [[\"[*_]?@identifier@ws:\", \"attribute.name\", \"@rulevalue\"], {\n      include: \"@comments\"\n    }, [\"}\", {\n      token: \"delimiter.curly\",\n      next: \"@pop\"\n    }]],\n    warndebug: [[\"[@](warn|debug)\", {\n      token: \"keyword\",\n      next: \"@declarationbody\"\n    }]],\n    import: [[\"[@](import)\", {\n      token: \"keyword\",\n      next: \"@declarationbody\"\n    }]],\n    variabledeclaration: [[\"\\\\$@identifier@ws:\", \"variable.decl\", \"@declarationbody\"]],\n    urldeclaration: [{\n      include: \"@strings\"\n    }, [\"[^)\\r\\n]+\", \"string\"], [\"\\\\)\", {\n      token: \"meta\",\n      next: \"@pop\"\n    }]],\n    parenthizedterm: [{\n      include: \"@term\"\n    }, [\"\\\\)\", {\n      token: \"delimiter.parenthesis\",\n      next: \"@pop\"\n    }]],\n    declarationbody: [{\n      include: \"@term\"\n    }, [\";\", \"delimiter\", \"@pop\"], [\"(?=})\", {\n      token: \"\",\n      next: \"@pop\"\n    }]],\n    extendbody: [{\n      include: \"@selectorname\"\n    }, [\"!optional\", \"literal\"], [\";\", \"delimiter\", \"@pop\"], [\"(?=})\", {\n      token: \"\",\n      next: \"@pop\"\n    }]],\n    variablereference: [[\"\\\\$@identifier\", \"variable.ref\"], [\"\\\\.\\\\.\\\\.\", \"operator\"], [\"#{\", {\n      token: \"meta\",\n      next: \"@variableinterpolation\"\n    }]],\n    variableinterpolation: [{\n      include: \"@variablereference\"\n    }, [\"}\", {\n      token: \"meta\",\n      next: \"@pop\"\n    }]],\n    comments: [[\"\\\\/\\\\*\", \"comment\", \"@comment\"], [\"\\\\/\\\\/+.*\", \"comment\"]],\n    comment: [[\"\\\\*\\\\/\", \"comment\", \"@pop\"], [\".\", \"comment\"]],\n    name: [[\"@identifier\", \"attribute.value\"]],\n    numbers: [[\"(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?\", {\n      token: \"number\",\n      next: \"@units\"\n    }], [\"#[0-9a-fA-F_]+(?!\\\\w)\", \"number.hex\"]],\n    units: [[\"(em|ex|ch|rem|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?\", \"number\", \"@pop\"]],\n    functiondeclaration: [[\"@identifier@ws\\\\(\", {\n      token: \"meta\",\n      next: \"@parameterdeclaration\"\n    }], [\"{\", {\n      token: \"delimiter.curly\",\n      switchTo: \"@functionbody\"\n    }]],\n    mixindeclaration: [[\"@identifier@ws\\\\(\", {\n      token: \"meta\",\n      next: \"@parameterdeclaration\"\n    }], [\"@identifier\", \"meta\"], [\"{\", {\n      token: \"delimiter.curly\",\n      switchTo: \"@selectorbody\"\n    }]],\n    parameterdeclaration: [[\"\\\\$@identifier@ws:\", \"variable.decl\"], [\"\\\\.\\\\.\\\\.\", \"operator\"], [\",\", \"delimiter\"], {\n      include: \"@term\"\n    }, [\"\\\\)\", {\n      token: \"meta\",\n      next: \"@pop\"\n    }]],\n    includedeclaration: [{\n      include: \"@functioninvocation\"\n    }, [\"@identifier\", \"meta\"], [\";\", \"delimiter\", \"@pop\"], [\"(?=})\", {\n      token: \"\",\n      next: \"@pop\"\n    }], [\"{\", {\n      token: \"delimiter.curly\",\n      switchTo: \"@selectorbody\"\n    }]],\n    keyframedeclaration: [[\"@identifier\", \"meta\"], [\"{\", {\n      token: \"delimiter.curly\",\n      switchTo: \"@keyframebody\"\n    }]],\n    keyframebody: [{\n      include: \"@term\"\n    }, [\"{\", {\n      token: \"delimiter.curly\",\n      next: \"@selectorbody\"\n    }], [\"}\", {\n      token: \"delimiter.curly\",\n      next: \"@pop\"\n    }]],\n    controlstatement: [[\"[@](if|else|for|while|each|media)\", {\n      token: \"keyword.flow\",\n      next: \"@controlstatementdeclaration\"\n    }]],\n    controlstatementdeclaration: [[\"(in|from|through|if|to)\\\\b\", {\n      token: \"keyword.flow\"\n    }], {\n      include: \"@term\"\n    }, [\"{\", {\n      token: \"delimiter.curly\",\n      switchTo: \"@selectorbody\"\n    }]],\n    functionbody: [[\"[@](return)\", {\n      token: \"keyword\"\n    }], {\n      include: \"@variabledeclaration\"\n    }, {\n      include: \"@term\"\n    }, {\n      include: \"@controlstatement\"\n    }, [\";\", \"delimiter\"], [\"}\", {\n      token: \"delimiter.curly\",\n      next: \"@pop\"\n    }]],\n    functioninvocation: [[\"@identifier\\\\(\", {\n      token: \"meta\",\n      next: \"@functionarguments\"\n    }]],\n    functionarguments: [[\"\\\\$@identifier@ws:\", \"attribute.name\"], [\"[,]\", \"delimiter\"], {\n      include: \"@term\"\n    }, [\"\\\\)\", {\n      token: \"meta\",\n      next: \"@pop\"\n    }]],\n    strings: [['~?\"', {\n      token: \"string.delimiter\",\n      next: \"@stringenddoublequote\"\n    }], [\"~?'\", {\n      token: \"string.delimiter\",\n      next: \"@stringendquote\"\n    }]],\n    stringenddoublequote: [[\"\\\\\\\\.\", \"string\"], ['\"', {\n      token: \"string.delimiter\",\n      next: \"@pop\"\n    }], [\".\", \"string\"]],\n    stringendquote: [[\"\\\\\\\\.\", \"string\"], [\"'\", {\n      token: \"string.delimiter\",\n      next: \"@pop\"\n    }], [\".\", \"string\"]]\n  }\n};\nexport { conf, language };","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/basic-languages/scss/scss.js"],"names":["conf","wordPattern","comments","blockComment","lineComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","ws","identifier","token","tokenizer","root","include","selector","next","selectorbody","selectorname","selectorattribute","term","rulevalue","switchTo","nestedproperty","warndebug","import","variabledeclaration","urldeclaration","parenthizedterm","declarationbody","extendbody","variablereference","variableinterpolation","comment","name","numbers","units","functiondeclaration","mixindeclaration","parameterdeclaration","includedeclaration","keyframedeclaration","keyframebody","controlstatement","controlstatementdeclaration","functionbody","functioninvocation","functionarguments","strings","stringenddoublequote","stringendquote"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,IAAIA,IAAI,GAAG;AACTC,EAAAA,WAAW,EAAE,iDADJ;AAETC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YAAY,EAAE,CAAC,IAAD,EAAO,IAAP,CADN;AAERC,IAAAA,WAAW,EAAE;AAFL,GAFD;AAMTC,EAAAA,QAAQ,EAAE,CACR,CAAC,GAAD,EAAM,GAAN,CADQ,EAER,CAAC,GAAD,EAAM,GAAN,CAFQ,EAGR,CAAC,GAAD,EAAM,GAAN,CAHQ,CAND;AAWTC,EAAAA,gBAAgB,EAAE,CAChB;AAAEC,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE,GAApB;AAAyBC,IAAAA,KAAK,EAAE,CAAC,QAAD,EAAW,SAAX;AAAhC,GADgB,EAEhB;AAAEF,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE,GAApB;AAAyBC,IAAAA,KAAK,EAAE,CAAC,QAAD,EAAW,SAAX;AAAhC,GAFgB,EAGhB;AAAEF,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE,GAApB;AAAyBC,IAAAA,KAAK,EAAE,CAAC,QAAD,EAAW,SAAX;AAAhC,GAHgB,EAIhB;AAAEF,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE,GAApB;AAAyBC,IAAAA,KAAK,EAAE,CAAC,QAAD,EAAW,SAAX;AAAhC,GAJgB,EAKhB;AAAEF,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE,GAApB;AAAyBC,IAAAA,KAAK,EAAE,CAAC,QAAD,EAAW,SAAX;AAAhC,GALgB,CAXT;AAkBTC,EAAAA,gBAAgB,EAAE,CAChB;AAAEH,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE;AAApB,GADgB,EAEhB;AAAED,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAFgB,EAGhB;AAAED,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAHgB,EAIhB;AAAED,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAJgB,EAKhB;AAAED,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE;AAApB,GALgB,CAlBT;AAyBTG,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAE,IAAIC,MAAJ,CAAW,8CAAX,CADA;AAEPC,MAAAA,GAAG,EAAE,IAAID,MAAJ,CAAW,sCAAX;AAFE;AADF;AAzBA,CAAX;AAgCA,IAAIE,QAAQ,GAAG;AACbC,EAAAA,YAAY,EAAE,EADD;AAEbC,EAAAA,YAAY,EAAE,OAFD;AAGbC,EAAAA,EAAE,EAAE,aAHS;AAIbC,EAAAA,UAAU,EAAE,qHAJC;AAKbf,EAAAA,QAAQ,EAAE,CACR;AAAEE,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE,GAApB;AAAyBa,IAAAA,KAAK,EAAE;AAAhC,GADQ,EAER;AAAEd,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE,GAApB;AAAyBa,IAAAA,KAAK,EAAE;AAAhC,GAFQ,EAGR;AAAEd,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE,GAApB;AAAyBa,IAAAA,KAAK,EAAE;AAAhC,GAHQ,EAIR;AAAEd,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE,GAApB;AAAyBa,IAAAA,KAAK,EAAE;AAAhC,GAJQ,CALG;AAWbC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CAAC;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAD,CADG;AAETC,IAAAA,QAAQ,EAAE,CACR;AAAED,MAAAA,OAAO,EAAE;AAAX,KADQ,EAER;AAAEA,MAAAA,OAAO,EAAE;AAAX,KAFQ,EAGR;AAAEA,MAAAA,OAAO,EAAE;AAAX,KAHQ,EAIR;AAAEA,MAAAA,OAAO,EAAE;AAAX,KAJQ,EAKR,CAAC,cAAD,EAAiB;AAAEH,MAAAA,KAAK,EAAE,SAAT;AAAoBK,MAAAA,IAAI,EAAE;AAA1B,KAAjB,CALQ,EAMR,CACE,8DADF,EAEE;AAAEL,MAAAA,KAAK,EAAE,SAAT;AAAoBK,MAAAA,IAAI,EAAE;AAA1B,KAFF,CANQ,EAUR,CAAC,2CAAD,EAA8C;AAAEL,MAAAA,KAAK,EAAE;AAAT,KAA9C,CAVQ,EAWR,CAAC,wBAAD,EAA2B;AAAEA,MAAAA,KAAK,EAAE,SAAT;AAAoBK,MAAAA,IAAI,EAAE;AAA1B,KAA3B,CAXQ,EAYR,CAAC,eAAD,EAAkB;AAAEL,MAAAA,KAAK,EAAE,SAAT;AAAoBK,MAAAA,IAAI,EAAE;AAA1B,KAAlB,CAZQ,EAaR,CAAC,YAAD,EAAe;AAAEL,MAAAA,KAAK,EAAE,SAAT;AAAoBK,MAAAA,IAAI,EAAE;AAA1B,KAAf,CAbQ,EAcR,CAAC,oBAAD,EAAuB;AAAEL,MAAAA,KAAK,EAAE,MAAT;AAAiBK,MAAAA,IAAI,EAAE;AAAvB,KAAvB,CAdQ,EAeR;AAAEF,MAAAA,OAAO,EAAE;AAAX,KAfQ,EAgBR;AAAEA,MAAAA,OAAO,EAAE;AAAX,KAhBQ,EAiBR,CAAC,QAAD,EAAW,KAAX,CAjBQ,EAkBR,CAAC,SAAD,EAAY,WAAZ,CAlBQ,EAmBR,CAAC,KAAD,EAAQ;AAAEH,MAAAA,KAAK,EAAE,mBAAT;AAA8BK,MAAAA,IAAI,EAAE;AAApC,KAAR,CAnBQ,EAoBR,CAAC,GAAD,EAAM;AAAEL,MAAAA,KAAK,EAAE,iBAAT;AAA4BK,MAAAA,IAAI,EAAE;AAAlC,KAAN,CApBQ,CAFD;AAwBTC,IAAAA,YAAY,EAAE,CACZ,CAAC,+CAAD,EAAkD,gBAAlD,EAAoE,YAApE,CADY,EAEZ;AAAEH,MAAAA,OAAO,EAAE;AAAX,KAFY,EAGZ,CAAC,aAAD,EAAgB;AAAEH,MAAAA,KAAK,EAAE,SAAT;AAAoBK,MAAAA,IAAI,EAAE;AAA1B,KAAhB,CAHY,EAIZ,CAAC,aAAD,EAAgB;AAAEL,MAAAA,KAAK,EAAE,SAAT;AAAoBK,MAAAA,IAAI,EAAE;AAA1B,KAAhB,CAJY,EAKZ,CAAC,GAAD,EAAM;AAAEL,MAAAA,KAAK,EAAE,iBAAT;AAA4BK,MAAAA,IAAI,EAAE;AAAlC,KAAN,CALY,CAxBL;AA+BTE,IAAAA,YAAY,EAAE,CACZ,CAAC,IAAD,EAAO;AAAEP,MAAAA,KAAK,EAAE,MAAT;AAAiBK,MAAAA,IAAI,EAAE;AAAvB,KAAP,CADY,EAEZ,CAAC,oCAAD,EAAuC,KAAvC,CAFY,CA/BL;AAmCTG,IAAAA,iBAAiB,EAAE,CAAC;AAAEL,MAAAA,OAAO,EAAE;AAAX,KAAD,EAAuB,CAAC,GAAD,EAAM;AAAEH,MAAAA,KAAK,EAAE,mBAAT;AAA8BK,MAAAA,IAAI,EAAE;AAApC,KAAN,CAAvB,CAnCV;AAoCTI,IAAAA,IAAI,EAAE,CACJ;AAAEN,MAAAA,OAAO,EAAE;AAAX,KADI,EAEJ,CAAC,oBAAD,EAAuB;AAAEH,MAAAA,KAAK,EAAE,MAAT;AAAiBK,MAAAA,IAAI,EAAE;AAAvB,KAAvB,CAFI,EAGJ;AAAEF,MAAAA,OAAO,EAAE;AAAX,KAHI,EAIJ;AAAEA,MAAAA,OAAO,EAAE;AAAX,KAJI,EAKJ;AAAEA,MAAAA,OAAO,EAAE;AAAX,KALI,EAMJ;AAAEA,MAAAA,OAAO,EAAE;AAAX,KANI,EAOJ,CAAC,uBAAD,EAA0B,UAA1B,CAPI,EAQJ;AAAEA,MAAAA,OAAO,EAAE;AAAX,KARI,EASJ,CAAC,+BAAD,EAAkC,UAAlC,CATI,EAUJ,CAAC,GAAD,EAAM,WAAN,CAVI,EAWJ,CAAC,UAAD,EAAa,SAAb,CAXI,EAYJ,CAAC,KAAD,EAAQ;AAAEH,MAAAA,KAAK,EAAE,uBAAT;AAAkCK,MAAAA,IAAI,EAAE;AAAxC,KAAR,CAZI,CApCG;AAkDTK,IAAAA,SAAS,EAAE,CACT;AAAEP,MAAAA,OAAO,EAAE;AAAX,KADS,EAET,CAAC,YAAD,EAAe,SAAf,CAFS,EAGT,CAAC,GAAD,EAAM,WAAN,EAAmB,MAAnB,CAHS,EAIT,CAAC,GAAD,EAAM;AAAEH,MAAAA,KAAK,EAAE,iBAAT;AAA4BW,MAAAA,QAAQ,EAAE;AAAtC,KAAN,CAJS,EAKT,CAAC,OAAD,EAAU;AAAEX,MAAAA,KAAK,EAAE,EAAT;AAAaK,MAAAA,IAAI,EAAE;AAAnB,KAAV,CALS,CAlDF;AAyDTO,IAAAA,cAAc,EAAE,CACd,CAAC,sBAAD,EAAyB,gBAAzB,EAA2C,YAA3C,CADc,EAEd;AAAET,MAAAA,OAAO,EAAE;AAAX,KAFc,EAGd,CAAC,GAAD,EAAM;AAAEH,MAAAA,KAAK,EAAE,iBAAT;AAA4BK,MAAAA,IAAI,EAAE;AAAlC,KAAN,CAHc,CAzDP;AA8DTQ,IAAAA,SAAS,EAAE,CAAC,CAAC,iBAAD,EAAoB;AAAEb,MAAAA,KAAK,EAAE,SAAT;AAAoBK,MAAAA,IAAI,EAAE;AAA1B,KAApB,CAAD,CA9DF;AA+DTS,IAAAA,MAAM,EAAE,CAAC,CAAC,aAAD,EAAgB;AAAEd,MAAAA,KAAK,EAAE,SAAT;AAAoBK,MAAAA,IAAI,EAAE;AAA1B,KAAhB,CAAD,CA/DC;AAgETU,IAAAA,mBAAmB,EAAE,CACnB,CAAC,oBAAD,EAAuB,eAAvB,EAAwC,kBAAxC,CADmB,CAhEZ;AAmETC,IAAAA,cAAc,EAAE,CACd;AAAEb,MAAAA,OAAO,EAAE;AAAX,KADc,EAEd,CAAC,WAAD,EAAc,QAAd,CAFc,EAGd,CAAC,KAAD,EAAQ;AAAEH,MAAAA,KAAK,EAAE,MAAT;AAAiBK,MAAAA,IAAI,EAAE;AAAvB,KAAR,CAHc,CAnEP;AAwETY,IAAAA,eAAe,EAAE,CACf;AAAEd,MAAAA,OAAO,EAAE;AAAX,KADe,EAEf,CAAC,KAAD,EAAQ;AAAEH,MAAAA,KAAK,EAAE,uBAAT;AAAkCK,MAAAA,IAAI,EAAE;AAAxC,KAAR,CAFe,CAxER;AA4ETa,IAAAA,eAAe,EAAE,CACf;AAAEf,MAAAA,OAAO,EAAE;AAAX,KADe,EAEf,CAAC,GAAD,EAAM,WAAN,EAAmB,MAAnB,CAFe,EAGf,CAAC,OAAD,EAAU;AAAEH,MAAAA,KAAK,EAAE,EAAT;AAAaK,MAAAA,IAAI,EAAE;AAAnB,KAAV,CAHe,CA5ER;AAiFTc,IAAAA,UAAU,EAAE,CACV;AAAEhB,MAAAA,OAAO,EAAE;AAAX,KADU,EAEV,CAAC,WAAD,EAAc,SAAd,CAFU,EAGV,CAAC,GAAD,EAAM,WAAN,EAAmB,MAAnB,CAHU,EAIV,CAAC,OAAD,EAAU;AAAEH,MAAAA,KAAK,EAAE,EAAT;AAAaK,MAAAA,IAAI,EAAE;AAAnB,KAAV,CAJU,CAjFH;AAuFTe,IAAAA,iBAAiB,EAAE,CACjB,CAAC,gBAAD,EAAmB,cAAnB,CADiB,EAEjB,CAAC,WAAD,EAAc,UAAd,CAFiB,EAGjB,CAAC,IAAD,EAAO;AAAEpB,MAAAA,KAAK,EAAE,MAAT;AAAiBK,MAAAA,IAAI,EAAE;AAAvB,KAAP,CAHiB,CAvFV;AA4FTgB,IAAAA,qBAAqB,EAAE,CACrB;AAAElB,MAAAA,OAAO,EAAE;AAAX,KADqB,EAErB,CAAC,GAAD,EAAM;AAAEH,MAAAA,KAAK,EAAE,MAAT;AAAiBK,MAAAA,IAAI,EAAE;AAAvB,KAAN,CAFqB,CA5Fd;AAgGTxB,IAAAA,QAAQ,EAAE,CACR,CAAC,QAAD,EAAW,SAAX,EAAsB,UAAtB,CADQ,EAER,CAAC,WAAD,EAAc,SAAd,CAFQ,CAhGD;AAoGTyC,IAAAA,OAAO,EAAE,CACP,CAAC,QAAD,EAAW,SAAX,EAAsB,MAAtB,CADO,EAEP,CAAC,GAAD,EAAM,SAAN,CAFO,CApGA;AAwGTC,IAAAA,IAAI,EAAE,CAAC,CAAC,aAAD,EAAgB,iBAAhB,CAAD,CAxGG;AAyGTC,IAAAA,OAAO,EAAE,CACP,CAAC,kCAAD,EAAqC;AAAExB,MAAAA,KAAK,EAAE,QAAT;AAAmBK,MAAAA,IAAI,EAAE;AAAzB,KAArC,CADO,EAEP,CAAC,uBAAD,EAA0B,YAA1B,CAFO,CAzGA;AA6GToB,IAAAA,KAAK,EAAE,CACL,CACE,sFADF,EAEE,QAFF,EAGE,MAHF,CADK,CA7GE;AAoHTC,IAAAA,mBAAmB,EAAE,CACnB,CAAC,mBAAD,EAAsB;AAAE1B,MAAAA,KAAK,EAAE,MAAT;AAAiBK,MAAAA,IAAI,EAAE;AAAvB,KAAtB,CADmB,EAEnB,CAAC,GAAD,EAAM;AAAEL,MAAAA,KAAK,EAAE,iBAAT;AAA4BW,MAAAA,QAAQ,EAAE;AAAtC,KAAN,CAFmB,CApHZ;AAwHTgB,IAAAA,gBAAgB,EAAE,CAChB,CAAC,mBAAD,EAAsB;AAAE3B,MAAAA,KAAK,EAAE,MAAT;AAAiBK,MAAAA,IAAI,EAAE;AAAvB,KAAtB,CADgB,EAEhB,CAAC,aAAD,EAAgB,MAAhB,CAFgB,EAGhB,CAAC,GAAD,EAAM;AAAEL,MAAAA,KAAK,EAAE,iBAAT;AAA4BW,MAAAA,QAAQ,EAAE;AAAtC,KAAN,CAHgB,CAxHT;AA6HTiB,IAAAA,oBAAoB,EAAE,CACpB,CAAC,oBAAD,EAAuB,eAAvB,CADoB,EAEpB,CAAC,WAAD,EAAc,UAAd,CAFoB,EAGpB,CAAC,GAAD,EAAM,WAAN,CAHoB,EAIpB;AAAEzB,MAAAA,OAAO,EAAE;AAAX,KAJoB,EAKpB,CAAC,KAAD,EAAQ;AAAEH,MAAAA,KAAK,EAAE,MAAT;AAAiBK,MAAAA,IAAI,EAAE;AAAvB,KAAR,CALoB,CA7Hb;AAoITwB,IAAAA,kBAAkB,EAAE,CAClB;AAAE1B,MAAAA,OAAO,EAAE;AAAX,KADkB,EAElB,CAAC,aAAD,EAAgB,MAAhB,CAFkB,EAGlB,CAAC,GAAD,EAAM,WAAN,EAAmB,MAAnB,CAHkB,EAIlB,CAAC,OAAD,EAAU;AAAEH,MAAAA,KAAK,EAAE,EAAT;AAAaK,MAAAA,IAAI,EAAE;AAAnB,KAAV,CAJkB,EAKlB,CAAC,GAAD,EAAM;AAAEL,MAAAA,KAAK,EAAE,iBAAT;AAA4BW,MAAAA,QAAQ,EAAE;AAAtC,KAAN,CALkB,CApIX;AA2ITmB,IAAAA,mBAAmB,EAAE,CACnB,CAAC,aAAD,EAAgB,MAAhB,CADmB,EAEnB,CAAC,GAAD,EAAM;AAAE9B,MAAAA,KAAK,EAAE,iBAAT;AAA4BW,MAAAA,QAAQ,EAAE;AAAtC,KAAN,CAFmB,CA3IZ;AA+IToB,IAAAA,YAAY,EAAE,CACZ;AAAE5B,MAAAA,OAAO,EAAE;AAAX,KADY,EAEZ,CAAC,GAAD,EAAM;AAAEH,MAAAA,KAAK,EAAE,iBAAT;AAA4BK,MAAAA,IAAI,EAAE;AAAlC,KAAN,CAFY,EAGZ,CAAC,GAAD,EAAM;AAAEL,MAAAA,KAAK,EAAE,iBAAT;AAA4BK,MAAAA,IAAI,EAAE;AAAlC,KAAN,CAHY,CA/IL;AAoJT2B,IAAAA,gBAAgB,EAAE,CAChB,CACE,mCADF,EAEE;AAAEhC,MAAAA,KAAK,EAAE,cAAT;AAAyBK,MAAAA,IAAI,EAAE;AAA/B,KAFF,CADgB,CApJT;AA0JT4B,IAAAA,2BAA2B,EAAE,CAC3B,CAAC,4BAAD,EAA+B;AAAEjC,MAAAA,KAAK,EAAE;AAAT,KAA/B,CAD2B,EAE3B;AAAEG,MAAAA,OAAO,EAAE;AAAX,KAF2B,EAG3B,CAAC,GAAD,EAAM;AAAEH,MAAAA,KAAK,EAAE,iBAAT;AAA4BW,MAAAA,QAAQ,EAAE;AAAtC,KAAN,CAH2B,CA1JpB;AA+JTuB,IAAAA,YAAY,EAAE,CACZ,CAAC,aAAD,EAAgB;AAAElC,MAAAA,KAAK,EAAE;AAAT,KAAhB,CADY,EAEZ;AAAEG,MAAAA,OAAO,EAAE;AAAX,KAFY,EAGZ;AAAEA,MAAAA,OAAO,EAAE;AAAX,KAHY,EAIZ;AAAEA,MAAAA,OAAO,EAAE;AAAX,KAJY,EAKZ,CAAC,GAAD,EAAM,WAAN,CALY,EAMZ,CAAC,GAAD,EAAM;AAAEH,MAAAA,KAAK,EAAE,iBAAT;AAA4BK,MAAAA,IAAI,EAAE;AAAlC,KAAN,CANY,CA/JL;AAuKT8B,IAAAA,kBAAkB,EAAE,CAAC,CAAC,gBAAD,EAAmB;AAAEnC,MAAAA,KAAK,EAAE,MAAT;AAAiBK,MAAAA,IAAI,EAAE;AAAvB,KAAnB,CAAD,CAvKX;AAwKT+B,IAAAA,iBAAiB,EAAE,CACjB,CAAC,oBAAD,EAAuB,gBAAvB,CADiB,EAEjB,CAAC,KAAD,EAAQ,WAAR,CAFiB,EAGjB;AAAEjC,MAAAA,OAAO,EAAE;AAAX,KAHiB,EAIjB,CAAC,KAAD,EAAQ;AAAEH,MAAAA,KAAK,EAAE,MAAT;AAAiBK,MAAAA,IAAI,EAAE;AAAvB,KAAR,CAJiB,CAxKV;AA8KTgC,IAAAA,OAAO,EAAE,CACP,CAAC,KAAD,EAAQ;AAAErC,MAAAA,KAAK,EAAE,kBAAT;AAA6BK,MAAAA,IAAI,EAAE;AAAnC,KAAR,CADO,EAEP,CAAC,KAAD,EAAQ;AAAEL,MAAAA,KAAK,EAAE,kBAAT;AAA6BK,MAAAA,IAAI,EAAE;AAAnC,KAAR,CAFO,CA9KA;AAkLTiC,IAAAA,oBAAoB,EAAE,CACpB,CAAC,OAAD,EAAU,QAAV,CADoB,EAEpB,CAAC,GAAD,EAAM;AAAEtC,MAAAA,KAAK,EAAE,kBAAT;AAA6BK,MAAAA,IAAI,EAAE;AAAnC,KAAN,CAFoB,EAGpB,CAAC,GAAD,EAAM,QAAN,CAHoB,CAlLb;AAuLTkC,IAAAA,cAAc,EAAE,CACd,CAAC,OAAD,EAAU,QAAV,CADc,EAEd,CAAC,GAAD,EAAM;AAAEvC,MAAAA,KAAK,EAAE,kBAAT;AAA6BK,MAAAA,IAAI,EAAE;AAAnC,KAAN,CAFc,EAGd,CAAC,GAAD,EAAM,QAAN,CAHc;AAvLP;AAXE,CAAf;AAyMA,SACE1B,IADF,EAEEgB,QAFF","sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/scss/scss.ts\nvar conf = {\n  wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|([@$#!.:]?[\\w-?]+%?)|[@#!.]/g,\n  comments: {\n    blockComment: [\"/*\", \"*/\"],\n    lineComment: \"//\"\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\", notIn: [\"string\", \"comment\"] },\n    { open: \"[\", close: \"]\", notIn: [\"string\", \"comment\"] },\n    { open: \"(\", close: \")\", notIn: [\"string\", \"comment\"] },\n    { open: '\"', close: '\"', notIn: [\"string\", \"comment\"] },\n    { open: \"'\", close: \"'\", notIn: [\"string\", \"comment\"] }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/\"),\n      end: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".scss\",\n  ws: \"[ \t\\n\\r\\f]*\",\n  identifier: \"-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*\",\n  brackets: [\n    { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\n    { open: \"[\", close: \"]\", token: \"delimiter.bracket\" },\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" },\n    { open: \"<\", close: \">\", token: \"delimiter.angle\" }\n  ],\n  tokenizer: {\n    root: [{ include: \"@selector\" }],\n    selector: [\n      { include: \"@comments\" },\n      { include: \"@import\" },\n      { include: \"@variabledeclaration\" },\n      { include: \"@warndebug\" },\n      [\"[@](include)\", { token: \"keyword\", next: \"@includedeclaration\" }],\n      [\n        \"[@](keyframes|-webkit-keyframes|-moz-keyframes|-o-keyframes)\",\n        { token: \"keyword\", next: \"@keyframedeclaration\" }\n      ],\n      [\"[@](page|content|font-face|-moz-document)\", { token: \"keyword\" }],\n      [\"[@](charset|namespace)\", { token: \"keyword\", next: \"@declarationbody\" }],\n      [\"[@](function)\", { token: \"keyword\", next: \"@functiondeclaration\" }],\n      [\"[@](mixin)\", { token: \"keyword\", next: \"@mixindeclaration\" }],\n      [\"url(\\\\-prefix)?\\\\(\", { token: \"meta\", next: \"@urldeclaration\" }],\n      { include: \"@controlstatement\" },\n      { include: \"@selectorname\" },\n      [\"[&\\\\*]\", \"tag\"],\n      [\"[>\\\\+,]\", \"delimiter\"],\n      [\"\\\\[\", { token: \"delimiter.bracket\", next: \"@selectorattribute\" }],\n      [\"{\", { token: \"delimiter.curly\", next: \"@selectorbody\" }]\n    ],\n    selectorbody: [\n      [\"[*_]?@identifier@ws:(?=(\\\\s|\\\\d|[^{;}]*[;}]))\", \"attribute.name\", \"@rulevalue\"],\n      { include: \"@selector\" },\n      [\"[@](extend)\", { token: \"keyword\", next: \"@extendbody\" }],\n      [\"[@](return)\", { token: \"keyword\", next: \"@declarationbody\" }],\n      [\"}\", { token: \"delimiter.curly\", next: \"@pop\" }]\n    ],\n    selectorname: [\n      [\"#{\", { token: \"meta\", next: \"@variableinterpolation\" }],\n      [\"(\\\\.|#(?=[^{])|%|(@identifier)|:)+\", \"tag\"]\n    ],\n    selectorattribute: [{ include: \"@term\" }, [\"]\", { token: \"delimiter.bracket\", next: \"@pop\" }]],\n    term: [\n      { include: \"@comments\" },\n      [\"url(\\\\-prefix)?\\\\(\", { token: \"meta\", next: \"@urldeclaration\" }],\n      { include: \"@functioninvocation\" },\n      { include: \"@numbers\" },\n      { include: \"@strings\" },\n      { include: \"@variablereference\" },\n      [\"(and\\\\b|or\\\\b|not\\\\b)\", \"operator\"],\n      { include: \"@name\" },\n      [\"([<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,])\", \"operator\"],\n      [\",\", \"delimiter\"],\n      [\"!default\", \"literal\"],\n      [\"\\\\(\", { token: \"delimiter.parenthesis\", next: \"@parenthizedterm\" }]\n    ],\n    rulevalue: [\n      { include: \"@term\" },\n      [\"!important\", \"literal\"],\n      [\";\", \"delimiter\", \"@pop\"],\n      [\"{\", { token: \"delimiter.curly\", switchTo: \"@nestedproperty\" }],\n      [\"(?=})\", { token: \"\", next: \"@pop\" }]\n    ],\n    nestedproperty: [\n      [\"[*_]?@identifier@ws:\", \"attribute.name\", \"@rulevalue\"],\n      { include: \"@comments\" },\n      [\"}\", { token: \"delimiter.curly\", next: \"@pop\" }]\n    ],\n    warndebug: [[\"[@](warn|debug)\", { token: \"keyword\", next: \"@declarationbody\" }]],\n    import: [[\"[@](import)\", { token: \"keyword\", next: \"@declarationbody\" }]],\n    variabledeclaration: [\n      [\"\\\\$@identifier@ws:\", \"variable.decl\", \"@declarationbody\"]\n    ],\n    urldeclaration: [\n      { include: \"@strings\" },\n      [\"[^)\\r\\n]+\", \"string\"],\n      [\"\\\\)\", { token: \"meta\", next: \"@pop\" }]\n    ],\n    parenthizedterm: [\n      { include: \"@term\" },\n      [\"\\\\)\", { token: \"delimiter.parenthesis\", next: \"@pop\" }]\n    ],\n    declarationbody: [\n      { include: \"@term\" },\n      [\";\", \"delimiter\", \"@pop\"],\n      [\"(?=})\", { token: \"\", next: \"@pop\" }]\n    ],\n    extendbody: [\n      { include: \"@selectorname\" },\n      [\"!optional\", \"literal\"],\n      [\";\", \"delimiter\", \"@pop\"],\n      [\"(?=})\", { token: \"\", next: \"@pop\" }]\n    ],\n    variablereference: [\n      [\"\\\\$@identifier\", \"variable.ref\"],\n      [\"\\\\.\\\\.\\\\.\", \"operator\"],\n      [\"#{\", { token: \"meta\", next: \"@variableinterpolation\" }]\n    ],\n    variableinterpolation: [\n      { include: \"@variablereference\" },\n      [\"}\", { token: \"meta\", next: \"@pop\" }]\n    ],\n    comments: [\n      [\"\\\\/\\\\*\", \"comment\", \"@comment\"],\n      [\"\\\\/\\\\/+.*\", \"comment\"]\n    ],\n    comment: [\n      [\"\\\\*\\\\/\", \"comment\", \"@pop\"],\n      [\".\", \"comment\"]\n    ],\n    name: [[\"@identifier\", \"attribute.value\"]],\n    numbers: [\n      [\"(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?\", { token: \"number\", next: \"@units\" }],\n      [\"#[0-9a-fA-F_]+(?!\\\\w)\", \"number.hex\"]\n    ],\n    units: [\n      [\n        \"(em|ex|ch|rem|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?\",\n        \"number\",\n        \"@pop\"\n      ]\n    ],\n    functiondeclaration: [\n      [\"@identifier@ws\\\\(\", { token: \"meta\", next: \"@parameterdeclaration\" }],\n      [\"{\", { token: \"delimiter.curly\", switchTo: \"@functionbody\" }]\n    ],\n    mixindeclaration: [\n      [\"@identifier@ws\\\\(\", { token: \"meta\", next: \"@parameterdeclaration\" }],\n      [\"@identifier\", \"meta\"],\n      [\"{\", { token: \"delimiter.curly\", switchTo: \"@selectorbody\" }]\n    ],\n    parameterdeclaration: [\n      [\"\\\\$@identifier@ws:\", \"variable.decl\"],\n      [\"\\\\.\\\\.\\\\.\", \"operator\"],\n      [\",\", \"delimiter\"],\n      { include: \"@term\" },\n      [\"\\\\)\", { token: \"meta\", next: \"@pop\" }]\n    ],\n    includedeclaration: [\n      { include: \"@functioninvocation\" },\n      [\"@identifier\", \"meta\"],\n      [\";\", \"delimiter\", \"@pop\"],\n      [\"(?=})\", { token: \"\", next: \"@pop\" }],\n      [\"{\", { token: \"delimiter.curly\", switchTo: \"@selectorbody\" }]\n    ],\n    keyframedeclaration: [\n      [\"@identifier\", \"meta\"],\n      [\"{\", { token: \"delimiter.curly\", switchTo: \"@keyframebody\" }]\n    ],\n    keyframebody: [\n      { include: \"@term\" },\n      [\"{\", { token: \"delimiter.curly\", next: \"@selectorbody\" }],\n      [\"}\", { token: \"delimiter.curly\", next: \"@pop\" }]\n    ],\n    controlstatement: [\n      [\n        \"[@](if|else|for|while|each|media)\",\n        { token: \"keyword.flow\", next: \"@controlstatementdeclaration\" }\n      ]\n    ],\n    controlstatementdeclaration: [\n      [\"(in|from|through|if|to)\\\\b\", { token: \"keyword.flow\" }],\n      { include: \"@term\" },\n      [\"{\", { token: \"delimiter.curly\", switchTo: \"@selectorbody\" }]\n    ],\n    functionbody: [\n      [\"[@](return)\", { token: \"keyword\" }],\n      { include: \"@variabledeclaration\" },\n      { include: \"@term\" },\n      { include: \"@controlstatement\" },\n      [\";\", \"delimiter\"],\n      [\"}\", { token: \"delimiter.curly\", next: \"@pop\" }]\n    ],\n    functioninvocation: [[\"@identifier\\\\(\", { token: \"meta\", next: \"@functionarguments\" }]],\n    functionarguments: [\n      [\"\\\\$@identifier@ws:\", \"attribute.name\"],\n      [\"[,]\", \"delimiter\"],\n      { include: \"@term\" },\n      [\"\\\\)\", { token: \"meta\", next: \"@pop\" }]\n    ],\n    strings: [\n      ['~?\"', { token: \"string.delimiter\", next: \"@stringenddoublequote\" }],\n      [\"~?'\", { token: \"string.delimiter\", next: \"@stringendquote\" }]\n    ],\n    stringenddoublequote: [\n      [\"\\\\\\\\.\", \"string\"],\n      ['\"', { token: \"string.delimiter\", next: \"@pop\" }],\n      [\".\", \"string\"]\n    ],\n    stringendquote: [\n      [\"\\\\\\\\.\", \"string\"],\n      [\"'\", { token: \"string.delimiter\", next: \"@pop\" }],\n      [\".\", \"string\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"]},"metadata":{},"sourceType":"module"}