{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { Position } from '../../../common/core/position.js';\n\nconst invalidFunc = () => {\n  throw new Error(`Invalid change accessor`);\n};\n\nexport class ViewZones extends ViewPart {\n  constructor(context) {\n    super(context);\n    const options = this._context.configuration.options;\n    const layoutInfo = options.get(131\n    /* layoutInfo */\n    );\n    this._lineHeight = options.get(59\n    /* lineHeight */\n    );\n    this._contentWidth = layoutInfo.contentWidth;\n    this._contentLeft = layoutInfo.contentLeft;\n    this.domNode = createFastDomNode(document.createElement('div'));\n    this.domNode.setClassName('view-zones');\n    this.domNode.setPosition('absolute');\n    this.domNode.setAttribute('role', 'presentation');\n    this.domNode.setAttribute('aria-hidden', 'true');\n    this.marginDomNode = createFastDomNode(document.createElement('div'));\n    this.marginDomNode.setClassName('margin-view-zones');\n    this.marginDomNode.setPosition('absolute');\n    this.marginDomNode.setAttribute('role', 'presentation');\n    this.marginDomNode.setAttribute('aria-hidden', 'true');\n    this._zones = {};\n  }\n\n  dispose() {\n    super.dispose();\n    this._zones = {};\n  } // ---- begin view event handlers\n\n\n  _recomputeWhitespacesProps() {\n    const whitespaces = this._context.viewLayout.getWhitespaces();\n\n    const oldWhitespaces = new Map();\n\n    for (const whitespace of whitespaces) {\n      oldWhitespaces.set(whitespace.id, whitespace);\n    }\n\n    let hadAChange = false;\n\n    this._context.model.changeWhitespace(whitespaceAccessor => {\n      const keys = Object.keys(this._zones);\n\n      for (let i = 0, len = keys.length; i < len; i++) {\n        const id = keys[i];\n        const zone = this._zones[id];\n\n        const props = this._computeWhitespaceProps(zone.delegate);\n\n        zone.isInHiddenArea = props.isInHiddenArea;\n        const oldWhitespace = oldWhitespaces.get(id);\n\n        if (oldWhitespace && (oldWhitespace.afterLineNumber !== props.afterViewLineNumber || oldWhitespace.height !== props.heightInPx)) {\n          whitespaceAccessor.changeOneWhitespace(id, props.afterViewLineNumber, props.heightInPx);\n\n          this._safeCallOnComputedHeight(zone.delegate, props.heightInPx);\n\n          hadAChange = true;\n        }\n      }\n    });\n\n    return hadAChange;\n  }\n\n  onConfigurationChanged(e) {\n    const options = this._context.configuration.options;\n    const layoutInfo = options.get(131\n    /* layoutInfo */\n    );\n    this._lineHeight = options.get(59\n    /* lineHeight */\n    );\n    this._contentWidth = layoutInfo.contentWidth;\n    this._contentLeft = layoutInfo.contentLeft;\n\n    if (e.hasChanged(59\n    /* lineHeight */\n    )) {\n      this._recomputeWhitespacesProps();\n    }\n\n    return true;\n  }\n\n  onLineMappingChanged(e) {\n    return this._recomputeWhitespacesProps();\n  }\n\n  onLinesDeleted(e) {\n    return true;\n  }\n\n  onScrollChanged(e) {\n    return e.scrollTopChanged || e.scrollWidthChanged;\n  }\n\n  onZonesChanged(e) {\n    return true;\n  }\n\n  onLinesInserted(e) {\n    return true;\n  } // ---- end view event handlers\n\n\n  _getZoneOrdinal(zone) {\n    if (typeof zone.afterColumn !== 'undefined') {\n      return zone.afterColumn;\n    }\n\n    return 10000;\n  }\n\n  _computeWhitespaceProps(zone) {\n    if (zone.afterLineNumber === 0) {\n      return {\n        isInHiddenArea: false,\n        afterViewLineNumber: 0,\n        heightInPx: this._heightInPixels(zone),\n        minWidthInPx: this._minWidthInPixels(zone)\n      };\n    }\n\n    let zoneAfterModelPosition;\n\n    if (typeof zone.afterColumn !== 'undefined') {\n      zoneAfterModelPosition = this._context.model.validateModelPosition({\n        lineNumber: zone.afterLineNumber,\n        column: zone.afterColumn\n      });\n    } else {\n      const validAfterLineNumber = this._context.model.validateModelPosition({\n        lineNumber: zone.afterLineNumber,\n        column: 1\n      }).lineNumber;\n\n      zoneAfterModelPosition = new Position(validAfterLineNumber, this._context.model.getModelLineMaxColumn(validAfterLineNumber));\n    }\n\n    let zoneBeforeModelPosition;\n\n    if (zoneAfterModelPosition.column === this._context.model.getModelLineMaxColumn(zoneAfterModelPosition.lineNumber)) {\n      zoneBeforeModelPosition = this._context.model.validateModelPosition({\n        lineNumber: zoneAfterModelPosition.lineNumber + 1,\n        column: 1\n      });\n    } else {\n      zoneBeforeModelPosition = this._context.model.validateModelPosition({\n        lineNumber: zoneAfterModelPosition.lineNumber,\n        column: zoneAfterModelPosition.column + 1\n      });\n    }\n\n    const viewPosition = this._context.model.coordinatesConverter.convertModelPositionToViewPosition(zoneAfterModelPosition, zone.afterColumnAffinity);\n\n    const isVisible = this._context.model.coordinatesConverter.modelPositionIsVisible(zoneBeforeModelPosition);\n\n    return {\n      isInHiddenArea: !isVisible,\n      afterViewLineNumber: viewPosition.lineNumber,\n      heightInPx: isVisible ? this._heightInPixels(zone) : 0,\n      minWidthInPx: this._minWidthInPixels(zone)\n    };\n  }\n\n  changeViewZones(callback) {\n    let zonesHaveChanged = false;\n\n    this._context.model.changeWhitespace(whitespaceAccessor => {\n      const changeAccessor = {\n        addZone: zone => {\n          zonesHaveChanged = true;\n          return this._addZone(whitespaceAccessor, zone);\n        },\n        removeZone: id => {\n          if (!id) {\n            return;\n          }\n\n          zonesHaveChanged = this._removeZone(whitespaceAccessor, id) || zonesHaveChanged;\n        },\n        layoutZone: id => {\n          if (!id) {\n            return;\n          }\n\n          zonesHaveChanged = this._layoutZone(whitespaceAccessor, id) || zonesHaveChanged;\n        }\n      };\n      safeInvoke1Arg(callback, changeAccessor); // Invalidate changeAccessor\n\n      changeAccessor.addZone = invalidFunc;\n      changeAccessor.removeZone = invalidFunc;\n      changeAccessor.layoutZone = invalidFunc;\n    });\n\n    return zonesHaveChanged;\n  }\n\n  _addZone(whitespaceAccessor, zone) {\n    const props = this._computeWhitespaceProps(zone);\n\n    const whitespaceId = whitespaceAccessor.insertWhitespace(props.afterViewLineNumber, this._getZoneOrdinal(zone), props.heightInPx, props.minWidthInPx);\n    const myZone = {\n      whitespaceId: whitespaceId,\n      delegate: zone,\n      isInHiddenArea: props.isInHiddenArea,\n      isVisible: false,\n      domNode: createFastDomNode(zone.domNode),\n      marginDomNode: zone.marginDomNode ? createFastDomNode(zone.marginDomNode) : null\n    };\n\n    this._safeCallOnComputedHeight(myZone.delegate, props.heightInPx);\n\n    myZone.domNode.setPosition('absolute');\n    myZone.domNode.domNode.style.width = '100%';\n    myZone.domNode.setDisplay('none');\n    myZone.domNode.setAttribute('monaco-view-zone', myZone.whitespaceId);\n    this.domNode.appendChild(myZone.domNode);\n\n    if (myZone.marginDomNode) {\n      myZone.marginDomNode.setPosition('absolute');\n      myZone.marginDomNode.domNode.style.width = '100%';\n      myZone.marginDomNode.setDisplay('none');\n      myZone.marginDomNode.setAttribute('monaco-view-zone', myZone.whitespaceId);\n      this.marginDomNode.appendChild(myZone.marginDomNode);\n    }\n\n    this._zones[myZone.whitespaceId] = myZone;\n    this.setShouldRender();\n    return myZone.whitespaceId;\n  }\n\n  _removeZone(whitespaceAccessor, id) {\n    if (this._zones.hasOwnProperty(id)) {\n      const zone = this._zones[id];\n      delete this._zones[id];\n      whitespaceAccessor.removeWhitespace(zone.whitespaceId);\n      zone.domNode.removeAttribute('monaco-visible-view-zone');\n      zone.domNode.removeAttribute('monaco-view-zone');\n      zone.domNode.domNode.parentNode.removeChild(zone.domNode.domNode);\n\n      if (zone.marginDomNode) {\n        zone.marginDomNode.removeAttribute('monaco-visible-view-zone');\n        zone.marginDomNode.removeAttribute('monaco-view-zone');\n        zone.marginDomNode.domNode.parentNode.removeChild(zone.marginDomNode.domNode);\n      }\n\n      this.setShouldRender();\n      return true;\n    }\n\n    return false;\n  }\n\n  _layoutZone(whitespaceAccessor, id) {\n    if (this._zones.hasOwnProperty(id)) {\n      const zone = this._zones[id];\n\n      const props = this._computeWhitespaceProps(zone.delegate);\n\n      zone.isInHiddenArea = props.isInHiddenArea; // const newOrdinal = this._getZoneOrdinal(zone.delegate);\n\n      whitespaceAccessor.changeOneWhitespace(zone.whitespaceId, props.afterViewLineNumber, props.heightInPx); // TODO@Alex: change `newOrdinal` too\n\n      this._safeCallOnComputedHeight(zone.delegate, props.heightInPx);\n\n      this.setShouldRender();\n      return true;\n    }\n\n    return false;\n  }\n\n  shouldSuppressMouseDownOnViewZone(id) {\n    if (this._zones.hasOwnProperty(id)) {\n      const zone = this._zones[id];\n      return Boolean(zone.delegate.suppressMouseDown);\n    }\n\n    return false;\n  }\n\n  _heightInPixels(zone) {\n    if (typeof zone.heightInPx === 'number') {\n      return zone.heightInPx;\n    }\n\n    if (typeof zone.heightInLines === 'number') {\n      return this._lineHeight * zone.heightInLines;\n    }\n\n    return this._lineHeight;\n  }\n\n  _minWidthInPixels(zone) {\n    if (typeof zone.minWidthInPx === 'number') {\n      return zone.minWidthInPx;\n    }\n\n    return 0;\n  }\n\n  _safeCallOnComputedHeight(zone, height) {\n    if (typeof zone.onComputedHeight === 'function') {\n      try {\n        zone.onComputedHeight(height);\n      } catch (e) {\n        onUnexpectedError(e);\n      }\n    }\n  }\n\n  _safeCallOnDomNodeTop(zone, top) {\n    if (typeof zone.onDomNodeTop === 'function') {\n      try {\n        zone.onDomNodeTop(top);\n      } catch (e) {\n        onUnexpectedError(e);\n      }\n    }\n  }\n\n  prepareRender(ctx) {// Nothing to read\n  }\n\n  render(ctx) {\n    const visibleWhitespaces = ctx.viewportData.whitespaceViewportData;\n    const visibleZones = {};\n    let hasVisibleZone = false;\n\n    for (const visibleWhitespace of visibleWhitespaces) {\n      if (this._zones[visibleWhitespace.id].isInHiddenArea) {\n        continue;\n      }\n\n      visibleZones[visibleWhitespace.id] = visibleWhitespace;\n      hasVisibleZone = true;\n    }\n\n    const keys = Object.keys(this._zones);\n\n    for (let i = 0, len = keys.length; i < len; i++) {\n      const id = keys[i];\n      const zone = this._zones[id];\n      let newTop = 0;\n      let newHeight = 0;\n      let newDisplay = 'none';\n\n      if (visibleZones.hasOwnProperty(id)) {\n        newTop = visibleZones[id].verticalOffset - ctx.bigNumbersDelta;\n        newHeight = visibleZones[id].height;\n        newDisplay = 'block'; // zone is visible\n\n        if (!zone.isVisible) {\n          zone.domNode.setAttribute('monaco-visible-view-zone', 'true');\n          zone.isVisible = true;\n        }\n\n        this._safeCallOnDomNodeTop(zone.delegate, ctx.getScrolledTopFromAbsoluteTop(visibleZones[id].verticalOffset));\n      } else {\n        if (zone.isVisible) {\n          zone.domNode.removeAttribute('monaco-visible-view-zone');\n          zone.isVisible = false;\n        }\n\n        this._safeCallOnDomNodeTop(zone.delegate, ctx.getScrolledTopFromAbsoluteTop(-1000000));\n      }\n\n      zone.domNode.setTop(newTop);\n      zone.domNode.setHeight(newHeight);\n      zone.domNode.setDisplay(newDisplay);\n\n      if (zone.marginDomNode) {\n        zone.marginDomNode.setTop(newTop);\n        zone.marginDomNode.setHeight(newHeight);\n        zone.marginDomNode.setDisplay(newDisplay);\n      }\n    }\n\n    if (hasVisibleZone) {\n      this.domNode.setWidth(Math.max(ctx.scrollWidth, this._contentWidth));\n      this.marginDomNode.setWidth(this._contentLeft);\n    }\n  }\n\n}\n\nfunction safeInvoke1Arg(func, arg1) {\n  try {\n    return func(arg1);\n  } catch (e) {\n    onUnexpectedError(e);\n  }\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewZones/viewZones.js"],"names":["createFastDomNode","onUnexpectedError","ViewPart","Position","invalidFunc","Error","ViewZones","constructor","context","options","_context","configuration","layoutInfo","get","_lineHeight","_contentWidth","contentWidth","_contentLeft","contentLeft","domNode","document","createElement","setClassName","setPosition","setAttribute","marginDomNode","_zones","dispose","_recomputeWhitespacesProps","whitespaces","viewLayout","getWhitespaces","oldWhitespaces","Map","whitespace","set","id","hadAChange","model","changeWhitespace","whitespaceAccessor","keys","Object","i","len","length","zone","props","_computeWhitespaceProps","delegate","isInHiddenArea","oldWhitespace","afterLineNumber","afterViewLineNumber","height","heightInPx","changeOneWhitespace","_safeCallOnComputedHeight","onConfigurationChanged","e","hasChanged","onLineMappingChanged","onLinesDeleted","onScrollChanged","scrollTopChanged","scrollWidthChanged","onZonesChanged","onLinesInserted","_getZoneOrdinal","afterColumn","_heightInPixels","minWidthInPx","_minWidthInPixels","zoneAfterModelPosition","validateModelPosition","lineNumber","column","validAfterLineNumber","getModelLineMaxColumn","zoneBeforeModelPosition","viewPosition","coordinatesConverter","convertModelPositionToViewPosition","afterColumnAffinity","isVisible","modelPositionIsVisible","changeViewZones","callback","zonesHaveChanged","changeAccessor","addZone","_addZone","removeZone","_removeZone","layoutZone","_layoutZone","safeInvoke1Arg","whitespaceId","insertWhitespace","myZone","style","width","setDisplay","appendChild","setShouldRender","hasOwnProperty","removeWhitespace","removeAttribute","parentNode","removeChild","shouldSuppressMouseDownOnViewZone","Boolean","suppressMouseDown","heightInLines","onComputedHeight","_safeCallOnDomNodeTop","top","onDomNodeTop","prepareRender","ctx","render","visibleWhitespaces","viewportData","whitespaceViewportData","visibleZones","hasVisibleZone","visibleWhitespace","newTop","newHeight","newDisplay","verticalOffset","bigNumbersDelta","getScrolledTopFromAbsoluteTop","setTop","setHeight","setWidth","Math","max","scrollWidth","func","arg1"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { Position } from '../../../common/core/position.js';\nconst invalidFunc = () => { throw new Error(`Invalid change accessor`); };\nexport class ViewZones extends ViewPart {\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(131 /* layoutInfo */);\n        this._lineHeight = options.get(59 /* lineHeight */);\n        this._contentWidth = layoutInfo.contentWidth;\n        this._contentLeft = layoutInfo.contentLeft;\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setClassName('view-zones');\n        this.domNode.setPosition('absolute');\n        this.domNode.setAttribute('role', 'presentation');\n        this.domNode.setAttribute('aria-hidden', 'true');\n        this.marginDomNode = createFastDomNode(document.createElement('div'));\n        this.marginDomNode.setClassName('margin-view-zones');\n        this.marginDomNode.setPosition('absolute');\n        this.marginDomNode.setAttribute('role', 'presentation');\n        this.marginDomNode.setAttribute('aria-hidden', 'true');\n        this._zones = {};\n    }\n    dispose() {\n        super.dispose();\n        this._zones = {};\n    }\n    // ---- begin view event handlers\n    _recomputeWhitespacesProps() {\n        const whitespaces = this._context.viewLayout.getWhitespaces();\n        const oldWhitespaces = new Map();\n        for (const whitespace of whitespaces) {\n            oldWhitespaces.set(whitespace.id, whitespace);\n        }\n        let hadAChange = false;\n        this._context.model.changeWhitespace((whitespaceAccessor) => {\n            const keys = Object.keys(this._zones);\n            for (let i = 0, len = keys.length; i < len; i++) {\n                const id = keys[i];\n                const zone = this._zones[id];\n                const props = this._computeWhitespaceProps(zone.delegate);\n                zone.isInHiddenArea = props.isInHiddenArea;\n                const oldWhitespace = oldWhitespaces.get(id);\n                if (oldWhitespace && (oldWhitespace.afterLineNumber !== props.afterViewLineNumber || oldWhitespace.height !== props.heightInPx)) {\n                    whitespaceAccessor.changeOneWhitespace(id, props.afterViewLineNumber, props.heightInPx);\n                    this._safeCallOnComputedHeight(zone.delegate, props.heightInPx);\n                    hadAChange = true;\n                }\n            }\n        });\n        return hadAChange;\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(131 /* layoutInfo */);\n        this._lineHeight = options.get(59 /* lineHeight */);\n        this._contentWidth = layoutInfo.contentWidth;\n        this._contentLeft = layoutInfo.contentLeft;\n        if (e.hasChanged(59 /* lineHeight */)) {\n            this._recomputeWhitespacesProps();\n        }\n        return true;\n    }\n    onLineMappingChanged(e) {\n        return this._recomputeWhitespacesProps();\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged || e.scrollWidthChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    // ---- end view event handlers\n    _getZoneOrdinal(zone) {\n        if (typeof zone.afterColumn !== 'undefined') {\n            return zone.afterColumn;\n        }\n        return 10000;\n    }\n    _computeWhitespaceProps(zone) {\n        if (zone.afterLineNumber === 0) {\n            return {\n                isInHiddenArea: false,\n                afterViewLineNumber: 0,\n                heightInPx: this._heightInPixels(zone),\n                minWidthInPx: this._minWidthInPixels(zone)\n            };\n        }\n        let zoneAfterModelPosition;\n        if (typeof zone.afterColumn !== 'undefined') {\n            zoneAfterModelPosition = this._context.model.validateModelPosition({\n                lineNumber: zone.afterLineNumber,\n                column: zone.afterColumn\n            });\n        }\n        else {\n            const validAfterLineNumber = this._context.model.validateModelPosition({\n                lineNumber: zone.afterLineNumber,\n                column: 1\n            }).lineNumber;\n            zoneAfterModelPosition = new Position(validAfterLineNumber, this._context.model.getModelLineMaxColumn(validAfterLineNumber));\n        }\n        let zoneBeforeModelPosition;\n        if (zoneAfterModelPosition.column === this._context.model.getModelLineMaxColumn(zoneAfterModelPosition.lineNumber)) {\n            zoneBeforeModelPosition = this._context.model.validateModelPosition({\n                lineNumber: zoneAfterModelPosition.lineNumber + 1,\n                column: 1\n            });\n        }\n        else {\n            zoneBeforeModelPosition = this._context.model.validateModelPosition({\n                lineNumber: zoneAfterModelPosition.lineNumber,\n                column: zoneAfterModelPosition.column + 1\n            });\n        }\n        const viewPosition = this._context.model.coordinatesConverter.convertModelPositionToViewPosition(zoneAfterModelPosition, zone.afterColumnAffinity);\n        const isVisible = this._context.model.coordinatesConverter.modelPositionIsVisible(zoneBeforeModelPosition);\n        return {\n            isInHiddenArea: !isVisible,\n            afterViewLineNumber: viewPosition.lineNumber,\n            heightInPx: (isVisible ? this._heightInPixels(zone) : 0),\n            minWidthInPx: this._minWidthInPixels(zone)\n        };\n    }\n    changeViewZones(callback) {\n        let zonesHaveChanged = false;\n        this._context.model.changeWhitespace((whitespaceAccessor) => {\n            const changeAccessor = {\n                addZone: (zone) => {\n                    zonesHaveChanged = true;\n                    return this._addZone(whitespaceAccessor, zone);\n                },\n                removeZone: (id) => {\n                    if (!id) {\n                        return;\n                    }\n                    zonesHaveChanged = this._removeZone(whitespaceAccessor, id) || zonesHaveChanged;\n                },\n                layoutZone: (id) => {\n                    if (!id) {\n                        return;\n                    }\n                    zonesHaveChanged = this._layoutZone(whitespaceAccessor, id) || zonesHaveChanged;\n                }\n            };\n            safeInvoke1Arg(callback, changeAccessor);\n            // Invalidate changeAccessor\n            changeAccessor.addZone = invalidFunc;\n            changeAccessor.removeZone = invalidFunc;\n            changeAccessor.layoutZone = invalidFunc;\n        });\n        return zonesHaveChanged;\n    }\n    _addZone(whitespaceAccessor, zone) {\n        const props = this._computeWhitespaceProps(zone);\n        const whitespaceId = whitespaceAccessor.insertWhitespace(props.afterViewLineNumber, this._getZoneOrdinal(zone), props.heightInPx, props.minWidthInPx);\n        const myZone = {\n            whitespaceId: whitespaceId,\n            delegate: zone,\n            isInHiddenArea: props.isInHiddenArea,\n            isVisible: false,\n            domNode: createFastDomNode(zone.domNode),\n            marginDomNode: zone.marginDomNode ? createFastDomNode(zone.marginDomNode) : null\n        };\n        this._safeCallOnComputedHeight(myZone.delegate, props.heightInPx);\n        myZone.domNode.setPosition('absolute');\n        myZone.domNode.domNode.style.width = '100%';\n        myZone.domNode.setDisplay('none');\n        myZone.domNode.setAttribute('monaco-view-zone', myZone.whitespaceId);\n        this.domNode.appendChild(myZone.domNode);\n        if (myZone.marginDomNode) {\n            myZone.marginDomNode.setPosition('absolute');\n            myZone.marginDomNode.domNode.style.width = '100%';\n            myZone.marginDomNode.setDisplay('none');\n            myZone.marginDomNode.setAttribute('monaco-view-zone', myZone.whitespaceId);\n            this.marginDomNode.appendChild(myZone.marginDomNode);\n        }\n        this._zones[myZone.whitespaceId] = myZone;\n        this.setShouldRender();\n        return myZone.whitespaceId;\n    }\n    _removeZone(whitespaceAccessor, id) {\n        if (this._zones.hasOwnProperty(id)) {\n            const zone = this._zones[id];\n            delete this._zones[id];\n            whitespaceAccessor.removeWhitespace(zone.whitespaceId);\n            zone.domNode.removeAttribute('monaco-visible-view-zone');\n            zone.domNode.removeAttribute('monaco-view-zone');\n            zone.domNode.domNode.parentNode.removeChild(zone.domNode.domNode);\n            if (zone.marginDomNode) {\n                zone.marginDomNode.removeAttribute('monaco-visible-view-zone');\n                zone.marginDomNode.removeAttribute('monaco-view-zone');\n                zone.marginDomNode.domNode.parentNode.removeChild(zone.marginDomNode.domNode);\n            }\n            this.setShouldRender();\n            return true;\n        }\n        return false;\n    }\n    _layoutZone(whitespaceAccessor, id) {\n        if (this._zones.hasOwnProperty(id)) {\n            const zone = this._zones[id];\n            const props = this._computeWhitespaceProps(zone.delegate);\n            zone.isInHiddenArea = props.isInHiddenArea;\n            // const newOrdinal = this._getZoneOrdinal(zone.delegate);\n            whitespaceAccessor.changeOneWhitespace(zone.whitespaceId, props.afterViewLineNumber, props.heightInPx);\n            // TODO@Alex: change `newOrdinal` too\n            this._safeCallOnComputedHeight(zone.delegate, props.heightInPx);\n            this.setShouldRender();\n            return true;\n        }\n        return false;\n    }\n    shouldSuppressMouseDownOnViewZone(id) {\n        if (this._zones.hasOwnProperty(id)) {\n            const zone = this._zones[id];\n            return Boolean(zone.delegate.suppressMouseDown);\n        }\n        return false;\n    }\n    _heightInPixels(zone) {\n        if (typeof zone.heightInPx === 'number') {\n            return zone.heightInPx;\n        }\n        if (typeof zone.heightInLines === 'number') {\n            return this._lineHeight * zone.heightInLines;\n        }\n        return this._lineHeight;\n    }\n    _minWidthInPixels(zone) {\n        if (typeof zone.minWidthInPx === 'number') {\n            return zone.minWidthInPx;\n        }\n        return 0;\n    }\n    _safeCallOnComputedHeight(zone, height) {\n        if (typeof zone.onComputedHeight === 'function') {\n            try {\n                zone.onComputedHeight(height);\n            }\n            catch (e) {\n                onUnexpectedError(e);\n            }\n        }\n    }\n    _safeCallOnDomNodeTop(zone, top) {\n        if (typeof zone.onDomNodeTop === 'function') {\n            try {\n                zone.onDomNodeTop(top);\n            }\n            catch (e) {\n                onUnexpectedError(e);\n            }\n        }\n    }\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    render(ctx) {\n        const visibleWhitespaces = ctx.viewportData.whitespaceViewportData;\n        const visibleZones = {};\n        let hasVisibleZone = false;\n        for (const visibleWhitespace of visibleWhitespaces) {\n            if (this._zones[visibleWhitespace.id].isInHiddenArea) {\n                continue;\n            }\n            visibleZones[visibleWhitespace.id] = visibleWhitespace;\n            hasVisibleZone = true;\n        }\n        const keys = Object.keys(this._zones);\n        for (let i = 0, len = keys.length; i < len; i++) {\n            const id = keys[i];\n            const zone = this._zones[id];\n            let newTop = 0;\n            let newHeight = 0;\n            let newDisplay = 'none';\n            if (visibleZones.hasOwnProperty(id)) {\n                newTop = visibleZones[id].verticalOffset - ctx.bigNumbersDelta;\n                newHeight = visibleZones[id].height;\n                newDisplay = 'block';\n                // zone is visible\n                if (!zone.isVisible) {\n                    zone.domNode.setAttribute('monaco-visible-view-zone', 'true');\n                    zone.isVisible = true;\n                }\n                this._safeCallOnDomNodeTop(zone.delegate, ctx.getScrolledTopFromAbsoluteTop(visibleZones[id].verticalOffset));\n            }\n            else {\n                if (zone.isVisible) {\n                    zone.domNode.removeAttribute('monaco-visible-view-zone');\n                    zone.isVisible = false;\n                }\n                this._safeCallOnDomNodeTop(zone.delegate, ctx.getScrolledTopFromAbsoluteTop(-1000000));\n            }\n            zone.domNode.setTop(newTop);\n            zone.domNode.setHeight(newHeight);\n            zone.domNode.setDisplay(newDisplay);\n            if (zone.marginDomNode) {\n                zone.marginDomNode.setTop(newTop);\n                zone.marginDomNode.setHeight(newHeight);\n                zone.marginDomNode.setDisplay(newDisplay);\n            }\n        }\n        if (hasVisibleZone) {\n            this.domNode.setWidth(Math.max(ctx.scrollWidth, this._contentWidth));\n            this.marginDomNode.setWidth(this._contentLeft);\n        }\n    }\n}\nfunction safeInvoke1Arg(func, arg1) {\n    try {\n        return func(arg1);\n    }\n    catch (e) {\n        onUnexpectedError(e);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}