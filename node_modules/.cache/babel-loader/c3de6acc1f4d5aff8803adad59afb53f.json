{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { createCancelablePromise } from '../../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../../base/common/errors.js';\nimport { KeyChord } from '../../../../../base/common/keyCodes.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { ICodeEditorService } from '../../../../browser/services/codeEditorService.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { getOuterEditor, PeekContext } from '../../../peekView/browser/peekView.js';\nimport * as nls from '../../../../../nls.js';\nimport { CommandsRegistry } from '../../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { KeybindingsRegistry } from '../../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { IListService, WorkbenchListFocusContextKey, WorkbenchTreeElementCanCollapse, WorkbenchTreeElementCanExpand } from '../../../../../platform/list/browser/listService.js';\nimport { INotificationService } from '../../../../../platform/notification/common/notification.js';\nimport { IStorageService } from '../../../../../platform/storage/common/storage.js';\nimport { OneReference } from '../referencesModel.js';\nimport { LayoutData, ReferenceWidget } from './referencesWidget.js';\nexport const ctxReferenceSearchVisible = new RawContextKey('referenceSearchVisible', false, nls.localize('referenceSearchVisible', \"Whether reference peek is visible, like 'Peek References' or 'Peek Definition'\"));\nlet ReferencesController = class ReferencesController {\n  constructor(_defaultTreeKeyboardSupport, _editor, contextKeyService, _editorService, _notificationService, _instantiationService, _storageService, _configurationService) {\n    this._defaultTreeKeyboardSupport = _defaultTreeKeyboardSupport;\n    this._editor = _editor;\n    this._editorService = _editorService;\n    this._notificationService = _notificationService;\n    this._instantiationService = _instantiationService;\n    this._storageService = _storageService;\n    this._configurationService = _configurationService;\n    this._disposables = new DisposableStore();\n    this._requestIdPool = 0;\n    this._ignoreModelChangeEvent = false;\n    this._referenceSearchVisible = ctxReferenceSearchVisible.bindTo(contextKeyService);\n  }\n\n  static get(editor) {\n    return editor.getContribution(ReferencesController.ID);\n  }\n\n  dispose() {\n    var _a, _b;\n\n    this._referenceSearchVisible.reset();\n\n    this._disposables.dispose();\n\n    (_a = this._widget) === null || _a === void 0 ? void 0 : _a.dispose();\n    (_b = this._model) === null || _b === void 0 ? void 0 : _b.dispose();\n    this._widget = undefined;\n    this._model = undefined;\n  }\n\n  toggleWidget(range, modelPromise, peekMode) {\n    // close current widget and return early is position didn't change\n    let widgetPosition;\n\n    if (this._widget) {\n      widgetPosition = this._widget.position;\n    }\n\n    this.closeWidget();\n\n    if (!!widgetPosition && range.containsPosition(widgetPosition)) {\n      return;\n    }\n\n    this._peekMode = peekMode;\n\n    this._referenceSearchVisible.set(true); // close the widget on model/mode changes\n\n\n    this._disposables.add(this._editor.onDidChangeModelLanguage(() => {\n      this.closeWidget();\n    }));\n\n    this._disposables.add(this._editor.onDidChangeModel(() => {\n      if (!this._ignoreModelChangeEvent) {\n        this.closeWidget();\n      }\n    }));\n\n    const storageKey = 'peekViewLayout';\n    const data = LayoutData.fromJSON(this._storageService.get(storageKey, 0\n    /* GLOBAL */\n    , '{}'));\n    this._widget = this._instantiationService.createInstance(ReferenceWidget, this._editor, this._defaultTreeKeyboardSupport, data);\n\n    this._widget.setTitle(nls.localize('labelLoading', \"Loading...\"));\n\n    this._widget.show(range);\n\n    this._disposables.add(this._widget.onDidClose(() => {\n      modelPromise.cancel();\n\n      if (this._widget) {\n        this._storageService.store(storageKey, JSON.stringify(this._widget.layoutData), 0\n        /* GLOBAL */\n        , 1\n        /* MACHINE */\n        );\n\n        this._widget = undefined;\n      }\n\n      this.closeWidget();\n    }));\n\n    this._disposables.add(this._widget.onDidSelectReference(event => {\n      let {\n        element,\n        kind\n      } = event;\n\n      if (!element) {\n        return;\n      }\n\n      switch (kind) {\n        case 'open':\n          if (event.source !== 'editor' || !this._configurationService.getValue('editor.stablePeek')) {\n            // when stable peek is configured we don't close\n            // the peek window on selecting the editor\n            this.openReference(element, false, false);\n          }\n\n          break;\n\n        case 'side':\n          this.openReference(element, true, false);\n          break;\n\n        case 'goto':\n          if (peekMode) {\n            this._gotoReference(element);\n          } else {\n            this.openReference(element, false, true);\n          }\n\n          break;\n      }\n    }));\n\n    const requestId = ++this._requestIdPool;\n    modelPromise.then(model => {\n      var _a; // still current request? widget still open?\n\n\n      if (requestId !== this._requestIdPool || !this._widget) {\n        model.dispose();\n        return undefined;\n      }\n\n      (_a = this._model) === null || _a === void 0 ? void 0 : _a.dispose();\n      this._model = model; // show widget\n\n      return this._widget.setModel(this._model).then(() => {\n        if (this._widget && this._model && this._editor.hasModel()) {\n          // might have been closed\n          // set title\n          if (!this._model.isEmpty) {\n            this._widget.setMetaTitle(nls.localize('metaTitle.N', \"{0} ({1})\", this._model.title, this._model.references.length));\n          } else {\n            this._widget.setMetaTitle('');\n          } // set 'best' selection\n\n\n          let uri = this._editor.getModel().uri;\n\n          let pos = new Position(range.startLineNumber, range.startColumn);\n\n          let selection = this._model.nearestReference(uri, pos);\n\n          if (selection) {\n            return this._widget.setSelection(selection).then(() => {\n              if (this._widget && this._editor.getOption(77\n              /* peekWidgetDefaultFocus */\n              ) === 'editor') {\n                this._widget.focusOnPreviewEditor();\n              }\n            });\n          }\n        }\n\n        return undefined;\n      });\n    }, error => {\n      this._notificationService.error(error);\n    });\n  }\n\n  changeFocusBetweenPreviewAndReferences() {\n    if (!this._widget) {\n      // can be called while still resolving...\n      return;\n    }\n\n    if (this._widget.isPreviewEditorFocused()) {\n      this._widget.focusOnReferenceTree();\n    } else {\n      this._widget.focusOnPreviewEditor();\n    }\n  }\n\n  goToNextOrPreviousReference(fwd) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this._editor.hasModel() || !this._model || !this._widget) {\n        // can be called while still resolving...\n        return;\n      }\n\n      const currentPosition = this._widget.position;\n\n      if (!currentPosition) {\n        return;\n      }\n\n      const source = this._model.nearestReference(this._editor.getModel().uri, currentPosition);\n\n      if (!source) {\n        return;\n      }\n\n      const target = this._model.nextOrPreviousReference(source, fwd);\n\n      const editorFocus = this._editor.hasTextFocus();\n\n      const previewEditorFocus = this._widget.isPreviewEditorFocused();\n\n      yield this._widget.setSelection(target);\n      yield this._gotoReference(target);\n\n      if (editorFocus) {\n        this._editor.focus();\n      } else if (this._widget && previewEditorFocus) {\n        this._widget.focusOnPreviewEditor();\n      }\n    });\n  }\n\n  revealReference(reference) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this._editor.hasModel() || !this._model || !this._widget) {\n        // can be called while still resolving...\n        return;\n      }\n\n      yield this._widget.revealReference(reference);\n    });\n  }\n\n  closeWidget(focusEditor = true) {\n    var _a, _b;\n\n    (_a = this._widget) === null || _a === void 0 ? void 0 : _a.dispose();\n    (_b = this._model) === null || _b === void 0 ? void 0 : _b.dispose();\n\n    this._referenceSearchVisible.reset();\n\n    this._disposables.clear();\n\n    this._widget = undefined;\n    this._model = undefined;\n\n    if (focusEditor) {\n      this._editor.focus();\n    }\n\n    this._requestIdPool += 1; // Cancel pending requests\n  }\n\n  _gotoReference(ref) {\n    if (this._widget) {\n      this._widget.hide();\n    }\n\n    this._ignoreModelChangeEvent = true;\n    const range = Range.lift(ref.range).collapseToStart();\n    return this._editorService.openCodeEditor({\n      resource: ref.uri,\n      options: {\n        selection: range\n      }\n    }, this._editor).then(openedEditor => {\n      var _a;\n\n      this._ignoreModelChangeEvent = false;\n\n      if (!openedEditor || !this._widget) {\n        // something went wrong...\n        this.closeWidget();\n        return;\n      }\n\n      if (this._editor === openedEditor) {\n        //\n        this._widget.show(range);\n\n        this._widget.focusOnReferenceTree();\n      } else {\n        // we opened a different editor instance which means a different controller instance.\n        // therefore we stop with this controller and continue with the other\n        const other = ReferencesController.get(openedEditor);\n\n        const model = this._model.clone();\n\n        this.closeWidget();\n        openedEditor.focus();\n        other === null || other === void 0 ? void 0 : other.toggleWidget(range, createCancelablePromise(_ => Promise.resolve(model)), (_a = this._peekMode) !== null && _a !== void 0 ? _a : false);\n      }\n    }, err => {\n      this._ignoreModelChangeEvent = false;\n      onUnexpectedError(err);\n    });\n  }\n\n  openReference(ref, sideBySide, pinned) {\n    // clear stage\n    if (!sideBySide) {\n      this.closeWidget();\n    }\n\n    const {\n      uri,\n      range\n    } = ref;\n\n    this._editorService.openCodeEditor({\n      resource: uri,\n      options: {\n        selection: range,\n        pinned\n      }\n    }, this._editor, sideBySide);\n  }\n\n};\nReferencesController.ID = 'editor.contrib.referencesController';\nReferencesController = __decorate([__param(2, IContextKeyService), __param(3, ICodeEditorService), __param(4, INotificationService), __param(5, IInstantiationService), __param(6, IStorageService), __param(7, IConfigurationService)], ReferencesController);\nexport { ReferencesController };\n\nfunction withController(accessor, fn) {\n  const outerEditor = getOuterEditor(accessor);\n\n  if (!outerEditor) {\n    return;\n  }\n\n  const controller = ReferencesController.get(outerEditor);\n\n  if (controller) {\n    fn(controller);\n  }\n}\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n  id: 'togglePeekWidgetFocus',\n  weight: 100\n  /* EditorContrib */\n  ,\n  primary: KeyChord(2048\n  /* CtrlCmd */\n  | 41\n  /* KeyK */\n  , 60\n  /* F2 */\n  ),\n  when: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\n\n  handler(accessor) {\n    withController(accessor, controller => {\n      controller.changeFocusBetweenPreviewAndReferences();\n    });\n  }\n\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n  id: 'goToNextReference',\n  weight: 100\n  /* EditorContrib */\n  - 10,\n  primary: 62\n  /* F4 */\n  ,\n  secondary: [70\n  /* F12 */\n  ],\n  when: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\n\n  handler(accessor) {\n    withController(accessor, controller => {\n      controller.goToNextOrPreviousReference(true);\n    });\n  }\n\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n  id: 'goToPreviousReference',\n  weight: 100\n  /* EditorContrib */\n  - 10,\n  primary: 1024\n  /* Shift */\n  | 62\n  /* F4 */\n  ,\n  secondary: [1024\n  /* Shift */\n  | 70\n  /* F12 */\n  ],\n  when: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\n\n  handler(accessor) {\n    withController(accessor, controller => {\n      controller.goToNextOrPreviousReference(false);\n    });\n  }\n\n}); // commands that aren't needed anymore because there is now ContextKeyExpr.OR\n\nCommandsRegistry.registerCommandAlias('goToNextReferenceFromEmbeddedEditor', 'goToNextReference');\nCommandsRegistry.registerCommandAlias('goToPreviousReferenceFromEmbeddedEditor', 'goToPreviousReference'); // close\n\nCommandsRegistry.registerCommandAlias('closeReferenceSearchEditor', 'closeReferenceSearch');\nCommandsRegistry.registerCommand('closeReferenceSearch', accessor => withController(accessor, controller => controller.closeWidget()));\nKeybindingsRegistry.registerKeybindingRule({\n  id: 'closeReferenceSearch',\n  weight: 100\n  /* EditorContrib */\n  - 101,\n  primary: 9\n  /* Escape */\n  ,\n  secondary: [1024\n  /* Shift */\n  | 9\n  /* Escape */\n  ],\n  when: ContextKeyExpr.and(PeekContext.inPeekEditor, ContextKeyExpr.not('config.editor.stablePeek'))\n});\nKeybindingsRegistry.registerKeybindingRule({\n  id: 'closeReferenceSearch',\n  weight: 200\n  /* WorkbenchContrib */\n  + 50,\n  primary: 9\n  /* Escape */\n  ,\n  secondary: [1024\n  /* Shift */\n  | 9\n  /* Escape */\n  ],\n  when: ContextKeyExpr.and(ctxReferenceSearchVisible, ContextKeyExpr.not('config.editor.stablePeek'))\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n  id: 'revealReference',\n  weight: 200\n  /* WorkbenchContrib */\n  ,\n  primary: 3\n  /* Enter */\n  ,\n  mac: {\n    primary: 3\n    /* Enter */\n    ,\n    secondary: [2048\n    /* CtrlCmd */\n    | 18\n    /* DownArrow */\n    ]\n  },\n  when: ContextKeyExpr.and(ctxReferenceSearchVisible, WorkbenchListFocusContextKey, WorkbenchTreeElementCanCollapse.negate(), WorkbenchTreeElementCanExpand.negate()),\n\n  handler(accessor) {\n    var _a;\n\n    const listService = accessor.get(IListService);\n    const focus = (_a = listService.lastFocusedList) === null || _a === void 0 ? void 0 : _a.getFocus();\n\n    if (Array.isArray(focus) && focus[0] instanceof OneReference) {\n      withController(accessor, controller => controller.revealReference(focus[0]));\n    }\n  }\n\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n  id: 'openReferenceToSide',\n  weight: 100\n  /* EditorContrib */\n  ,\n  primary: 2048\n  /* CtrlCmd */\n  | 3\n  /* Enter */\n  ,\n  mac: {\n    primary: 256\n    /* WinCtrl */\n    | 3\n    /* Enter */\n\n  },\n  when: ContextKeyExpr.and(ctxReferenceSearchVisible, WorkbenchListFocusContextKey, WorkbenchTreeElementCanCollapse.negate(), WorkbenchTreeElementCanExpand.negate()),\n\n  handler(accessor) {\n    var _a;\n\n    const listService = accessor.get(IListService);\n    const focus = (_a = listService.lastFocusedList) === null || _a === void 0 ? void 0 : _a.getFocus();\n\n    if (Array.isArray(focus) && focus[0] instanceof OneReference) {\n      withController(accessor, controller => controller.openReference(focus[0], true, true));\n    }\n  }\n\n});\nCommandsRegistry.registerCommand('openReference', accessor => {\n  var _a;\n\n  const listService = accessor.get(IListService);\n  const focus = (_a = listService.lastFocusedList) === null || _a === void 0 ? void 0 : _a.getFocus();\n\n  if (Array.isArray(focus) && focus[0] instanceof OneReference) {\n    withController(accessor, controller => controller.openReference(focus[0], false, true));\n  }\n});","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/contrib/gotoSymbol/browser/peek/referencesController.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","createCancelablePromise","onUnexpectedError","KeyChord","DisposableStore","ICodeEditorService","Position","Range","getOuterEditor","PeekContext","nls","CommandsRegistry","IConfigurationService","ContextKeyExpr","IContextKeyService","RawContextKey","IInstantiationService","KeybindingsRegistry","IListService","WorkbenchListFocusContextKey","WorkbenchTreeElementCanCollapse","WorkbenchTreeElementCanExpand","INotificationService","IStorageService","OneReference","LayoutData","ReferenceWidget","ctxReferenceSearchVisible","localize","ReferencesController","constructor","_defaultTreeKeyboardSupport","_editor","contextKeyService","_editorService","_notificationService","_instantiationService","_storageService","_configurationService","_disposables","_requestIdPool","_ignoreModelChangeEvent","_referenceSearchVisible","bindTo","get","editor","getContribution","ID","dispose","_a","_b","reset","_widget","_model","undefined","toggleWidget","range","modelPromise","peekMode","widgetPosition","position","closeWidget","containsPosition","_peekMode","set","add","onDidChangeModelLanguage","onDidChangeModel","storageKey","data","fromJSON","createInstance","setTitle","show","onDidClose","cancel","store","JSON","stringify","layoutData","onDidSelectReference","event","element","kind","source","getValue","openReference","_gotoReference","requestId","model","setModel","hasModel","isEmpty","setMetaTitle","title","references","uri","getModel","pos","startLineNumber","startColumn","selection","nearestReference","setSelection","getOption","focusOnPreviewEditor","error","changeFocusBetweenPreviewAndReferences","isPreviewEditorFocused","focusOnReferenceTree","goToNextOrPreviousReference","fwd","currentPosition","nextOrPreviousReference","editorFocus","hasTextFocus","previewEditorFocus","focus","revealReference","reference","focusEditor","clear","ref","hide","lift","collapseToStart","openCodeEditor","resource","options","openedEditor","other","clone","_","err","sideBySide","pinned","withController","accessor","fn","outerEditor","controller","registerCommandAndKeybindingRule","id","weight","primary","when","or","inPeekEditor","handler","secondary","registerCommandAlias","registerCommand","registerKeybindingRule","and","not","mac","negate","listService","lastFocusedList","getFocus","Array","isArray"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { createCancelablePromise } from '../../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../../base/common/errors.js';\nimport { KeyChord } from '../../../../../base/common/keyCodes.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { ICodeEditorService } from '../../../../browser/services/codeEditorService.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { getOuterEditor, PeekContext } from '../../../peekView/browser/peekView.js';\nimport * as nls from '../../../../../nls.js';\nimport { CommandsRegistry } from '../../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { KeybindingsRegistry } from '../../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { IListService, WorkbenchListFocusContextKey, WorkbenchTreeElementCanCollapse, WorkbenchTreeElementCanExpand } from '../../../../../platform/list/browser/listService.js';\nimport { INotificationService } from '../../../../../platform/notification/common/notification.js';\nimport { IStorageService } from '../../../../../platform/storage/common/storage.js';\nimport { OneReference } from '../referencesModel.js';\nimport { LayoutData, ReferenceWidget } from './referencesWidget.js';\nexport const ctxReferenceSearchVisible = new RawContextKey('referenceSearchVisible', false, nls.localize('referenceSearchVisible', \"Whether reference peek is visible, like 'Peek References' or 'Peek Definition'\"));\nlet ReferencesController = class ReferencesController {\n    constructor(_defaultTreeKeyboardSupport, _editor, contextKeyService, _editorService, _notificationService, _instantiationService, _storageService, _configurationService) {\n        this._defaultTreeKeyboardSupport = _defaultTreeKeyboardSupport;\n        this._editor = _editor;\n        this._editorService = _editorService;\n        this._notificationService = _notificationService;\n        this._instantiationService = _instantiationService;\n        this._storageService = _storageService;\n        this._configurationService = _configurationService;\n        this._disposables = new DisposableStore();\n        this._requestIdPool = 0;\n        this._ignoreModelChangeEvent = false;\n        this._referenceSearchVisible = ctxReferenceSearchVisible.bindTo(contextKeyService);\n    }\n    static get(editor) {\n        return editor.getContribution(ReferencesController.ID);\n    }\n    dispose() {\n        var _a, _b;\n        this._referenceSearchVisible.reset();\n        this._disposables.dispose();\n        (_a = this._widget) === null || _a === void 0 ? void 0 : _a.dispose();\n        (_b = this._model) === null || _b === void 0 ? void 0 : _b.dispose();\n        this._widget = undefined;\n        this._model = undefined;\n    }\n    toggleWidget(range, modelPromise, peekMode) {\n        // close current widget and return early is position didn't change\n        let widgetPosition;\n        if (this._widget) {\n            widgetPosition = this._widget.position;\n        }\n        this.closeWidget();\n        if (!!widgetPosition && range.containsPosition(widgetPosition)) {\n            return;\n        }\n        this._peekMode = peekMode;\n        this._referenceSearchVisible.set(true);\n        // close the widget on model/mode changes\n        this._disposables.add(this._editor.onDidChangeModelLanguage(() => { this.closeWidget(); }));\n        this._disposables.add(this._editor.onDidChangeModel(() => {\n            if (!this._ignoreModelChangeEvent) {\n                this.closeWidget();\n            }\n        }));\n        const storageKey = 'peekViewLayout';\n        const data = LayoutData.fromJSON(this._storageService.get(storageKey, 0 /* GLOBAL */, '{}'));\n        this._widget = this._instantiationService.createInstance(ReferenceWidget, this._editor, this._defaultTreeKeyboardSupport, data);\n        this._widget.setTitle(nls.localize('labelLoading', \"Loading...\"));\n        this._widget.show(range);\n        this._disposables.add(this._widget.onDidClose(() => {\n            modelPromise.cancel();\n            if (this._widget) {\n                this._storageService.store(storageKey, JSON.stringify(this._widget.layoutData), 0 /* GLOBAL */, 1 /* MACHINE */);\n                this._widget = undefined;\n            }\n            this.closeWidget();\n        }));\n        this._disposables.add(this._widget.onDidSelectReference(event => {\n            let { element, kind } = event;\n            if (!element) {\n                return;\n            }\n            switch (kind) {\n                case 'open':\n                    if (event.source !== 'editor' || !this._configurationService.getValue('editor.stablePeek')) {\n                        // when stable peek is configured we don't close\n                        // the peek window on selecting the editor\n                        this.openReference(element, false, false);\n                    }\n                    break;\n                case 'side':\n                    this.openReference(element, true, false);\n                    break;\n                case 'goto':\n                    if (peekMode) {\n                        this._gotoReference(element);\n                    }\n                    else {\n                        this.openReference(element, false, true);\n                    }\n                    break;\n            }\n        }));\n        const requestId = ++this._requestIdPool;\n        modelPromise.then(model => {\n            var _a;\n            // still current request? widget still open?\n            if (requestId !== this._requestIdPool || !this._widget) {\n                model.dispose();\n                return undefined;\n            }\n            (_a = this._model) === null || _a === void 0 ? void 0 : _a.dispose();\n            this._model = model;\n            // show widget\n            return this._widget.setModel(this._model).then(() => {\n                if (this._widget && this._model && this._editor.hasModel()) { // might have been closed\n                    // set title\n                    if (!this._model.isEmpty) {\n                        this._widget.setMetaTitle(nls.localize('metaTitle.N', \"{0} ({1})\", this._model.title, this._model.references.length));\n                    }\n                    else {\n                        this._widget.setMetaTitle('');\n                    }\n                    // set 'best' selection\n                    let uri = this._editor.getModel().uri;\n                    let pos = new Position(range.startLineNumber, range.startColumn);\n                    let selection = this._model.nearestReference(uri, pos);\n                    if (selection) {\n                        return this._widget.setSelection(selection).then(() => {\n                            if (this._widget && this._editor.getOption(77 /* peekWidgetDefaultFocus */) === 'editor') {\n                                this._widget.focusOnPreviewEditor();\n                            }\n                        });\n                    }\n                }\n                return undefined;\n            });\n        }, error => {\n            this._notificationService.error(error);\n        });\n    }\n    changeFocusBetweenPreviewAndReferences() {\n        if (!this._widget) {\n            // can be called while still resolving...\n            return;\n        }\n        if (this._widget.isPreviewEditorFocused()) {\n            this._widget.focusOnReferenceTree();\n        }\n        else {\n            this._widget.focusOnPreviewEditor();\n        }\n    }\n    goToNextOrPreviousReference(fwd) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._editor.hasModel() || !this._model || !this._widget) {\n                // can be called while still resolving...\n                return;\n            }\n            const currentPosition = this._widget.position;\n            if (!currentPosition) {\n                return;\n            }\n            const source = this._model.nearestReference(this._editor.getModel().uri, currentPosition);\n            if (!source) {\n                return;\n            }\n            const target = this._model.nextOrPreviousReference(source, fwd);\n            const editorFocus = this._editor.hasTextFocus();\n            const previewEditorFocus = this._widget.isPreviewEditorFocused();\n            yield this._widget.setSelection(target);\n            yield this._gotoReference(target);\n            if (editorFocus) {\n                this._editor.focus();\n            }\n            else if (this._widget && previewEditorFocus) {\n                this._widget.focusOnPreviewEditor();\n            }\n        });\n    }\n    revealReference(reference) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._editor.hasModel() || !this._model || !this._widget) {\n                // can be called while still resolving...\n                return;\n            }\n            yield this._widget.revealReference(reference);\n        });\n    }\n    closeWidget(focusEditor = true) {\n        var _a, _b;\n        (_a = this._widget) === null || _a === void 0 ? void 0 : _a.dispose();\n        (_b = this._model) === null || _b === void 0 ? void 0 : _b.dispose();\n        this._referenceSearchVisible.reset();\n        this._disposables.clear();\n        this._widget = undefined;\n        this._model = undefined;\n        if (focusEditor) {\n            this._editor.focus();\n        }\n        this._requestIdPool += 1; // Cancel pending requests\n    }\n    _gotoReference(ref) {\n        if (this._widget) {\n            this._widget.hide();\n        }\n        this._ignoreModelChangeEvent = true;\n        const range = Range.lift(ref.range).collapseToStart();\n        return this._editorService.openCodeEditor({\n            resource: ref.uri,\n            options: { selection: range }\n        }, this._editor).then(openedEditor => {\n            var _a;\n            this._ignoreModelChangeEvent = false;\n            if (!openedEditor || !this._widget) {\n                // something went wrong...\n                this.closeWidget();\n                return;\n            }\n            if (this._editor === openedEditor) {\n                //\n                this._widget.show(range);\n                this._widget.focusOnReferenceTree();\n            }\n            else {\n                // we opened a different editor instance which means a different controller instance.\n                // therefore we stop with this controller and continue with the other\n                const other = ReferencesController.get(openedEditor);\n                const model = this._model.clone();\n                this.closeWidget();\n                openedEditor.focus();\n                other === null || other === void 0 ? void 0 : other.toggleWidget(range, createCancelablePromise(_ => Promise.resolve(model)), (_a = this._peekMode) !== null && _a !== void 0 ? _a : false);\n            }\n        }, (err) => {\n            this._ignoreModelChangeEvent = false;\n            onUnexpectedError(err);\n        });\n    }\n    openReference(ref, sideBySide, pinned) {\n        // clear stage\n        if (!sideBySide) {\n            this.closeWidget();\n        }\n        const { uri, range } = ref;\n        this._editorService.openCodeEditor({\n            resource: uri,\n            options: { selection: range, pinned }\n        }, this._editor, sideBySide);\n    }\n};\nReferencesController.ID = 'editor.contrib.referencesController';\nReferencesController = __decorate([\n    __param(2, IContextKeyService),\n    __param(3, ICodeEditorService),\n    __param(4, INotificationService),\n    __param(5, IInstantiationService),\n    __param(6, IStorageService),\n    __param(7, IConfigurationService)\n], ReferencesController);\nexport { ReferencesController };\nfunction withController(accessor, fn) {\n    const outerEditor = getOuterEditor(accessor);\n    if (!outerEditor) {\n        return;\n    }\n    const controller = ReferencesController.get(outerEditor);\n    if (controller) {\n        fn(controller);\n    }\n}\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'togglePeekWidgetFocus',\n    weight: 100 /* EditorContrib */,\n    primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KeyK */, 60 /* F2 */),\n    when: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\n    handler(accessor) {\n        withController(accessor, controller => {\n            controller.changeFocusBetweenPreviewAndReferences();\n        });\n    }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'goToNextReference',\n    weight: 100 /* EditorContrib */ - 10,\n    primary: 62 /* F4 */,\n    secondary: [70 /* F12 */],\n    when: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\n    handler(accessor) {\n        withController(accessor, controller => {\n            controller.goToNextOrPreviousReference(true);\n        });\n    }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'goToPreviousReference',\n    weight: 100 /* EditorContrib */ - 10,\n    primary: 1024 /* Shift */ | 62 /* F4 */,\n    secondary: [1024 /* Shift */ | 70 /* F12 */],\n    when: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\n    handler(accessor) {\n        withController(accessor, controller => {\n            controller.goToNextOrPreviousReference(false);\n        });\n    }\n});\n// commands that aren't needed anymore because there is now ContextKeyExpr.OR\nCommandsRegistry.registerCommandAlias('goToNextReferenceFromEmbeddedEditor', 'goToNextReference');\nCommandsRegistry.registerCommandAlias('goToPreviousReferenceFromEmbeddedEditor', 'goToPreviousReference');\n// close\nCommandsRegistry.registerCommandAlias('closeReferenceSearchEditor', 'closeReferenceSearch');\nCommandsRegistry.registerCommand('closeReferenceSearch', accessor => withController(accessor, controller => controller.closeWidget()));\nKeybindingsRegistry.registerKeybindingRule({\n    id: 'closeReferenceSearch',\n    weight: 100 /* EditorContrib */ - 101,\n    primary: 9 /* Escape */,\n    secondary: [1024 /* Shift */ | 9 /* Escape */],\n    when: ContextKeyExpr.and(PeekContext.inPeekEditor, ContextKeyExpr.not('config.editor.stablePeek'))\n});\nKeybindingsRegistry.registerKeybindingRule({\n    id: 'closeReferenceSearch',\n    weight: 200 /* WorkbenchContrib */ + 50,\n    primary: 9 /* Escape */,\n    secondary: [1024 /* Shift */ | 9 /* Escape */],\n    when: ContextKeyExpr.and(ctxReferenceSearchVisible, ContextKeyExpr.not('config.editor.stablePeek'))\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'revealReference',\n    weight: 200 /* WorkbenchContrib */,\n    primary: 3 /* Enter */,\n    mac: {\n        primary: 3 /* Enter */,\n        secondary: [2048 /* CtrlCmd */ | 18 /* DownArrow */]\n    },\n    when: ContextKeyExpr.and(ctxReferenceSearchVisible, WorkbenchListFocusContextKey, WorkbenchTreeElementCanCollapse.negate(), WorkbenchTreeElementCanExpand.negate()),\n    handler(accessor) {\n        var _a;\n        const listService = accessor.get(IListService);\n        const focus = (_a = listService.lastFocusedList) === null || _a === void 0 ? void 0 : _a.getFocus();\n        if (Array.isArray(focus) && focus[0] instanceof OneReference) {\n            withController(accessor, controller => controller.revealReference(focus[0]));\n        }\n    }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'openReferenceToSide',\n    weight: 100 /* EditorContrib */,\n    primary: 2048 /* CtrlCmd */ | 3 /* Enter */,\n    mac: {\n        primary: 256 /* WinCtrl */ | 3 /* Enter */\n    },\n    when: ContextKeyExpr.and(ctxReferenceSearchVisible, WorkbenchListFocusContextKey, WorkbenchTreeElementCanCollapse.negate(), WorkbenchTreeElementCanExpand.negate()),\n    handler(accessor) {\n        var _a;\n        const listService = accessor.get(IListService);\n        const focus = (_a = listService.lastFocusedList) === null || _a === void 0 ? void 0 : _a.getFocus();\n        if (Array.isArray(focus) && focus[0] instanceof OneReference) {\n            withController(accessor, controller => controller.openReference(focus[0], true, true));\n        }\n    }\n});\nCommandsRegistry.registerCommand('openReference', (accessor) => {\n    var _a;\n    const listService = accessor.get(IListService);\n    const focus = (_a = listService.lastFocusedList) === null || _a === void 0 ? void 0 : _a.getFocus();\n    if (Array.isArray(focus) && focus[0] instanceof OneReference) {\n        withController(accessor, controller => controller.openReference(focus[0], false, true));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}