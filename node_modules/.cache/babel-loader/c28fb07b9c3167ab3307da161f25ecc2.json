{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { CaseSensitiveCheckbox, RegexCheckbox, WholeWordsCheckbox } from './findInputCheckboxes.js';\nimport { HistoryInputBox } from '../inputbox/inputBox.js';\nimport { Widget } from '../widget.js';\nimport { Emitter } from '../../../common/event.js';\nimport './findInput.css';\nimport * as nls from '../../../../nls.js';\nconst NLS_DEFAULT_LABEL = nls.localize('defaultLabel', \"input\");\nexport class FindInput extends Widget {\n  constructor(parent, contextViewProvider, _showOptionButtons, options) {\n    super();\n    this._showOptionButtons = _showOptionButtons;\n    this.fixFocusOnOptionClickEnabled = true;\n    this.imeSessionInProgress = false;\n    this._onDidOptionChange = this._register(new Emitter());\n    this.onDidOptionChange = this._onDidOptionChange.event;\n    this._onKeyDown = this._register(new Emitter());\n    this.onKeyDown = this._onKeyDown.event;\n    this._onMouseDown = this._register(new Emitter());\n    this.onMouseDown = this._onMouseDown.event;\n    this._onInput = this._register(new Emitter());\n    this._onKeyUp = this._register(new Emitter());\n    this._onCaseSensitiveKeyDown = this._register(new Emitter());\n    this.onCaseSensitiveKeyDown = this._onCaseSensitiveKeyDown.event;\n    this._onRegexKeyDown = this._register(new Emitter());\n    this.onRegexKeyDown = this._onRegexKeyDown.event;\n    this._lastHighlightFindOptions = 0;\n    this.contextViewProvider = contextViewProvider;\n    this.placeholder = options.placeholder || '';\n    this.validation = options.validation;\n    this.label = options.label || NLS_DEFAULT_LABEL;\n    this.inputActiveOptionBorder = options.inputActiveOptionBorder;\n    this.inputActiveOptionForeground = options.inputActiveOptionForeground;\n    this.inputActiveOptionBackground = options.inputActiveOptionBackground;\n    this.inputBackground = options.inputBackground;\n    this.inputForeground = options.inputForeground;\n    this.inputBorder = options.inputBorder;\n    this.inputValidationInfoBorder = options.inputValidationInfoBorder;\n    this.inputValidationInfoBackground = options.inputValidationInfoBackground;\n    this.inputValidationInfoForeground = options.inputValidationInfoForeground;\n    this.inputValidationWarningBorder = options.inputValidationWarningBorder;\n    this.inputValidationWarningBackground = options.inputValidationWarningBackground;\n    this.inputValidationWarningForeground = options.inputValidationWarningForeground;\n    this.inputValidationErrorBorder = options.inputValidationErrorBorder;\n    this.inputValidationErrorBackground = options.inputValidationErrorBackground;\n    this.inputValidationErrorForeground = options.inputValidationErrorForeground;\n    const appendCaseSensitiveLabel = options.appendCaseSensitiveLabel || '';\n    const appendWholeWordsLabel = options.appendWholeWordsLabel || '';\n    const appendRegexLabel = options.appendRegexLabel || '';\n    const history = options.history || [];\n    const flexibleHeight = !!options.flexibleHeight;\n    const flexibleWidth = !!options.flexibleWidth;\n    const flexibleMaxHeight = options.flexibleMaxHeight;\n    this.domNode = document.createElement('div');\n    this.domNode.classList.add('monaco-findInput');\n    this.inputBox = this._register(new HistoryInputBox(this.domNode, this.contextViewProvider, {\n      placeholder: this.placeholder || '',\n      ariaLabel: this.label || '',\n      validationOptions: {\n        validation: this.validation\n      },\n      inputBackground: this.inputBackground,\n      inputForeground: this.inputForeground,\n      inputBorder: this.inputBorder,\n      inputValidationInfoBackground: this.inputValidationInfoBackground,\n      inputValidationInfoForeground: this.inputValidationInfoForeground,\n      inputValidationInfoBorder: this.inputValidationInfoBorder,\n      inputValidationWarningBackground: this.inputValidationWarningBackground,\n      inputValidationWarningForeground: this.inputValidationWarningForeground,\n      inputValidationWarningBorder: this.inputValidationWarningBorder,\n      inputValidationErrorBackground: this.inputValidationErrorBackground,\n      inputValidationErrorForeground: this.inputValidationErrorForeground,\n      inputValidationErrorBorder: this.inputValidationErrorBorder,\n      history,\n      showHistoryHint: options.showHistoryHint,\n      flexibleHeight,\n      flexibleWidth,\n      flexibleMaxHeight\n    }));\n    this.regex = this._register(new RegexCheckbox({\n      appendTitle: appendRegexLabel,\n      isChecked: false,\n      inputActiveOptionBorder: this.inputActiveOptionBorder,\n      inputActiveOptionForeground: this.inputActiveOptionForeground,\n      inputActiveOptionBackground: this.inputActiveOptionBackground\n    }));\n\n    this._register(this.regex.onChange(viaKeyboard => {\n      this._onDidOptionChange.fire(viaKeyboard);\n\n      if (!viaKeyboard && this.fixFocusOnOptionClickEnabled) {\n        this.inputBox.focus();\n      }\n\n      this.validate();\n    }));\n\n    this._register(this.regex.onKeyDown(e => {\n      this._onRegexKeyDown.fire(e);\n    }));\n\n    this.wholeWords = this._register(new WholeWordsCheckbox({\n      appendTitle: appendWholeWordsLabel,\n      isChecked: false,\n      inputActiveOptionBorder: this.inputActiveOptionBorder,\n      inputActiveOptionForeground: this.inputActiveOptionForeground,\n      inputActiveOptionBackground: this.inputActiveOptionBackground\n    }));\n\n    this._register(this.wholeWords.onChange(viaKeyboard => {\n      this._onDidOptionChange.fire(viaKeyboard);\n\n      if (!viaKeyboard && this.fixFocusOnOptionClickEnabled) {\n        this.inputBox.focus();\n      }\n\n      this.validate();\n    }));\n\n    this.caseSensitive = this._register(new CaseSensitiveCheckbox({\n      appendTitle: appendCaseSensitiveLabel,\n      isChecked: false,\n      inputActiveOptionBorder: this.inputActiveOptionBorder,\n      inputActiveOptionForeground: this.inputActiveOptionForeground,\n      inputActiveOptionBackground: this.inputActiveOptionBackground\n    }));\n\n    this._register(this.caseSensitive.onChange(viaKeyboard => {\n      this._onDidOptionChange.fire(viaKeyboard);\n\n      if (!viaKeyboard && this.fixFocusOnOptionClickEnabled) {\n        this.inputBox.focus();\n      }\n\n      this.validate();\n    }));\n\n    this._register(this.caseSensitive.onKeyDown(e => {\n      this._onCaseSensitiveKeyDown.fire(e);\n    }));\n\n    if (this._showOptionButtons) {\n      this.inputBox.paddingRight = this.caseSensitive.width() + this.wholeWords.width() + this.regex.width();\n    } // Arrow-Key support to navigate between options\n\n\n    let indexes = [this.caseSensitive.domNode, this.wholeWords.domNode, this.regex.domNode];\n    this.onkeydown(this.domNode, event => {\n      if (event.equals(15\n      /* LeftArrow */\n      ) || event.equals(17\n      /* RightArrow */\n      ) || event.equals(9\n      /* Escape */\n      )) {\n        let index = indexes.indexOf(document.activeElement);\n\n        if (index >= 0) {\n          let newIndex = -1;\n\n          if (event.equals(17\n          /* RightArrow */\n          )) {\n            newIndex = (index + 1) % indexes.length;\n          } else if (event.equals(15\n          /* LeftArrow */\n          )) {\n            if (index === 0) {\n              newIndex = indexes.length - 1;\n            } else {\n              newIndex = index - 1;\n            }\n          }\n\n          if (event.equals(9\n          /* Escape */\n          )) {\n            indexes[index].blur();\n            this.inputBox.focus();\n          } else if (newIndex >= 0) {\n            indexes[newIndex].focus();\n          }\n\n          dom.EventHelper.stop(event, true);\n        }\n      }\n    });\n    this.controls = document.createElement('div');\n    this.controls.className = 'controls';\n    this.controls.style.display = this._showOptionButtons ? 'block' : 'none';\n    this.controls.appendChild(this.caseSensitive.domNode);\n    this.controls.appendChild(this.wholeWords.domNode);\n    this.controls.appendChild(this.regex.domNode);\n    this.domNode.appendChild(this.controls);\n\n    if (parent) {\n      parent.appendChild(this.domNode);\n    }\n\n    this._register(dom.addDisposableListener(this.inputBox.inputElement, 'compositionstart', e => {\n      this.imeSessionInProgress = true;\n    }));\n\n    this._register(dom.addDisposableListener(this.inputBox.inputElement, 'compositionend', e => {\n      this.imeSessionInProgress = false;\n\n      this._onInput.fire();\n    }));\n\n    this.onkeydown(this.inputBox.inputElement, e => this._onKeyDown.fire(e));\n    this.onkeyup(this.inputBox.inputElement, e => this._onKeyUp.fire(e));\n    this.oninput(this.inputBox.inputElement, e => this._onInput.fire());\n    this.onmousedown(this.inputBox.inputElement, e => this._onMouseDown.fire(e));\n  }\n\n  enable() {\n    this.domNode.classList.remove('disabled');\n    this.inputBox.enable();\n    this.regex.enable();\n    this.wholeWords.enable();\n    this.caseSensitive.enable();\n  }\n\n  disable() {\n    this.domNode.classList.add('disabled');\n    this.inputBox.disable();\n    this.regex.disable();\n    this.wholeWords.disable();\n    this.caseSensitive.disable();\n  }\n\n  setFocusInputOnOptionClick(value) {\n    this.fixFocusOnOptionClickEnabled = value;\n  }\n\n  setEnabled(enabled) {\n    if (enabled) {\n      this.enable();\n    } else {\n      this.disable();\n    }\n  }\n\n  getValue() {\n    return this.inputBox.value;\n  }\n\n  setValue(value) {\n    if (this.inputBox.value !== value) {\n      this.inputBox.value = value;\n    }\n  }\n\n  style(styles) {\n    this.inputActiveOptionBorder = styles.inputActiveOptionBorder;\n    this.inputActiveOptionForeground = styles.inputActiveOptionForeground;\n    this.inputActiveOptionBackground = styles.inputActiveOptionBackground;\n    this.inputBackground = styles.inputBackground;\n    this.inputForeground = styles.inputForeground;\n    this.inputBorder = styles.inputBorder;\n    this.inputValidationInfoBackground = styles.inputValidationInfoBackground;\n    this.inputValidationInfoForeground = styles.inputValidationInfoForeground;\n    this.inputValidationInfoBorder = styles.inputValidationInfoBorder;\n    this.inputValidationWarningBackground = styles.inputValidationWarningBackground;\n    this.inputValidationWarningForeground = styles.inputValidationWarningForeground;\n    this.inputValidationWarningBorder = styles.inputValidationWarningBorder;\n    this.inputValidationErrorBackground = styles.inputValidationErrorBackground;\n    this.inputValidationErrorForeground = styles.inputValidationErrorForeground;\n    this.inputValidationErrorBorder = styles.inputValidationErrorBorder;\n    this.applyStyles();\n  }\n\n  applyStyles() {\n    if (this.domNode) {\n      const checkBoxStyles = {\n        inputActiveOptionBorder: this.inputActiveOptionBorder,\n        inputActiveOptionForeground: this.inputActiveOptionForeground,\n        inputActiveOptionBackground: this.inputActiveOptionBackground\n      };\n      this.regex.style(checkBoxStyles);\n      this.wholeWords.style(checkBoxStyles);\n      this.caseSensitive.style(checkBoxStyles);\n      const inputBoxStyles = {\n        inputBackground: this.inputBackground,\n        inputForeground: this.inputForeground,\n        inputBorder: this.inputBorder,\n        inputValidationInfoBackground: this.inputValidationInfoBackground,\n        inputValidationInfoForeground: this.inputValidationInfoForeground,\n        inputValidationInfoBorder: this.inputValidationInfoBorder,\n        inputValidationWarningBackground: this.inputValidationWarningBackground,\n        inputValidationWarningForeground: this.inputValidationWarningForeground,\n        inputValidationWarningBorder: this.inputValidationWarningBorder,\n        inputValidationErrorBackground: this.inputValidationErrorBackground,\n        inputValidationErrorForeground: this.inputValidationErrorForeground,\n        inputValidationErrorBorder: this.inputValidationErrorBorder\n      };\n      this.inputBox.style(inputBoxStyles);\n    }\n  }\n\n  select() {\n    this.inputBox.select();\n  }\n\n  focus() {\n    this.inputBox.focus();\n  }\n\n  getCaseSensitive() {\n    return this.caseSensitive.checked;\n  }\n\n  setCaseSensitive(value) {\n    this.caseSensitive.checked = value;\n  }\n\n  getWholeWords() {\n    return this.wholeWords.checked;\n  }\n\n  setWholeWords(value) {\n    this.wholeWords.checked = value;\n  }\n\n  getRegex() {\n    return this.regex.checked;\n  }\n\n  setRegex(value) {\n    this.regex.checked = value;\n    this.validate();\n  }\n\n  focusOnCaseSensitive() {\n    this.caseSensitive.focus();\n  }\n\n  highlightFindOptions() {\n    this.domNode.classList.remove('highlight-' + this._lastHighlightFindOptions);\n    this._lastHighlightFindOptions = 1 - this._lastHighlightFindOptions;\n    this.domNode.classList.add('highlight-' + this._lastHighlightFindOptions);\n  }\n\n  validate() {\n    this.inputBox.validate();\n  }\n\n  clearMessage() {\n    this.inputBox.hideMessage();\n  }\n\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/base/browser/ui/findinput/findInput.js"],"names":["dom","CaseSensitiveCheckbox","RegexCheckbox","WholeWordsCheckbox","HistoryInputBox","Widget","Emitter","nls","NLS_DEFAULT_LABEL","localize","FindInput","constructor","parent","contextViewProvider","_showOptionButtons","options","fixFocusOnOptionClickEnabled","imeSessionInProgress","_onDidOptionChange","_register","onDidOptionChange","event","_onKeyDown","onKeyDown","_onMouseDown","onMouseDown","_onInput","_onKeyUp","_onCaseSensitiveKeyDown","onCaseSensitiveKeyDown","_onRegexKeyDown","onRegexKeyDown","_lastHighlightFindOptions","placeholder","validation","label","inputActiveOptionBorder","inputActiveOptionForeground","inputActiveOptionBackground","inputBackground","inputForeground","inputBorder","inputValidationInfoBorder","inputValidationInfoBackground","inputValidationInfoForeground","inputValidationWarningBorder","inputValidationWarningBackground","inputValidationWarningForeground","inputValidationErrorBorder","inputValidationErrorBackground","inputValidationErrorForeground","appendCaseSensitiveLabel","appendWholeWordsLabel","appendRegexLabel","history","flexibleHeight","flexibleWidth","flexibleMaxHeight","domNode","document","createElement","classList","add","inputBox","ariaLabel","validationOptions","showHistoryHint","regex","appendTitle","isChecked","onChange","viaKeyboard","fire","focus","validate","e","wholeWords","caseSensitive","paddingRight","width","indexes","onkeydown","equals","index","indexOf","activeElement","newIndex","length","blur","EventHelper","stop","controls","className","style","display","appendChild","addDisposableListener","inputElement","onkeyup","oninput","onmousedown","enable","remove","disable","setFocusInputOnOptionClick","value","setEnabled","enabled","getValue","setValue","styles","applyStyles","checkBoxStyles","inputBoxStyles","select","getCaseSensitive","checked","setCaseSensitive","getWholeWords","setWholeWords","getRegex","setRegex","focusOnCaseSensitive","highlightFindOptions","clearMessage","hideMessage"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { CaseSensitiveCheckbox, RegexCheckbox, WholeWordsCheckbox } from './findInputCheckboxes.js';\nimport { HistoryInputBox } from '../inputbox/inputBox.js';\nimport { Widget } from '../widget.js';\nimport { Emitter } from '../../../common/event.js';\nimport './findInput.css';\nimport * as nls from '../../../../nls.js';\nconst NLS_DEFAULT_LABEL = nls.localize('defaultLabel', \"input\");\nexport class FindInput extends Widget {\n    constructor(parent, contextViewProvider, _showOptionButtons, options) {\n        super();\n        this._showOptionButtons = _showOptionButtons;\n        this.fixFocusOnOptionClickEnabled = true;\n        this.imeSessionInProgress = false;\n        this._onDidOptionChange = this._register(new Emitter());\n        this.onDidOptionChange = this._onDidOptionChange.event;\n        this._onKeyDown = this._register(new Emitter());\n        this.onKeyDown = this._onKeyDown.event;\n        this._onMouseDown = this._register(new Emitter());\n        this.onMouseDown = this._onMouseDown.event;\n        this._onInput = this._register(new Emitter());\n        this._onKeyUp = this._register(new Emitter());\n        this._onCaseSensitiveKeyDown = this._register(new Emitter());\n        this.onCaseSensitiveKeyDown = this._onCaseSensitiveKeyDown.event;\n        this._onRegexKeyDown = this._register(new Emitter());\n        this.onRegexKeyDown = this._onRegexKeyDown.event;\n        this._lastHighlightFindOptions = 0;\n        this.contextViewProvider = contextViewProvider;\n        this.placeholder = options.placeholder || '';\n        this.validation = options.validation;\n        this.label = options.label || NLS_DEFAULT_LABEL;\n        this.inputActiveOptionBorder = options.inputActiveOptionBorder;\n        this.inputActiveOptionForeground = options.inputActiveOptionForeground;\n        this.inputActiveOptionBackground = options.inputActiveOptionBackground;\n        this.inputBackground = options.inputBackground;\n        this.inputForeground = options.inputForeground;\n        this.inputBorder = options.inputBorder;\n        this.inputValidationInfoBorder = options.inputValidationInfoBorder;\n        this.inputValidationInfoBackground = options.inputValidationInfoBackground;\n        this.inputValidationInfoForeground = options.inputValidationInfoForeground;\n        this.inputValidationWarningBorder = options.inputValidationWarningBorder;\n        this.inputValidationWarningBackground = options.inputValidationWarningBackground;\n        this.inputValidationWarningForeground = options.inputValidationWarningForeground;\n        this.inputValidationErrorBorder = options.inputValidationErrorBorder;\n        this.inputValidationErrorBackground = options.inputValidationErrorBackground;\n        this.inputValidationErrorForeground = options.inputValidationErrorForeground;\n        const appendCaseSensitiveLabel = options.appendCaseSensitiveLabel || '';\n        const appendWholeWordsLabel = options.appendWholeWordsLabel || '';\n        const appendRegexLabel = options.appendRegexLabel || '';\n        const history = options.history || [];\n        const flexibleHeight = !!options.flexibleHeight;\n        const flexibleWidth = !!options.flexibleWidth;\n        const flexibleMaxHeight = options.flexibleMaxHeight;\n        this.domNode = document.createElement('div');\n        this.domNode.classList.add('monaco-findInput');\n        this.inputBox = this._register(new HistoryInputBox(this.domNode, this.contextViewProvider, {\n            placeholder: this.placeholder || '',\n            ariaLabel: this.label || '',\n            validationOptions: {\n                validation: this.validation\n            },\n            inputBackground: this.inputBackground,\n            inputForeground: this.inputForeground,\n            inputBorder: this.inputBorder,\n            inputValidationInfoBackground: this.inputValidationInfoBackground,\n            inputValidationInfoForeground: this.inputValidationInfoForeground,\n            inputValidationInfoBorder: this.inputValidationInfoBorder,\n            inputValidationWarningBackground: this.inputValidationWarningBackground,\n            inputValidationWarningForeground: this.inputValidationWarningForeground,\n            inputValidationWarningBorder: this.inputValidationWarningBorder,\n            inputValidationErrorBackground: this.inputValidationErrorBackground,\n            inputValidationErrorForeground: this.inputValidationErrorForeground,\n            inputValidationErrorBorder: this.inputValidationErrorBorder,\n            history,\n            showHistoryHint: options.showHistoryHint,\n            flexibleHeight,\n            flexibleWidth,\n            flexibleMaxHeight\n        }));\n        this.regex = this._register(new RegexCheckbox({\n            appendTitle: appendRegexLabel,\n            isChecked: false,\n            inputActiveOptionBorder: this.inputActiveOptionBorder,\n            inputActiveOptionForeground: this.inputActiveOptionForeground,\n            inputActiveOptionBackground: this.inputActiveOptionBackground\n        }));\n        this._register(this.regex.onChange(viaKeyboard => {\n            this._onDidOptionChange.fire(viaKeyboard);\n            if (!viaKeyboard && this.fixFocusOnOptionClickEnabled) {\n                this.inputBox.focus();\n            }\n            this.validate();\n        }));\n        this._register(this.regex.onKeyDown(e => {\n            this._onRegexKeyDown.fire(e);\n        }));\n        this.wholeWords = this._register(new WholeWordsCheckbox({\n            appendTitle: appendWholeWordsLabel,\n            isChecked: false,\n            inputActiveOptionBorder: this.inputActiveOptionBorder,\n            inputActiveOptionForeground: this.inputActiveOptionForeground,\n            inputActiveOptionBackground: this.inputActiveOptionBackground\n        }));\n        this._register(this.wholeWords.onChange(viaKeyboard => {\n            this._onDidOptionChange.fire(viaKeyboard);\n            if (!viaKeyboard && this.fixFocusOnOptionClickEnabled) {\n                this.inputBox.focus();\n            }\n            this.validate();\n        }));\n        this.caseSensitive = this._register(new CaseSensitiveCheckbox({\n            appendTitle: appendCaseSensitiveLabel,\n            isChecked: false,\n            inputActiveOptionBorder: this.inputActiveOptionBorder,\n            inputActiveOptionForeground: this.inputActiveOptionForeground,\n            inputActiveOptionBackground: this.inputActiveOptionBackground\n        }));\n        this._register(this.caseSensitive.onChange(viaKeyboard => {\n            this._onDidOptionChange.fire(viaKeyboard);\n            if (!viaKeyboard && this.fixFocusOnOptionClickEnabled) {\n                this.inputBox.focus();\n            }\n            this.validate();\n        }));\n        this._register(this.caseSensitive.onKeyDown(e => {\n            this._onCaseSensitiveKeyDown.fire(e);\n        }));\n        if (this._showOptionButtons) {\n            this.inputBox.paddingRight = this.caseSensitive.width() + this.wholeWords.width() + this.regex.width();\n        }\n        // Arrow-Key support to navigate between options\n        let indexes = [this.caseSensitive.domNode, this.wholeWords.domNode, this.regex.domNode];\n        this.onkeydown(this.domNode, (event) => {\n            if (event.equals(15 /* LeftArrow */) || event.equals(17 /* RightArrow */) || event.equals(9 /* Escape */)) {\n                let index = indexes.indexOf(document.activeElement);\n                if (index >= 0) {\n                    let newIndex = -1;\n                    if (event.equals(17 /* RightArrow */)) {\n                        newIndex = (index + 1) % indexes.length;\n                    }\n                    else if (event.equals(15 /* LeftArrow */)) {\n                        if (index === 0) {\n                            newIndex = indexes.length - 1;\n                        }\n                        else {\n                            newIndex = index - 1;\n                        }\n                    }\n                    if (event.equals(9 /* Escape */)) {\n                        indexes[index].blur();\n                        this.inputBox.focus();\n                    }\n                    else if (newIndex >= 0) {\n                        indexes[newIndex].focus();\n                    }\n                    dom.EventHelper.stop(event, true);\n                }\n            }\n        });\n        this.controls = document.createElement('div');\n        this.controls.className = 'controls';\n        this.controls.style.display = this._showOptionButtons ? 'block' : 'none';\n        this.controls.appendChild(this.caseSensitive.domNode);\n        this.controls.appendChild(this.wholeWords.domNode);\n        this.controls.appendChild(this.regex.domNode);\n        this.domNode.appendChild(this.controls);\n        if (parent) {\n            parent.appendChild(this.domNode);\n        }\n        this._register(dom.addDisposableListener(this.inputBox.inputElement, 'compositionstart', (e) => {\n            this.imeSessionInProgress = true;\n        }));\n        this._register(dom.addDisposableListener(this.inputBox.inputElement, 'compositionend', (e) => {\n            this.imeSessionInProgress = false;\n            this._onInput.fire();\n        }));\n        this.onkeydown(this.inputBox.inputElement, (e) => this._onKeyDown.fire(e));\n        this.onkeyup(this.inputBox.inputElement, (e) => this._onKeyUp.fire(e));\n        this.oninput(this.inputBox.inputElement, (e) => this._onInput.fire());\n        this.onmousedown(this.inputBox.inputElement, (e) => this._onMouseDown.fire(e));\n    }\n    enable() {\n        this.domNode.classList.remove('disabled');\n        this.inputBox.enable();\n        this.regex.enable();\n        this.wholeWords.enable();\n        this.caseSensitive.enable();\n    }\n    disable() {\n        this.domNode.classList.add('disabled');\n        this.inputBox.disable();\n        this.regex.disable();\n        this.wholeWords.disable();\n        this.caseSensitive.disable();\n    }\n    setFocusInputOnOptionClick(value) {\n        this.fixFocusOnOptionClickEnabled = value;\n    }\n    setEnabled(enabled) {\n        if (enabled) {\n            this.enable();\n        }\n        else {\n            this.disable();\n        }\n    }\n    getValue() {\n        return this.inputBox.value;\n    }\n    setValue(value) {\n        if (this.inputBox.value !== value) {\n            this.inputBox.value = value;\n        }\n    }\n    style(styles) {\n        this.inputActiveOptionBorder = styles.inputActiveOptionBorder;\n        this.inputActiveOptionForeground = styles.inputActiveOptionForeground;\n        this.inputActiveOptionBackground = styles.inputActiveOptionBackground;\n        this.inputBackground = styles.inputBackground;\n        this.inputForeground = styles.inputForeground;\n        this.inputBorder = styles.inputBorder;\n        this.inputValidationInfoBackground = styles.inputValidationInfoBackground;\n        this.inputValidationInfoForeground = styles.inputValidationInfoForeground;\n        this.inputValidationInfoBorder = styles.inputValidationInfoBorder;\n        this.inputValidationWarningBackground = styles.inputValidationWarningBackground;\n        this.inputValidationWarningForeground = styles.inputValidationWarningForeground;\n        this.inputValidationWarningBorder = styles.inputValidationWarningBorder;\n        this.inputValidationErrorBackground = styles.inputValidationErrorBackground;\n        this.inputValidationErrorForeground = styles.inputValidationErrorForeground;\n        this.inputValidationErrorBorder = styles.inputValidationErrorBorder;\n        this.applyStyles();\n    }\n    applyStyles() {\n        if (this.domNode) {\n            const checkBoxStyles = {\n                inputActiveOptionBorder: this.inputActiveOptionBorder,\n                inputActiveOptionForeground: this.inputActiveOptionForeground,\n                inputActiveOptionBackground: this.inputActiveOptionBackground,\n            };\n            this.regex.style(checkBoxStyles);\n            this.wholeWords.style(checkBoxStyles);\n            this.caseSensitive.style(checkBoxStyles);\n            const inputBoxStyles = {\n                inputBackground: this.inputBackground,\n                inputForeground: this.inputForeground,\n                inputBorder: this.inputBorder,\n                inputValidationInfoBackground: this.inputValidationInfoBackground,\n                inputValidationInfoForeground: this.inputValidationInfoForeground,\n                inputValidationInfoBorder: this.inputValidationInfoBorder,\n                inputValidationWarningBackground: this.inputValidationWarningBackground,\n                inputValidationWarningForeground: this.inputValidationWarningForeground,\n                inputValidationWarningBorder: this.inputValidationWarningBorder,\n                inputValidationErrorBackground: this.inputValidationErrorBackground,\n                inputValidationErrorForeground: this.inputValidationErrorForeground,\n                inputValidationErrorBorder: this.inputValidationErrorBorder\n            };\n            this.inputBox.style(inputBoxStyles);\n        }\n    }\n    select() {\n        this.inputBox.select();\n    }\n    focus() {\n        this.inputBox.focus();\n    }\n    getCaseSensitive() {\n        return this.caseSensitive.checked;\n    }\n    setCaseSensitive(value) {\n        this.caseSensitive.checked = value;\n    }\n    getWholeWords() {\n        return this.wholeWords.checked;\n    }\n    setWholeWords(value) {\n        this.wholeWords.checked = value;\n    }\n    getRegex() {\n        return this.regex.checked;\n    }\n    setRegex(value) {\n        this.regex.checked = value;\n        this.validate();\n    }\n    focusOnCaseSensitive() {\n        this.caseSensitive.focus();\n    }\n    highlightFindOptions() {\n        this.domNode.classList.remove('highlight-' + (this._lastHighlightFindOptions));\n        this._lastHighlightFindOptions = 1 - this._lastHighlightFindOptions;\n        this.domNode.classList.add('highlight-' + (this._lastHighlightFindOptions));\n    }\n    validate() {\n        this.inputBox.validate();\n    }\n    clearMessage() {\n        this.inputBox.hideMessage();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}