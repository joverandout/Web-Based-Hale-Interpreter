{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nlet hasDifferentOriginAncestorFlag = false;\nlet sameOriginWindowChainCache = null;\n\nfunction getParentWindowIfSameOrigin(w) {\n  if (!w.parent || w.parent === w) {\n    return null;\n  } // Cannot really tell if we have access to the parent window unless we try to access something in it\n\n\n  try {\n    let location = w.location;\n    let parentLocation = w.parent.location;\n\n    if (location.origin !== 'null' && parentLocation.origin !== 'null' && location.origin !== parentLocation.origin) {\n      hasDifferentOriginAncestorFlag = true;\n      return null;\n    }\n  } catch (e) {\n    hasDifferentOriginAncestorFlag = true;\n    return null;\n  }\n\n  return w.parent;\n}\n\nexport class IframeUtils {\n  /**\n   * Returns a chain of embedded windows with the same origin (which can be accessed programmatically).\n   * Having a chain of length 1 might mean that the current execution environment is running outside of an iframe or inside an iframe embedded in a window with a different origin.\n   * To distinguish if at one point the current execution environment is running inside a window with a different origin, see hasDifferentOriginAncestor()\n   */\n  static getSameOriginWindowChain() {\n    if (!sameOriginWindowChainCache) {\n      sameOriginWindowChainCache = [];\n      let w = window;\n      let parent;\n\n      do {\n        parent = getParentWindowIfSameOrigin(w);\n\n        if (parent) {\n          sameOriginWindowChainCache.push({\n            window: w,\n            iframeElement: w.frameElement || null\n          });\n        } else {\n          sameOriginWindowChainCache.push({\n            window: w,\n            iframeElement: null\n          });\n        }\n\n        w = parent;\n      } while (w);\n    }\n\n    return sameOriginWindowChainCache.slice(0);\n  }\n  /**\n   * Returns true if the current execution environment is chained in a list of iframes which at one point ends in a window with a different origin.\n   * Returns false if the current execution environment is not running inside an iframe or if the entire chain of iframes have the same origin.\n   */\n\n\n  static hasDifferentOriginAncestor() {\n    if (!sameOriginWindowChainCache) {\n      this.getSameOriginWindowChain();\n    }\n\n    return hasDifferentOriginAncestorFlag;\n  }\n  /**\n   * Returns the position of `childWindow` relative to `ancestorWindow`\n   */\n\n\n  static getPositionOfChildWindowRelativeToAncestorWindow(childWindow, ancestorWindow) {\n    if (!ancestorWindow || childWindow === ancestorWindow) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n\n    let top = 0,\n        left = 0;\n    let windowChain = this.getSameOriginWindowChain();\n\n    for (const windowChainEl of windowChain) {\n      top += windowChainEl.window.scrollY;\n      left += windowChainEl.window.scrollX;\n\n      if (windowChainEl.window === ancestorWindow) {\n        break;\n      }\n\n      if (!windowChainEl.iframeElement) {\n        break;\n      }\n\n      let boundingRect = windowChainEl.iframeElement.getBoundingClientRect();\n      top += boundingRect.top;\n      left += boundingRect.left;\n    }\n\n    return {\n      top: top,\n      left: left\n    };\n  }\n\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/base/browser/iframe.js"],"names":["hasDifferentOriginAncestorFlag","sameOriginWindowChainCache","getParentWindowIfSameOrigin","w","parent","location","parentLocation","origin","e","IframeUtils","getSameOriginWindowChain","window","push","iframeElement","frameElement","slice","hasDifferentOriginAncestor","getPositionOfChildWindowRelativeToAncestorWindow","childWindow","ancestorWindow","top","left","windowChain","windowChainEl","scrollY","scrollX","boundingRect","getBoundingClientRect"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nlet hasDifferentOriginAncestorFlag = false;\nlet sameOriginWindowChainCache = null;\nfunction getParentWindowIfSameOrigin(w) {\n    if (!w.parent || w.parent === w) {\n        return null;\n    }\n    // Cannot really tell if we have access to the parent window unless we try to access something in it\n    try {\n        let location = w.location;\n        let parentLocation = w.parent.location;\n        if (location.origin !== 'null' && parentLocation.origin !== 'null' && location.origin !== parentLocation.origin) {\n            hasDifferentOriginAncestorFlag = true;\n            return null;\n        }\n    }\n    catch (e) {\n        hasDifferentOriginAncestorFlag = true;\n        return null;\n    }\n    return w.parent;\n}\nexport class IframeUtils {\n    /**\n     * Returns a chain of embedded windows with the same origin (which can be accessed programmatically).\n     * Having a chain of length 1 might mean that the current execution environment is running outside of an iframe or inside an iframe embedded in a window with a different origin.\n     * To distinguish if at one point the current execution environment is running inside a window with a different origin, see hasDifferentOriginAncestor()\n     */\n    static getSameOriginWindowChain() {\n        if (!sameOriginWindowChainCache) {\n            sameOriginWindowChainCache = [];\n            let w = window;\n            let parent;\n            do {\n                parent = getParentWindowIfSameOrigin(w);\n                if (parent) {\n                    sameOriginWindowChainCache.push({\n                        window: w,\n                        iframeElement: w.frameElement || null\n                    });\n                }\n                else {\n                    sameOriginWindowChainCache.push({\n                        window: w,\n                        iframeElement: null\n                    });\n                }\n                w = parent;\n            } while (w);\n        }\n        return sameOriginWindowChainCache.slice(0);\n    }\n    /**\n     * Returns true if the current execution environment is chained in a list of iframes which at one point ends in a window with a different origin.\n     * Returns false if the current execution environment is not running inside an iframe or if the entire chain of iframes have the same origin.\n     */\n    static hasDifferentOriginAncestor() {\n        if (!sameOriginWindowChainCache) {\n            this.getSameOriginWindowChain();\n        }\n        return hasDifferentOriginAncestorFlag;\n    }\n    /**\n     * Returns the position of `childWindow` relative to `ancestorWindow`\n     */\n    static getPositionOfChildWindowRelativeToAncestorWindow(childWindow, ancestorWindow) {\n        if (!ancestorWindow || childWindow === ancestorWindow) {\n            return {\n                top: 0,\n                left: 0\n            };\n        }\n        let top = 0, left = 0;\n        let windowChain = this.getSameOriginWindowChain();\n        for (const windowChainEl of windowChain) {\n            top += windowChainEl.window.scrollY;\n            left += windowChainEl.window.scrollX;\n            if (windowChainEl.window === ancestorWindow) {\n                break;\n            }\n            if (!windowChainEl.iframeElement) {\n                break;\n            }\n            let boundingRect = windowChainEl.iframeElement.getBoundingClientRect();\n            top += boundingRect.top;\n            left += boundingRect.left;\n        }\n        return {\n            top: top,\n            left: left\n        };\n    }\n}\n"]},"metadata":{},"sourceType":"module"}