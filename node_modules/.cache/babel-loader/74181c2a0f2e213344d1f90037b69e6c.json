{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { isObject } from '../../../base/common/types.js';\nexport const IBulkEditService = createDecorator('IWorkspaceEditService');\n\nfunction isWorkspaceFileEdit(thing) {\n  return isObject(thing) && (Boolean(thing.newUri) || Boolean(thing.oldUri));\n}\n\nfunction isWorkspaceTextEdit(thing) {\n  return isObject(thing) && URI.isUri(thing.resource) && isObject(thing.edit);\n}\n\nexport class ResourceEdit {\n  constructor(metadata) {\n    this.metadata = metadata;\n  }\n\n  static convert(edit) {\n    return edit.edits.map(edit => {\n      if (isWorkspaceTextEdit(edit)) {\n        return new ResourceTextEdit(edit.resource, edit.edit, edit.modelVersionId, edit.metadata);\n      }\n\n      if (isWorkspaceFileEdit(edit)) {\n        return new ResourceFileEdit(edit.oldUri, edit.newUri, edit.options, edit.metadata);\n      }\n\n      throw new Error('Unsupported edit');\n    });\n  }\n\n}\nexport class ResourceTextEdit extends ResourceEdit {\n  constructor(resource, textEdit, versionId, metadata) {\n    super(metadata);\n    this.resource = resource;\n    this.textEdit = textEdit;\n    this.versionId = versionId;\n  }\n\n}\nexport class ResourceFileEdit extends ResourceEdit {\n  constructor(oldResource, newResource, options, metadata) {\n    super(metadata);\n    this.oldResource = oldResource;\n    this.newResource = newResource;\n    this.options = options;\n  }\n\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/browser/services/bulkEditService.js"],"names":["createDecorator","URI","isObject","IBulkEditService","isWorkspaceFileEdit","thing","Boolean","newUri","oldUri","isWorkspaceTextEdit","isUri","resource","edit","ResourceEdit","constructor","metadata","convert","edits","map","ResourceTextEdit","modelVersionId","ResourceFileEdit","options","Error","textEdit","versionId","oldResource","newResource"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,eAAT,QAAgC,yDAAhC;AACA,SAASC,GAAT,QAAoB,6BAApB;AACA,SAASC,QAAT,QAAyB,+BAAzB;AACA,OAAO,MAAMC,gBAAgB,GAAGH,eAAe,CAAC,uBAAD,CAAxC;;AACP,SAASI,mBAAT,CAA6BC,KAA7B,EAAoC;AAChC,SAAOH,QAAQ,CAACG,KAAD,CAAR,KAAoBC,OAAO,CAACD,KAAK,CAACE,MAAP,CAAP,IAAyBD,OAAO,CAACD,KAAK,CAACG,MAAP,CAApD,CAAP;AACH;;AACD,SAASC,mBAAT,CAA6BJ,KAA7B,EAAoC;AAChC,SAAOH,QAAQ,CAACG,KAAD,CAAR,IAAmBJ,GAAG,CAACS,KAAJ,CAAUL,KAAK,CAACM,QAAhB,CAAnB,IAAgDT,QAAQ,CAACG,KAAK,CAACO,IAAP,CAA/D;AACH;;AACD,OAAO,MAAMC,YAAN,CAAmB;AACtBC,EAAAA,WAAW,CAACC,QAAD,EAAW;AAClB,SAAKA,QAAL,GAAgBA,QAAhB;AACH;;AACa,SAAPC,OAAO,CAACJ,IAAD,EAAO;AACjB,WAAOA,IAAI,CAACK,KAAL,CAAWC,GAAX,CAAeN,IAAI,IAAI;AAC1B,UAAIH,mBAAmB,CAACG,IAAD,CAAvB,EAA+B;AAC3B,eAAO,IAAIO,gBAAJ,CAAqBP,IAAI,CAACD,QAA1B,EAAoCC,IAAI,CAACA,IAAzC,EAA+CA,IAAI,CAACQ,cAApD,EAAoER,IAAI,CAACG,QAAzE,CAAP;AACH;;AACD,UAAIX,mBAAmB,CAACQ,IAAD,CAAvB,EAA+B;AAC3B,eAAO,IAAIS,gBAAJ,CAAqBT,IAAI,CAACJ,MAA1B,EAAkCI,IAAI,CAACL,MAAvC,EAA+CK,IAAI,CAACU,OAApD,EAA6DV,IAAI,CAACG,QAAlE,CAAP;AACH;;AACD,YAAM,IAAIQ,KAAJ,CAAU,kBAAV,CAAN;AACH,KARM,CAAP;AASH;;AAdqB;AAgB1B,OAAO,MAAMJ,gBAAN,SAA+BN,YAA/B,CAA4C;AAC/CC,EAAAA,WAAW,CAACH,QAAD,EAAWa,QAAX,EAAqBC,SAArB,EAAgCV,QAAhC,EAA0C;AACjD,UAAMA,QAAN;AACA,SAAKJ,QAAL,GAAgBA,QAAhB;AACA,SAAKa,QAAL,GAAgBA,QAAhB;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACH;;AAN8C;AAQnD,OAAO,MAAMJ,gBAAN,SAA+BR,YAA/B,CAA4C;AAC/CC,EAAAA,WAAW,CAACY,WAAD,EAAcC,WAAd,EAA2BL,OAA3B,EAAoCP,QAApC,EAA8C;AACrD,UAAMA,QAAN;AACA,SAAKW,WAAL,GAAmBA,WAAnB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA,SAAKL,OAAL,GAAeA,OAAf;AACH;;AAN8C","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { isObject } from '../../../base/common/types.js';\nexport const IBulkEditService = createDecorator('IWorkspaceEditService');\nfunction isWorkspaceFileEdit(thing) {\n    return isObject(thing) && (Boolean(thing.newUri) || Boolean(thing.oldUri));\n}\nfunction isWorkspaceTextEdit(thing) {\n    return isObject(thing) && URI.isUri(thing.resource) && isObject(thing.edit);\n}\nexport class ResourceEdit {\n    constructor(metadata) {\n        this.metadata = metadata;\n    }\n    static convert(edit) {\n        return edit.edits.map(edit => {\n            if (isWorkspaceTextEdit(edit)) {\n                return new ResourceTextEdit(edit.resource, edit.edit, edit.modelVersionId, edit.metadata);\n            }\n            if (isWorkspaceFileEdit(edit)) {\n                return new ResourceFileEdit(edit.oldUri, edit.newUri, edit.options, edit.metadata);\n            }\n            throw new Error('Unsupported edit');\n        });\n    }\n}\nexport class ResourceTextEdit extends ResourceEdit {\n    constructor(resource, textEdit, versionId, metadata) {\n        super(metadata);\n        this.resource = resource;\n        this.textEdit = textEdit;\n        this.versionId = versionId;\n    }\n}\nexport class ResourceFileEdit extends ResourceEdit {\n    constructor(oldResource, newResource, options, metadata) {\n        super(metadata);\n        this.oldResource = oldResource;\n        this.newResource = newResource;\n        this.options = options;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}