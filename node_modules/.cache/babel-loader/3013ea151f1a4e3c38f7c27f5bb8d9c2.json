{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { binarySearch, isFalsyOrEmpty } from '../../../../base/common/arrays.js';\nimport { Range } from '../../../common/core/range.js';\nimport { BracketSelectionRangeProvider } from '../../smartSelect/browser/bracketSelections.js';\nexport class WordDistance {\n  static create(service, editor) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!editor.getOption(106\n      /* suggest */\n      ).localityBonus) {\n        return WordDistance.None;\n      }\n\n      if (!editor.hasModel()) {\n        return WordDistance.None;\n      }\n\n      const model = editor.getModel();\n      const position = editor.getPosition();\n\n      if (!service.canComputeWordRanges(model.uri)) {\n        return WordDistance.None;\n      }\n\n      const [ranges] = yield new BracketSelectionRangeProvider().provideSelectionRanges(model, [position]);\n\n      if (ranges.length === 0) {\n        return WordDistance.None;\n      }\n\n      const wordRanges = yield service.computeWordRanges(model.uri, ranges[0].range);\n\n      if (!wordRanges) {\n        return WordDistance.None;\n      } // remove current word\n\n\n      const wordUntilPos = model.getWordUntilPosition(position);\n      delete wordRanges[wordUntilPos.word];\n      return new class extends WordDistance {\n        distance(anchor, item) {\n          if (!position.equals(editor.getPosition())) {\n            return 0;\n          }\n\n          if (item.kind === 17\n          /* Keyword */\n          ) {\n            return 2 << 20;\n          }\n\n          let word = typeof item.label === 'string' ? item.label : item.label.label;\n          let wordLines = wordRanges[word];\n\n          if (isFalsyOrEmpty(wordLines)) {\n            return 2 << 20;\n          }\n\n          let idx = binarySearch(wordLines, Range.fromPositions(anchor), Range.compareRangesUsingStarts);\n          let bestWordRange = idx >= 0 ? wordLines[idx] : wordLines[Math.max(0, ~idx - 1)];\n          let blockDistance = ranges.length;\n\n          for (const range of ranges) {\n            if (!Range.containsRange(range.range, bestWordRange)) {\n              break;\n            }\n\n            blockDistance -= 1;\n          }\n\n          return blockDistance;\n        }\n\n      }();\n    });\n  }\n\n}\nWordDistance.None = new class extends WordDistance {\n  distance() {\n    return 0;\n  }\n\n}();","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/contrib/suggest/browser/wordDistance.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","binarySearch","isFalsyOrEmpty","Range","BracketSelectionRangeProvider","WordDistance","create","service","editor","getOption","localityBonus","None","hasModel","model","getModel","position","getPosition","canComputeWordRanges","uri","ranges","provideSelectionRanges","length","wordRanges","computeWordRanges","range","wordUntilPos","getWordUntilPosition","word","distance","anchor","item","equals","kind","label","wordLines","idx","fromPositions","compareRangesUsingStarts","bestWordRange","Math","max","blockDistance","containsRange"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { binarySearch, isFalsyOrEmpty } from '../../../../base/common/arrays.js';\nimport { Range } from '../../../common/core/range.js';\nimport { BracketSelectionRangeProvider } from '../../smartSelect/browser/bracketSelections.js';\nexport class WordDistance {\n    static create(service, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!editor.getOption(106 /* suggest */).localityBonus) {\n                return WordDistance.None;\n            }\n            if (!editor.hasModel()) {\n                return WordDistance.None;\n            }\n            const model = editor.getModel();\n            const position = editor.getPosition();\n            if (!service.canComputeWordRanges(model.uri)) {\n                return WordDistance.None;\n            }\n            const [ranges] = yield new BracketSelectionRangeProvider().provideSelectionRanges(model, [position]);\n            if (ranges.length === 0) {\n                return WordDistance.None;\n            }\n            const wordRanges = yield service.computeWordRanges(model.uri, ranges[0].range);\n            if (!wordRanges) {\n                return WordDistance.None;\n            }\n            // remove current word\n            const wordUntilPos = model.getWordUntilPosition(position);\n            delete wordRanges[wordUntilPos.word];\n            return new class extends WordDistance {\n                distance(anchor, item) {\n                    if (!position.equals(editor.getPosition())) {\n                        return 0;\n                    }\n                    if (item.kind === 17 /* Keyword */) {\n                        return 2 << 20;\n                    }\n                    let word = typeof item.label === 'string' ? item.label : item.label.label;\n                    let wordLines = wordRanges[word];\n                    if (isFalsyOrEmpty(wordLines)) {\n                        return 2 << 20;\n                    }\n                    let idx = binarySearch(wordLines, Range.fromPositions(anchor), Range.compareRangesUsingStarts);\n                    let bestWordRange = idx >= 0 ? wordLines[idx] : wordLines[Math.max(0, ~idx - 1)];\n                    let blockDistance = ranges.length;\n                    for (const range of ranges) {\n                        if (!Range.containsRange(range.range, bestWordRange)) {\n                            break;\n                        }\n                        blockDistance -= 1;\n                    }\n                    return blockDistance;\n                }\n            };\n        });\n    }\n}\nWordDistance.None = new class extends WordDistance {\n    distance() { return 0; }\n};\n"]},"metadata":{},"sourceType":"module"}