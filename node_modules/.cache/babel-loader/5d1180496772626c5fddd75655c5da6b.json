{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CSSIcon } from '../../../base/common/codicons.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport * as platform from '../../registry/common/platform.js';\nimport { ColorScheme } from './theme.js';\nexport const IThemeService = createDecorator('themeService');\nexport var ThemeColor;\n\n(function (ThemeColor) {\n  function isThemeColor(obj) {\n    return obj && typeof obj === 'object' && typeof obj.id === 'string';\n  }\n\n  ThemeColor.isThemeColor = isThemeColor;\n})(ThemeColor || (ThemeColor = {}));\n\nexport function themeColorFromId(id) {\n  return {\n    id\n  };\n}\nexport var ThemeIcon;\n\n(function (ThemeIcon) {\n  function isThemeIcon(obj) {\n    return obj && typeof obj === 'object' && typeof obj.id === 'string' && (typeof obj.color === 'undefined' || ThemeColor.isThemeColor(obj.color));\n  }\n\n  ThemeIcon.isThemeIcon = isThemeIcon;\n\n  const _regexFromString = new RegExp(`^\\\\$\\\\((${CSSIcon.iconNameExpression}(?:${CSSIcon.iconModifierExpression})?)\\\\)$`);\n\n  function fromString(str) {\n    const match = _regexFromString.exec(str);\n\n    if (!match) {\n      return undefined;\n    }\n\n    let [, name] = match;\n    return {\n      id: name\n    };\n  }\n\n  ThemeIcon.fromString = fromString;\n\n  function fromId(id) {\n    return {\n      id\n    };\n  }\n\n  ThemeIcon.fromId = fromId;\n\n  function modify(icon, modifier) {\n    let id = icon.id;\n    const tildeIndex = id.lastIndexOf('~');\n\n    if (tildeIndex !== -1) {\n      id = id.substring(0, tildeIndex);\n    }\n\n    if (modifier) {\n      id = `${id}~${modifier}`;\n    }\n\n    return {\n      id\n    };\n  }\n\n  ThemeIcon.modify = modify;\n\n  function getModifier(icon) {\n    const tildeIndex = icon.id.lastIndexOf('~');\n\n    if (tildeIndex !== -1) {\n      return icon.id.substring(tildeIndex + 1);\n    }\n\n    return undefined;\n  }\n\n  ThemeIcon.getModifier = getModifier;\n\n  function isEqual(ti1, ti2) {\n    var _a, _b;\n\n    return ti1.id === ti2.id && ((_a = ti1.color) === null || _a === void 0 ? void 0 : _a.id) === ((_b = ti2.color) === null || _b === void 0 ? void 0 : _b.id);\n  }\n\n  ThemeIcon.isEqual = isEqual;\n\n  function asThemeIcon(codicon, color) {\n    return {\n      id: codicon.id,\n      color: color ? themeColorFromId(color) : undefined\n    };\n  }\n\n  ThemeIcon.asThemeIcon = asThemeIcon;\n  ThemeIcon.asClassNameArray = CSSIcon.asClassNameArray;\n  ThemeIcon.asClassName = CSSIcon.asClassName;\n  ThemeIcon.asCSSSelector = CSSIcon.asCSSSelector;\n})(ThemeIcon || (ThemeIcon = {}));\n\nexport function getThemeTypeSelector(type) {\n  switch (type) {\n    case ColorScheme.DARK:\n      return 'vs-dark';\n\n    case ColorScheme.HIGH_CONTRAST:\n      return 'hc-black';\n\n    default:\n      return 'vs';\n  }\n} // static theming participant\n\nexport const Extensions = {\n  ThemingContribution: 'base.contributions.theming'\n};\n\nclass ThemingRegistry {\n  constructor() {\n    this.themingParticipants = [];\n    this.themingParticipants = [];\n    this.onThemingParticipantAddedEmitter = new Emitter();\n  }\n\n  onColorThemeChange(participant) {\n    this.themingParticipants.push(participant);\n    this.onThemingParticipantAddedEmitter.fire(participant);\n    return toDisposable(() => {\n      const idx = this.themingParticipants.indexOf(participant);\n      this.themingParticipants.splice(idx, 1);\n    });\n  }\n\n  getThemingParticipants() {\n    return this.themingParticipants;\n  }\n\n}\n\nlet themingRegistry = new ThemingRegistry();\nplatform.Registry.add(Extensions.ThemingContribution, themingRegistry);\nexport function registerThemingParticipant(participant) {\n  return themingRegistry.onColorThemeChange(participant);\n}\n/**\n * Utility base class for all themable components.\n */\n\nexport class Themable extends Disposable {\n  constructor(themeService) {\n    super();\n    this.themeService = themeService;\n    this.theme = themeService.getColorTheme(); // Hook up to theme changes\n\n    this._register(this.themeService.onDidColorThemeChange(theme => this.onThemeChange(theme)));\n  }\n\n  onThemeChange(theme) {\n    this.theme = theme;\n    this.updateStyles();\n  }\n\n  updateStyles() {// Subclasses to override\n  }\n\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/platform/theme/common/themeService.js"],"names":["CSSIcon","Emitter","Disposable","toDisposable","createDecorator","platform","ColorScheme","IThemeService","ThemeColor","isThemeColor","obj","id","themeColorFromId","ThemeIcon","isThemeIcon","color","_regexFromString","RegExp","iconNameExpression","iconModifierExpression","fromString","str","match","exec","undefined","name","fromId","modify","icon","modifier","tildeIndex","lastIndexOf","substring","getModifier","isEqual","ti1","ti2","_a","_b","asThemeIcon","codicon","asClassNameArray","asClassName","asCSSSelector","getThemeTypeSelector","type","DARK","HIGH_CONTRAST","Extensions","ThemingContribution","ThemingRegistry","constructor","themingParticipants","onThemingParticipantAddedEmitter","onColorThemeChange","participant","push","fire","idx","indexOf","splice","getThemingParticipants","themingRegistry","Registry","add","registerThemingParticipant","Themable","themeService","theme","getColorTheme","_register","onDidColorThemeChange","onThemeChange","updateStyles"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CSSIcon } from '../../../base/common/codicons.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport * as platform from '../../registry/common/platform.js';\nimport { ColorScheme } from './theme.js';\nexport const IThemeService = createDecorator('themeService');\nexport var ThemeColor;\n(function (ThemeColor) {\n    function isThemeColor(obj) {\n        return obj && typeof obj === 'object' && typeof obj.id === 'string';\n    }\n    ThemeColor.isThemeColor = isThemeColor;\n})(ThemeColor || (ThemeColor = {}));\nexport function themeColorFromId(id) {\n    return { id };\n}\nexport var ThemeIcon;\n(function (ThemeIcon) {\n    function isThemeIcon(obj) {\n        return obj && typeof obj === 'object' && typeof obj.id === 'string' && (typeof obj.color === 'undefined' || ThemeColor.isThemeColor(obj.color));\n    }\n    ThemeIcon.isThemeIcon = isThemeIcon;\n    const _regexFromString = new RegExp(`^\\\\$\\\\((${CSSIcon.iconNameExpression}(?:${CSSIcon.iconModifierExpression})?)\\\\)$`);\n    function fromString(str) {\n        const match = _regexFromString.exec(str);\n        if (!match) {\n            return undefined;\n        }\n        let [, name] = match;\n        return { id: name };\n    }\n    ThemeIcon.fromString = fromString;\n    function fromId(id) {\n        return { id };\n    }\n    ThemeIcon.fromId = fromId;\n    function modify(icon, modifier) {\n        let id = icon.id;\n        const tildeIndex = id.lastIndexOf('~');\n        if (tildeIndex !== -1) {\n            id = id.substring(0, tildeIndex);\n        }\n        if (modifier) {\n            id = `${id}~${modifier}`;\n        }\n        return { id };\n    }\n    ThemeIcon.modify = modify;\n    function getModifier(icon) {\n        const tildeIndex = icon.id.lastIndexOf('~');\n        if (tildeIndex !== -1) {\n            return icon.id.substring(tildeIndex + 1);\n        }\n        return undefined;\n    }\n    ThemeIcon.getModifier = getModifier;\n    function isEqual(ti1, ti2) {\n        var _a, _b;\n        return ti1.id === ti2.id && ((_a = ti1.color) === null || _a === void 0 ? void 0 : _a.id) === ((_b = ti2.color) === null || _b === void 0 ? void 0 : _b.id);\n    }\n    ThemeIcon.isEqual = isEqual;\n    function asThemeIcon(codicon, color) {\n        return { id: codicon.id, color: color ? themeColorFromId(color) : undefined };\n    }\n    ThemeIcon.asThemeIcon = asThemeIcon;\n    ThemeIcon.asClassNameArray = CSSIcon.asClassNameArray;\n    ThemeIcon.asClassName = CSSIcon.asClassName;\n    ThemeIcon.asCSSSelector = CSSIcon.asCSSSelector;\n})(ThemeIcon || (ThemeIcon = {}));\nexport function getThemeTypeSelector(type) {\n    switch (type) {\n        case ColorScheme.DARK: return 'vs-dark';\n        case ColorScheme.HIGH_CONTRAST: return 'hc-black';\n        default: return 'vs';\n    }\n}\n// static theming participant\nexport const Extensions = {\n    ThemingContribution: 'base.contributions.theming'\n};\nclass ThemingRegistry {\n    constructor() {\n        this.themingParticipants = [];\n        this.themingParticipants = [];\n        this.onThemingParticipantAddedEmitter = new Emitter();\n    }\n    onColorThemeChange(participant) {\n        this.themingParticipants.push(participant);\n        this.onThemingParticipantAddedEmitter.fire(participant);\n        return toDisposable(() => {\n            const idx = this.themingParticipants.indexOf(participant);\n            this.themingParticipants.splice(idx, 1);\n        });\n    }\n    getThemingParticipants() {\n        return this.themingParticipants;\n    }\n}\nlet themingRegistry = new ThemingRegistry();\nplatform.Registry.add(Extensions.ThemingContribution, themingRegistry);\nexport function registerThemingParticipant(participant) {\n    return themingRegistry.onColorThemeChange(participant);\n}\n/**\n * Utility base class for all themable components.\n */\nexport class Themable extends Disposable {\n    constructor(themeService) {\n        super();\n        this.themeService = themeService;\n        this.theme = themeService.getColorTheme();\n        // Hook up to theme changes\n        this._register(this.themeService.onDidColorThemeChange(theme => this.onThemeChange(theme)));\n    }\n    onThemeChange(theme) {\n        this.theme = theme;\n        this.updateStyles();\n    }\n    updateStyles() {\n        // Subclasses to override\n    }\n}\n"]},"metadata":{},"sourceType":"module"}