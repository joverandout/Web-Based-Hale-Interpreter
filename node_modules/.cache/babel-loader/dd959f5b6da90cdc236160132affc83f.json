{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport './standaloneQuickInput.css';\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nimport { EditorScopedLayoutService } from '../standaloneLayoutService.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { QuickInputService } from '../../../../platform/quickinput/browser/quickInput.js';\nimport { once } from '../../../../base/common/functional.js';\nlet EditorScopedQuickInputService = class EditorScopedQuickInputService extends QuickInputService {\n  constructor(editor, instantiationService, contextKeyService, themeService, accessibilityService, codeEditorService) {\n    super(instantiationService, contextKeyService, themeService, accessibilityService, new EditorScopedLayoutService(editor.getContainerDomNode(), codeEditorService));\n    this.host = undefined; // Use the passed in code editor as host for the quick input widget\n\n    const contribution = QuickInputEditorContribution.get(editor);\n\n    if (contribution) {\n      const widget = contribution.widget;\n      this.host = {\n        _serviceBrand: undefined,\n\n        get hasContainer() {\n          return true;\n        },\n\n        get container() {\n          return widget.getDomNode();\n        },\n\n        get dimension() {\n          return editor.getLayoutInfo();\n        },\n\n        get onDidLayout() {\n          return editor.onDidLayoutChange;\n        },\n\n        focus: () => editor.focus()\n      };\n    } else {\n      this.host = undefined;\n    }\n  }\n\n  createController() {\n    return super.createController(this.host);\n  }\n\n};\nEditorScopedQuickInputService = __decorate([__param(1, IInstantiationService), __param(2, IContextKeyService), __param(3, IThemeService), __param(4, IAccessibilityService), __param(5, ICodeEditorService)], EditorScopedQuickInputService);\nexport { EditorScopedQuickInputService };\nlet StandaloneQuickInputService = class StandaloneQuickInputService {\n  constructor(instantiationService, codeEditorService) {\n    this.instantiationService = instantiationService;\n    this.codeEditorService = codeEditorService;\n    this.mapEditorToService = new Map();\n  }\n\n  get activeService() {\n    const editor = this.codeEditorService.getFocusedCodeEditor();\n\n    if (!editor) {\n      throw new Error('Quick input service needs a focused editor to work.');\n    } // Find the quick input implementation for the focused\n    // editor or create it lazily if not yet created\n\n\n    let quickInputService = this.mapEditorToService.get(editor);\n\n    if (!quickInputService) {\n      const newQuickInputService = quickInputService = this.instantiationService.createInstance(EditorScopedQuickInputService, editor);\n      this.mapEditorToService.set(editor, quickInputService);\n      once(editor.onDidDispose)(() => {\n        newQuickInputService.dispose();\n        this.mapEditorToService.delete(editor);\n      });\n    }\n\n    return quickInputService;\n  }\n\n  get quickAccess() {\n    return this.activeService.quickAccess;\n  }\n\n  pick(picks, options = {}, token = CancellationToken.None) {\n    return this.activeService\n    /* TS fail */\n    .pick(picks, options, token);\n  }\n\n  createQuickPick() {\n    return this.activeService.createQuickPick();\n  }\n\n};\nStandaloneQuickInputService = __decorate([__param(0, IInstantiationService), __param(1, ICodeEditorService)], StandaloneQuickInputService);\nexport { StandaloneQuickInputService };\nexport class QuickInputEditorContribution {\n  constructor(editor) {\n    this.editor = editor;\n    this.widget = new QuickInputEditorWidget(this.editor);\n  }\n\n  static get(editor) {\n    return editor.getContribution(QuickInputEditorContribution.ID);\n  }\n\n  dispose() {\n    this.widget.dispose();\n  }\n\n}\nQuickInputEditorContribution.ID = 'editor.controller.quickInput';\nexport class QuickInputEditorWidget {\n  constructor(codeEditor) {\n    this.codeEditor = codeEditor;\n    this.domNode = document.createElement('div');\n    this.codeEditor.addOverlayWidget(this);\n  }\n\n  getId() {\n    return QuickInputEditorWidget.ID;\n  }\n\n  getDomNode() {\n    return this.domNode;\n  }\n\n  getPosition() {\n    return {\n      preference: 2\n      /* TOP_CENTER */\n\n    };\n  }\n\n  dispose() {\n    this.codeEditor.removeOverlayWidget(this);\n  }\n\n}\nQuickInputEditorWidget.ID = 'editor.contrib.quickInputWidget';\nregisterEditorContribution(QuickInputEditorContribution.ID, QuickInputEditorContribution);","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/standalone/browser/quickInput/standaloneQuickInputService.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","registerEditorContribution","IThemeService","CancellationToken","IInstantiationService","IContextKeyService","IAccessibilityService","EditorScopedLayoutService","ICodeEditorService","QuickInputService","once","EditorScopedQuickInputService","constructor","editor","instantiationService","contextKeyService","themeService","accessibilityService","codeEditorService","getContainerDomNode","host","undefined","contribution","QuickInputEditorContribution","get","widget","_serviceBrand","hasContainer","container","getDomNode","dimension","getLayoutInfo","onDidLayout","onDidLayoutChange","focus","createController","StandaloneQuickInputService","mapEditorToService","Map","activeService","getFocusedCodeEditor","Error","quickInputService","newQuickInputService","createInstance","set","onDidDispose","dispose","delete","quickAccess","pick","picks","options","token","None","createQuickPick","QuickInputEditorWidget","getContribution","ID","codeEditor","domNode","document","createElement","addOverlayWidget","getId","getPosition","preference","removeOverlayWidget"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport './standaloneQuickInput.css';\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nimport { EditorScopedLayoutService } from '../standaloneLayoutService.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { QuickInputService } from '../../../../platform/quickinput/browser/quickInput.js';\nimport { once } from '../../../../base/common/functional.js';\nlet EditorScopedQuickInputService = class EditorScopedQuickInputService extends QuickInputService {\n    constructor(editor, instantiationService, contextKeyService, themeService, accessibilityService, codeEditorService) {\n        super(instantiationService, contextKeyService, themeService, accessibilityService, new EditorScopedLayoutService(editor.getContainerDomNode(), codeEditorService));\n        this.host = undefined;\n        // Use the passed in code editor as host for the quick input widget\n        const contribution = QuickInputEditorContribution.get(editor);\n        if (contribution) {\n            const widget = contribution.widget;\n            this.host = {\n                _serviceBrand: undefined,\n                get hasContainer() { return true; },\n                get container() { return widget.getDomNode(); },\n                get dimension() { return editor.getLayoutInfo(); },\n                get onDidLayout() { return editor.onDidLayoutChange; },\n                focus: () => editor.focus()\n            };\n        }\n        else {\n            this.host = undefined;\n        }\n    }\n    createController() {\n        return super.createController(this.host);\n    }\n};\nEditorScopedQuickInputService = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IContextKeyService),\n    __param(3, IThemeService),\n    __param(4, IAccessibilityService),\n    __param(5, ICodeEditorService)\n], EditorScopedQuickInputService);\nexport { EditorScopedQuickInputService };\nlet StandaloneQuickInputService = class StandaloneQuickInputService {\n    constructor(instantiationService, codeEditorService) {\n        this.instantiationService = instantiationService;\n        this.codeEditorService = codeEditorService;\n        this.mapEditorToService = new Map();\n    }\n    get activeService() {\n        const editor = this.codeEditorService.getFocusedCodeEditor();\n        if (!editor) {\n            throw new Error('Quick input service needs a focused editor to work.');\n        }\n        // Find the quick input implementation for the focused\n        // editor or create it lazily if not yet created\n        let quickInputService = this.mapEditorToService.get(editor);\n        if (!quickInputService) {\n            const newQuickInputService = quickInputService = this.instantiationService.createInstance(EditorScopedQuickInputService, editor);\n            this.mapEditorToService.set(editor, quickInputService);\n            once(editor.onDidDispose)(() => {\n                newQuickInputService.dispose();\n                this.mapEditorToService.delete(editor);\n            });\n        }\n        return quickInputService;\n    }\n    get quickAccess() { return this.activeService.quickAccess; }\n    pick(picks, options = {}, token = CancellationToken.None) {\n        return this.activeService /* TS fail */.pick(picks, options, token);\n    }\n    createQuickPick() {\n        return this.activeService.createQuickPick();\n    }\n};\nStandaloneQuickInputService = __decorate([\n    __param(0, IInstantiationService),\n    __param(1, ICodeEditorService)\n], StandaloneQuickInputService);\nexport { StandaloneQuickInputService };\nexport class QuickInputEditorContribution {\n    constructor(editor) {\n        this.editor = editor;\n        this.widget = new QuickInputEditorWidget(this.editor);\n    }\n    static get(editor) {\n        return editor.getContribution(QuickInputEditorContribution.ID);\n    }\n    dispose() {\n        this.widget.dispose();\n    }\n}\nQuickInputEditorContribution.ID = 'editor.controller.quickInput';\nexport class QuickInputEditorWidget {\n    constructor(codeEditor) {\n        this.codeEditor = codeEditor;\n        this.domNode = document.createElement('div');\n        this.codeEditor.addOverlayWidget(this);\n    }\n    getId() {\n        return QuickInputEditorWidget.ID;\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    getPosition() {\n        return { preference: 2 /* TOP_CENTER */ };\n    }\n    dispose() {\n        this.codeEditor.removeOverlayWidget(this);\n    }\n}\nQuickInputEditorWidget.ID = 'editor.contrib.quickInputWidget';\nregisterEditorContribution(QuickInputEditorContribution.ID, QuickInputEditorContribution);\n"]},"metadata":{},"sourceType":"module"}