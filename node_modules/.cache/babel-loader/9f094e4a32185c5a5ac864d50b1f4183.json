{"ast":null,"code":"/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n// src/basic-languages/perl/perl.ts\nvar conf = {\n  comments: {\n    lineComment: \"#\"\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: \"`\",\n    close: \"`\"\n  }],\n  surroundingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: \"`\",\n    close: \"`\"\n  }]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".perl\",\n  brackets: [{\n    token: \"delimiter.bracket\",\n    open: \"{\",\n    close: \"}\"\n  }, {\n    token: \"delimiter.parenthesis\",\n    open: \"(\",\n    close: \")\"\n  }, {\n    token: \"delimiter.square\",\n    open: \"[\",\n    close: \"]\"\n  }],\n  keywords: [\"__DATA__\", \"else\", \"lock\", \"__END__\", \"elsif\", \"lt\", \"__FILE__\", \"eq\", \"__LINE__\", \"exp\", \"ne\", \"sub\", \"__PACKAGE__\", \"for\", \"no\", \"and\", \"foreach\", \"or\", \"unless\", \"cmp\", \"ge\", \"package\", \"until\", \"continue\", \"gt\", \"while\", \"CORE\", \"if\", \"xor\", \"do\", \"le\", \"__DIE__\", \"__WARN__\"],\n  builtinFunctions: [\"-A\", \"END\", \"length\", \"setpgrp\", \"-B\", \"endgrent\", \"link\", \"setpriority\", \"-b\", \"endhostent\", \"listen\", \"setprotoent\", \"-C\", \"endnetent\", \"local\", \"setpwent\", \"-c\", \"endprotoent\", \"localtime\", \"setservent\", \"-d\", \"endpwent\", \"log\", \"setsockopt\", \"-e\", \"endservent\", \"lstat\", \"shift\", \"-f\", \"eof\", \"map\", \"shmctl\", \"-g\", \"eval\", \"mkdir\", \"shmget\", \"-k\", \"exec\", \"msgctl\", \"shmread\", \"-l\", \"exists\", \"msgget\", \"shmwrite\", \"-M\", \"exit\", \"msgrcv\", \"shutdown\", \"-O\", \"fcntl\", \"msgsnd\", \"sin\", \"-o\", \"fileno\", \"my\", \"sleep\", \"-p\", \"flock\", \"next\", \"socket\", \"-r\", \"fork\", \"not\", \"socketpair\", \"-R\", \"format\", \"oct\", \"sort\", \"-S\", \"formline\", \"open\", \"splice\", \"-s\", \"getc\", \"opendir\", \"split\", \"-T\", \"getgrent\", \"ord\", \"sprintf\", \"-t\", \"getgrgid\", \"our\", \"sqrt\", \"-u\", \"getgrnam\", \"pack\", \"srand\", \"-w\", \"gethostbyaddr\", \"pipe\", \"stat\", \"-W\", \"gethostbyname\", \"pop\", \"state\", \"-X\", \"gethostent\", \"pos\", \"study\", \"-x\", \"getlogin\", \"print\", \"substr\", \"-z\", \"getnetbyaddr\", \"printf\", \"symlink\", \"abs\", \"getnetbyname\", \"prototype\", \"syscall\", \"accept\", \"getnetent\", \"push\", \"sysopen\", \"alarm\", \"getpeername\", \"quotemeta\", \"sysread\", \"atan2\", \"getpgrp\", \"rand\", \"sysseek\", \"AUTOLOAD\", \"getppid\", \"read\", \"system\", \"BEGIN\", \"getpriority\", \"readdir\", \"syswrite\", \"bind\", \"getprotobyname\", \"readline\", \"tell\", \"binmode\", \"getprotobynumber\", \"readlink\", \"telldir\", \"bless\", \"getprotoent\", \"readpipe\", \"tie\", \"break\", \"getpwent\", \"recv\", \"tied\", \"caller\", \"getpwnam\", \"redo\", \"time\", \"chdir\", \"getpwuid\", \"ref\", \"times\", \"CHECK\", \"getservbyname\", \"rename\", \"truncate\", \"chmod\", \"getservbyport\", \"require\", \"uc\", \"chomp\", \"getservent\", \"reset\", \"ucfirst\", \"chop\", \"getsockname\", \"return\", \"umask\", \"chown\", \"getsockopt\", \"reverse\", \"undef\", \"chr\", \"glob\", \"rewinddir\", \"UNITCHECK\", \"chroot\", \"gmtime\", \"rindex\", \"unlink\", \"close\", \"goto\", \"rmdir\", \"unpack\", \"closedir\", \"grep\", \"say\", \"unshift\", \"connect\", \"hex\", \"scalar\", \"untie\", \"cos\", \"index\", \"seek\", \"use\", \"crypt\", \"INIT\", \"seekdir\", \"utime\", \"dbmclose\", \"int\", \"select\", \"values\", \"dbmopen\", \"ioctl\", \"semctl\", \"vec\", \"defined\", \"join\", \"semget\", \"wait\", \"delete\", \"keys\", \"semop\", \"waitpid\", \"DESTROY\", \"kill\", \"send\", \"wantarray\", \"die\", \"last\", \"setgrent\", \"warn\", \"dump\", \"lc\", \"sethostent\", \"write\", \"each\", \"lcfirst\", \"setnetent\"],\n  builtinFileHandlers: [\"ARGV\", \"STDERR\", \"STDOUT\", \"ARGVOUT\", \"STDIN\", \"ENV\"],\n  builtinVariables: [\"$!\", \"$^RE_TRIE_MAXBUF\", \"$LAST_REGEXP_CODE_RESULT\", '$\"', \"$^S\", \"$LIST_SEPARATOR\", \"$#\", \"$^T\", \"$MATCH\", \"$$\", \"$^TAINT\", \"$MULTILINE_MATCHING\", \"$%\", \"$^UNICODE\", \"$NR\", \"$&\", \"$^UTF8LOCALE\", \"$OFMT\", \"$'\", \"$^V\", \"$OFS\", \"$(\", \"$^W\", \"$ORS\", \"$)\", \"$^WARNING_BITS\", \"$OS_ERROR\", \"$*\", \"$^WIDE_SYSTEM_CALLS\", \"$OSNAME\", \"$+\", \"$^X\", \"$OUTPUT_AUTO_FLUSH\", \"$,\", \"$_\", \"$OUTPUT_FIELD_SEPARATOR\", \"$-\", \"$`\", \"$OUTPUT_RECORD_SEPARATOR\", \"$.\", \"$a\", \"$PERL_VERSION\", \"$/\", \"$ACCUMULATOR\", \"$PERLDB\", \"$0\", \"$ARG\", \"$PID\", \"$:\", \"$ARGV\", \"$POSTMATCH\", \"$;\", \"$b\", \"$PREMATCH\", \"$<\", \"$BASETIME\", \"$PROCESS_ID\", \"$=\", \"$CHILD_ERROR\", \"$PROGRAM_NAME\", \"$>\", \"$COMPILING\", \"$REAL_GROUP_ID\", \"$?\", \"$DEBUGGING\", \"$REAL_USER_ID\", \"$@\", \"$EFFECTIVE_GROUP_ID\", \"$RS\", \"$[\", \"$EFFECTIVE_USER_ID\", \"$SUBSCRIPT_SEPARATOR\", \"$\\\\\", \"$EGID\", \"$SUBSEP\", \"$]\", \"$ERRNO\", \"$SYSTEM_FD_MAX\", \"$^\", \"$EUID\", \"$UID\", \"$^A\", \"$EVAL_ERROR\", \"$WARNING\", \"$^C\", \"$EXCEPTIONS_BEING_CAUGHT\", \"$|\", \"$^CHILD_ERROR_NATIVE\", \"$EXECUTABLE_NAME\", \"$~\", \"$^D\", \"$EXTENDED_OS_ERROR\", \"%!\", \"$^E\", \"$FORMAT_FORMFEED\", \"%^H\", \"$^ENCODING\", \"$FORMAT_LINE_BREAK_CHARACTERS\", \"%ENV\", \"$^F\", \"$FORMAT_LINES_LEFT\", \"%INC\", \"$^H\", \"$FORMAT_LINES_PER_PAGE\", \"%OVERLOAD\", \"$^I\", \"$FORMAT_NAME\", \"%SIG\", \"$^L\", \"$FORMAT_PAGE_NUMBER\", \"@+\", \"$^M\", \"$FORMAT_TOP_NAME\", \"@-\", \"$^N\", \"$GID\", \"@_\", \"$^O\", \"$INPLACE_EDIT\", \"@ARGV\", \"$^OPEN\", \"$INPUT_LINE_NUMBER\", \"@INC\", \"$^P\", \"$INPUT_RECORD_SEPARATOR\", \"@LAST_MATCH_START\", \"$^R\", \"$LAST_MATCH_END\", \"$^RE_DEBUG_FLAGS\", \"$LAST_PAREN_MATCH\"],\n  symbols: /[:+\\-\\^*$&%@=<>!?|\\/~\\.]/,\n  quoteLikeOps: [\"qr\", \"m\", \"s\", \"q\", \"qq\", \"qx\", \"qw\", \"tr\", \"y\"],\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  tokenizer: {\n    root: [{\n      include: \"@whitespace\"\n    }, [/[a-zA-Z\\-_][\\w\\-_]*/, {\n      cases: {\n        \"@keywords\": \"keyword\",\n        \"@builtinFunctions\": \"type.identifier\",\n        \"@builtinFileHandlers\": \"variable.predefined\",\n        \"@quoteLikeOps\": {\n          token: \"@rematch\",\n          next: \"quotedConstructs\"\n        },\n        \"@default\": \"\"\n      }\n    }], [/[\\$@%][*@#?\\+\\-\\$!\\w\\\\\\^><~:;\\.]+/, {\n      cases: {\n        \"@builtinVariables\": \"variable.predefined\",\n        \"@default\": \"variable\"\n      }\n    }], {\n      include: \"@strings\"\n    }, {\n      include: \"@dblStrings\"\n    }, {\n      include: \"@perldoc\"\n    }, {\n      include: \"@heredoc\"\n    }, [/[{}\\[\\]()]/, \"@brackets\"], [/[\\/](?:(?:\\[(?:\\\\]|[^\\]])+\\])|(?:\\\\\\/|[^\\]\\/]))*[\\/]\\w*\\s*(?=[).,;]|$)/, \"regexp\"], [/@symbols/, \"operators\"], {\n      include: \"@numbers\"\n    }, [/[,;]/, \"delimiter\"]],\n    whitespace: [[/\\s+/, \"white\"], [/(^#!.*$)/, \"metatag\"], [/(^#.*$)/, \"comment\"]],\n    numbers: [[/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"], [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, \"number.hex\"], [/\\d+/, \"number\"]],\n    strings: [[/'/, \"string\", \"@stringBody\"]],\n    stringBody: [[/'/, \"string\", \"@popall\"], [/\\\\'/, \"string.escape\"], [/./, \"string\"]],\n    dblStrings: [[/\"/, \"string\", \"@dblStringBody\"]],\n    dblStringBody: [[/\"/, \"string\", \"@popall\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], {\n      include: \"@variables\"\n    }, [/./, \"string\"]],\n    quotedConstructs: [[/(q|qw|tr|y)\\s*\\(/, {\n      token: \"string.delim\",\n      switchTo: \"@qstring.(.)\"\n    }], [/(q|qw|tr|y)\\s*\\[/, {\n      token: \"string.delim\",\n      switchTo: \"@qstring.[.]\"\n    }], [/(q|qw|tr|y)\\s*\\{/, {\n      token: \"string.delim\",\n      switchTo: \"@qstring.{.}\"\n    }], [/(q|qw|tr|y)\\s*</, {\n      token: \"string.delim\",\n      switchTo: \"@qstring.<.>\"\n    }], [/(q|qw|tr|y)#/, {\n      token: \"string.delim\",\n      switchTo: \"@qstring.#.#\"\n    }], [/(q|qw|tr|y)\\s*([^A-Za-z0-9#\\s])/, {\n      token: \"string.delim\",\n      switchTo: \"@qstring.$2.$2\"\n    }], [/(q|qw|tr|y)\\s+(\\w)/, {\n      token: \"string.delim\",\n      switchTo: \"@qstring.$2.$2\"\n    }], [/(qr|m|s)\\s*\\(/, {\n      token: \"regexp.delim\",\n      switchTo: \"@qregexp.(.)\"\n    }], [/(qr|m|s)\\s*\\[/, {\n      token: \"regexp.delim\",\n      switchTo: \"@qregexp.[.]\"\n    }], [/(qr|m|s)\\s*\\{/, {\n      token: \"regexp.delim\",\n      switchTo: \"@qregexp.{.}\"\n    }], [/(qr|m|s)\\s*</, {\n      token: \"regexp.delim\",\n      switchTo: \"@qregexp.<.>\"\n    }], [/(qr|m|s)#/, {\n      token: \"regexp.delim\",\n      switchTo: \"@qregexp.#.#\"\n    }], [/(qr|m|s)\\s*([^A-Za-z0-9_#\\s])/, {\n      token: \"regexp.delim\",\n      switchTo: \"@qregexp.$2.$2\"\n    }], [/(qr|m|s)\\s+(\\w)/, {\n      token: \"regexp.delim\",\n      switchTo: \"@qregexp.$2.$2\"\n    }], [/(qq|qx)\\s*\\(/, {\n      token: \"string.delim\",\n      switchTo: \"@qqstring.(.)\"\n    }], [/(qq|qx)\\s*\\[/, {\n      token: \"string.delim\",\n      switchTo: \"@qqstring.[.]\"\n    }], [/(qq|qx)\\s*\\{/, {\n      token: \"string.delim\",\n      switchTo: \"@qqstring.{.}\"\n    }], [/(qq|qx)\\s*</, {\n      token: \"string.delim\",\n      switchTo: \"@qqstring.<.>\"\n    }], [/(qq|qx)#/, {\n      token: \"string.delim\",\n      switchTo: \"@qqstring.#.#\"\n    }], [/(qq|qx)\\s*([^A-Za-z0-9#\\s])/, {\n      token: \"string.delim\",\n      switchTo: \"@qqstring.$2.$2\"\n    }], [/(qq|qx)\\s+(\\w)/, {\n      token: \"string.delim\",\n      switchTo: \"@qqstring.$2.$2\"\n    }]],\n    qstring: [[/\\\\./, \"string.escape\"], [/./, {\n      cases: {\n        \"$#==$S3\": {\n          token: \"string.delim\",\n          next: \"@pop\"\n        },\n        \"$#==$S2\": {\n          token: \"string.delim\",\n          next: \"@push\"\n        },\n        \"@default\": \"string\"\n      }\n    }]],\n    qregexp: [{\n      include: \"@variables\"\n    }, [/\\\\./, \"regexp.escape\"], [/./, {\n      cases: {\n        \"$#==$S3\": {\n          token: \"regexp.delim\",\n          next: \"@regexpModifiers\"\n        },\n        \"$#==$S2\": {\n          token: \"regexp.delim\",\n          next: \"@push\"\n        },\n        \"@default\": \"regexp\"\n      }\n    }]],\n    regexpModifiers: [[/[msixpodualngcer]+/, {\n      token: \"regexp.modifier\",\n      next: \"@popall\"\n    }]],\n    qqstring: [{\n      include: \"@variables\"\n    }, {\n      include: \"@qstring\"\n    }],\n    heredoc: [[/<<\\s*['\"`]?([\\w\\-]+)['\"`]?/, {\n      token: \"string.heredoc.delimiter\",\n      next: \"@heredocBody.$1\"\n    }]],\n    heredocBody: [[/^([\\w\\-]+)$/, {\n      cases: {\n        \"$1==$S2\": [{\n          token: \"string.heredoc.delimiter\",\n          next: \"@popall\"\n        }],\n        \"@default\": \"string.heredoc\"\n      }\n    }], [/./, \"string.heredoc\"]],\n    perldoc: [[/^=\\w/, \"comment.doc\", \"@perldocBody\"]],\n    perldocBody: [[/^=cut\\b/, \"type.identifier\", \"@popall\"], [/./, \"comment.doc\"]],\n    variables: [[/\\$\\w+/, \"variable\"], [/@\\w+/, \"variable\"], [/%\\w+/, \"variable\"]]\n  }\n};\nexport { conf, language };","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/basic-languages/perl/perl.js"],"names":["conf","comments","lineComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","tokenPostfix","token","keywords","builtinFunctions","builtinFileHandlers","builtinVariables","symbols","quoteLikeOps","escapes","tokenizer","root","include","cases","next","whitespace","numbers","strings","stringBody","dblStrings","dblStringBody","quotedConstructs","switchTo","qstring","qregexp","regexpModifiers","qqstring","heredoc","heredocBody","perldoc","perldocBody","variables"],"mappings":"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","sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/perl/perl.ts\nvar conf = {\n  comments: {\n    lineComment: \"#\"\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" },\n    { open: \"`\", close: \"`\" }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" },\n    { open: \"`\", close: \"`\" }\n  ]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".perl\",\n  brackets: [\n    { token: \"delimiter.bracket\", open: \"{\", close: \"}\" },\n    { token: \"delimiter.parenthesis\", open: \"(\", close: \")\" },\n    { token: \"delimiter.square\", open: \"[\", close: \"]\" }\n  ],\n  keywords: [\n    \"__DATA__\",\n    \"else\",\n    \"lock\",\n    \"__END__\",\n    \"elsif\",\n    \"lt\",\n    \"__FILE__\",\n    \"eq\",\n    \"__LINE__\",\n    \"exp\",\n    \"ne\",\n    \"sub\",\n    \"__PACKAGE__\",\n    \"for\",\n    \"no\",\n    \"and\",\n    \"foreach\",\n    \"or\",\n    \"unless\",\n    \"cmp\",\n    \"ge\",\n    \"package\",\n    \"until\",\n    \"continue\",\n    \"gt\",\n    \"while\",\n    \"CORE\",\n    \"if\",\n    \"xor\",\n    \"do\",\n    \"le\",\n    \"__DIE__\",\n    \"__WARN__\"\n  ],\n  builtinFunctions: [\n    \"-A\",\n    \"END\",\n    \"length\",\n    \"setpgrp\",\n    \"-B\",\n    \"endgrent\",\n    \"link\",\n    \"setpriority\",\n    \"-b\",\n    \"endhostent\",\n    \"listen\",\n    \"setprotoent\",\n    \"-C\",\n    \"endnetent\",\n    \"local\",\n    \"setpwent\",\n    \"-c\",\n    \"endprotoent\",\n    \"localtime\",\n    \"setservent\",\n    \"-d\",\n    \"endpwent\",\n    \"log\",\n    \"setsockopt\",\n    \"-e\",\n    \"endservent\",\n    \"lstat\",\n    \"shift\",\n    \"-f\",\n    \"eof\",\n    \"map\",\n    \"shmctl\",\n    \"-g\",\n    \"eval\",\n    \"mkdir\",\n    \"shmget\",\n    \"-k\",\n    \"exec\",\n    \"msgctl\",\n    \"shmread\",\n    \"-l\",\n    \"exists\",\n    \"msgget\",\n    \"shmwrite\",\n    \"-M\",\n    \"exit\",\n    \"msgrcv\",\n    \"shutdown\",\n    \"-O\",\n    \"fcntl\",\n    \"msgsnd\",\n    \"sin\",\n    \"-o\",\n    \"fileno\",\n    \"my\",\n    \"sleep\",\n    \"-p\",\n    \"flock\",\n    \"next\",\n    \"socket\",\n    \"-r\",\n    \"fork\",\n    \"not\",\n    \"socketpair\",\n    \"-R\",\n    \"format\",\n    \"oct\",\n    \"sort\",\n    \"-S\",\n    \"formline\",\n    \"open\",\n    \"splice\",\n    \"-s\",\n    \"getc\",\n    \"opendir\",\n    \"split\",\n    \"-T\",\n    \"getgrent\",\n    \"ord\",\n    \"sprintf\",\n    \"-t\",\n    \"getgrgid\",\n    \"our\",\n    \"sqrt\",\n    \"-u\",\n    \"getgrnam\",\n    \"pack\",\n    \"srand\",\n    \"-w\",\n    \"gethostbyaddr\",\n    \"pipe\",\n    \"stat\",\n    \"-W\",\n    \"gethostbyname\",\n    \"pop\",\n    \"state\",\n    \"-X\",\n    \"gethostent\",\n    \"pos\",\n    \"study\",\n    \"-x\",\n    \"getlogin\",\n    \"print\",\n    \"substr\",\n    \"-z\",\n    \"getnetbyaddr\",\n    \"printf\",\n    \"symlink\",\n    \"abs\",\n    \"getnetbyname\",\n    \"prototype\",\n    \"syscall\",\n    \"accept\",\n    \"getnetent\",\n    \"push\",\n    \"sysopen\",\n    \"alarm\",\n    \"getpeername\",\n    \"quotemeta\",\n    \"sysread\",\n    \"atan2\",\n    \"getpgrp\",\n    \"rand\",\n    \"sysseek\",\n    \"AUTOLOAD\",\n    \"getppid\",\n    \"read\",\n    \"system\",\n    \"BEGIN\",\n    \"getpriority\",\n    \"readdir\",\n    \"syswrite\",\n    \"bind\",\n    \"getprotobyname\",\n    \"readline\",\n    \"tell\",\n    \"binmode\",\n    \"getprotobynumber\",\n    \"readlink\",\n    \"telldir\",\n    \"bless\",\n    \"getprotoent\",\n    \"readpipe\",\n    \"tie\",\n    \"break\",\n    \"getpwent\",\n    \"recv\",\n    \"tied\",\n    \"caller\",\n    \"getpwnam\",\n    \"redo\",\n    \"time\",\n    \"chdir\",\n    \"getpwuid\",\n    \"ref\",\n    \"times\",\n    \"CHECK\",\n    \"getservbyname\",\n    \"rename\",\n    \"truncate\",\n    \"chmod\",\n    \"getservbyport\",\n    \"require\",\n    \"uc\",\n    \"chomp\",\n    \"getservent\",\n    \"reset\",\n    \"ucfirst\",\n    \"chop\",\n    \"getsockname\",\n    \"return\",\n    \"umask\",\n    \"chown\",\n    \"getsockopt\",\n    \"reverse\",\n    \"undef\",\n    \"chr\",\n    \"glob\",\n    \"rewinddir\",\n    \"UNITCHECK\",\n    \"chroot\",\n    \"gmtime\",\n    \"rindex\",\n    \"unlink\",\n    \"close\",\n    \"goto\",\n    \"rmdir\",\n    \"unpack\",\n    \"closedir\",\n    \"grep\",\n    \"say\",\n    \"unshift\",\n    \"connect\",\n    \"hex\",\n    \"scalar\",\n    \"untie\",\n    \"cos\",\n    \"index\",\n    \"seek\",\n    \"use\",\n    \"crypt\",\n    \"INIT\",\n    \"seekdir\",\n    \"utime\",\n    \"dbmclose\",\n    \"int\",\n    \"select\",\n    \"values\",\n    \"dbmopen\",\n    \"ioctl\",\n    \"semctl\",\n    \"vec\",\n    \"defined\",\n    \"join\",\n    \"semget\",\n    \"wait\",\n    \"delete\",\n    \"keys\",\n    \"semop\",\n    \"waitpid\",\n    \"DESTROY\",\n    \"kill\",\n    \"send\",\n    \"wantarray\",\n    \"die\",\n    \"last\",\n    \"setgrent\",\n    \"warn\",\n    \"dump\",\n    \"lc\",\n    \"sethostent\",\n    \"write\",\n    \"each\",\n    \"lcfirst\",\n    \"setnetent\"\n  ],\n  builtinFileHandlers: [\"ARGV\", \"STDERR\", \"STDOUT\", \"ARGVOUT\", \"STDIN\", \"ENV\"],\n  builtinVariables: [\n    \"$!\",\n    \"$^RE_TRIE_MAXBUF\",\n    \"$LAST_REGEXP_CODE_RESULT\",\n    '$\"',\n    \"$^S\",\n    \"$LIST_SEPARATOR\",\n    \"$#\",\n    \"$^T\",\n    \"$MATCH\",\n    \"$$\",\n    \"$^TAINT\",\n    \"$MULTILINE_MATCHING\",\n    \"$%\",\n    \"$^UNICODE\",\n    \"$NR\",\n    \"$&\",\n    \"$^UTF8LOCALE\",\n    \"$OFMT\",\n    \"$'\",\n    \"$^V\",\n    \"$OFS\",\n    \"$(\",\n    \"$^W\",\n    \"$ORS\",\n    \"$)\",\n    \"$^WARNING_BITS\",\n    \"$OS_ERROR\",\n    \"$*\",\n    \"$^WIDE_SYSTEM_CALLS\",\n    \"$OSNAME\",\n    \"$+\",\n    \"$^X\",\n    \"$OUTPUT_AUTO_FLUSH\",\n    \"$,\",\n    \"$_\",\n    \"$OUTPUT_FIELD_SEPARATOR\",\n    \"$-\",\n    \"$`\",\n    \"$OUTPUT_RECORD_SEPARATOR\",\n    \"$.\",\n    \"$a\",\n    \"$PERL_VERSION\",\n    \"$/\",\n    \"$ACCUMULATOR\",\n    \"$PERLDB\",\n    \"$0\",\n    \"$ARG\",\n    \"$PID\",\n    \"$:\",\n    \"$ARGV\",\n    \"$POSTMATCH\",\n    \"$;\",\n    \"$b\",\n    \"$PREMATCH\",\n    \"$<\",\n    \"$BASETIME\",\n    \"$PROCESS_ID\",\n    \"$=\",\n    \"$CHILD_ERROR\",\n    \"$PROGRAM_NAME\",\n    \"$>\",\n    \"$COMPILING\",\n    \"$REAL_GROUP_ID\",\n    \"$?\",\n    \"$DEBUGGING\",\n    \"$REAL_USER_ID\",\n    \"$@\",\n    \"$EFFECTIVE_GROUP_ID\",\n    \"$RS\",\n    \"$[\",\n    \"$EFFECTIVE_USER_ID\",\n    \"$SUBSCRIPT_SEPARATOR\",\n    \"$\\\\\",\n    \"$EGID\",\n    \"$SUBSEP\",\n    \"$]\",\n    \"$ERRNO\",\n    \"$SYSTEM_FD_MAX\",\n    \"$^\",\n    \"$EUID\",\n    \"$UID\",\n    \"$^A\",\n    \"$EVAL_ERROR\",\n    \"$WARNING\",\n    \"$^C\",\n    \"$EXCEPTIONS_BEING_CAUGHT\",\n    \"$|\",\n    \"$^CHILD_ERROR_NATIVE\",\n    \"$EXECUTABLE_NAME\",\n    \"$~\",\n    \"$^D\",\n    \"$EXTENDED_OS_ERROR\",\n    \"%!\",\n    \"$^E\",\n    \"$FORMAT_FORMFEED\",\n    \"%^H\",\n    \"$^ENCODING\",\n    \"$FORMAT_LINE_BREAK_CHARACTERS\",\n    \"%ENV\",\n    \"$^F\",\n    \"$FORMAT_LINES_LEFT\",\n    \"%INC\",\n    \"$^H\",\n    \"$FORMAT_LINES_PER_PAGE\",\n    \"%OVERLOAD\",\n    \"$^I\",\n    \"$FORMAT_NAME\",\n    \"%SIG\",\n    \"$^L\",\n    \"$FORMAT_PAGE_NUMBER\",\n    \"@+\",\n    \"$^M\",\n    \"$FORMAT_TOP_NAME\",\n    \"@-\",\n    \"$^N\",\n    \"$GID\",\n    \"@_\",\n    \"$^O\",\n    \"$INPLACE_EDIT\",\n    \"@ARGV\",\n    \"$^OPEN\",\n    \"$INPUT_LINE_NUMBER\",\n    \"@INC\",\n    \"$^P\",\n    \"$INPUT_RECORD_SEPARATOR\",\n    \"@LAST_MATCH_START\",\n    \"$^R\",\n    \"$LAST_MATCH_END\",\n    \"$^RE_DEBUG_FLAGS\",\n    \"$LAST_PAREN_MATCH\"\n  ],\n  symbols: /[:+\\-\\^*$&%@=<>!?|\\/~\\.]/,\n  quoteLikeOps: [\"qr\", \"m\", \"s\", \"q\", \"qq\", \"qx\", \"qw\", \"tr\", \"y\"],\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  tokenizer: {\n    root: [\n      { include: \"@whitespace\" },\n      [\n        /[a-zA-Z\\-_][\\w\\-_]*/,\n        {\n          cases: {\n            \"@keywords\": \"keyword\",\n            \"@builtinFunctions\": \"type.identifier\",\n            \"@builtinFileHandlers\": \"variable.predefined\",\n            \"@quoteLikeOps\": {\n              token: \"@rematch\",\n              next: \"quotedConstructs\"\n            },\n            \"@default\": \"\"\n          }\n        }\n      ],\n      [\n        /[\\$@%][*@#?\\+\\-\\$!\\w\\\\\\^><~:;\\.]+/,\n        {\n          cases: {\n            \"@builtinVariables\": \"variable.predefined\",\n            \"@default\": \"variable\"\n          }\n        }\n      ],\n      { include: \"@strings\" },\n      { include: \"@dblStrings\" },\n      { include: \"@perldoc\" },\n      { include: \"@heredoc\" },\n      [/[{}\\[\\]()]/, \"@brackets\"],\n      [/[\\/](?:(?:\\[(?:\\\\]|[^\\]])+\\])|(?:\\\\\\/|[^\\]\\/]))*[\\/]\\w*\\s*(?=[).,;]|$)/, \"regexp\"],\n      [/@symbols/, \"operators\"],\n      { include: \"@numbers\" },\n      [/[,;]/, \"delimiter\"]\n    ],\n    whitespace: [\n      [/\\s+/, \"white\"],\n      [/(^#!.*$)/, \"metatag\"],\n      [/(^#.*$)/, \"comment\"]\n    ],\n    numbers: [\n      [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"],\n      [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, \"number.hex\"],\n      [/\\d+/, \"number\"]\n    ],\n    strings: [[/'/, \"string\", \"@stringBody\"]],\n    stringBody: [\n      [/'/, \"string\", \"@popall\"],\n      [/\\\\'/, \"string.escape\"],\n      [/./, \"string\"]\n    ],\n    dblStrings: [[/\"/, \"string\", \"@dblStringBody\"]],\n    dblStringBody: [\n      [/\"/, \"string\", \"@popall\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      { include: \"@variables\" },\n      [/./, \"string\"]\n    ],\n    quotedConstructs: [\n      [/(q|qw|tr|y)\\s*\\(/, { token: \"string.delim\", switchTo: \"@qstring.(.)\" }],\n      [/(q|qw|tr|y)\\s*\\[/, { token: \"string.delim\", switchTo: \"@qstring.[.]\" }],\n      [/(q|qw|tr|y)\\s*\\{/, { token: \"string.delim\", switchTo: \"@qstring.{.}\" }],\n      [/(q|qw|tr|y)\\s*</, { token: \"string.delim\", switchTo: \"@qstring.<.>\" }],\n      [/(q|qw|tr|y)#/, { token: \"string.delim\", switchTo: \"@qstring.#.#\" }],\n      [/(q|qw|tr|y)\\s*([^A-Za-z0-9#\\s])/, { token: \"string.delim\", switchTo: \"@qstring.$2.$2\" }],\n      [/(q|qw|tr|y)\\s+(\\w)/, { token: \"string.delim\", switchTo: \"@qstring.$2.$2\" }],\n      [/(qr|m|s)\\s*\\(/, { token: \"regexp.delim\", switchTo: \"@qregexp.(.)\" }],\n      [/(qr|m|s)\\s*\\[/, { token: \"regexp.delim\", switchTo: \"@qregexp.[.]\" }],\n      [/(qr|m|s)\\s*\\{/, { token: \"regexp.delim\", switchTo: \"@qregexp.{.}\" }],\n      [/(qr|m|s)\\s*</, { token: \"regexp.delim\", switchTo: \"@qregexp.<.>\" }],\n      [/(qr|m|s)#/, { token: \"regexp.delim\", switchTo: \"@qregexp.#.#\" }],\n      [/(qr|m|s)\\s*([^A-Za-z0-9_#\\s])/, { token: \"regexp.delim\", switchTo: \"@qregexp.$2.$2\" }],\n      [/(qr|m|s)\\s+(\\w)/, { token: \"regexp.delim\", switchTo: \"@qregexp.$2.$2\" }],\n      [/(qq|qx)\\s*\\(/, { token: \"string.delim\", switchTo: \"@qqstring.(.)\" }],\n      [/(qq|qx)\\s*\\[/, { token: \"string.delim\", switchTo: \"@qqstring.[.]\" }],\n      [/(qq|qx)\\s*\\{/, { token: \"string.delim\", switchTo: \"@qqstring.{.}\" }],\n      [/(qq|qx)\\s*</, { token: \"string.delim\", switchTo: \"@qqstring.<.>\" }],\n      [/(qq|qx)#/, { token: \"string.delim\", switchTo: \"@qqstring.#.#\" }],\n      [/(qq|qx)\\s*([^A-Za-z0-9#\\s])/, { token: \"string.delim\", switchTo: \"@qqstring.$2.$2\" }],\n      [/(qq|qx)\\s+(\\w)/, { token: \"string.delim\", switchTo: \"@qqstring.$2.$2\" }]\n    ],\n    qstring: [\n      [/\\\\./, \"string.escape\"],\n      [\n        /./,\n        {\n          cases: {\n            \"$#==$S3\": { token: \"string.delim\", next: \"@pop\" },\n            \"$#==$S2\": { token: \"string.delim\", next: \"@push\" },\n            \"@default\": \"string\"\n          }\n        }\n      ]\n    ],\n    qregexp: [\n      { include: \"@variables\" },\n      [/\\\\./, \"regexp.escape\"],\n      [\n        /./,\n        {\n          cases: {\n            \"$#==$S3\": {\n              token: \"regexp.delim\",\n              next: \"@regexpModifiers\"\n            },\n            \"$#==$S2\": { token: \"regexp.delim\", next: \"@push\" },\n            \"@default\": \"regexp\"\n          }\n        }\n      ]\n    ],\n    regexpModifiers: [[/[msixpodualngcer]+/, { token: \"regexp.modifier\", next: \"@popall\" }]],\n    qqstring: [{ include: \"@variables\" }, { include: \"@qstring\" }],\n    heredoc: [\n      [/<<\\s*['\"`]?([\\w\\-]+)['\"`]?/, { token: \"string.heredoc.delimiter\", next: \"@heredocBody.$1\" }]\n    ],\n    heredocBody: [\n      [\n        /^([\\w\\-]+)$/,\n        {\n          cases: {\n            \"$1==$S2\": [\n              {\n                token: \"string.heredoc.delimiter\",\n                next: \"@popall\"\n              }\n            ],\n            \"@default\": \"string.heredoc\"\n          }\n        }\n      ],\n      [/./, \"string.heredoc\"]\n    ],\n    perldoc: [[/^=\\w/, \"comment.doc\", \"@perldocBody\"]],\n    perldocBody: [\n      [/^=cut\\b/, \"type.identifier\", \"@popall\"],\n      [/./, \"comment.doc\"]\n    ],\n    variables: [\n      [/\\$\\w+/, \"variable\"],\n      [/@\\w+/, \"variable\"],\n      [/%\\w+/, \"variable\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"]},"metadata":{},"sourceType":"module"}