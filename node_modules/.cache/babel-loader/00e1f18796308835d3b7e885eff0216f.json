{"ast":null,"code":"/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n// src/basic-languages/shell/shell.ts\nvar conf = {\n  comments: {\n    lineComment: \"#\"\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: \"`\",\n    close: \"`\"\n  }],\n  surroundingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: \"`\",\n    close: \"`\"\n  }]\n};\nvar language = {\n  defaultToken: \"\",\n  ignoreCase: true,\n  tokenPostfix: \".shell\",\n  brackets: [{\n    token: \"delimiter.bracket\",\n    open: \"{\",\n    close: \"}\"\n  }, {\n    token: \"delimiter.parenthesis\",\n    open: \"(\",\n    close: \")\"\n  }, {\n    token: \"delimiter.square\",\n    open: \"[\",\n    close: \"]\"\n  }],\n  keywords: [\"if\", \"then\", \"do\", \"else\", \"elif\", \"while\", \"until\", \"for\", \"in\", \"esac\", \"fi\", \"fin\", \"fil\", \"done\", \"exit\", \"set\", \"unset\", \"export\", \"function\"],\n  builtins: [\"ab\", \"awk\", \"bash\", \"beep\", \"cat\", \"cc\", \"cd\", \"chown\", \"chmod\", \"chroot\", \"clear\", \"cp\", \"curl\", \"cut\", \"diff\", \"echo\", \"find\", \"gawk\", \"gcc\", \"get\", \"git\", \"grep\", \"hg\", \"kill\", \"killall\", \"ln\", \"ls\", \"make\", \"mkdir\", \"openssl\", \"mv\", \"nc\", \"node\", \"npm\", \"ping\", \"ps\", \"restart\", \"rm\", \"rmdir\", \"sed\", \"service\", \"sh\", \"shopt\", \"shred\", \"source\", \"sort\", \"sleep\", \"ssh\", \"start\", \"stop\", \"su\", \"sudo\", \"svn\", \"tee\", \"telnet\", \"top\", \"touch\", \"vi\", \"vim\", \"wall\", \"wc\", \"wget\", \"who\", \"write\", \"yes\", \"zsh\"],\n  startingWithDash: /\\-+\\w+/,\n  identifiersWithDashes: /[a-zA-Z]\\w+(?:@startingWithDash)+/,\n  symbols: /[=><!~?&|+\\-*\\/\\^;\\.,]+/,\n  tokenizer: {\n    root: [[/@identifiersWithDashes/, \"\"], [/(\\s)((?:@startingWithDash)+)/, [\"white\", \"attribute.name\"]], [/[a-zA-Z]\\w*/, {\n      cases: {\n        \"@keywords\": \"keyword\",\n        \"@builtins\": \"type.identifier\",\n        \"@default\": \"\"\n      }\n    }], {\n      include: \"@whitespace\"\n    }, {\n      include: \"@strings\"\n    }, {\n      include: \"@parameters\"\n    }, {\n      include: \"@heredoc\"\n    }, [/[{}\\[\\]()]/, \"@brackets\"], [/@symbols/, \"delimiter\"], {\n      include: \"@numbers\"\n    }, [/[,;]/, \"delimiter\"]],\n    whitespace: [[/\\s+/, \"white\"], [/(^#!.*$)/, \"metatag\"], [/(^#.*$)/, \"comment\"]],\n    numbers: [[/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"], [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, \"number.hex\"], [/\\d+/, \"number\"]],\n    strings: [[/'/, \"string\", \"@stringBody\"], [/\"/, \"string\", \"@dblStringBody\"]],\n    stringBody: [[/'/, \"string\", \"@popall\"], [/./, \"string\"]],\n    dblStringBody: [[/\"/, \"string\", \"@popall\"], [/./, \"string\"]],\n    heredoc: [[/(<<[-<]?)(\\s*)(['\"`]?)([\\w\\-]+)(['\"`]?)/, [\"constants\", \"white\", \"string.heredoc.delimiter\", \"string.heredoc\", \"string.heredoc.delimiter\"]]],\n    parameters: [[/\\$\\d+/, \"variable.predefined\"], [/\\$\\w+/, \"variable\"], [/\\$[*@#?\\-$!0_]/, \"variable\"], [/\\$'/, \"variable\", \"@parameterBodyQuote\"], [/\\$\"/, \"variable\", \"@parameterBodyDoubleQuote\"], [/\\$\\(/, \"variable\", \"@parameterBodyParen\"], [/\\$\\{/, \"variable\", \"@parameterBodyCurlyBrace\"]],\n    parameterBodyQuote: [[/[^#:%*@\\-!_']+/, \"variable\"], [/[#:%*@\\-!_]/, \"delimiter\"], [/[']/, \"variable\", \"@pop\"]],\n    parameterBodyDoubleQuote: [[/[^#:%*@\\-!_\"]+/, \"variable\"], [/[#:%*@\\-!_]/, \"delimiter\"], [/[\"]/, \"variable\", \"@pop\"]],\n    parameterBodyParen: [[/[^#:%*@\\-!_)]+/, \"variable\"], [/[#:%*@\\-!_]/, \"delimiter\"], [/[)]/, \"variable\", \"@pop\"]],\n    parameterBodyCurlyBrace: [[/[^#:%*@\\-!_}]+/, \"variable\"], [/[#:%*@\\-!_]/, \"delimiter\"], [/[}]/, \"variable\", \"@pop\"]]\n  }\n};\nexport { conf, language };","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/basic-languages/shell/shell.js"],"names":["conf","comments","lineComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","ignoreCase","tokenPostfix","token","keywords","builtins","startingWithDash","identifiersWithDashes","symbols","tokenizer","root","cases","include","whitespace","numbers","strings","stringBody","dblStringBody","heredoc","parameters","parameterBodyQuote","parameterBodyDoubleQuote","parameterBodyParen","parameterBodyCurlyBrace"],"mappings":"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","sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/shell/shell.ts\nvar conf = {\n  comments: {\n    lineComment: \"#\"\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" },\n    { open: \"`\", close: \"`\" }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" },\n    { open: \"`\", close: \"`\" }\n  ]\n};\nvar language = {\n  defaultToken: \"\",\n  ignoreCase: true,\n  tokenPostfix: \".shell\",\n  brackets: [\n    { token: \"delimiter.bracket\", open: \"{\", close: \"}\" },\n    { token: \"delimiter.parenthesis\", open: \"(\", close: \")\" },\n    { token: \"delimiter.square\", open: \"[\", close: \"]\" }\n  ],\n  keywords: [\n    \"if\",\n    \"then\",\n    \"do\",\n    \"else\",\n    \"elif\",\n    \"while\",\n    \"until\",\n    \"for\",\n    \"in\",\n    \"esac\",\n    \"fi\",\n    \"fin\",\n    \"fil\",\n    \"done\",\n    \"exit\",\n    \"set\",\n    \"unset\",\n    \"export\",\n    \"function\"\n  ],\n  builtins: [\n    \"ab\",\n    \"awk\",\n    \"bash\",\n    \"beep\",\n    \"cat\",\n    \"cc\",\n    \"cd\",\n    \"chown\",\n    \"chmod\",\n    \"chroot\",\n    \"clear\",\n    \"cp\",\n    \"curl\",\n    \"cut\",\n    \"diff\",\n    \"echo\",\n    \"find\",\n    \"gawk\",\n    \"gcc\",\n    \"get\",\n    \"git\",\n    \"grep\",\n    \"hg\",\n    \"kill\",\n    \"killall\",\n    \"ln\",\n    \"ls\",\n    \"make\",\n    \"mkdir\",\n    \"openssl\",\n    \"mv\",\n    \"nc\",\n    \"node\",\n    \"npm\",\n    \"ping\",\n    \"ps\",\n    \"restart\",\n    \"rm\",\n    \"rmdir\",\n    \"sed\",\n    \"service\",\n    \"sh\",\n    \"shopt\",\n    \"shred\",\n    \"source\",\n    \"sort\",\n    \"sleep\",\n    \"ssh\",\n    \"start\",\n    \"stop\",\n    \"su\",\n    \"sudo\",\n    \"svn\",\n    \"tee\",\n    \"telnet\",\n    \"top\",\n    \"touch\",\n    \"vi\",\n    \"vim\",\n    \"wall\",\n    \"wc\",\n    \"wget\",\n    \"who\",\n    \"write\",\n    \"yes\",\n    \"zsh\"\n  ],\n  startingWithDash: /\\-+\\w+/,\n  identifiersWithDashes: /[a-zA-Z]\\w+(?:@startingWithDash)+/,\n  symbols: /[=><!~?&|+\\-*\\/\\^;\\.,]+/,\n  tokenizer: {\n    root: [\n      [/@identifiersWithDashes/, \"\"],\n      [/(\\s)((?:@startingWithDash)+)/, [\"white\", \"attribute.name\"]],\n      [\n        /[a-zA-Z]\\w*/,\n        {\n          cases: {\n            \"@keywords\": \"keyword\",\n            \"@builtins\": \"type.identifier\",\n            \"@default\": \"\"\n          }\n        }\n      ],\n      { include: \"@whitespace\" },\n      { include: \"@strings\" },\n      { include: \"@parameters\" },\n      { include: \"@heredoc\" },\n      [/[{}\\[\\]()]/, \"@brackets\"],\n      [/@symbols/, \"delimiter\"],\n      { include: \"@numbers\" },\n      [/[,;]/, \"delimiter\"]\n    ],\n    whitespace: [\n      [/\\s+/, \"white\"],\n      [/(^#!.*$)/, \"metatag\"],\n      [/(^#.*$)/, \"comment\"]\n    ],\n    numbers: [\n      [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"],\n      [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, \"number.hex\"],\n      [/\\d+/, \"number\"]\n    ],\n    strings: [\n      [/'/, \"string\", \"@stringBody\"],\n      [/\"/, \"string\", \"@dblStringBody\"]\n    ],\n    stringBody: [\n      [/'/, \"string\", \"@popall\"],\n      [/./, \"string\"]\n    ],\n    dblStringBody: [\n      [/\"/, \"string\", \"@popall\"],\n      [/./, \"string\"]\n    ],\n    heredoc: [\n      [\n        /(<<[-<]?)(\\s*)(['\"`]?)([\\w\\-]+)(['\"`]?)/,\n        [\n          \"constants\",\n          \"white\",\n          \"string.heredoc.delimiter\",\n          \"string.heredoc\",\n          \"string.heredoc.delimiter\"\n        ]\n      ]\n    ],\n    parameters: [\n      [/\\$\\d+/, \"variable.predefined\"],\n      [/\\$\\w+/, \"variable\"],\n      [/\\$[*@#?\\-$!0_]/, \"variable\"],\n      [/\\$'/, \"variable\", \"@parameterBodyQuote\"],\n      [/\\$\"/, \"variable\", \"@parameterBodyDoubleQuote\"],\n      [/\\$\\(/, \"variable\", \"@parameterBodyParen\"],\n      [/\\$\\{/, \"variable\", \"@parameterBodyCurlyBrace\"]\n    ],\n    parameterBodyQuote: [\n      [/[^#:%*@\\-!_']+/, \"variable\"],\n      [/[#:%*@\\-!_]/, \"delimiter\"],\n      [/[']/, \"variable\", \"@pop\"]\n    ],\n    parameterBodyDoubleQuote: [\n      [/[^#:%*@\\-!_\"]+/, \"variable\"],\n      [/[#:%*@\\-!_]/, \"delimiter\"],\n      [/[\"]/, \"variable\", \"@pop\"]\n    ],\n    parameterBodyParen: [\n      [/[^#:%*@\\-!_)]+/, \"variable\"],\n      [/[#:%*@\\-!_]/, \"delimiter\"],\n      [/[)]/, \"variable\", \"@pop\"]\n    ],\n    parameterBodyCurlyBrace: [\n      [/[^#:%*@\\-!_}]+/, \"variable\"],\n      [/[#:%*@\\-!_]/, \"delimiter\"],\n      [/[}]/, \"variable\", \"@pop\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"]},"metadata":{},"sourceType":"module"}