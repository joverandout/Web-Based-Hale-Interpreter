{"ast":null,"code":"/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n// src/basic-languages/lexon/lexon.contribution.ts\nimport { registerLanguage } from \"../_.contribution.js\";\nregisterLanguage({\n  id: \"lexon\",\n  extensions: [\".lex\"],\n  aliases: [\"Lexon\"],\n  loader: () => {\n    if (false) {\n      return new Promise((resolve, reject) => {\n        __require([\"vs/basic-languages/lexon/lexon\"], resolve, reject);\n      });\n    } else {\n      return import(\"./lexon.js\");\n    }\n  }\n});","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/basic-languages/lexon/lexon.contribution.js"],"names":["registerLanguage","id","extensions","aliases","loader","Promise","resolve","reject","__require"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,SAASA,gBAAT,QAAiC,sBAAjC;AACAA,gBAAgB,CAAC;AACfC,EAAAA,EAAE,EAAE,OADW;AAEfC,EAAAA,UAAU,EAAE,CAAC,MAAD,CAFG;AAGfC,EAAAA,OAAO,EAAE,CAAC,OAAD,CAHM;AAIfC,EAAAA,MAAM,EAAE,MAAM;AACZ,QAAI,KAAJ,EAAW;AACT,aAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCC,QAAAA,SAAS,CAAC,CAAC,gCAAD,CAAD,EAAqCF,OAArC,EAA8CC,MAA9C,CAAT;AACD,OAFM,CAAP;AAGD,KAJD,MAIO;AACL,aAAO,OAAO,YAAP,CAAP;AACD;AACF;AAZc,CAAD,CAAhB","sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/lexon/lexon.contribution.ts\nimport { registerLanguage } from \"../_.contribution.js\";\nregisterLanguage({\n  id: \"lexon\",\n  extensions: [\".lex\"],\n  aliases: [\"Lexon\"],\n  loader: () => {\n    if (false) {\n      return new Promise((resolve, reject) => {\n        __require([\"vs/basic-languages/lexon/lexon\"], resolve, reject);\n      });\n    } else {\n      return import(\"./lexon.js\");\n    }\n  }\n});\n"]},"metadata":{},"sourceType":"module"}