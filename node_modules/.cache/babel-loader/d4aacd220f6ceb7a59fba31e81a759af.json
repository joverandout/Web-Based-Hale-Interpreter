{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class BracketInfo {\n  constructor(range,\n  /** 0-based level */\n  nestingLevel, isInvalid) {\n    this.range = range;\n    this.nestingLevel = nestingLevel;\n    this.isInvalid = isInvalid;\n  }\n\n}\nexport class BracketPairInfo {\n  constructor(range, openingBracketRange, closingBracketRange,\n  /**\n   * 0-based\n  */\n  nestingLevel) {\n    this.range = range;\n    this.openingBracketRange = openingBracketRange;\n    this.closingBracketRange = closingBracketRange;\n    this.nestingLevel = nestingLevel;\n  }\n\n}\nexport class BracketPairWithMinIndentationInfo extends BracketPairInfo {\n  constructor(range, openingBracketRange, closingBracketRange,\n  /**\n   * 0-based\n  */\n  nestingLevel,\n  /**\n   * -1 if not requested, otherwise the size of the minimum indentation in the bracket pair in terms of visible columns.\n  */\n  minVisibleColumnIndentation) {\n    super(range, openingBracketRange, closingBracketRange, nestingLevel);\n    this.minVisibleColumnIndentation = minVisibleColumnIndentation;\n  }\n\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/common/textModelBracketPairs.js"],"names":["BracketInfo","constructor","range","nestingLevel","isInvalid","BracketPairInfo","openingBracketRange","closingBracketRange","BracketPairWithMinIndentationInfo","minVisibleColumnIndentation"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,MAAMA,WAAN,CAAkB;AACrBC,EAAAA,WAAW,CAACC,KAAD;AACX;AACAC,EAAAA,YAFW,EAEGC,SAFH,EAEc;AACrB,SAAKF,KAAL,GAAaA,KAAb;AACA,SAAKC,YAAL,GAAoBA,YAApB;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACH;;AAPoB;AASzB,OAAO,MAAMC,eAAN,CAAsB;AACzBJ,EAAAA,WAAW,CAACC,KAAD,EAAQI,mBAAR,EAA6BC,mBAA7B;AACX;AACJ;AACA;AACIJ,EAAAA,YAJW,EAIG;AACV,SAAKD,KAAL,GAAaA,KAAb;AACA,SAAKI,mBAAL,GAA2BA,mBAA3B;AACA,SAAKC,mBAAL,GAA2BA,mBAA3B;AACA,SAAKJ,YAAL,GAAoBA,YAApB;AACH;;AAVwB;AAY7B,OAAO,MAAMK,iCAAN,SAAgDH,eAAhD,CAAgE;AACnEJ,EAAAA,WAAW,CAACC,KAAD,EAAQI,mBAAR,EAA6BC,mBAA7B;AACX;AACJ;AACA;AACIJ,EAAAA,YAJW;AAKX;AACJ;AACA;AACIM,EAAAA,2BARW,EAQkB;AACzB,UAAMP,KAAN,EAAaI,mBAAb,EAAkCC,mBAAlC,EAAuDJ,YAAvD;AACA,SAAKM,2BAAL,GAAmCA,2BAAnC;AACH;;AAZkE","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class BracketInfo {\n    constructor(range, \n    /** 0-based level */\n    nestingLevel, isInvalid) {\n        this.range = range;\n        this.nestingLevel = nestingLevel;\n        this.isInvalid = isInvalid;\n    }\n}\nexport class BracketPairInfo {\n    constructor(range, openingBracketRange, closingBracketRange, \n    /**\n     * 0-based\n    */\n    nestingLevel) {\n        this.range = range;\n        this.openingBracketRange = openingBracketRange;\n        this.closingBracketRange = closingBracketRange;\n        this.nestingLevel = nestingLevel;\n    }\n}\nexport class BracketPairWithMinIndentationInfo extends BracketPairInfo {\n    constructor(range, openingBracketRange, closingBracketRange, \n    /**\n     * 0-based\n    */\n    nestingLevel, \n    /**\n     * -1 if not requested, otherwise the size of the minimum indentation in the bracket pair in terms of visible columns.\n    */\n    minVisibleColumnIndentation) {\n        super(range, openingBracketRange, closingBracketRange, nestingLevel);\n        this.minVisibleColumnIndentation = minVisibleColumnIndentation;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}