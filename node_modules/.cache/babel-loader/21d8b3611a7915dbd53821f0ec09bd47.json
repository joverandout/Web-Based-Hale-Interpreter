{"ast":null,"code":"var _jsxFileName = \"/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Dashboard/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useNavigate } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard() {\n  _s();\n\n  const [FunctionOutput, setFunctionOutput] = useState(0);\n  const [PrintOutputs, setPrintOutput] = useState(0);\n  const [name, setName] = useState('');\n  const myeditor = document.querySelector(\".myeditor\");\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    alert(`The name you entered was: ${name}`);\n  };\n\n  let navigate = useNavigate();\n\n  const routeChange = () => {\n    let path = `../info`;\n    navigate(path);\n  };\n\n  useEffect(() => {\n    fetch('/time').then(res => res.json()).then(data => {\n      setFunctionOutput(data.time);\n      setPrintOutput(data.prints);\n    });\n  }, []);\n\n  function buttonpress() {\n    // Simple POST request with a JSON body using fetch\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: myeditor.textContent\n      })\n    };\n\n    const handleSubmit = event => {\n      event.preventDefault();\n      alert(`The name you entered was: ${name}`);\n    };\n\n    fetch('/write', requestOptions).then(response => response.json());\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Dashboard\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"editor-menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn btn-dark\",\n          children: \"Dark Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn btn-light\",\n          children: \"Light Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn btn-run\",\n          onClick: buttonpress,\n          children: \"Run\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"mycontainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"myleft\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"myeditor\",\n            contenteditable: \"\",\n            children: \"Write Code here...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"mybar\",\n          title: \"Click and Drag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"myright\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"mymids\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [FunctionOutput, \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"mymids\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: PrintOutputs\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"sxgWymt/WqFubSYeYMIA7wG69gY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Dashboard/Dashboard.js"],"names":["React","useState","useEffect","Button","useNavigate","Dashboard","FunctionOutput","setFunctionOutput","PrintOutputs","setPrintOutput","name","setName","myeditor","document","querySelector","handleSubmit","event","preventDefault","alert","navigate","routeChange","path","fetch","then","res","json","data","time","prints","buttonpress","requestOptions","method","headers","body","JSON","stringify","title","textContent","response"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useNavigate } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Dashboard.css';\n\nfunction Dashboard() {\n\n  const [FunctionOutput, setFunctionOutput] = useState(0);\n  const [PrintOutputs, setPrintOutput] = useState(0);\n  const [name, setName] = useState('');\n  const myeditor = document.querySelector(\".myeditor\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    alert(`The name you entered was: ${name}`)\n  }\n\n  let navigate = useNavigate(); \n  const routeChange = () =>{ \n    let path = `../info`; \n    navigate(path);\n  }\n\n  useEffect(() => {\n    fetch('/time').then(res => res.json()).then(data => {\n      setFunctionOutput(data.time);\n      setPrintOutput(data.prints);\n    });\n  }, []);\n\n\n  function buttonpress(){\n    // Simple POST request with a JSON body using fetch\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ title: myeditor.textContent })\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    alert(`The name you entered was: ${name}`);\n  }\n\n  fetch('/write', requestOptions)\n      .then(response => response.json());\n  };\n\n  return (\n    <div className=\"Dashboard\">\n\n      {/* <header className=\"App-header\">\n        <nav class=\"navbar navbar-dark bg-dark pt-3 pb-3\">\n        <form class=\"form-inline\">\n          <h1>Hale - A web based interpreter</h1>\n          <button class=\"btn btn-lg btn-light\" type=\"button\">Light Mode</button>\n          <button class=\"btn btn-lg btn-secondary\" type=\"button\">Dark Mode</button>\n          <button onClick={routeChange} class=\"btn btn-lg btn-info\" type=\"button\">Info</button>\n          <button  onClick={buttonpress} class=\"btn btn-lg btn-success float-right\" type=\"button\">Run</button>\n        </form>\n        <form class=\"form-inline float-right\">\n          <h1>‎</h1>\n          <button class=\"btn btn-lg btn-primary\" type=\"button\">Profie</button>\n          <button class=\"btn btn-lg btn-danger\" type=\"button\">Sign Out</button>\n        </form>\n      </nav> */}\n      \n      <header className=\"App-header\">\n      <div class=\"editor-menu\">\n        <button class=\"btn btn-dark\">Dark Mode</button>\n        <button class=\"btn btn-light\">Light Mode</button>\n        <button class=\"btn btn-run\" onClick={buttonpress}>Run</button>\n    </div>\n    <div class=\"mycontainer\">\n        <div class=\"myleft\">\n            <div class=\"myeditor\" contenteditable=\"\">\n                Write Code here...\n            </div>\n        </div>\n        <div class=\"mybar\"title=\"Click and Drag\"></div>\n        <div class=\"myright\">\n        <div class=\"mymids\">\n          <p>{FunctionOutput}.</p>\n        </div>\n        <div class=\"mymids\">\n        <p>{PrintOutputs}</p>\n        </div>\n        </div>\n    </div>\n      </header>\n    </div>\n  );\n}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}