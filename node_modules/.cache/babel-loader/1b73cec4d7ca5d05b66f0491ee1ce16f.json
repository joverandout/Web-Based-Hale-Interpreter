{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isArray, isObject, isUndefinedOrNull } from './types.js';\nexport function deepClone(obj) {\n  if (!obj || typeof obj !== 'object') {\n    return obj;\n  }\n\n  if (obj instanceof RegExp) {\n    // See https://github.com/microsoft/TypeScript/issues/10990\n    return obj;\n  }\n\n  const result = Array.isArray(obj) ? [] : {};\n  Object.keys(obj).forEach(key => {\n    if (obj[key] && typeof obj[key] === 'object') {\n      result[key] = deepClone(obj[key]);\n    } else {\n      result[key] = obj[key];\n    }\n  });\n  return result;\n}\nexport function deepFreeze(obj) {\n  if (!obj || typeof obj !== 'object') {\n    return obj;\n  }\n\n  const stack = [obj];\n\n  while (stack.length > 0) {\n    const obj = stack.shift();\n    Object.freeze(obj);\n\n    for (const key in obj) {\n      if (_hasOwnProperty.call(obj, key)) {\n        const prop = obj[key];\n\n        if (typeof prop === 'object' && !Object.isFrozen(prop)) {\n          stack.push(prop);\n        }\n      }\n    }\n  }\n\n  return obj;\n}\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function cloneAndChange(obj, changer) {\n  return _cloneAndChange(obj, changer, new Set());\n}\n\nfunction _cloneAndChange(obj, changer, seen) {\n  if (isUndefinedOrNull(obj)) {\n    return obj;\n  }\n\n  const changed = changer(obj);\n\n  if (typeof changed !== 'undefined') {\n    return changed;\n  }\n\n  if (isArray(obj)) {\n    const r1 = [];\n\n    for (const e of obj) {\n      r1.push(_cloneAndChange(e, changer, seen));\n    }\n\n    return r1;\n  }\n\n  if (isObject(obj)) {\n    if (seen.has(obj)) {\n      throw new Error('Cannot clone recursive data-structure');\n    }\n\n    seen.add(obj);\n    const r2 = {};\n\n    for (let i2 in obj) {\n      if (_hasOwnProperty.call(obj, i2)) {\n        r2[i2] = _cloneAndChange(obj[i2], changer, seen);\n      }\n    }\n\n    seen.delete(obj);\n    return r2;\n  }\n\n  return obj;\n}\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\n\n\nexport function mixin(destination, source, overwrite = true) {\n  if (!isObject(destination)) {\n    return source;\n  }\n\n  if (isObject(source)) {\n    Object.keys(source).forEach(key => {\n      if (key in destination) {\n        if (overwrite) {\n          if (isObject(destination[key]) && isObject(source[key])) {\n            mixin(destination[key], source[key], overwrite);\n          } else {\n            destination[key] = source[key];\n          }\n        }\n      } else {\n        destination[key] = source[key];\n      }\n    });\n  }\n\n  return destination;\n}\nexport function equals(one, other) {\n  if (one === other) {\n    return true;\n  }\n\n  if (one === null || one === undefined || other === null || other === undefined) {\n    return false;\n  }\n\n  if (typeof one !== typeof other) {\n    return false;\n  }\n\n  if (typeof one !== 'object') {\n    return false;\n  }\n\n  if (Array.isArray(one) !== Array.isArray(other)) {\n    return false;\n  }\n\n  let i;\n  let key;\n\n  if (Array.isArray(one)) {\n    if (one.length !== other.length) {\n      return false;\n    }\n\n    for (i = 0; i < one.length; i++) {\n      if (!equals(one[i], other[i])) {\n        return false;\n      }\n    }\n  } else {\n    const oneKeys = [];\n\n    for (key in one) {\n      oneKeys.push(key);\n    }\n\n    oneKeys.sort();\n    const otherKeys = [];\n\n    for (key in other) {\n      otherKeys.push(key);\n    }\n\n    otherKeys.sort();\n\n    if (!equals(oneKeys, otherKeys)) {\n      return false;\n    }\n\n    for (i = 0; i < oneKeys.length; i++) {\n      if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\nexport function getOrDefault(obj, fn, defaultValue) {\n  const result = fn(obj);\n  return typeof result === 'undefined' ? defaultValue : result;\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/base/common/objects.js"],"names":["isArray","isObject","isUndefinedOrNull","deepClone","obj","RegExp","result","Array","Object","keys","forEach","key","deepFreeze","stack","length","shift","freeze","_hasOwnProperty","call","prop","isFrozen","push","prototype","hasOwnProperty","cloneAndChange","changer","_cloneAndChange","Set","seen","changed","r1","e","has","Error","add","r2","i2","delete","mixin","destination","source","overwrite","equals","one","other","undefined","i","oneKeys","sort","otherKeys","getOrDefault","fn","defaultValue"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isArray, isObject, isUndefinedOrNull } from './types.js';\nexport function deepClone(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    if (obj instanceof RegExp) {\n        // See https://github.com/microsoft/TypeScript/issues/10990\n        return obj;\n    }\n    const result = Array.isArray(obj) ? [] : {};\n    Object.keys(obj).forEach((key) => {\n        if (obj[key] && typeof obj[key] === 'object') {\n            result[key] = deepClone(obj[key]);\n        }\n        else {\n            result[key] = obj[key];\n        }\n    });\n    return result;\n}\nexport function deepFreeze(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    const stack = [obj];\n    while (stack.length > 0) {\n        const obj = stack.shift();\n        Object.freeze(obj);\n        for (const key in obj) {\n            if (_hasOwnProperty.call(obj, key)) {\n                const prop = obj[key];\n                if (typeof prop === 'object' && !Object.isFrozen(prop)) {\n                    stack.push(prop);\n                }\n            }\n        }\n    }\n    return obj;\n}\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function cloneAndChange(obj, changer) {\n    return _cloneAndChange(obj, changer, new Set());\n}\nfunction _cloneAndChange(obj, changer, seen) {\n    if (isUndefinedOrNull(obj)) {\n        return obj;\n    }\n    const changed = changer(obj);\n    if (typeof changed !== 'undefined') {\n        return changed;\n    }\n    if (isArray(obj)) {\n        const r1 = [];\n        for (const e of obj) {\n            r1.push(_cloneAndChange(e, changer, seen));\n        }\n        return r1;\n    }\n    if (isObject(obj)) {\n        if (seen.has(obj)) {\n            throw new Error('Cannot clone recursive data-structure');\n        }\n        seen.add(obj);\n        const r2 = {};\n        for (let i2 in obj) {\n            if (_hasOwnProperty.call(obj, i2)) {\n                r2[i2] = _cloneAndChange(obj[i2], changer, seen);\n            }\n        }\n        seen.delete(obj);\n        return r2;\n    }\n    return obj;\n}\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination, source, overwrite = true) {\n    if (!isObject(destination)) {\n        return source;\n    }\n    if (isObject(source)) {\n        Object.keys(source).forEach(key => {\n            if (key in destination) {\n                if (overwrite) {\n                    if (isObject(destination[key]) && isObject(source[key])) {\n                        mixin(destination[key], source[key], overwrite);\n                    }\n                    else {\n                        destination[key] = source[key];\n                    }\n                }\n            }\n            else {\n                destination[key] = source[key];\n            }\n        });\n    }\n    return destination;\n}\nexport function equals(one, other) {\n    if (one === other) {\n        return true;\n    }\n    if (one === null || one === undefined || other === null || other === undefined) {\n        return false;\n    }\n    if (typeof one !== typeof other) {\n        return false;\n    }\n    if (typeof one !== 'object') {\n        return false;\n    }\n    if ((Array.isArray(one)) !== (Array.isArray(other))) {\n        return false;\n    }\n    let i;\n    let key;\n    if (Array.isArray(one)) {\n        if (one.length !== other.length) {\n            return false;\n        }\n        for (i = 0; i < one.length; i++) {\n            if (!equals(one[i], other[i])) {\n                return false;\n            }\n        }\n    }\n    else {\n        const oneKeys = [];\n        for (key in one) {\n            oneKeys.push(key);\n        }\n        oneKeys.sort();\n        const otherKeys = [];\n        for (key in other) {\n            otherKeys.push(key);\n        }\n        otherKeys.sort();\n        if (!equals(oneKeys, otherKeys)) {\n            return false;\n        }\n        for (i = 0; i < oneKeys.length; i++) {\n            if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nexport function getOrDefault(obj, fn, defaultValue) {\n    const result = fn(obj);\n    return typeof result === 'undefined' ? defaultValue : result;\n}\n"]},"metadata":{},"sourceType":"module"}