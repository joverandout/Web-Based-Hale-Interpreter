{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { stripIcons } from '../../../../base/common/iconLabels.js';\nimport { AbstractCommandsQuickAccessProvider } from '../../../../platform/quickinput/browser/commandsQuickAccess.js';\nexport class AbstractEditorCommandsQuickAccessProvider extends AbstractCommandsQuickAccessProvider {\n  constructor(options, instantiationService, keybindingService, commandService, telemetryService, dialogService) {\n    super(options, instantiationService, keybindingService, commandService, telemetryService, dialogService);\n  }\n\n  getCodeEditorCommandPicks() {\n    const activeTextEditorControl = this.activeTextEditorControl;\n\n    if (!activeTextEditorControl) {\n      return [];\n    }\n\n    const editorCommandPicks = [];\n\n    for (const editorAction of activeTextEditorControl.getSupportedActions()) {\n      editorCommandPicks.push({\n        commandId: editorAction.id,\n        commandAlias: editorAction.alias,\n        label: stripIcons(editorAction.label) || editorAction.id\n      });\n    }\n\n    return editorCommandPicks;\n  }\n\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/contrib/quickAccess/browser/commandsQuickAccess.js"],"names":["stripIcons","AbstractCommandsQuickAccessProvider","AbstractEditorCommandsQuickAccessProvider","constructor","options","instantiationService","keybindingService","commandService","telemetryService","dialogService","getCodeEditorCommandPicks","activeTextEditorControl","editorCommandPicks","editorAction","getSupportedActions","push","commandId","id","commandAlias","alias","label"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,UAAT,QAA2B,uCAA3B;AACA,SAASC,mCAAT,QAAoD,gEAApD;AACA,OAAO,MAAMC,yCAAN,SAAwDD,mCAAxD,CAA4F;AAC/FE,EAAAA,WAAW,CAACC,OAAD,EAAUC,oBAAV,EAAgCC,iBAAhC,EAAmDC,cAAnD,EAAmEC,gBAAnE,EAAqFC,aAArF,EAAoG;AAC3G,UAAML,OAAN,EAAeC,oBAAf,EAAqCC,iBAArC,EAAwDC,cAAxD,EAAwEC,gBAAxE,EAA0FC,aAA1F;AACH;;AACDC,EAAAA,yBAAyB,GAAG;AACxB,UAAMC,uBAAuB,GAAG,KAAKA,uBAArC;;AACA,QAAI,CAACA,uBAAL,EAA8B;AAC1B,aAAO,EAAP;AACH;;AACD,UAAMC,kBAAkB,GAAG,EAA3B;;AACA,SAAK,MAAMC,YAAX,IAA2BF,uBAAuB,CAACG,mBAAxB,EAA3B,EAA0E;AACtEF,MAAAA,kBAAkB,CAACG,IAAnB,CAAwB;AACpBC,QAAAA,SAAS,EAAEH,YAAY,CAACI,EADJ;AAEpBC,QAAAA,YAAY,EAAEL,YAAY,CAACM,KAFP;AAGpBC,QAAAA,KAAK,EAAEpB,UAAU,CAACa,YAAY,CAACO,KAAd,CAAV,IAAkCP,YAAY,CAACI;AAHlC,OAAxB;AAKH;;AACD,WAAOL,kBAAP;AACH;;AAlB8F","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { stripIcons } from '../../../../base/common/iconLabels.js';\nimport { AbstractCommandsQuickAccessProvider } from '../../../../platform/quickinput/browser/commandsQuickAccess.js';\nexport class AbstractEditorCommandsQuickAccessProvider extends AbstractCommandsQuickAccessProvider {\n    constructor(options, instantiationService, keybindingService, commandService, telemetryService, dialogService) {\n        super(options, instantiationService, keybindingService, commandService, telemetryService, dialogService);\n    }\n    getCodeEditorCommandPicks() {\n        const activeTextEditorControl = this.activeTextEditorControl;\n        if (!activeTextEditorControl) {\n            return [];\n        }\n        const editorCommandPicks = [];\n        for (const editorAction of activeTextEditorControl.getSupportedActions()) {\n            editorCommandPicks.push({\n                commandId: editorAction.id,\n                commandAlias: editorAction.alias,\n                label: stripIcons(editorAction.label) || editorAction.id,\n            });\n        }\n        return editorCommandPicks;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}