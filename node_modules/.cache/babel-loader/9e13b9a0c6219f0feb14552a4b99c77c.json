{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport * as nls from '../../../../nls.js';\n\nclass ForceRetokenizeAction extends EditorAction {\n  constructor() {\n    super({\n      id: 'editor.action.forceRetokenize',\n      label: nls.localize('forceRetokenize', \"Developer: Force Retokenize\"),\n      alias: 'Developer: Force Retokenize',\n      precondition: undefined\n    });\n  }\n\n  run(accessor, editor) {\n    if (!editor.hasModel()) {\n      return;\n    }\n\n    const model = editor.getModel();\n    model.resetTokenization();\n    const sw = new StopWatch(true);\n    model.forceTokenization(model.getLineCount());\n    sw.stop();\n    console.log(`tokenization took ${sw.elapsed()}`);\n  }\n\n}\n\nregisterEditorAction(ForceRetokenizeAction);","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/contrib/tokenization/browser/tokenization.js"],"names":["StopWatch","EditorAction","registerEditorAction","nls","ForceRetokenizeAction","constructor","id","label","localize","alias","precondition","undefined","run","accessor","editor","hasModel","model","getModel","resetTokenization","sw","forceTokenization","getLineCount","stop","console","log","elapsed"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,sCAA1B;AACA,SAASC,YAAT,EAAuBC,oBAAvB,QAAmD,sCAAnD;AACA,OAAO,KAAKC,GAAZ,MAAqB,oBAArB;;AACA,MAAMC,qBAAN,SAAoCH,YAApC,CAAiD;AAC7CI,EAAAA,WAAW,GAAG;AACV,UAAM;AACFC,MAAAA,EAAE,EAAE,+BADF;AAEFC,MAAAA,KAAK,EAAEJ,GAAG,CAACK,QAAJ,CAAa,iBAAb,EAAgC,6BAAhC,CAFL;AAGFC,MAAAA,KAAK,EAAE,6BAHL;AAIFC,MAAAA,YAAY,EAAEC;AAJZ,KAAN;AAMH;;AACDC,EAAAA,GAAG,CAACC,QAAD,EAAWC,MAAX,EAAmB;AAClB,QAAI,CAACA,MAAM,CAACC,QAAP,EAAL,EAAwB;AACpB;AACH;;AACD,UAAMC,KAAK,GAAGF,MAAM,CAACG,QAAP,EAAd;AACAD,IAAAA,KAAK,CAACE,iBAAN;AACA,UAAMC,EAAE,GAAG,IAAInB,SAAJ,CAAc,IAAd,CAAX;AACAgB,IAAAA,KAAK,CAACI,iBAAN,CAAwBJ,KAAK,CAACK,YAAN,EAAxB;AACAF,IAAAA,EAAE,CAACG,IAAH;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAa,qBAAoBL,EAAE,CAACM,OAAH,EAAa,EAA9C;AACH;;AAnB4C;;AAqBjDvB,oBAAoB,CAACE,qBAAD,CAApB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport * as nls from '../../../../nls.js';\nclass ForceRetokenizeAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.forceRetokenize',\n            label: nls.localize('forceRetokenize', \"Developer: Force Retokenize\"),\n            alias: 'Developer: Force Retokenize',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const model = editor.getModel();\n        model.resetTokenization();\n        const sw = new StopWatch(true);\n        model.forceTokenization(model.getLineCount());\n        sw.stop();\n        console.log(`tokenization took ${sw.elapsed()}`);\n    }\n}\nregisterEditorAction(ForceRetokenizeAction);\n"]},"metadata":{},"sourceType":"module"}