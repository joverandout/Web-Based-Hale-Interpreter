{"ast":null,"code":"/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n// src/basic-languages/bat/bat.ts\nvar conf = {\n  comments: {\n    lineComment: \"REM\"\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }],\n  surroundingPairs: [{\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*(::\\\\s*|REM\\\\s+)#region\"),\n      end: new RegExp(\"^\\\\s*(::\\\\s*|REM\\\\s+)#endregion\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  ignoreCase: true,\n  tokenPostfix: \".bat\",\n  brackets: [{\n    token: \"delimiter.bracket\",\n    open: \"{\",\n    close: \"}\"\n  }, {\n    token: \"delimiter.parenthesis\",\n    open: \"(\",\n    close: \")\"\n  }, {\n    token: \"delimiter.square\",\n    open: \"[\",\n    close: \"]\"\n  }],\n  keywords: /call|defined|echo|errorlevel|exist|for|goto|if|pause|set|shift|start|title|not|pushd|popd/,\n  symbols: /[=><!~?&|+\\-*\\/\\^;\\.,]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  tokenizer: {\n    root: [[/^(\\s*)(rem(?:\\s.*|))$/, [\"\", \"comment\"]], [/(\\@?)(@keywords)(?!\\w)/, [{\n      token: \"keyword\"\n    }, {\n      token: \"keyword.$2\"\n    }]], [/[ \\t\\r\\n]+/, \"\"], [/setlocal(?!\\w)/, \"keyword.tag-setlocal\"], [/endlocal(?!\\w)/, \"keyword.tag-setlocal\"], [/[a-zA-Z_]\\w*/, \"\"], [/:\\w*/, \"metatag\"], [/%[^%]+%/, \"variable\"], [/%%[\\w]+(?!\\w)/, \"variable\"], [/[{}()\\[\\]]/, \"@brackets\"], [/@symbols/, \"delimiter\"], [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"], [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, \"number.hex\"], [/\\d+/, \"number\"], [/[;,.]/, \"delimiter\"], [/\"/, \"string\", '@string.\"'], [/'/, \"string\", \"@string.'\"]],\n    string: [[/[^\\\\\"'%]+/, {\n      cases: {\n        \"@eos\": {\n          token: \"string\",\n          next: \"@popall\"\n        },\n        \"@default\": \"string\"\n      }\n    }], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/%[\\w ]+%/, \"variable\"], [/%%[\\w]+(?!\\w)/, \"variable\"], [/[\"']/, {\n      cases: {\n        \"$#==$S2\": {\n          token: \"string\",\n          next: \"@pop\"\n        },\n        \"@default\": \"string\"\n      }\n    }], [/$/, \"string\", \"@popall\"]]\n  }\n};\nexport { conf, language };","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/basic-languages/bat/bat.js"],"names":["conf","comments","lineComment","brackets","autoClosingPairs","open","close","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","ignoreCase","tokenPostfix","token","keywords","symbols","escapes","tokenizer","root","string","cases","next"],"mappings":"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","sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/bat/bat.ts\nvar conf = {\n  comments: {\n    lineComment: \"REM\"\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' }\n  ],\n  surroundingPairs: [\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' }\n  ],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*(::\\\\s*|REM\\\\s+)#region\"),\n      end: new RegExp(\"^\\\\s*(::\\\\s*|REM\\\\s+)#endregion\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  ignoreCase: true,\n  tokenPostfix: \".bat\",\n  brackets: [\n    { token: \"delimiter.bracket\", open: \"{\", close: \"}\" },\n    { token: \"delimiter.parenthesis\", open: \"(\", close: \")\" },\n    { token: \"delimiter.square\", open: \"[\", close: \"]\" }\n  ],\n  keywords: /call|defined|echo|errorlevel|exist|for|goto|if|pause|set|shift|start|title|not|pushd|popd/,\n  symbols: /[=><!~?&|+\\-*\\/\\^;\\.,]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  tokenizer: {\n    root: [\n      [/^(\\s*)(rem(?:\\s.*|))$/, [\"\", \"comment\"]],\n      [/(\\@?)(@keywords)(?!\\w)/, [{ token: \"keyword\" }, { token: \"keyword.$2\" }]],\n      [/[ \\t\\r\\n]+/, \"\"],\n      [/setlocal(?!\\w)/, \"keyword.tag-setlocal\"],\n      [/endlocal(?!\\w)/, \"keyword.tag-setlocal\"],\n      [/[a-zA-Z_]\\w*/, \"\"],\n      [/:\\w*/, \"metatag\"],\n      [/%[^%]+%/, \"variable\"],\n      [/%%[\\w]+(?!\\w)/, \"variable\"],\n      [/[{}()\\[\\]]/, \"@brackets\"],\n      [/@symbols/, \"delimiter\"],\n      [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"],\n      [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, \"number.hex\"],\n      [/\\d+/, \"number\"],\n      [/[;,.]/, \"delimiter\"],\n      [/\"/, \"string\", '@string.\"'],\n      [/'/, \"string\", \"@string.'\"]\n    ],\n    string: [\n      [\n        /[^\\\\\"'%]+/,\n        {\n          cases: {\n            \"@eos\": { token: \"string\", next: \"@popall\" },\n            \"@default\": \"string\"\n          }\n        }\n      ],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [/%[\\w ]+%/, \"variable\"],\n      [/%%[\\w]+(?!\\w)/, \"variable\"],\n      [\n        /[\"']/,\n        {\n          cases: {\n            \"$#==$S2\": { token: \"string\", next: \"@pop\" },\n            \"@default\": \"string\"\n          }\n        }\n      ],\n      [/$/, \"string\", \"@popall\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"]},"metadata":{},"sourceType":"module"}