{"ast":null,"code":"/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\n\nvar __reExport = (target, module, copyDefault, desc) => {\n  if (module && typeof module === \"object\" || typeof module === \"function\") {\n    for (let key of __getOwnPropNames(module)) if (!__hasOwnProp.call(target, key) && (copyDefault || key !== \"default\")) __defProp(target, key, {\n      get: () => module[key],\n      enumerable: !(desc = __getOwnPropDesc(module, key)) || desc.enumerable\n    });\n  }\n\n  return target;\n}; // src/fillers/monaco-editor-core.ts\n\n\nvar monaco_editor_core_exports = {};\n\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\n\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\"; // src/basic-languages/python/python.ts\n\nvar conf = {\n  comments: {\n    lineComment: \"#\",\n    blockComment: [\"'''\", \"'''\"]\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"',\n    notIn: [\"string\"]\n  }, {\n    open: \"'\",\n    close: \"'\",\n    notIn: [\"string\", \"comment\"]\n  }],\n  surroundingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }],\n  onEnterRules: [{\n    beforeText: new RegExp(\"^\\\\s*(?:def|class|for|if|elif|else|while|try|with|finally|except|async).*?:\\\\s*$\"),\n    action: {\n      indentAction: monaco_editor_core_exports.languages.IndentAction.Indent\n    }\n  }],\n  folding: {\n    offSide: true,\n    markers: {\n      start: new RegExp(\"^\\\\s*#region\\\\b\"),\n      end: new RegExp(\"^\\\\s*#endregion\\\\b\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".python\",\n  keywords: [\"False\", \"None\", \"True\", \"and\", \"as\", \"assert\", \"async\", \"await\", \"break\", \"class\", \"continue\", \"def\", \"del\", \"elif\", \"else\", \"except\", \"exec\", \"finally\", \"for\", \"from\", \"global\", \"if\", \"import\", \"in\", \"is\", \"lambda\", \"nonlocal\", \"not\", \"or\", \"pass\", \"print\", \"raise\", \"return\", \"try\", \"while\", \"with\", \"yield\", \"int\", \"float\", \"long\", \"complex\", \"hex\", \"abs\", \"all\", \"any\", \"apply\", \"basestring\", \"bin\", \"bool\", \"buffer\", \"bytearray\", \"callable\", \"chr\", \"classmethod\", \"cmp\", \"coerce\", \"compile\", \"complex\", \"delattr\", \"dict\", \"dir\", \"divmod\", \"enumerate\", \"eval\", \"execfile\", \"file\", \"filter\", \"format\", \"frozenset\", \"getattr\", \"globals\", \"hasattr\", \"hash\", \"help\", \"id\", \"input\", \"intern\", \"isinstance\", \"issubclass\", \"iter\", \"len\", \"locals\", \"list\", \"map\", \"max\", \"memoryview\", \"min\", \"next\", \"object\", \"oct\", \"open\", \"ord\", \"pow\", \"print\", \"property\", \"reversed\", \"range\", \"raw_input\", \"reduce\", \"reload\", \"repr\", \"reversed\", \"round\", \"self\", \"set\", \"setattr\", \"slice\", \"sorted\", \"staticmethod\", \"str\", \"sum\", \"super\", \"tuple\", \"type\", \"unichr\", \"unicode\", \"vars\", \"xrange\", \"zip\", \"__dict__\", \"__methods__\", \"__members__\", \"__class__\", \"__bases__\", \"__name__\", \"__mro__\", \"__subclasses__\", \"__init__\", \"__import__\"],\n  brackets: [{\n    open: \"{\",\n    close: \"}\",\n    token: \"delimiter.curly\"\n  }, {\n    open: \"[\",\n    close: \"]\",\n    token: \"delimiter.bracket\"\n  }, {\n    open: \"(\",\n    close: \")\",\n    token: \"delimiter.parenthesis\"\n  }],\n  tokenizer: {\n    root: [{\n      include: \"@whitespace\"\n    }, {\n      include: \"@numbers\"\n    }, {\n      include: \"@strings\"\n    }, [/[,:;]/, \"delimiter\"], [/[{}\\[\\]()]/, \"@brackets\"], [/@[a-zA-Z_]\\w*/, \"tag\"], [/[a-zA-Z_]\\w*/, {\n      cases: {\n        \"@keywords\": \"keyword\",\n        \"@default\": \"identifier\"\n      }\n    }]],\n    whitespace: [[/\\s+/, \"white\"], [/(^#.*$)/, \"comment\"], [/'''/, \"string\", \"@endDocString\"], [/\"\"\"/, \"string\", \"@endDblDocString\"]],\n    endDocString: [[/[^']+/, \"string\"], [/\\\\'/, \"string\"], [/'''/, \"string\", \"@popall\"], [/'/, \"string\"]],\n    endDblDocString: [[/[^\"]+/, \"string\"], [/\\\\\"/, \"string\"], [/\"\"\"/, \"string\", \"@popall\"], [/\"/, \"string\"]],\n    numbers: [[/-?0x([abcdef]|[ABCDEF]|\\d)+[lL]?/, \"number.hex\"], [/-?(\\d*\\.)?\\d+([eE][+\\-]?\\d+)?[jJ]?[lL]?/, \"number\"]],\n    strings: [[/'$/, \"string.escape\", \"@popall\"], [/'/, \"string.escape\", \"@stringBody\"], [/\"$/, \"string.escape\", \"@popall\"], [/\"/, \"string.escape\", \"@dblStringBody\"]],\n    stringBody: [[/[^\\\\']+$/, \"string\", \"@popall\"], [/[^\\\\']+/, \"string\"], [/\\\\./, \"string\"], [/'/, \"string.escape\", \"@popall\"], [/\\\\$/, \"string\"]],\n    dblStringBody: [[/[^\\\\\"]+$/, \"string\", \"@popall\"], [/[^\\\\\"]+/, \"string\"], [/\\\\./, \"string\"], [/\"/, \"string.escape\", \"@popall\"], [/\\\\$/, \"string\"]]\n  }\n};\nexport { conf, language };","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/basic-languages/python/python.js"],"names":["__defProp","Object","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","__reExport","target","module","copyDefault","desc","key","call","get","enumerable","monaco_editor_core_exports","monaco_editor_core_star","conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","onEnterRules","beforeText","RegExp","action","indentAction","languages","IndentAction","Indent","folding","offSide","markers","start","end","language","defaultToken","tokenPostfix","keywords","token","tokenizer","root","include","cases","whitespace","endDocString","endDblDocString","numbers","strings","stringBody","dblStringBody"],"mappings":"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","sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __reExport = (target, module, copyDefault, desc) => {\n  if (module && typeof module === \"object\" || typeof module === \"function\") {\n    for (let key of __getOwnPropNames(module))\n      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== \"default\"))\n        __defProp(target, key, { get: () => module[key], enumerable: !(desc = __getOwnPropDesc(module, key)) || desc.enumerable });\n  }\n  return target;\n};\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\";\n\n// src/basic-languages/python/python.ts\nvar conf = {\n  comments: {\n    lineComment: \"#\",\n    blockComment: [\"'''\", \"'''\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"', notIn: [\"string\"] },\n    { open: \"'\", close: \"'\", notIn: [\"string\", \"comment\"] }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  onEnterRules: [\n    {\n      beforeText: new RegExp(\"^\\\\s*(?:def|class|for|if|elif|else|while|try|with|finally|except|async).*?:\\\\s*$\"),\n      action: { indentAction: monaco_editor_core_exports.languages.IndentAction.Indent }\n    }\n  ],\n  folding: {\n    offSide: true,\n    markers: {\n      start: new RegExp(\"^\\\\s*#region\\\\b\"),\n      end: new RegExp(\"^\\\\s*#endregion\\\\b\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".python\",\n  keywords: [\n    \"False\",\n    \"None\",\n    \"True\",\n    \"and\",\n    \"as\",\n    \"assert\",\n    \"async\",\n    \"await\",\n    \"break\",\n    \"class\",\n    \"continue\",\n    \"def\",\n    \"del\",\n    \"elif\",\n    \"else\",\n    \"except\",\n    \"exec\",\n    \"finally\",\n    \"for\",\n    \"from\",\n    \"global\",\n    \"if\",\n    \"import\",\n    \"in\",\n    \"is\",\n    \"lambda\",\n    \"nonlocal\",\n    \"not\",\n    \"or\",\n    \"pass\",\n    \"print\",\n    \"raise\",\n    \"return\",\n    \"try\",\n    \"while\",\n    \"with\",\n    \"yield\",\n    \"int\",\n    \"float\",\n    \"long\",\n    \"complex\",\n    \"hex\",\n    \"abs\",\n    \"all\",\n    \"any\",\n    \"apply\",\n    \"basestring\",\n    \"bin\",\n    \"bool\",\n    \"buffer\",\n    \"bytearray\",\n    \"callable\",\n    \"chr\",\n    \"classmethod\",\n    \"cmp\",\n    \"coerce\",\n    \"compile\",\n    \"complex\",\n    \"delattr\",\n    \"dict\",\n    \"dir\",\n    \"divmod\",\n    \"enumerate\",\n    \"eval\",\n    \"execfile\",\n    \"file\",\n    \"filter\",\n    \"format\",\n    \"frozenset\",\n    \"getattr\",\n    \"globals\",\n    \"hasattr\",\n    \"hash\",\n    \"help\",\n    \"id\",\n    \"input\",\n    \"intern\",\n    \"isinstance\",\n    \"issubclass\",\n    \"iter\",\n    \"len\",\n    \"locals\",\n    \"list\",\n    \"map\",\n    \"max\",\n    \"memoryview\",\n    \"min\",\n    \"next\",\n    \"object\",\n    \"oct\",\n    \"open\",\n    \"ord\",\n    \"pow\",\n    \"print\",\n    \"property\",\n    \"reversed\",\n    \"range\",\n    \"raw_input\",\n    \"reduce\",\n    \"reload\",\n    \"repr\",\n    \"reversed\",\n    \"round\",\n    \"self\",\n    \"set\",\n    \"setattr\",\n    \"slice\",\n    \"sorted\",\n    \"staticmethod\",\n    \"str\",\n    \"sum\",\n    \"super\",\n    \"tuple\",\n    \"type\",\n    \"unichr\",\n    \"unicode\",\n    \"vars\",\n    \"xrange\",\n    \"zip\",\n    \"__dict__\",\n    \"__methods__\",\n    \"__members__\",\n    \"__class__\",\n    \"__bases__\",\n    \"__name__\",\n    \"__mro__\",\n    \"__subclasses__\",\n    \"__init__\",\n    \"__import__\"\n  ],\n  brackets: [\n    { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\n    { open: \"[\", close: \"]\", token: \"delimiter.bracket\" },\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" }\n  ],\n  tokenizer: {\n    root: [\n      { include: \"@whitespace\" },\n      { include: \"@numbers\" },\n      { include: \"@strings\" },\n      [/[,:;]/, \"delimiter\"],\n      [/[{}\\[\\]()]/, \"@brackets\"],\n      [/@[a-zA-Z_]\\w*/, \"tag\"],\n      [\n        /[a-zA-Z_]\\w*/,\n        {\n          cases: {\n            \"@keywords\": \"keyword\",\n            \"@default\": \"identifier\"\n          }\n        }\n      ]\n    ],\n    whitespace: [\n      [/\\s+/, \"white\"],\n      [/(^#.*$)/, \"comment\"],\n      [/'''/, \"string\", \"@endDocString\"],\n      [/\"\"\"/, \"string\", \"@endDblDocString\"]\n    ],\n    endDocString: [\n      [/[^']+/, \"string\"],\n      [/\\\\'/, \"string\"],\n      [/'''/, \"string\", \"@popall\"],\n      [/'/, \"string\"]\n    ],\n    endDblDocString: [\n      [/[^\"]+/, \"string\"],\n      [/\\\\\"/, \"string\"],\n      [/\"\"\"/, \"string\", \"@popall\"],\n      [/\"/, \"string\"]\n    ],\n    numbers: [\n      [/-?0x([abcdef]|[ABCDEF]|\\d)+[lL]?/, \"number.hex\"],\n      [/-?(\\d*\\.)?\\d+([eE][+\\-]?\\d+)?[jJ]?[lL]?/, \"number\"]\n    ],\n    strings: [\n      [/'$/, \"string.escape\", \"@popall\"],\n      [/'/, \"string.escape\", \"@stringBody\"],\n      [/\"$/, \"string.escape\", \"@popall\"],\n      [/\"/, \"string.escape\", \"@dblStringBody\"]\n    ],\n    stringBody: [\n      [/[^\\\\']+$/, \"string\", \"@popall\"],\n      [/[^\\\\']+/, \"string\"],\n      [/\\\\./, \"string\"],\n      [/'/, \"string.escape\", \"@popall\"],\n      [/\\\\$/, \"string\"]\n    ],\n    dblStringBody: [\n      [/[^\\\\\"]+$/, \"string\", \"@popall\"],\n      [/[^\\\\\"]+/, \"string\"],\n      [/\\\\./, \"string\"],\n      [/\"/, \"string.escape\", \"@popall\"],\n      [/\\\\$/, \"string\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"]},"metadata":{},"sourceType":"module"}