{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { coalesce, equals, flatten, isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { illegalArgument, isCancellationError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { TextModelCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport * as modes from '../../../common/languages.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { Progress } from '../../../../platform/progress/common/progress.js';\nimport { CodeActionKind, filtersAction, mayIncludeActionsOfKind } from './types.js';\nexport const codeActionCommandId = 'editor.action.codeAction';\nexport const refactorCommandId = 'editor.action.refactor';\nexport const sourceActionCommandId = 'editor.action.sourceAction';\nexport const organizeImportsCommandId = 'editor.action.organizeImports';\nexport const fixAllCommandId = 'editor.action.fixAll';\nexport class CodeActionItem {\n  constructor(action, provider) {\n    this.action = action;\n    this.provider = provider;\n  }\n\n  resolve(token) {\n    var _a;\n\n    return __awaiter(this, void 0, void 0, function* () {\n      if (((_a = this.provider) === null || _a === void 0 ? void 0 : _a.resolveCodeAction) && !this.action.edit) {\n        let action;\n\n        try {\n          action = yield this.provider.resolveCodeAction(this.action, token);\n        } catch (err) {\n          onUnexpectedExternalError(err);\n        }\n\n        if (action) {\n          this.action.edit = action.edit;\n        }\n      }\n\n      return this;\n    });\n  }\n\n}\n\nclass ManagedCodeActionSet extends Disposable {\n  constructor(actions, documentation, disposables) {\n    super();\n    this.documentation = documentation;\n\n    this._register(disposables);\n\n    this.allActions = [...actions].sort(ManagedCodeActionSet.codeActionsComparator);\n    this.validActions = this.allActions.filter(({\n      action\n    }) => !action.disabled);\n  }\n\n  static codeActionsComparator({\n    action: a\n  }, {\n    action: b\n  }) {\n    if (a.isPreferred && !b.isPreferred) {\n      return -1;\n    } else if (!a.isPreferred && b.isPreferred) {\n      return 1;\n    }\n\n    if (isNonEmptyArray(a.diagnostics)) {\n      if (isNonEmptyArray(b.diagnostics)) {\n        return a.diagnostics[0].message.localeCompare(b.diagnostics[0].message);\n      } else {\n        return -1;\n      }\n    } else if (isNonEmptyArray(b.diagnostics)) {\n      return 1;\n    } else {\n      return 0; // both have no diagnostics\n    }\n  }\n\n  get hasAutoFix() {\n    return this.validActions.some(({\n      action: fix\n    }) => !!fix.kind && CodeActionKind.QuickFix.contains(new CodeActionKind(fix.kind)) && !!fix.isPreferred);\n  }\n\n}\n\nconst emptyCodeActionsResponse = {\n  actions: [],\n  documentation: undefined\n};\nexport function getCodeActions(model, rangeOrSelection, trigger, progress, token) {\n  var _a;\n\n  const filter = trigger.filter || {};\n  const codeActionContext = {\n    only: (_a = filter.include) === null || _a === void 0 ? void 0 : _a.value,\n    trigger: trigger.type\n  };\n  const cts = new TextModelCancellationTokenSource(model, token);\n  const providers = getCodeActionProviders(model, filter);\n  const disposables = new DisposableStore();\n  const promises = providers.map(provider => __awaiter(this, void 0, void 0, function* () {\n    try {\n      progress.report(provider);\n      const providedCodeActions = yield provider.provideCodeActions(model, rangeOrSelection, codeActionContext, cts.token);\n\n      if (providedCodeActions) {\n        disposables.add(providedCodeActions);\n      }\n\n      if (cts.token.isCancellationRequested) {\n        return emptyCodeActionsResponse;\n      }\n\n      const filteredActions = ((providedCodeActions === null || providedCodeActions === void 0 ? void 0 : providedCodeActions.actions) || []).filter(action => action && filtersAction(filter, action));\n      const documentation = getDocumentation(provider, filteredActions, filter.include);\n      return {\n        actions: filteredActions.map(action => new CodeActionItem(action, provider)),\n        documentation\n      };\n    } catch (err) {\n      if (isCancellationError(err)) {\n        throw err;\n      }\n\n      onUnexpectedExternalError(err);\n      return emptyCodeActionsResponse;\n    }\n  }));\n  const listener = modes.CodeActionProviderRegistry.onDidChange(() => {\n    const newProviders = modes.CodeActionProviderRegistry.all(model);\n\n    if (!equals(newProviders, providers)) {\n      cts.cancel();\n    }\n  });\n  return Promise.all(promises).then(actions => {\n    const allActions = flatten(actions.map(x => x.actions));\n    const allDocumentation = coalesce(actions.map(x => x.documentation));\n    return new ManagedCodeActionSet(allActions, allDocumentation, disposables);\n  }).finally(() => {\n    listener.dispose();\n    cts.dispose();\n  });\n}\n\nfunction getCodeActionProviders(model, filter) {\n  return modes.CodeActionProviderRegistry.all(model) // Don't include providers that we know will not return code actions of interest\n  .filter(provider => {\n    if (!provider.providedCodeActionKinds) {\n      // We don't know what type of actions this provider will return.\n      return true;\n    }\n\n    return provider.providedCodeActionKinds.some(kind => mayIncludeActionsOfKind(filter, new CodeActionKind(kind)));\n  });\n}\n\nfunction getDocumentation(provider, providedCodeActions, only) {\n  if (!provider.documentation) {\n    return undefined;\n  }\n\n  const documentation = provider.documentation.map(entry => ({\n    kind: new CodeActionKind(entry.kind),\n    command: entry.command\n  }));\n\n  if (only) {\n    let currentBest;\n\n    for (const entry of documentation) {\n      if (entry.kind.contains(only)) {\n        if (!currentBest) {\n          currentBest = entry;\n        } else {\n          // Take best match\n          if (currentBest.kind.contains(entry.kind)) {\n            currentBest = entry;\n          }\n        }\n      }\n    }\n\n    if (currentBest) {\n      return currentBest === null || currentBest === void 0 ? void 0 : currentBest.command;\n    }\n  } // Otherwise, check to see if any of the provided actions match.\n\n\n  for (const action of providedCodeActions) {\n    if (!action.kind) {\n      continue;\n    }\n\n    for (const entry of documentation) {\n      if (entry.kind.contains(new CodeActionKind(action.kind))) {\n        return entry.command;\n      }\n    }\n  }\n\n  return undefined;\n}\n\nCommandsRegistry.registerCommand('_executeCodeActionProvider', function (accessor, resource, rangeOrSelection, kind, itemResolveCount) {\n  return __awaiter(this, void 0, void 0, function* () {\n    if (!(resource instanceof URI)) {\n      throw illegalArgument();\n    }\n\n    const model = accessor.get(IModelService).getModel(resource);\n\n    if (!model) {\n      throw illegalArgument();\n    }\n\n    const validatedRangeOrSelection = Selection.isISelection(rangeOrSelection) ? Selection.liftSelection(rangeOrSelection) : Range.isIRange(rangeOrSelection) ? model.validateRange(rangeOrSelection) : undefined;\n\n    if (!validatedRangeOrSelection) {\n      throw illegalArgument();\n    }\n\n    const include = typeof kind === 'string' ? new CodeActionKind(kind) : undefined;\n    const codeActionSet = yield getCodeActions(model, validatedRangeOrSelection, {\n      type: 1\n      /* Invoke */\n      ,\n      filter: {\n        includeSourceActions: true,\n        include\n      }\n    }, Progress.None, CancellationToken.None);\n    const resolving = [];\n    const resolveCount = Math.min(codeActionSet.validActions.length, typeof itemResolveCount === 'number' ? itemResolveCount : 0);\n\n    for (let i = 0; i < resolveCount; i++) {\n      resolving.push(codeActionSet.validActions[i].resolve(CancellationToken.None));\n    }\n\n    try {\n      yield Promise.all(resolving);\n      return codeActionSet.validActions.map(item => item.action);\n    } finally {\n      setTimeout(() => codeActionSet.dispose(), 100);\n    }\n  });\n});","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/browser/codeAction.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","coalesce","equals","flatten","isNonEmptyArray","CancellationToken","illegalArgument","isCancellationError","onUnexpectedExternalError","Disposable","DisposableStore","URI","TextModelCancellationTokenSource","Range","Selection","modes","IModelService","CommandsRegistry","Progress","CodeActionKind","filtersAction","mayIncludeActionsOfKind","codeActionCommandId","refactorCommandId","sourceActionCommandId","organizeImportsCommandId","fixAllCommandId","CodeActionItem","constructor","action","provider","token","_a","resolveCodeAction","edit","err","ManagedCodeActionSet","actions","documentation","disposables","_register","allActions","sort","codeActionsComparator","validActions","filter","disabled","a","b","isPreferred","diagnostics","message","localeCompare","hasAutoFix","some","fix","kind","QuickFix","contains","emptyCodeActionsResponse","undefined","getCodeActions","model","rangeOrSelection","trigger","progress","codeActionContext","only","include","type","cts","providers","getCodeActionProviders","promises","map","report","providedCodeActions","provideCodeActions","add","isCancellationRequested","filteredActions","getDocumentation","listener","CodeActionProviderRegistry","onDidChange","newProviders","all","cancel","x","allDocumentation","finally","dispose","providedCodeActionKinds","entry","command","currentBest","registerCommand","accessor","resource","itemResolveCount","get","getModel","validatedRangeOrSelection","isISelection","liftSelection","isIRange","validateRange","codeActionSet","includeSourceActions","None","resolving","resolveCount","Math","min","length","i","push","item","setTimeout"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { coalesce, equals, flatten, isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { illegalArgument, isCancellationError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { TextModelCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport * as modes from '../../../common/languages.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { Progress } from '../../../../platform/progress/common/progress.js';\nimport { CodeActionKind, filtersAction, mayIncludeActionsOfKind } from './types.js';\nexport const codeActionCommandId = 'editor.action.codeAction';\nexport const refactorCommandId = 'editor.action.refactor';\nexport const sourceActionCommandId = 'editor.action.sourceAction';\nexport const organizeImportsCommandId = 'editor.action.organizeImports';\nexport const fixAllCommandId = 'editor.action.fixAll';\nexport class CodeActionItem {\n    constructor(action, provider) {\n        this.action = action;\n        this.provider = provider;\n    }\n    resolve(token) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (((_a = this.provider) === null || _a === void 0 ? void 0 : _a.resolveCodeAction) && !this.action.edit) {\n                let action;\n                try {\n                    action = yield this.provider.resolveCodeAction(this.action, token);\n                }\n                catch (err) {\n                    onUnexpectedExternalError(err);\n                }\n                if (action) {\n                    this.action.edit = action.edit;\n                }\n            }\n            return this;\n        });\n    }\n}\nclass ManagedCodeActionSet extends Disposable {\n    constructor(actions, documentation, disposables) {\n        super();\n        this.documentation = documentation;\n        this._register(disposables);\n        this.allActions = [...actions].sort(ManagedCodeActionSet.codeActionsComparator);\n        this.validActions = this.allActions.filter(({ action }) => !action.disabled);\n    }\n    static codeActionsComparator({ action: a }, { action: b }) {\n        if (a.isPreferred && !b.isPreferred) {\n            return -1;\n        }\n        else if (!a.isPreferred && b.isPreferred) {\n            return 1;\n        }\n        if (isNonEmptyArray(a.diagnostics)) {\n            if (isNonEmptyArray(b.diagnostics)) {\n                return a.diagnostics[0].message.localeCompare(b.diagnostics[0].message);\n            }\n            else {\n                return -1;\n            }\n        }\n        else if (isNonEmptyArray(b.diagnostics)) {\n            return 1;\n        }\n        else {\n            return 0; // both have no diagnostics\n        }\n    }\n    get hasAutoFix() {\n        return this.validActions.some(({ action: fix }) => !!fix.kind && CodeActionKind.QuickFix.contains(new CodeActionKind(fix.kind)) && !!fix.isPreferred);\n    }\n}\nconst emptyCodeActionsResponse = { actions: [], documentation: undefined };\nexport function getCodeActions(model, rangeOrSelection, trigger, progress, token) {\n    var _a;\n    const filter = trigger.filter || {};\n    const codeActionContext = {\n        only: (_a = filter.include) === null || _a === void 0 ? void 0 : _a.value,\n        trigger: trigger.type,\n    };\n    const cts = new TextModelCancellationTokenSource(model, token);\n    const providers = getCodeActionProviders(model, filter);\n    const disposables = new DisposableStore();\n    const promises = providers.map((provider) => __awaiter(this, void 0, void 0, function* () {\n        try {\n            progress.report(provider);\n            const providedCodeActions = yield provider.provideCodeActions(model, rangeOrSelection, codeActionContext, cts.token);\n            if (providedCodeActions) {\n                disposables.add(providedCodeActions);\n            }\n            if (cts.token.isCancellationRequested) {\n                return emptyCodeActionsResponse;\n            }\n            const filteredActions = ((providedCodeActions === null || providedCodeActions === void 0 ? void 0 : providedCodeActions.actions) || []).filter(action => action && filtersAction(filter, action));\n            const documentation = getDocumentation(provider, filteredActions, filter.include);\n            return {\n                actions: filteredActions.map(action => new CodeActionItem(action, provider)),\n                documentation\n            };\n        }\n        catch (err) {\n            if (isCancellationError(err)) {\n                throw err;\n            }\n            onUnexpectedExternalError(err);\n            return emptyCodeActionsResponse;\n        }\n    }));\n    const listener = modes.CodeActionProviderRegistry.onDidChange(() => {\n        const newProviders = modes.CodeActionProviderRegistry.all(model);\n        if (!equals(newProviders, providers)) {\n            cts.cancel();\n        }\n    });\n    return Promise.all(promises).then(actions => {\n        const allActions = flatten(actions.map(x => x.actions));\n        const allDocumentation = coalesce(actions.map(x => x.documentation));\n        return new ManagedCodeActionSet(allActions, allDocumentation, disposables);\n    })\n        .finally(() => {\n        listener.dispose();\n        cts.dispose();\n    });\n}\nfunction getCodeActionProviders(model, filter) {\n    return modes.CodeActionProviderRegistry.all(model)\n        // Don't include providers that we know will not return code actions of interest\n        .filter(provider => {\n        if (!provider.providedCodeActionKinds) {\n            // We don't know what type of actions this provider will return.\n            return true;\n        }\n        return provider.providedCodeActionKinds.some(kind => mayIncludeActionsOfKind(filter, new CodeActionKind(kind)));\n    });\n}\nfunction getDocumentation(provider, providedCodeActions, only) {\n    if (!provider.documentation) {\n        return undefined;\n    }\n    const documentation = provider.documentation.map(entry => ({ kind: new CodeActionKind(entry.kind), command: entry.command }));\n    if (only) {\n        let currentBest;\n        for (const entry of documentation) {\n            if (entry.kind.contains(only)) {\n                if (!currentBest) {\n                    currentBest = entry;\n                }\n                else {\n                    // Take best match\n                    if (currentBest.kind.contains(entry.kind)) {\n                        currentBest = entry;\n                    }\n                }\n            }\n        }\n        if (currentBest) {\n            return currentBest === null || currentBest === void 0 ? void 0 : currentBest.command;\n        }\n    }\n    // Otherwise, check to see if any of the provided actions match.\n    for (const action of providedCodeActions) {\n        if (!action.kind) {\n            continue;\n        }\n        for (const entry of documentation) {\n            if (entry.kind.contains(new CodeActionKind(action.kind))) {\n                return entry.command;\n            }\n        }\n    }\n    return undefined;\n}\nCommandsRegistry.registerCommand('_executeCodeActionProvider', function (accessor, resource, rangeOrSelection, kind, itemResolveCount) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!(resource instanceof URI)) {\n            throw illegalArgument();\n        }\n        const model = accessor.get(IModelService).getModel(resource);\n        if (!model) {\n            throw illegalArgument();\n        }\n        const validatedRangeOrSelection = Selection.isISelection(rangeOrSelection)\n            ? Selection.liftSelection(rangeOrSelection)\n            : Range.isIRange(rangeOrSelection)\n                ? model.validateRange(rangeOrSelection)\n                : undefined;\n        if (!validatedRangeOrSelection) {\n            throw illegalArgument();\n        }\n        const include = typeof kind === 'string' ? new CodeActionKind(kind) : undefined;\n        const codeActionSet = yield getCodeActions(model, validatedRangeOrSelection, { type: 1 /* Invoke */, filter: { includeSourceActions: true, include } }, Progress.None, CancellationToken.None);\n        const resolving = [];\n        const resolveCount = Math.min(codeActionSet.validActions.length, typeof itemResolveCount === 'number' ? itemResolveCount : 0);\n        for (let i = 0; i < resolveCount; i++) {\n            resolving.push(codeActionSet.validActions[i].resolve(CancellationToken.None));\n        }\n        try {\n            yield Promise.all(resolving);\n            return codeActionSet.validActions.map(item => item.action);\n        }\n        finally {\n            setTimeout(() => codeActionSet.dispose(), 100);\n        }\n    });\n});\n"]},"metadata":{},"sourceType":"module"}