{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, addDisposableListener, append, EventHelper, EventType } from '../../dom.js';\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\nimport { EventType as GestureEventType, Gesture } from '../../touch.js';\nimport { ActionRunner } from '../../../common/actions.js';\nimport { Emitter } from '../../../common/event.js';\nimport './dropdown.css';\nexport class BaseDropdown extends ActionRunner {\n  constructor(container, options) {\n    super();\n    this._onDidChangeVisibility = this._register(new Emitter());\n    this.onDidChangeVisibility = this._onDidChangeVisibility.event;\n    this._element = append(container, $('.monaco-dropdown'));\n    this._label = append(this._element, $('.dropdown-label'));\n    let labelRenderer = options.labelRenderer;\n\n    if (!labelRenderer) {\n      labelRenderer = container => {\n        container.textContent = options.label || '';\n        return null;\n      };\n    }\n\n    for (const event of [EventType.CLICK, EventType.MOUSE_DOWN, GestureEventType.Tap]) {\n      this._register(addDisposableListener(this.element, event, e => EventHelper.stop(e, true))); // prevent default click behaviour to trigger\n\n    }\n\n    for (const event of [EventType.MOUSE_DOWN, GestureEventType.Tap]) {\n      this._register(addDisposableListener(this._label, event, e => {\n        if (e instanceof MouseEvent && e.detail > 1) {\n          return; // prevent multiple clicks to open multiple context menus (https://github.com/microsoft/vscode/issues/41363)\n        }\n\n        if (this.visible) {\n          this.hide();\n        } else {\n          this.show();\n        }\n      }));\n    }\n\n    this._register(addDisposableListener(this._label, EventType.KEY_UP, e => {\n      const event = new StandardKeyboardEvent(e);\n\n      if (event.equals(3\n      /* Enter */\n      ) || event.equals(10\n      /* Space */\n      )) {\n        EventHelper.stop(e, true); // https://github.com/microsoft/vscode/issues/57997\n\n        if (this.visible) {\n          this.hide();\n        } else {\n          this.show();\n        }\n      }\n    }));\n\n    const cleanupFn = labelRenderer(this._label);\n\n    if (cleanupFn) {\n      this._register(cleanupFn);\n    }\n\n    this._register(Gesture.addTarget(this._label));\n  }\n\n  get element() {\n    return this._element;\n  }\n\n  show() {\n    if (!this.visible) {\n      this.visible = true;\n\n      this._onDidChangeVisibility.fire(true);\n    }\n  }\n\n  hide() {\n    if (this.visible) {\n      this.visible = false;\n\n      this._onDidChangeVisibility.fire(false);\n    }\n  }\n\n  dispose() {\n    super.dispose();\n    this.hide();\n\n    if (this.boxContainer) {\n      this.boxContainer.remove();\n      this.boxContainer = undefined;\n    }\n\n    if (this.contents) {\n      this.contents.remove();\n      this.contents = undefined;\n    }\n\n    if (this._label) {\n      this._label.remove();\n\n      this._label = undefined;\n    }\n  }\n\n}\nexport class DropdownMenu extends BaseDropdown {\n  constructor(container, options) {\n    super(container, options);\n    this._actions = [];\n    this._contextMenuProvider = options.contextMenuProvider;\n    this.actions = options.actions || [];\n    this.actionProvider = options.actionProvider;\n    this.menuClassName = options.menuClassName || '';\n    this.menuAsChild = !!options.menuAsChild;\n  }\n\n  set menuOptions(options) {\n    this._menuOptions = options;\n  }\n\n  get menuOptions() {\n    return this._menuOptions;\n  }\n\n  get actions() {\n    if (this.actionProvider) {\n      return this.actionProvider.getActions();\n    }\n\n    return this._actions;\n  }\n\n  set actions(actions) {\n    this._actions = actions;\n  }\n\n  show() {\n    super.show();\n    this.element.classList.add('active');\n\n    this._contextMenuProvider.showContextMenu({\n      getAnchor: () => this.element,\n      getActions: () => this.actions,\n      getActionsContext: () => this.menuOptions ? this.menuOptions.context : null,\n      getActionViewItem: action => this.menuOptions && this.menuOptions.actionViewItemProvider ? this.menuOptions.actionViewItemProvider(action) : undefined,\n      getKeyBinding: action => this.menuOptions && this.menuOptions.getKeyBinding ? this.menuOptions.getKeyBinding(action) : undefined,\n      getMenuClassName: () => this.menuClassName,\n      onHide: () => this.onHide(),\n      actionRunner: this.menuOptions ? this.menuOptions.actionRunner : undefined,\n      anchorAlignment: this.menuOptions ? this.menuOptions.anchorAlignment : 0\n      /* LEFT */\n      ,\n      domForShadowRoot: this.menuAsChild ? this.element : undefined\n    });\n  }\n\n  hide() {\n    super.hide();\n  }\n\n  onHide() {\n    this.hide();\n    this.element.classList.remove('active');\n  }\n\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/base/browser/ui/dropdown/dropdown.js"],"names":["$","addDisposableListener","append","EventHelper","EventType","StandardKeyboardEvent","GestureEventType","Gesture","ActionRunner","Emitter","BaseDropdown","constructor","container","options","_onDidChangeVisibility","_register","onDidChangeVisibility","event","_element","_label","labelRenderer","textContent","label","CLICK","MOUSE_DOWN","Tap","element","e","stop","MouseEvent","detail","visible","hide","show","KEY_UP","equals","cleanupFn","addTarget","fire","dispose","boxContainer","remove","undefined","contents","DropdownMenu","_actions","_contextMenuProvider","contextMenuProvider","actions","actionProvider","menuClassName","menuAsChild","menuOptions","_menuOptions","getActions","classList","add","showContextMenu","getAnchor","getActionsContext","context","getActionViewItem","action","actionViewItemProvider","getKeyBinding","getMenuClassName","onHide","actionRunner","anchorAlignment","domForShadowRoot"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,CAAT,EAAYC,qBAAZ,EAAmCC,MAAnC,EAA2CC,WAA3C,EAAwDC,SAAxD,QAAyE,cAAzE;AACA,SAASC,qBAAT,QAAsC,wBAAtC;AACA,SAASD,SAAS,IAAIE,gBAAtB,EAAwCC,OAAxC,QAAuD,gBAAvD;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,OAAO,gBAAP;AACA,OAAO,MAAMC,YAAN,SAA2BF,YAA3B,CAAwC;AAC3CG,EAAAA,WAAW,CAACC,SAAD,EAAYC,OAAZ,EAAqB;AAC5B;AACA,SAAKC,sBAAL,GAA8B,KAAKC,SAAL,CAAe,IAAIN,OAAJ,EAAf,CAA9B;AACA,SAAKO,qBAAL,GAA6B,KAAKF,sBAAL,CAA4BG,KAAzD;AACA,SAAKC,QAAL,GAAgBhB,MAAM,CAACU,SAAD,EAAYZ,CAAC,CAAC,kBAAD,CAAb,CAAtB;AACA,SAAKmB,MAAL,GAAcjB,MAAM,CAAC,KAAKgB,QAAN,EAAgBlB,CAAC,CAAC,iBAAD,CAAjB,CAApB;AACA,QAAIoB,aAAa,GAAGP,OAAO,CAACO,aAA5B;;AACA,QAAI,CAACA,aAAL,EAAoB;AAChBA,MAAAA,aAAa,GAAIR,SAAD,IAAe;AAC3BA,QAAAA,SAAS,CAACS,WAAV,GAAwBR,OAAO,CAACS,KAAR,IAAiB,EAAzC;AACA,eAAO,IAAP;AACH,OAHD;AAIH;;AACD,SAAK,MAAML,KAAX,IAAoB,CAACb,SAAS,CAACmB,KAAX,EAAkBnB,SAAS,CAACoB,UAA5B,EAAwClB,gBAAgB,CAACmB,GAAzD,CAApB,EAAmF;AAC/E,WAAKV,SAAL,CAAed,qBAAqB,CAAC,KAAKyB,OAAN,EAAeT,KAAf,EAAsBU,CAAC,IAAIxB,WAAW,CAACyB,IAAZ,CAAiBD,CAAjB,EAAoB,IAApB,CAA3B,CAApC,EAD+E,CACa;;AAC/F;;AACD,SAAK,MAAMV,KAAX,IAAoB,CAACb,SAAS,CAACoB,UAAX,EAAuBlB,gBAAgB,CAACmB,GAAxC,CAApB,EAAkE;AAC9D,WAAKV,SAAL,CAAed,qBAAqB,CAAC,KAAKkB,MAAN,EAAcF,KAAd,EAAqBU,CAAC,IAAI;AAC1D,YAAIA,CAAC,YAAYE,UAAb,IAA2BF,CAAC,CAACG,MAAF,GAAW,CAA1C,EAA6C;AACzC,iBADyC,CACjC;AACX;;AACD,YAAI,KAAKC,OAAT,EAAkB;AACd,eAAKC,IAAL;AACH,SAFD,MAGK;AACD,eAAKC,IAAL;AACH;AACJ,OAVmC,CAApC;AAWH;;AACD,SAAKlB,SAAL,CAAed,qBAAqB,CAAC,KAAKkB,MAAN,EAAcf,SAAS,CAAC8B,MAAxB,EAAgCP,CAAC,IAAI;AACrE,YAAMV,KAAK,GAAG,IAAIZ,qBAAJ,CAA0BsB,CAA1B,CAAd;;AACA,UAAIV,KAAK,CAACkB,MAAN,CAAa;AAAE;AAAf,WAA+BlB,KAAK,CAACkB,MAAN,CAAa;AAAG;AAAhB,OAAnC,EAAiE;AAC7DhC,QAAAA,WAAW,CAACyB,IAAZ,CAAiBD,CAAjB,EAAoB,IAApB,EAD6D,CAClC;;AAC3B,YAAI,KAAKI,OAAT,EAAkB;AACd,eAAKC,IAAL;AACH,SAFD,MAGK;AACD,eAAKC,IAAL;AACH;AACJ;AACJ,KAXmC,CAApC;;AAYA,UAAMG,SAAS,GAAGhB,aAAa,CAAC,KAAKD,MAAN,CAA/B;;AACA,QAAIiB,SAAJ,EAAe;AACX,WAAKrB,SAAL,CAAeqB,SAAf;AACH;;AACD,SAAKrB,SAAL,CAAeR,OAAO,CAAC8B,SAAR,CAAkB,KAAKlB,MAAvB,CAAf;AACH;;AACU,MAAPO,OAAO,GAAG;AACV,WAAO,KAAKR,QAAZ;AACH;;AACDe,EAAAA,IAAI,GAAG;AACH,QAAI,CAAC,KAAKF,OAAV,EAAmB;AACf,WAAKA,OAAL,GAAe,IAAf;;AACA,WAAKjB,sBAAL,CAA4BwB,IAA5B,CAAiC,IAAjC;AACH;AACJ;;AACDN,EAAAA,IAAI,GAAG;AACH,QAAI,KAAKD,OAAT,EAAkB;AACd,WAAKA,OAAL,GAAe,KAAf;;AACA,WAAKjB,sBAAL,CAA4BwB,IAA5B,CAAiC,KAAjC;AACH;AACJ;;AACDC,EAAAA,OAAO,GAAG;AACN,UAAMA,OAAN;AACA,SAAKP,IAAL;;AACA,QAAI,KAAKQ,YAAT,EAAuB;AACnB,WAAKA,YAAL,CAAkBC,MAAlB;AACA,WAAKD,YAAL,GAAoBE,SAApB;AACH;;AACD,QAAI,KAAKC,QAAT,EAAmB;AACf,WAAKA,QAAL,CAAcF,MAAd;AACA,WAAKE,QAAL,GAAgBD,SAAhB;AACH;;AACD,QAAI,KAAKvB,MAAT,EAAiB;AACb,WAAKA,MAAL,CAAYsB,MAAZ;;AACA,WAAKtB,MAAL,GAAcuB,SAAd;AACH;AACJ;;AA9E0C;AAgF/C,OAAO,MAAME,YAAN,SAA2BlC,YAA3B,CAAwC;AAC3CC,EAAAA,WAAW,CAACC,SAAD,EAAYC,OAAZ,EAAqB;AAC5B,UAAMD,SAAN,EAAiBC,OAAjB;AACA,SAAKgC,QAAL,GAAgB,EAAhB;AACA,SAAKC,oBAAL,GAA4BjC,OAAO,CAACkC,mBAApC;AACA,SAAKC,OAAL,GAAenC,OAAO,CAACmC,OAAR,IAAmB,EAAlC;AACA,SAAKC,cAAL,GAAsBpC,OAAO,CAACoC,cAA9B;AACA,SAAKC,aAAL,GAAqBrC,OAAO,CAACqC,aAAR,IAAyB,EAA9C;AACA,SAAKC,WAAL,GAAmB,CAAC,CAACtC,OAAO,CAACsC,WAA7B;AACH;;AACc,MAAXC,WAAW,CAACvC,OAAD,EAAU;AACrB,SAAKwC,YAAL,GAAoBxC,OAApB;AACH;;AACc,MAAXuC,WAAW,GAAG;AACd,WAAO,KAAKC,YAAZ;AACH;;AACU,MAAPL,OAAO,GAAG;AACV,QAAI,KAAKC,cAAT,EAAyB;AACrB,aAAO,KAAKA,cAAL,CAAoBK,UAApB,EAAP;AACH;;AACD,WAAO,KAAKT,QAAZ;AACH;;AACU,MAAPG,OAAO,CAACA,OAAD,EAAU;AACjB,SAAKH,QAAL,GAAgBG,OAAhB;AACH;;AACDf,EAAAA,IAAI,GAAG;AACH,UAAMA,IAAN;AACA,SAAKP,OAAL,CAAa6B,SAAb,CAAuBC,GAAvB,CAA2B,QAA3B;;AACA,SAAKV,oBAAL,CAA0BW,eAA1B,CAA0C;AACtCC,MAAAA,SAAS,EAAE,MAAM,KAAKhC,OADgB;AAEtC4B,MAAAA,UAAU,EAAE,MAAM,KAAKN,OAFe;AAGtCW,MAAAA,iBAAiB,EAAE,MAAM,KAAKP,WAAL,GAAmB,KAAKA,WAAL,CAAiBQ,OAApC,GAA8C,IAHjC;AAItCC,MAAAA,iBAAiB,EAAEC,MAAM,IAAI,KAAKV,WAAL,IAAoB,KAAKA,WAAL,CAAiBW,sBAArC,GAA8D,KAAKX,WAAL,CAAiBW,sBAAjB,CAAwCD,MAAxC,CAA9D,GAAgHpB,SAJvG;AAKtCsB,MAAAA,aAAa,EAAEF,MAAM,IAAI,KAAKV,WAAL,IAAoB,KAAKA,WAAL,CAAiBY,aAArC,GAAqD,KAAKZ,WAAL,CAAiBY,aAAjB,CAA+BF,MAA/B,CAArD,GAA8FpB,SALjF;AAMtCuB,MAAAA,gBAAgB,EAAE,MAAM,KAAKf,aANS;AAOtCgB,MAAAA,MAAM,EAAE,MAAM,KAAKA,MAAL,EAPwB;AAQtCC,MAAAA,YAAY,EAAE,KAAKf,WAAL,GAAmB,KAAKA,WAAL,CAAiBe,YAApC,GAAmDzB,SAR3B;AAStC0B,MAAAA,eAAe,EAAE,KAAKhB,WAAL,GAAmB,KAAKA,WAAL,CAAiBgB,eAApC,GAAsD;AAAE;AATnC;AAUtCC,MAAAA,gBAAgB,EAAE,KAAKlB,WAAL,GAAmB,KAAKzB,OAAxB,GAAkCgB;AAVd,KAA1C;AAYH;;AACDV,EAAAA,IAAI,GAAG;AACH,UAAMA,IAAN;AACH;;AACDkC,EAAAA,MAAM,GAAG;AACL,SAAKlC,IAAL;AACA,SAAKN,OAAL,CAAa6B,SAAb,CAAuBd,MAAvB,CAA8B,QAA9B;AACH;;AA/C0C","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, addDisposableListener, append, EventHelper, EventType } from '../../dom.js';\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\nimport { EventType as GestureEventType, Gesture } from '../../touch.js';\nimport { ActionRunner } from '../../../common/actions.js';\nimport { Emitter } from '../../../common/event.js';\nimport './dropdown.css';\nexport class BaseDropdown extends ActionRunner {\n    constructor(container, options) {\n        super();\n        this._onDidChangeVisibility = this._register(new Emitter());\n        this.onDidChangeVisibility = this._onDidChangeVisibility.event;\n        this._element = append(container, $('.monaco-dropdown'));\n        this._label = append(this._element, $('.dropdown-label'));\n        let labelRenderer = options.labelRenderer;\n        if (!labelRenderer) {\n            labelRenderer = (container) => {\n                container.textContent = options.label || '';\n                return null;\n            };\n        }\n        for (const event of [EventType.CLICK, EventType.MOUSE_DOWN, GestureEventType.Tap]) {\n            this._register(addDisposableListener(this.element, event, e => EventHelper.stop(e, true))); // prevent default click behaviour to trigger\n        }\n        for (const event of [EventType.MOUSE_DOWN, GestureEventType.Tap]) {\n            this._register(addDisposableListener(this._label, event, e => {\n                if (e instanceof MouseEvent && e.detail > 1) {\n                    return; // prevent multiple clicks to open multiple context menus (https://github.com/microsoft/vscode/issues/41363)\n                }\n                if (this.visible) {\n                    this.hide();\n                }\n                else {\n                    this.show();\n                }\n            }));\n        }\n        this._register(addDisposableListener(this._label, EventType.KEY_UP, e => {\n            const event = new StandardKeyboardEvent(e);\n            if (event.equals(3 /* Enter */) || event.equals(10 /* Space */)) {\n                EventHelper.stop(e, true); // https://github.com/microsoft/vscode/issues/57997\n                if (this.visible) {\n                    this.hide();\n                }\n                else {\n                    this.show();\n                }\n            }\n        }));\n        const cleanupFn = labelRenderer(this._label);\n        if (cleanupFn) {\n            this._register(cleanupFn);\n        }\n        this._register(Gesture.addTarget(this._label));\n    }\n    get element() {\n        return this._element;\n    }\n    show() {\n        if (!this.visible) {\n            this.visible = true;\n            this._onDidChangeVisibility.fire(true);\n        }\n    }\n    hide() {\n        if (this.visible) {\n            this.visible = false;\n            this._onDidChangeVisibility.fire(false);\n        }\n    }\n    dispose() {\n        super.dispose();\n        this.hide();\n        if (this.boxContainer) {\n            this.boxContainer.remove();\n            this.boxContainer = undefined;\n        }\n        if (this.contents) {\n            this.contents.remove();\n            this.contents = undefined;\n        }\n        if (this._label) {\n            this._label.remove();\n            this._label = undefined;\n        }\n    }\n}\nexport class DropdownMenu extends BaseDropdown {\n    constructor(container, options) {\n        super(container, options);\n        this._actions = [];\n        this._contextMenuProvider = options.contextMenuProvider;\n        this.actions = options.actions || [];\n        this.actionProvider = options.actionProvider;\n        this.menuClassName = options.menuClassName || '';\n        this.menuAsChild = !!options.menuAsChild;\n    }\n    set menuOptions(options) {\n        this._menuOptions = options;\n    }\n    get menuOptions() {\n        return this._menuOptions;\n    }\n    get actions() {\n        if (this.actionProvider) {\n            return this.actionProvider.getActions();\n        }\n        return this._actions;\n    }\n    set actions(actions) {\n        this._actions = actions;\n    }\n    show() {\n        super.show();\n        this.element.classList.add('active');\n        this._contextMenuProvider.showContextMenu({\n            getAnchor: () => this.element,\n            getActions: () => this.actions,\n            getActionsContext: () => this.menuOptions ? this.menuOptions.context : null,\n            getActionViewItem: action => this.menuOptions && this.menuOptions.actionViewItemProvider ? this.menuOptions.actionViewItemProvider(action) : undefined,\n            getKeyBinding: action => this.menuOptions && this.menuOptions.getKeyBinding ? this.menuOptions.getKeyBinding(action) : undefined,\n            getMenuClassName: () => this.menuClassName,\n            onHide: () => this.onHide(),\n            actionRunner: this.menuOptions ? this.menuOptions.actionRunner : undefined,\n            anchorAlignment: this.menuOptions ? this.menuOptions.anchorAlignment : 0 /* LEFT */,\n            domForShadowRoot: this.menuAsChild ? this.element : undefined\n        });\n    }\n    hide() {\n        super.hide();\n    }\n    onHide() {\n        this.hide();\n        this.element.classList.remove('active');\n    }\n}\n"]},"metadata":{},"sourceType":"module"}