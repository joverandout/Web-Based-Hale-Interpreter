{"ast":null,"code":"/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n// src/basic-languages/graphql/graphql.ts\nvar conf = {\n  comments: {\n    lineComment: \"#\"\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"\"\"',\n    close: '\"\"\"',\n    notIn: [\"string\", \"comment\"]\n  }, {\n    open: '\"',\n    close: '\"',\n    notIn: [\"string\", \"comment\"]\n  }],\n  surroundingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"\"\"',\n    close: '\"\"\"'\n  }, {\n    open: '\"',\n    close: '\"'\n  }],\n  folding: {\n    offSide: true\n  }\n};\nvar language = {\n  defaultToken: \"invalid\",\n  tokenPostfix: \".gql\",\n  keywords: [\"null\", \"true\", \"false\", \"query\", \"mutation\", \"subscription\", \"extend\", \"schema\", \"directive\", \"scalar\", \"type\", \"interface\", \"union\", \"enum\", \"input\", \"implements\", \"fragment\", \"on\"],\n  typeKeywords: [\"Int\", \"Float\", \"String\", \"Boolean\", \"ID\"],\n  directiveLocations: [\"SCHEMA\", \"SCALAR\", \"OBJECT\", \"FIELD_DEFINITION\", \"ARGUMENT_DEFINITION\", \"INTERFACE\", \"UNION\", \"ENUM\", \"ENUM_VALUE\", \"INPUT_OBJECT\", \"INPUT_FIELD_DEFINITION\", \"QUERY\", \"MUTATION\", \"SUBSCRIPTION\", \"FIELD\", \"FRAGMENT_DEFINITION\", \"FRAGMENT_SPREAD\", \"INLINE_FRAGMENT\", \"VARIABLE_DEFINITION\"],\n  operators: [\"=\", \"!\", \"?\", \":\", \"&\", \"|\"],\n  symbols: /[=!?:&|]+/,\n  escapes: /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9A-Fa-f]{4})/,\n  tokenizer: {\n    root: [[/[a-z_][\\w$]*/, {\n      cases: {\n        \"@keywords\": \"keyword\",\n        \"@default\": \"key.identifier\"\n      }\n    }], [/[$][\\w$]*/, {\n      cases: {\n        \"@keywords\": \"keyword\",\n        \"@default\": \"argument.identifier\"\n      }\n    }], [/[A-Z][\\w\\$]*/, {\n      cases: {\n        \"@typeKeywords\": \"keyword\",\n        \"@default\": \"type.identifier\"\n      }\n    }], {\n      include: \"@whitespace\"\n    }, [/[{}()\\[\\]]/, \"@brackets\"], [/@symbols/, {\n      cases: {\n        \"@operators\": \"operator\",\n        \"@default\": \"\"\n      }\n    }], [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, {\n      token: \"annotation\",\n      log: \"annotation token: $0\"\n    }], [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"], [/0[xX][0-9a-fA-F]+/, \"number.hex\"], [/\\d+/, \"number\"], [/[;,.]/, \"delimiter\"], [/\"\"\"/, {\n      token: \"string\",\n      next: \"@mlstring\",\n      nextEmbedded: \"markdown\"\n    }], [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"], [/\"/, {\n      token: \"string.quote\",\n      bracket: \"@open\",\n      next: \"@string\"\n    }]],\n    mlstring: [[/[^\"]+/, \"string\"], ['\"\"\"', {\n      token: \"string\",\n      next: \"@pop\",\n      nextEmbedded: \"@pop\"\n    }]],\n    string: [[/[^\\\\\"]+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/\"/, {\n      token: \"string.quote\",\n      bracket: \"@close\",\n      next: \"@pop\"\n    }]],\n    whitespace: [[/[ \\t\\r\\n]+/, \"\"], [/#.*$/, \"comment\"]]\n  }\n};\nexport { conf, language };","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/basic-languages/graphql/graphql.js"],"names":["conf","comments","lineComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","offSide","language","defaultToken","tokenPostfix","keywords","typeKeywords","directiveLocations","operators","symbols","escapes","tokenizer","root","cases","include","token","log","next","nextEmbedded","bracket","mlstring","string","whitespace"],"mappings":"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","sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/graphql/graphql.ts\nvar conf = {\n  comments: {\n    lineComment: \"#\"\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"\"\"', close: '\"\"\"', notIn: [\"string\", \"comment\"] },\n    { open: '\"', close: '\"', notIn: [\"string\", \"comment\"] }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"\"\"', close: '\"\"\"' },\n    { open: '\"', close: '\"' }\n  ],\n  folding: {\n    offSide: true\n  }\n};\nvar language = {\n  defaultToken: \"invalid\",\n  tokenPostfix: \".gql\",\n  keywords: [\n    \"null\",\n    \"true\",\n    \"false\",\n    \"query\",\n    \"mutation\",\n    \"subscription\",\n    \"extend\",\n    \"schema\",\n    \"directive\",\n    \"scalar\",\n    \"type\",\n    \"interface\",\n    \"union\",\n    \"enum\",\n    \"input\",\n    \"implements\",\n    \"fragment\",\n    \"on\"\n  ],\n  typeKeywords: [\"Int\", \"Float\", \"String\", \"Boolean\", \"ID\"],\n  directiveLocations: [\n    \"SCHEMA\",\n    \"SCALAR\",\n    \"OBJECT\",\n    \"FIELD_DEFINITION\",\n    \"ARGUMENT_DEFINITION\",\n    \"INTERFACE\",\n    \"UNION\",\n    \"ENUM\",\n    \"ENUM_VALUE\",\n    \"INPUT_OBJECT\",\n    \"INPUT_FIELD_DEFINITION\",\n    \"QUERY\",\n    \"MUTATION\",\n    \"SUBSCRIPTION\",\n    \"FIELD\",\n    \"FRAGMENT_DEFINITION\",\n    \"FRAGMENT_SPREAD\",\n    \"INLINE_FRAGMENT\",\n    \"VARIABLE_DEFINITION\"\n  ],\n  operators: [\"=\", \"!\", \"?\", \":\", \"&\", \"|\"],\n  symbols: /[=!?:&|]+/,\n  escapes: /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9A-Fa-f]{4})/,\n  tokenizer: {\n    root: [\n      [\n        /[a-z_][\\w$]*/,\n        {\n          cases: {\n            \"@keywords\": \"keyword\",\n            \"@default\": \"key.identifier\"\n          }\n        }\n      ],\n      [\n        /[$][\\w$]*/,\n        {\n          cases: {\n            \"@keywords\": \"keyword\",\n            \"@default\": \"argument.identifier\"\n          }\n        }\n      ],\n      [\n        /[A-Z][\\w\\$]*/,\n        {\n          cases: {\n            \"@typeKeywords\": \"keyword\",\n            \"@default\": \"type.identifier\"\n          }\n        }\n      ],\n      { include: \"@whitespace\" },\n      [/[{}()\\[\\]]/, \"@brackets\"],\n      [/@symbols/, { cases: { \"@operators\": \"operator\", \"@default\": \"\" } }],\n      [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, { token: \"annotation\", log: \"annotation token: $0\" }],\n      [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"],\n      [/0[xX][0-9a-fA-F]+/, \"number.hex\"],\n      [/\\d+/, \"number\"],\n      [/[;,.]/, \"delimiter\"],\n      [/\"\"\"/, { token: \"string\", next: \"@mlstring\", nextEmbedded: \"markdown\" }],\n      [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"],\n      [/\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@string\" }]\n    ],\n    mlstring: [\n      [/[^\"]+/, \"string\"],\n      ['\"\"\"', { token: \"string\", next: \"@pop\", nextEmbedded: \"@pop\" }]\n    ],\n    string: [\n      [/[^\\\\\"]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [/\"/, { token: \"string.quote\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n    whitespace: [\n      [/[ \\t\\r\\n]+/, \"\"],\n      [/#.*$/, \"comment\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"]},"metadata":{},"sourceType":"module"}