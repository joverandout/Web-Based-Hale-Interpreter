{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../base/common/strings.js';\nimport { Range } from '../core/range.js';\nexport class Viewport {\n  constructor(top, left, width, height) {\n    this._viewportBrand = undefined;\n    this.top = top | 0;\n    this.left = left | 0;\n    this.width = width | 0;\n    this.height = height | 0;\n  }\n\n}\nexport class MinimapLinesRenderingData {\n  constructor(tabSize, data) {\n    this.tabSize = tabSize;\n    this.data = data;\n  }\n\n}\nexport class ViewLineData {\n  constructor(content, continuesWithWrappedLine, minColumn, maxColumn, startVisibleColumn, tokens, inlineDecorations) {\n    this._viewLineDataBrand = undefined;\n    this.content = content;\n    this.continuesWithWrappedLine = continuesWithWrappedLine;\n    this.minColumn = minColumn;\n    this.maxColumn = maxColumn;\n    this.startVisibleColumn = startVisibleColumn;\n    this.tokens = tokens;\n    this.inlineDecorations = inlineDecorations;\n  }\n\n}\nexport class ViewLineRenderingData {\n  constructor(minColumn, maxColumn, content, continuesWithWrappedLine, mightContainRTL, mightContainNonBasicASCII, tokens, inlineDecorations, tabSize, startVisibleColumn) {\n    this.minColumn = minColumn;\n    this.maxColumn = maxColumn;\n    this.content = content;\n    this.continuesWithWrappedLine = continuesWithWrappedLine;\n    this.isBasicASCII = ViewLineRenderingData.isBasicASCII(content, mightContainNonBasicASCII);\n    this.containsRTL = ViewLineRenderingData.containsRTL(content, this.isBasicASCII, mightContainRTL);\n    this.tokens = tokens;\n    this.inlineDecorations = inlineDecorations;\n    this.tabSize = tabSize;\n    this.startVisibleColumn = startVisibleColumn;\n  }\n\n  static isBasicASCII(lineContent, mightContainNonBasicASCII) {\n    if (mightContainNonBasicASCII) {\n      return strings.isBasicASCII(lineContent);\n    }\n\n    return true;\n  }\n\n  static containsRTL(lineContent, isBasicASCII, mightContainRTL) {\n    if (!isBasicASCII && mightContainRTL) {\n      return strings.containsRTL(lineContent);\n    }\n\n    return false;\n  }\n\n}\nexport class InlineDecoration {\n  constructor(range, inlineClassName, type) {\n    this.range = range;\n    this.inlineClassName = inlineClassName;\n    this.type = type;\n  }\n\n}\nexport class SingleLineInlineDecoration {\n  constructor(startOffset, endOffset, inlineClassName, inlineClassNameAffectsLetterSpacing) {\n    this.startOffset = startOffset;\n    this.endOffset = endOffset;\n    this.inlineClassName = inlineClassName;\n    this.inlineClassNameAffectsLetterSpacing = inlineClassNameAffectsLetterSpacing;\n  }\n\n  toInlineDecoration(lineNumber) {\n    return new InlineDecoration(new Range(lineNumber, this.startOffset + 1, lineNumber, this.endOffset + 1), this.inlineClassName, this.inlineClassNameAffectsLetterSpacing ? 3\n    /* RegularAffectingLetterSpacing */\n    : 0\n    /* Regular */\n    );\n  }\n\n}\nexport class ViewModelDecoration {\n  constructor(range, options) {\n    this._viewModelDecorationBrand = undefined;\n    this.range = range;\n    this.options = options;\n  }\n\n}\nexport class OverviewRulerDecorationsGroup {\n  constructor(color, zIndex,\n  /**\n   * Decorations are encoded in a number array using the following scheme:\n   *  - 3*i = lane\n   *  - 3*i+1 = startLineNumber\n   *  - 3*i+2 = endLineNumber\n   */\n  data) {\n    this.color = color;\n    this.zIndex = zIndex;\n    this.data = data;\n  }\n\n  static cmp(a, b) {\n    if (a.zIndex === b.zIndex) {\n      if (a.color < b.color) {\n        return -1;\n      }\n\n      if (a.color > b.color) {\n        return 1;\n      }\n\n      return 0;\n    }\n\n    return a.zIndex - b.zIndex;\n  }\n\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/common/viewModel/viewModel.js"],"names":["strings","Range","Viewport","constructor","top","left","width","height","_viewportBrand","undefined","MinimapLinesRenderingData","tabSize","data","ViewLineData","content","continuesWithWrappedLine","minColumn","maxColumn","startVisibleColumn","tokens","inlineDecorations","_viewLineDataBrand","ViewLineRenderingData","mightContainRTL","mightContainNonBasicASCII","isBasicASCII","containsRTL","lineContent","InlineDecoration","range","inlineClassName","type","SingleLineInlineDecoration","startOffset","endOffset","inlineClassNameAffectsLetterSpacing","toInlineDecoration","lineNumber","ViewModelDecoration","options","_viewModelDecorationBrand","OverviewRulerDecorationsGroup","color","zIndex","cmp","a","b"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../base/common/strings.js';\nimport { Range } from '../core/range.js';\nexport class Viewport {\n    constructor(top, left, width, height) {\n        this._viewportBrand = undefined;\n        this.top = top | 0;\n        this.left = left | 0;\n        this.width = width | 0;\n        this.height = height | 0;\n    }\n}\nexport class MinimapLinesRenderingData {\n    constructor(tabSize, data) {\n        this.tabSize = tabSize;\n        this.data = data;\n    }\n}\nexport class ViewLineData {\n    constructor(content, continuesWithWrappedLine, minColumn, maxColumn, startVisibleColumn, tokens, inlineDecorations) {\n        this._viewLineDataBrand = undefined;\n        this.content = content;\n        this.continuesWithWrappedLine = continuesWithWrappedLine;\n        this.minColumn = minColumn;\n        this.maxColumn = maxColumn;\n        this.startVisibleColumn = startVisibleColumn;\n        this.tokens = tokens;\n        this.inlineDecorations = inlineDecorations;\n    }\n}\nexport class ViewLineRenderingData {\n    constructor(minColumn, maxColumn, content, continuesWithWrappedLine, mightContainRTL, mightContainNonBasicASCII, tokens, inlineDecorations, tabSize, startVisibleColumn) {\n        this.minColumn = minColumn;\n        this.maxColumn = maxColumn;\n        this.content = content;\n        this.continuesWithWrappedLine = continuesWithWrappedLine;\n        this.isBasicASCII = ViewLineRenderingData.isBasicASCII(content, mightContainNonBasicASCII);\n        this.containsRTL = ViewLineRenderingData.containsRTL(content, this.isBasicASCII, mightContainRTL);\n        this.tokens = tokens;\n        this.inlineDecorations = inlineDecorations;\n        this.tabSize = tabSize;\n        this.startVisibleColumn = startVisibleColumn;\n    }\n    static isBasicASCII(lineContent, mightContainNonBasicASCII) {\n        if (mightContainNonBasicASCII) {\n            return strings.isBasicASCII(lineContent);\n        }\n        return true;\n    }\n    static containsRTL(lineContent, isBasicASCII, mightContainRTL) {\n        if (!isBasicASCII && mightContainRTL) {\n            return strings.containsRTL(lineContent);\n        }\n        return false;\n    }\n}\nexport class InlineDecoration {\n    constructor(range, inlineClassName, type) {\n        this.range = range;\n        this.inlineClassName = inlineClassName;\n        this.type = type;\n    }\n}\nexport class SingleLineInlineDecoration {\n    constructor(startOffset, endOffset, inlineClassName, inlineClassNameAffectsLetterSpacing) {\n        this.startOffset = startOffset;\n        this.endOffset = endOffset;\n        this.inlineClassName = inlineClassName;\n        this.inlineClassNameAffectsLetterSpacing = inlineClassNameAffectsLetterSpacing;\n    }\n    toInlineDecoration(lineNumber) {\n        return new InlineDecoration(new Range(lineNumber, this.startOffset + 1, lineNumber, this.endOffset + 1), this.inlineClassName, this.inlineClassNameAffectsLetterSpacing ? 3 /* RegularAffectingLetterSpacing */ : 0 /* Regular */);\n    }\n}\nexport class ViewModelDecoration {\n    constructor(range, options) {\n        this._viewModelDecorationBrand = undefined;\n        this.range = range;\n        this.options = options;\n    }\n}\nexport class OverviewRulerDecorationsGroup {\n    constructor(color, zIndex, \n    /**\n     * Decorations are encoded in a number array using the following scheme:\n     *  - 3*i = lane\n     *  - 3*i+1 = startLineNumber\n     *  - 3*i+2 = endLineNumber\n     */\n    data) {\n        this.color = color;\n        this.zIndex = zIndex;\n        this.data = data;\n    }\n    static cmp(a, b) {\n        if (a.zIndex === b.zIndex) {\n            if (a.color < b.color) {\n                return -1;\n            }\n            if (a.color > b.color) {\n                return 1;\n            }\n            return 0;\n        }\n        return a.zIndex - b.zIndex;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}