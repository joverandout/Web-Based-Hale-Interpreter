{"ast":null,"code":"/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n// src/basic-languages/apex/apex.ts\nvar conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }],\n  surroundingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: \"<\",\n    close: \">\"\n  }],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\n      end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\n    }\n  }\n};\nvar keywords = [\"abstract\", \"activate\", \"and\", \"any\", \"array\", \"as\", \"asc\", \"assert\", \"autonomous\", \"begin\", \"bigdecimal\", \"blob\", \"boolean\", \"break\", \"bulk\", \"by\", \"case\", \"cast\", \"catch\", \"char\", \"class\", \"collect\", \"commit\", \"const\", \"continue\", \"convertcurrency\", \"decimal\", \"default\", \"delete\", \"desc\", \"do\", \"double\", \"else\", \"end\", \"enum\", \"exception\", \"exit\", \"export\", \"extends\", \"false\", \"final\", \"finally\", \"float\", \"for\", \"from\", \"future\", \"get\", \"global\", \"goto\", \"group\", \"having\", \"hint\", \"if\", \"implements\", \"import\", \"in\", \"inner\", \"insert\", \"instanceof\", \"int\", \"interface\", \"into\", \"join\", \"last_90_days\", \"last_month\", \"last_n_days\", \"last_week\", \"like\", \"limit\", \"list\", \"long\", \"loop\", \"map\", \"merge\", \"native\", \"new\", \"next_90_days\", \"next_month\", \"next_n_days\", \"next_week\", \"not\", \"null\", \"nulls\", \"number\", \"object\", \"of\", \"on\", \"or\", \"outer\", \"override\", \"package\", \"parallel\", \"pragma\", \"private\", \"protected\", \"public\", \"retrieve\", \"return\", \"returning\", \"rollback\", \"savepoint\", \"search\", \"select\", \"set\", \"short\", \"sort\", \"stat\", \"static\", \"strictfp\", \"super\", \"switch\", \"synchronized\", \"system\", \"testmethod\", \"then\", \"this\", \"this_month\", \"this_week\", \"throw\", \"throws\", \"today\", \"tolabel\", \"tomorrow\", \"transaction\", \"transient\", \"trigger\", \"true\", \"try\", \"type\", \"undelete\", \"update\", \"upsert\", \"using\", \"virtual\", \"void\", \"volatile\", \"webservice\", \"when\", \"where\", \"while\", \"yesterday\"];\n\nvar uppercaseFirstLetter = lowercase => lowercase.charAt(0).toUpperCase() + lowercase.substr(1);\n\nvar keywordsWithCaseVariations = [];\nkeywords.forEach(lowercase => {\n  keywordsWithCaseVariations.push(lowercase);\n  keywordsWithCaseVariations.push(lowercase.toUpperCase());\n  keywordsWithCaseVariations.push(uppercaseFirstLetter(lowercase));\n});\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".apex\",\n  keywords: keywordsWithCaseVariations,\n  operators: [\"=\", \">\", \"<\", \"!\", \"~\", \"?\", \":\", \"==\", \"<=\", \">=\", \"!=\", \"&&\", \"||\", \"++\", \"--\", \"+\", \"-\", \"*\", \"/\", \"&\", \"|\", \"^\", \"%\", \"<<\", \">>\", \">>>\", \"+=\", \"-=\", \"*=\", \"/=\", \"&=\", \"|=\", \"^=\", \"%=\", \"<<=\", \">>=\", \">>>=\"],\n  symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  digits: /\\d+(_+\\d+)*/,\n  octaldigits: /[0-7]+(_+[0-7]+)*/,\n  binarydigits: /[0-1]+(_+[0-1]+)*/,\n  hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\n  tokenizer: {\n    root: [[/[a-z_$][\\w$]*/, {\n      cases: {\n        \"@keywords\": {\n          token: \"keyword.$0\"\n        },\n        \"@default\": \"identifier\"\n      }\n    }], [/[A-Z][\\w\\$]*/, {\n      cases: {\n        \"@keywords\": {\n          token: \"keyword.$0\"\n        },\n        \"@default\": \"type.identifier\"\n      }\n    }], {\n      include: \"@whitespace\"\n    }, [/[{}()\\[\\]]/, \"@brackets\"], [/[<>](?!@symbols)/, \"@brackets\"], [/@symbols/, {\n      cases: {\n        \"@operators\": \"delimiter\",\n        \"@default\": \"\"\n      }\n    }], [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, \"annotation\"], [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, \"number.float\"], [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, \"number.float\"], [/(@digits)[fFdD]/, \"number.float\"], [/(@digits)[lL]?/, \"number\"], [/[;,.]/, \"delimiter\"], [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"], [/'([^'\\\\]|\\\\.)*$/, \"string.invalid\"], [/\"/, \"string\", '@string.\"'], [/'/, \"string\", \"@string.'\"], [/'[^\\\\']'/, \"string\"], [/(')(@escapes)(')/, [\"string\", \"string.escape\", \"string\"]], [/'/, \"string.invalid\"]],\n    whitespace: [[/[ \\t\\r\\n]+/, \"\"], [/\\/\\*\\*(?!\\/)/, \"comment.doc\", \"@apexdoc\"], [/\\/\\*/, \"comment\", \"@comment\"], [/\\/\\/.*$/, \"comment\"]],\n    comment: [[/[^\\/*]+/, \"comment\"], [/\\*\\//, \"comment\", \"@pop\"], [/[\\/*]/, \"comment\"]],\n    apexdoc: [[/[^\\/*]+/, \"comment.doc\"], [/\\*\\//, \"comment.doc\", \"@pop\"], [/[\\/*]/, \"comment.doc\"]],\n    string: [[/[^\\\\\"']+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/[\"']/, {\n      cases: {\n        \"$#==$S2\": {\n          token: \"string\",\n          next: \"@pop\"\n        },\n        \"@default\": \"string\"\n      }\n    }]]\n  }\n};\nexport { conf, language };","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/basic-languages/apex/apex.js"],"names":["conf","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","folding","markers","start","RegExp","end","keywords","uppercaseFirstLetter","lowercase","charAt","toUpperCase","substr","keywordsWithCaseVariations","forEach","push","language","defaultToken","tokenPostfix","operators","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","tokenizer","root","cases","token","include","whitespace","comment","apexdoc","string","next"],"mappings":"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","sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/apex/apex.ts\nvar conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" },\n    { open: \"<\", close: \">\" }\n  ],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\n      end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\n    }\n  }\n};\nvar keywords = [\n  \"abstract\",\n  \"activate\",\n  \"and\",\n  \"any\",\n  \"array\",\n  \"as\",\n  \"asc\",\n  \"assert\",\n  \"autonomous\",\n  \"begin\",\n  \"bigdecimal\",\n  \"blob\",\n  \"boolean\",\n  \"break\",\n  \"bulk\",\n  \"by\",\n  \"case\",\n  \"cast\",\n  \"catch\",\n  \"char\",\n  \"class\",\n  \"collect\",\n  \"commit\",\n  \"const\",\n  \"continue\",\n  \"convertcurrency\",\n  \"decimal\",\n  \"default\",\n  \"delete\",\n  \"desc\",\n  \"do\",\n  \"double\",\n  \"else\",\n  \"end\",\n  \"enum\",\n  \"exception\",\n  \"exit\",\n  \"export\",\n  \"extends\",\n  \"false\",\n  \"final\",\n  \"finally\",\n  \"float\",\n  \"for\",\n  \"from\",\n  \"future\",\n  \"get\",\n  \"global\",\n  \"goto\",\n  \"group\",\n  \"having\",\n  \"hint\",\n  \"if\",\n  \"implements\",\n  \"import\",\n  \"in\",\n  \"inner\",\n  \"insert\",\n  \"instanceof\",\n  \"int\",\n  \"interface\",\n  \"into\",\n  \"join\",\n  \"last_90_days\",\n  \"last_month\",\n  \"last_n_days\",\n  \"last_week\",\n  \"like\",\n  \"limit\",\n  \"list\",\n  \"long\",\n  \"loop\",\n  \"map\",\n  \"merge\",\n  \"native\",\n  \"new\",\n  \"next_90_days\",\n  \"next_month\",\n  \"next_n_days\",\n  \"next_week\",\n  \"not\",\n  \"null\",\n  \"nulls\",\n  \"number\",\n  \"object\",\n  \"of\",\n  \"on\",\n  \"or\",\n  \"outer\",\n  \"override\",\n  \"package\",\n  \"parallel\",\n  \"pragma\",\n  \"private\",\n  \"protected\",\n  \"public\",\n  \"retrieve\",\n  \"return\",\n  \"returning\",\n  \"rollback\",\n  \"savepoint\",\n  \"search\",\n  \"select\",\n  \"set\",\n  \"short\",\n  \"sort\",\n  \"stat\",\n  \"static\",\n  \"strictfp\",\n  \"super\",\n  \"switch\",\n  \"synchronized\",\n  \"system\",\n  \"testmethod\",\n  \"then\",\n  \"this\",\n  \"this_month\",\n  \"this_week\",\n  \"throw\",\n  \"throws\",\n  \"today\",\n  \"tolabel\",\n  \"tomorrow\",\n  \"transaction\",\n  \"transient\",\n  \"trigger\",\n  \"true\",\n  \"try\",\n  \"type\",\n  \"undelete\",\n  \"update\",\n  \"upsert\",\n  \"using\",\n  \"virtual\",\n  \"void\",\n  \"volatile\",\n  \"webservice\",\n  \"when\",\n  \"where\",\n  \"while\",\n  \"yesterday\"\n];\nvar uppercaseFirstLetter = (lowercase) => lowercase.charAt(0).toUpperCase() + lowercase.substr(1);\nvar keywordsWithCaseVariations = [];\nkeywords.forEach((lowercase) => {\n  keywordsWithCaseVariations.push(lowercase);\n  keywordsWithCaseVariations.push(lowercase.toUpperCase());\n  keywordsWithCaseVariations.push(uppercaseFirstLetter(lowercase));\n});\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".apex\",\n  keywords: keywordsWithCaseVariations,\n  operators: [\n    \"=\",\n    \">\",\n    \"<\",\n    \"!\",\n    \"~\",\n    \"?\",\n    \":\",\n    \"==\",\n    \"<=\",\n    \">=\",\n    \"!=\",\n    \"&&\",\n    \"||\",\n    \"++\",\n    \"--\",\n    \"+\",\n    \"-\",\n    \"*\",\n    \"/\",\n    \"&\",\n    \"|\",\n    \"^\",\n    \"%\",\n    \"<<\",\n    \">>\",\n    \">>>\",\n    \"+=\",\n    \"-=\",\n    \"*=\",\n    \"/=\",\n    \"&=\",\n    \"|=\",\n    \"^=\",\n    \"%=\",\n    \"<<=\",\n    \">>=\",\n    \">>>=\"\n  ],\n  symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  digits: /\\d+(_+\\d+)*/,\n  octaldigits: /[0-7]+(_+[0-7]+)*/,\n  binarydigits: /[0-1]+(_+[0-1]+)*/,\n  hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\n  tokenizer: {\n    root: [\n      [\n        /[a-z_$][\\w$]*/,\n        {\n          cases: {\n            \"@keywords\": { token: \"keyword.$0\" },\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      [\n        /[A-Z][\\w\\$]*/,\n        {\n          cases: {\n            \"@keywords\": { token: \"keyword.$0\" },\n            \"@default\": \"type.identifier\"\n          }\n        }\n      ],\n      { include: \"@whitespace\" },\n      [/[{}()\\[\\]]/, \"@brackets\"],\n      [/[<>](?!@symbols)/, \"@brackets\"],\n      [\n        /@symbols/,\n        {\n          cases: {\n            \"@operators\": \"delimiter\",\n            \"@default\": \"\"\n          }\n        }\n      ],\n      [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, \"annotation\"],\n      [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, \"number.float\"],\n      [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, \"number.float\"],\n      [/(@digits)[fFdD]/, \"number.float\"],\n      [/(@digits)[lL]?/, \"number\"],\n      [/[;,.]/, \"delimiter\"],\n      [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"],\n      [/'([^'\\\\]|\\\\.)*$/, \"string.invalid\"],\n      [/\"/, \"string\", '@string.\"'],\n      [/'/, \"string\", \"@string.'\"],\n      [/'[^\\\\']'/, \"string\"],\n      [/(')(@escapes)(')/, [\"string\", \"string.escape\", \"string\"]],\n      [/'/, \"string.invalid\"]\n    ],\n    whitespace: [\n      [/[ \\t\\r\\n]+/, \"\"],\n      [/\\/\\*\\*(?!\\/)/, \"comment.doc\", \"@apexdoc\"],\n      [/\\/\\*/, \"comment\", \"@comment\"],\n      [/\\/\\/.*$/, \"comment\"]\n    ],\n    comment: [\n      [/[^\\/*]+/, \"comment\"],\n      [/\\*\\//, \"comment\", \"@pop\"],\n      [/[\\/*]/, \"comment\"]\n    ],\n    apexdoc: [\n      [/[^\\/*]+/, \"comment.doc\"],\n      [/\\*\\//, \"comment.doc\", \"@pop\"],\n      [/[\\/*]/, \"comment.doc\"]\n    ],\n    string: [\n      [/[^\\\\\"']+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [\n        /[\"']/,\n        {\n          cases: {\n            \"$#==$S2\": { token: \"string\", next: \"@pop\" },\n            \"@default\": \"string\"\n          }\n        }\n      ]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"]},"metadata":{},"sourceType":"module"}