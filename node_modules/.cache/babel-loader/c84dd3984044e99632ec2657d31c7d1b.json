{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { DomScrollableElement } from '../scrollbar/scrollableElement.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nimport './hover.css';\nconst $ = dom.$;\nexport class HoverWidget extends Disposable {\n  constructor() {\n    super();\n    this.containerDomNode = document.createElement('div');\n    this.containerDomNode.className = 'monaco-hover';\n    this.containerDomNode.tabIndex = 0;\n    this.containerDomNode.setAttribute('role', 'tooltip');\n    this.contentsDomNode = document.createElement('div');\n    this.contentsDomNode.className = 'monaco-hover-content';\n    this.scrollbar = this._register(new DomScrollableElement(this.contentsDomNode, {\n      consumeMouseWheelIfScrollbarIsNeeded: true\n    }));\n    this.containerDomNode.appendChild(this.scrollbar.getDomNode());\n  }\n\n  onContentsChanged() {\n    this.scrollbar.scanDomNode();\n  }\n\n}\nexport class HoverAction extends Disposable {\n  constructor(parent, actionOptions, keybindingLabel) {\n    super();\n    this.actionContainer = dom.append(parent, $('div.action-container'));\n    this.action = dom.append(this.actionContainer, $('a.action'));\n    this.action.setAttribute('role', 'button');\n\n    if (actionOptions.iconClass) {\n      dom.append(this.action, $(`span.icon.${actionOptions.iconClass}`));\n    }\n\n    const label = dom.append(this.action, $('span'));\n    label.textContent = keybindingLabel ? `${actionOptions.label} (${keybindingLabel})` : actionOptions.label;\n\n    this._register(dom.addDisposableListener(this.actionContainer, dom.EventType.MOUSE_DOWN, e => {\n      e.stopPropagation();\n      e.preventDefault();\n      actionOptions.run(this.actionContainer);\n    }));\n\n    this.setEnabled(true);\n  }\n\n  static render(parent, actionOptions, keybindingLabel) {\n    return new HoverAction(parent, actionOptions, keybindingLabel);\n  }\n\n  setEnabled(enabled) {\n    if (enabled) {\n      this.actionContainer.classList.remove('disabled');\n      this.actionContainer.removeAttribute('aria-disabled');\n    } else {\n      this.actionContainer.classList.add('disabled');\n      this.actionContainer.setAttribute('aria-disabled', 'true');\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/base/browser/ui/hover/hoverWidget.js"],"names":["dom","DomScrollableElement","Disposable","$","HoverWidget","constructor","containerDomNode","document","createElement","className","tabIndex","setAttribute","contentsDomNode","scrollbar","_register","consumeMouseWheelIfScrollbarIsNeeded","appendChild","getDomNode","onContentsChanged","scanDomNode","HoverAction","parent","actionOptions","keybindingLabel","actionContainer","append","action","iconClass","label","textContent","addDisposableListener","EventType","MOUSE_DOWN","e","stopPropagation","preventDefault","run","setEnabled","render","enabled","classList","remove","removeAttribute","add"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,KAAKA,GAAZ,MAAqB,cAArB;AACA,SAASC,oBAAT,QAAqC,mCAArC;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,OAAO,aAAP;AACA,MAAMC,CAAC,GAAGH,GAAG,CAACG,CAAd;AACA,OAAO,MAAMC,WAAN,SAA0BF,UAA1B,CAAqC;AACxCG,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,gBAAL,GAAwBC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAxB;AACA,SAAKF,gBAAL,CAAsBG,SAAtB,GAAkC,cAAlC;AACA,SAAKH,gBAAL,CAAsBI,QAAtB,GAAiC,CAAjC;AACA,SAAKJ,gBAAL,CAAsBK,YAAtB,CAAmC,MAAnC,EAA2C,SAA3C;AACA,SAAKC,eAAL,GAAuBL,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAvB;AACA,SAAKI,eAAL,CAAqBH,SAArB,GAAiC,sBAAjC;AACA,SAAKI,SAAL,GAAiB,KAAKC,SAAL,CAAe,IAAIb,oBAAJ,CAAyB,KAAKW,eAA9B,EAA+C;AAC3EG,MAAAA,oCAAoC,EAAE;AADqC,KAA/C,CAAf,CAAjB;AAGA,SAAKT,gBAAL,CAAsBU,WAAtB,CAAkC,KAAKH,SAAL,CAAeI,UAAf,EAAlC;AACH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKL,SAAL,CAAeM,WAAf;AACH;;AAhBuC;AAkB5C,OAAO,MAAMC,WAAN,SAA0BlB,UAA1B,CAAqC;AACxCG,EAAAA,WAAW,CAACgB,MAAD,EAASC,aAAT,EAAwBC,eAAxB,EAAyC;AAChD;AACA,SAAKC,eAAL,GAAuBxB,GAAG,CAACyB,MAAJ,CAAWJ,MAAX,EAAmBlB,CAAC,CAAC,sBAAD,CAApB,CAAvB;AACA,SAAKuB,MAAL,GAAc1B,GAAG,CAACyB,MAAJ,CAAW,KAAKD,eAAhB,EAAiCrB,CAAC,CAAC,UAAD,CAAlC,CAAd;AACA,SAAKuB,MAAL,CAAYf,YAAZ,CAAyB,MAAzB,EAAiC,QAAjC;;AACA,QAAIW,aAAa,CAACK,SAAlB,EAA6B;AACzB3B,MAAAA,GAAG,CAACyB,MAAJ,CAAW,KAAKC,MAAhB,EAAwBvB,CAAC,CAAE,aAAYmB,aAAa,CAACK,SAAU,EAAtC,CAAzB;AACH;;AACD,UAAMC,KAAK,GAAG5B,GAAG,CAACyB,MAAJ,CAAW,KAAKC,MAAhB,EAAwBvB,CAAC,CAAC,MAAD,CAAzB,CAAd;AACAyB,IAAAA,KAAK,CAACC,WAAN,GAAoBN,eAAe,GAAI,GAAED,aAAa,CAACM,KAAM,KAAIL,eAAgB,GAA9C,GAAmDD,aAAa,CAACM,KAApG;;AACA,SAAKd,SAAL,CAAed,GAAG,CAAC8B,qBAAJ,CAA0B,KAAKN,eAA/B,EAAgDxB,GAAG,CAAC+B,SAAJ,CAAcC,UAA9D,EAA0EC,CAAC,IAAI;AAC1FA,MAAAA,CAAC,CAACC,eAAF;AACAD,MAAAA,CAAC,CAACE,cAAF;AACAb,MAAAA,aAAa,CAACc,GAAd,CAAkB,KAAKZ,eAAvB;AACH,KAJc,CAAf;;AAKA,SAAKa,UAAL,CAAgB,IAAhB;AACH;;AACY,SAANC,MAAM,CAACjB,MAAD,EAASC,aAAT,EAAwBC,eAAxB,EAAyC;AAClD,WAAO,IAAIH,WAAJ,CAAgBC,MAAhB,EAAwBC,aAAxB,EAAuCC,eAAvC,CAAP;AACH;;AACDc,EAAAA,UAAU,CAACE,OAAD,EAAU;AAChB,QAAIA,OAAJ,EAAa;AACT,WAAKf,eAAL,CAAqBgB,SAArB,CAA+BC,MAA/B,CAAsC,UAAtC;AACA,WAAKjB,eAAL,CAAqBkB,eAArB,CAAqC,eAArC;AACH,KAHD,MAIK;AACD,WAAKlB,eAAL,CAAqBgB,SAArB,CAA+BG,GAA/B,CAAmC,UAAnC;AACA,WAAKnB,eAAL,CAAqBb,YAArB,CAAkC,eAAlC,EAAmD,MAAnD;AACH;AACJ;;AA9BuC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { DomScrollableElement } from '../scrollbar/scrollableElement.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nimport './hover.css';\nconst $ = dom.$;\nexport class HoverWidget extends Disposable {\n    constructor() {\n        super();\n        this.containerDomNode = document.createElement('div');\n        this.containerDomNode.className = 'monaco-hover';\n        this.containerDomNode.tabIndex = 0;\n        this.containerDomNode.setAttribute('role', 'tooltip');\n        this.contentsDomNode = document.createElement('div');\n        this.contentsDomNode.className = 'monaco-hover-content';\n        this.scrollbar = this._register(new DomScrollableElement(this.contentsDomNode, {\n            consumeMouseWheelIfScrollbarIsNeeded: true\n        }));\n        this.containerDomNode.appendChild(this.scrollbar.getDomNode());\n    }\n    onContentsChanged() {\n        this.scrollbar.scanDomNode();\n    }\n}\nexport class HoverAction extends Disposable {\n    constructor(parent, actionOptions, keybindingLabel) {\n        super();\n        this.actionContainer = dom.append(parent, $('div.action-container'));\n        this.action = dom.append(this.actionContainer, $('a.action'));\n        this.action.setAttribute('role', 'button');\n        if (actionOptions.iconClass) {\n            dom.append(this.action, $(`span.icon.${actionOptions.iconClass}`));\n        }\n        const label = dom.append(this.action, $('span'));\n        label.textContent = keybindingLabel ? `${actionOptions.label} (${keybindingLabel})` : actionOptions.label;\n        this._register(dom.addDisposableListener(this.actionContainer, dom.EventType.MOUSE_DOWN, e => {\n            e.stopPropagation();\n            e.preventDefault();\n            actionOptions.run(this.actionContainer);\n        }));\n        this.setEnabled(true);\n    }\n    static render(parent, actionOptions, keybindingLabel) {\n        return new HoverAction(parent, actionOptions, keybindingLabel);\n    }\n    setEnabled(enabled) {\n        if (enabled) {\n            this.actionContainer.classList.remove('disabled');\n            this.actionContainer.removeAttribute('aria-disabled');\n        }\n        else {\n            this.actionContainer.classList.add('disabled');\n            this.actionContainer.setAttribute('aria-disabled', 'true');\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}