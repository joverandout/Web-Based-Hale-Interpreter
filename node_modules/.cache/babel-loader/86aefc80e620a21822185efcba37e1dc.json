{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { localize } from '../../../nls.js';\nimport { Extensions } from '../common/quickAccess.js';\nimport { IQuickInputService } from '../common/quickInput.js';\nimport { Registry } from '../../registry/common/platform.js';\nlet HelpQuickAccessProvider = class HelpQuickAccessProvider {\n  constructor(quickInputService) {\n    this.quickInputService = quickInputService;\n    this.registry = Registry.as(Extensions.Quickaccess);\n  }\n\n  provide(picker) {\n    const disposables = new DisposableStore(); // Open a picker with the selected value if picked\n\n    disposables.add(picker.onDidAccept(() => {\n      const [item] = picker.selectedItems;\n\n      if (item) {\n        this.quickInputService.quickAccess.show(item.prefix, {\n          preserveValue: true\n        });\n      }\n    })); // Also open a picker when we detect the user typed the exact\n    // name of a provider (e.g. `?term` for terminals)\n\n    disposables.add(picker.onDidChangeValue(value => {\n      const providerDescriptor = this.registry.getQuickAccessProvider(value.substr(HelpQuickAccessProvider.PREFIX.length));\n\n      if (providerDescriptor && providerDescriptor.prefix && providerDescriptor.prefix !== HelpQuickAccessProvider.PREFIX) {\n        this.quickInputService.quickAccess.show(providerDescriptor.prefix, {\n          preserveValue: true\n        });\n      }\n    })); // Fill in all providers separated by editor/global scope\n\n    const {\n      editorProviders,\n      globalProviders\n    } = this.getQuickAccessProviders();\n    picker.items = editorProviders.length === 0 || globalProviders.length === 0 ? // Without groups\n    [...(editorProviders.length === 0 ? globalProviders : editorProviders)] : // With groups\n    [{\n      label: localize('globalCommands', \"global commands\"),\n      type: 'separator'\n    }, ...globalProviders, {\n      label: localize('editorCommands', \"editor commands\"),\n      type: 'separator'\n    }, ...editorProviders];\n    return disposables;\n  }\n\n  getQuickAccessProviders() {\n    const globalProviders = [];\n    const editorProviders = [];\n\n    for (const provider of this.registry.getQuickAccessProviders().sort((providerA, providerB) => providerA.prefix.localeCompare(providerB.prefix))) {\n      if (provider.prefix === HelpQuickAccessProvider.PREFIX) {\n        continue; // exclude help which is already active\n      }\n\n      for (const helpEntry of provider.helpEntries) {\n        const prefix = helpEntry.prefix || provider.prefix;\n        const label = prefix || '\\u2026'\n        /* ... */\n        ;\n        (helpEntry.needsEditor ? editorProviders : globalProviders).push({\n          prefix,\n          label,\n          ariaLabel: localize('helpPickAriaLabel', \"{0}, {1}\", label, helpEntry.description),\n          description: helpEntry.description\n        });\n      }\n    }\n\n    return {\n      editorProviders,\n      globalProviders\n    };\n  }\n\n};\nHelpQuickAccessProvider.PREFIX = '?';\nHelpQuickAccessProvider = __decorate([__param(0, IQuickInputService)], HelpQuickAccessProvider);\nexport { HelpQuickAccessProvider };","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/helpQuickAccess.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","DisposableStore","localize","Extensions","IQuickInputService","Registry","HelpQuickAccessProvider","constructor","quickInputService","registry","as","Quickaccess","provide","picker","disposables","add","onDidAccept","item","selectedItems","quickAccess","show","prefix","preserveValue","onDidChangeValue","value","providerDescriptor","getQuickAccessProvider","substr","PREFIX","editorProviders","globalProviders","getQuickAccessProviders","items","label","type","provider","sort","providerA","providerB","localeCompare","helpEntry","helpEntries","needsEditor","push","ariaLabel","description"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { localize } from '../../../nls.js';\nimport { Extensions } from '../common/quickAccess.js';\nimport { IQuickInputService } from '../common/quickInput.js';\nimport { Registry } from '../../registry/common/platform.js';\nlet HelpQuickAccessProvider = class HelpQuickAccessProvider {\n    constructor(quickInputService) {\n        this.quickInputService = quickInputService;\n        this.registry = Registry.as(Extensions.Quickaccess);\n    }\n    provide(picker) {\n        const disposables = new DisposableStore();\n        // Open a picker with the selected value if picked\n        disposables.add(picker.onDidAccept(() => {\n            const [item] = picker.selectedItems;\n            if (item) {\n                this.quickInputService.quickAccess.show(item.prefix, { preserveValue: true });\n            }\n        }));\n        // Also open a picker when we detect the user typed the exact\n        // name of a provider (e.g. `?term` for terminals)\n        disposables.add(picker.onDidChangeValue(value => {\n            const providerDescriptor = this.registry.getQuickAccessProvider(value.substr(HelpQuickAccessProvider.PREFIX.length));\n            if (providerDescriptor && providerDescriptor.prefix && providerDescriptor.prefix !== HelpQuickAccessProvider.PREFIX) {\n                this.quickInputService.quickAccess.show(providerDescriptor.prefix, { preserveValue: true });\n            }\n        }));\n        // Fill in all providers separated by editor/global scope\n        const { editorProviders, globalProviders } = this.getQuickAccessProviders();\n        picker.items = editorProviders.length === 0 || globalProviders.length === 0 ?\n            // Without groups\n            [\n                ...(editorProviders.length === 0 ? globalProviders : editorProviders)\n            ] :\n            // With groups\n            [\n                { label: localize('globalCommands', \"global commands\"), type: 'separator' },\n                ...globalProviders,\n                { label: localize('editorCommands', \"editor commands\"), type: 'separator' },\n                ...editorProviders\n            ];\n        return disposables;\n    }\n    getQuickAccessProviders() {\n        const globalProviders = [];\n        const editorProviders = [];\n        for (const provider of this.registry.getQuickAccessProviders().sort((providerA, providerB) => providerA.prefix.localeCompare(providerB.prefix))) {\n            if (provider.prefix === HelpQuickAccessProvider.PREFIX) {\n                continue; // exclude help which is already active\n            }\n            for (const helpEntry of provider.helpEntries) {\n                const prefix = helpEntry.prefix || provider.prefix;\n                const label = prefix || '\\u2026' /* ... */;\n                (helpEntry.needsEditor ? editorProviders : globalProviders).push({\n                    prefix,\n                    label,\n                    ariaLabel: localize('helpPickAriaLabel', \"{0}, {1}\", label, helpEntry.description),\n                    description: helpEntry.description\n                });\n            }\n        }\n        return { editorProviders, globalProviders };\n    }\n};\nHelpQuickAccessProvider.PREFIX = '?';\nHelpQuickAccessProvider = __decorate([\n    __param(0, IQuickInputService)\n], HelpQuickAccessProvider);\nexport { HelpQuickAccessProvider };\n"]},"metadata":{},"sourceType":"module"}