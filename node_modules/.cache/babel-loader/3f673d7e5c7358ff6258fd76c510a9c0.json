{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getZoomFactor } from '../../browser.js';\nimport * as dom from '../../dom.js';\nimport { createFastDomNode } from '../../fastDomNode.js';\nimport { StandardWheelEvent } from '../../mouseEvent.js';\nimport { HorizontalScrollbar } from './horizontalScrollbar.js';\nimport { VerticalScrollbar } from './verticalScrollbar.js';\nimport { Widget } from '../widget.js';\nimport { TimeoutTimer } from '../../../common/async.js';\nimport { Emitter } from '../../../common/event.js';\nimport { dispose } from '../../../common/lifecycle.js';\nimport * as platform from '../../../common/platform.js';\nimport { Scrollable } from '../../../common/scrollable.js';\nimport './media/scrollbars.css';\nconst HIDE_TIMEOUT = 500;\nconst SCROLL_WHEEL_SENSITIVITY = 50;\nconst SCROLL_WHEEL_SMOOTH_SCROLL_ENABLED = true;\n\nclass MouseWheelClassifierItem {\n  constructor(timestamp, deltaX, deltaY) {\n    this.timestamp = timestamp;\n    this.deltaX = deltaX;\n    this.deltaY = deltaY;\n    this.score = 0;\n  }\n\n}\n\nexport class MouseWheelClassifier {\n  constructor() {\n    this._capacity = 5;\n    this._memory = [];\n    this._front = -1;\n    this._rear = -1;\n  }\n\n  isPhysicalMouseWheel() {\n    if (this._front === -1 && this._rear === -1) {\n      // no elements\n      return false;\n    } // 0.5 * last + 0.25 * 2nd last + 0.125 * 3rd last + ...\n\n\n    let remainingInfluence = 1;\n    let score = 0;\n    let iteration = 1;\n    let index = this._rear;\n\n    do {\n      const influence = index === this._front ? remainingInfluence : Math.pow(2, -iteration);\n      remainingInfluence -= influence;\n      score += this._memory[index].score * influence;\n\n      if (index === this._front) {\n        break;\n      }\n\n      index = (this._capacity + index - 1) % this._capacity;\n      iteration++;\n    } while (true);\n\n    return score <= 0.5;\n  }\n\n  accept(timestamp, deltaX, deltaY) {\n    const item = new MouseWheelClassifierItem(timestamp, deltaX, deltaY);\n    item.score = this._computeScore(item);\n\n    if (this._front === -1 && this._rear === -1) {\n      this._memory[0] = item;\n      this._front = 0;\n      this._rear = 0;\n    } else {\n      this._rear = (this._rear + 1) % this._capacity;\n\n      if (this._rear === this._front) {\n        // Drop oldest\n        this._front = (this._front + 1) % this._capacity;\n      }\n\n      this._memory[this._rear] = item;\n    }\n  }\n  /**\n   * A score between 0 and 1 for `item`.\n   *  - a score towards 0 indicates that the source appears to be a physical mouse wheel\n   *  - a score towards 1 indicates that the source appears to be a touchpad or magic mouse, etc.\n   */\n\n\n  _computeScore(item) {\n    if (Math.abs(item.deltaX) > 0 && Math.abs(item.deltaY) > 0) {\n      // both axes exercised => definitely not a physical mouse wheel\n      return 1;\n    }\n\n    let score = 0.5;\n    const prev = this._front === -1 && this._rear === -1 ? null : this._memory[this._rear];\n\n    if (prev) {// const deltaT = item.timestamp - prev.timestamp;\n      // if (deltaT < 1000 / 30) {\n      // \t// sooner than X times per second => indicator that this is not a physical mouse wheel\n      // \tscore += 0.25;\n      // }\n      // if (item.deltaX === prev.deltaX && item.deltaY === prev.deltaY) {\n      // \t// equal amplitude => indicator that this is a physical mouse wheel\n      // \tscore -= 0.25;\n      // }\n    }\n\n    if (!this._isAlmostInt(item.deltaX) || !this._isAlmostInt(item.deltaY)) {\n      // non-integer deltas => indicator that this is not a physical mouse wheel\n      score += 0.25;\n    }\n\n    return Math.min(Math.max(score, 0), 1);\n  }\n\n  _isAlmostInt(value) {\n    const delta = Math.abs(Math.round(value) - value);\n    return delta < 0.01;\n  }\n\n}\nMouseWheelClassifier.INSTANCE = new MouseWheelClassifier();\nexport class AbstractScrollableElement extends Widget {\n  constructor(element, options, scrollable) {\n    super();\n    this._onScroll = this._register(new Emitter());\n    this.onScroll = this._onScroll.event;\n    this._onWillScroll = this._register(new Emitter());\n    element.style.overflow = 'hidden';\n    this._options = resolveOptions(options);\n    this._scrollable = scrollable;\n\n    this._register(this._scrollable.onScroll(e => {\n      this._onWillScroll.fire(e);\n\n      this._onDidScroll(e);\n\n      this._onScroll.fire(e);\n    }));\n\n    const scrollbarHost = {\n      onMouseWheel: mouseWheelEvent => this._onMouseWheel(mouseWheelEvent),\n      onDragStart: () => this._onDragStart(),\n      onDragEnd: () => this._onDragEnd()\n    };\n    this._verticalScrollbar = this._register(new VerticalScrollbar(this._scrollable, this._options, scrollbarHost));\n    this._horizontalScrollbar = this._register(new HorizontalScrollbar(this._scrollable, this._options, scrollbarHost));\n    this._domNode = document.createElement('div');\n    this._domNode.className = 'monaco-scrollable-element ' + this._options.className;\n\n    this._domNode.setAttribute('role', 'presentation');\n\n    this._domNode.style.position = 'relative';\n    this._domNode.style.overflow = 'hidden';\n\n    this._domNode.appendChild(element);\n\n    this._domNode.appendChild(this._horizontalScrollbar.domNode.domNode);\n\n    this._domNode.appendChild(this._verticalScrollbar.domNode.domNode);\n\n    if (this._options.useShadows) {\n      this._leftShadowDomNode = createFastDomNode(document.createElement('div'));\n\n      this._leftShadowDomNode.setClassName('shadow');\n\n      this._domNode.appendChild(this._leftShadowDomNode.domNode);\n\n      this._topShadowDomNode = createFastDomNode(document.createElement('div'));\n\n      this._topShadowDomNode.setClassName('shadow');\n\n      this._domNode.appendChild(this._topShadowDomNode.domNode);\n\n      this._topLeftShadowDomNode = createFastDomNode(document.createElement('div'));\n\n      this._topLeftShadowDomNode.setClassName('shadow');\n\n      this._domNode.appendChild(this._topLeftShadowDomNode.domNode);\n    } else {\n      this._leftShadowDomNode = null;\n      this._topShadowDomNode = null;\n      this._topLeftShadowDomNode = null;\n    }\n\n    this._listenOnDomNode = this._options.listenOnDomNode || this._domNode;\n    this._mouseWheelToDispose = [];\n\n    this._setListeningToMouseWheel(this._options.handleMouseWheel);\n\n    this.onmouseover(this._listenOnDomNode, e => this._onMouseOver(e));\n    this.onnonbubblingmouseout(this._listenOnDomNode, e => this._onMouseOut(e));\n    this._hideTimeout = this._register(new TimeoutTimer());\n    this._isDragging = false;\n    this._mouseIsOver = false;\n    this._shouldRender = true;\n    this._revealOnScroll = true;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  dispose() {\n    this._mouseWheelToDispose = dispose(this._mouseWheelToDispose);\n    super.dispose();\n  }\n  /**\n   * Get the generated 'scrollable' dom node\n   */\n\n\n  getDomNode() {\n    return this._domNode;\n  }\n\n  getOverviewRulerLayoutInfo() {\n    return {\n      parent: this._domNode,\n      insertBefore: this._verticalScrollbar.domNode.domNode\n    };\n  }\n  /**\n   * Delegate a mouse down event to the vertical scrollbar.\n   * This is to help with clicking somewhere else and having the scrollbar react.\n   */\n\n\n  delegateVerticalScrollbarMouseDown(browserEvent) {\n    this._verticalScrollbar.delegateMouseDown(browserEvent);\n  }\n\n  getScrollDimensions() {\n    return this._scrollable.getScrollDimensions();\n  }\n\n  setScrollDimensions(dimensions) {\n    this._scrollable.setScrollDimensions(dimensions, false);\n  }\n  /**\n   * Update the class name of the scrollable element.\n   */\n\n\n  updateClassName(newClassName) {\n    this._options.className = newClassName; // Defaults are different on Macs\n\n    if (platform.isMacintosh) {\n      this._options.className += ' mac';\n    }\n\n    this._domNode.className = 'monaco-scrollable-element ' + this._options.className;\n  }\n  /**\n   * Update configuration options for the scrollbar.\n   */\n\n\n  updateOptions(newOptions) {\n    if (typeof newOptions.handleMouseWheel !== 'undefined') {\n      this._options.handleMouseWheel = newOptions.handleMouseWheel;\n\n      this._setListeningToMouseWheel(this._options.handleMouseWheel);\n    }\n\n    if (typeof newOptions.mouseWheelScrollSensitivity !== 'undefined') {\n      this._options.mouseWheelScrollSensitivity = newOptions.mouseWheelScrollSensitivity;\n    }\n\n    if (typeof newOptions.fastScrollSensitivity !== 'undefined') {\n      this._options.fastScrollSensitivity = newOptions.fastScrollSensitivity;\n    }\n\n    if (typeof newOptions.scrollPredominantAxis !== 'undefined') {\n      this._options.scrollPredominantAxis = newOptions.scrollPredominantAxis;\n    }\n\n    if (typeof newOptions.horizontal !== 'undefined') {\n      this._options.horizontal = newOptions.horizontal;\n    }\n\n    if (typeof newOptions.vertical !== 'undefined') {\n      this._options.vertical = newOptions.vertical;\n    }\n\n    if (typeof newOptions.horizontalScrollbarSize !== 'undefined') {\n      this._options.horizontalScrollbarSize = newOptions.horizontalScrollbarSize;\n    }\n\n    if (typeof newOptions.verticalScrollbarSize !== 'undefined') {\n      this._options.verticalScrollbarSize = newOptions.verticalScrollbarSize;\n    }\n\n    if (typeof newOptions.scrollByPage !== 'undefined') {\n      this._options.scrollByPage = newOptions.scrollByPage;\n    }\n\n    this._horizontalScrollbar.updateOptions(this._options);\n\n    this._verticalScrollbar.updateOptions(this._options);\n\n    if (!this._options.lazyRender) {\n      this._render();\n    }\n  } // -------------------- mouse wheel scrolling --------------------\n\n\n  _setListeningToMouseWheel(shouldListen) {\n    const isListening = this._mouseWheelToDispose.length > 0;\n\n    if (isListening === shouldListen) {\n      // No change\n      return;\n    } // Stop listening (if necessary)\n\n\n    this._mouseWheelToDispose = dispose(this._mouseWheelToDispose); // Start listening (if necessary)\n\n    if (shouldListen) {\n      const onMouseWheel = browserEvent => {\n        this._onMouseWheel(new StandardWheelEvent(browserEvent));\n      };\n\n      this._mouseWheelToDispose.push(dom.addDisposableListener(this._listenOnDomNode, dom.EventType.MOUSE_WHEEL, onMouseWheel, {\n        passive: false\n      }));\n    }\n  }\n\n  _onMouseWheel(e) {\n    const classifier = MouseWheelClassifier.INSTANCE;\n\n    if (SCROLL_WHEEL_SMOOTH_SCROLL_ENABLED) {\n      const osZoomFactor = window.devicePixelRatio / getZoomFactor();\n\n      if (platform.isWindows || platform.isLinux) {\n        // On Windows and Linux, the incoming delta events are multiplied with the OS zoom factor.\n        // The OS zoom factor can be reverse engineered by using the device pixel ratio and the configured zoom factor into account.\n        classifier.accept(Date.now(), e.deltaX / osZoomFactor, e.deltaY / osZoomFactor);\n      } else {\n        classifier.accept(Date.now(), e.deltaX, e.deltaY);\n      }\n    } // console.log(`${Date.now()}, ${e.deltaY}, ${e.deltaX}`);\n\n\n    let didScroll = false;\n\n    if (e.deltaY || e.deltaX) {\n      let deltaY = e.deltaY * this._options.mouseWheelScrollSensitivity;\n      let deltaX = e.deltaX * this._options.mouseWheelScrollSensitivity;\n\n      if (this._options.scrollPredominantAxis) {\n        if (Math.abs(deltaY) >= Math.abs(deltaX)) {\n          deltaX = 0;\n        } else {\n          deltaY = 0;\n        }\n      }\n\n      if (this._options.flipAxes) {\n        [deltaY, deltaX] = [deltaX, deltaY];\n      } // Convert vertical scrolling to horizontal if shift is held, this\n      // is handled at a higher level on Mac\n\n\n      const shiftConvert = !platform.isMacintosh && e.browserEvent && e.browserEvent.shiftKey;\n\n      if ((this._options.scrollYToX || shiftConvert) && !deltaX) {\n        deltaX = deltaY;\n        deltaY = 0;\n      }\n\n      if (e.browserEvent && e.browserEvent.altKey) {\n        // fastScrolling\n        deltaX = deltaX * this._options.fastScrollSensitivity;\n        deltaY = deltaY * this._options.fastScrollSensitivity;\n      }\n\n      const futureScrollPosition = this._scrollable.getFutureScrollPosition();\n\n      let desiredScrollPosition = {};\n\n      if (deltaY) {\n        const deltaScrollTop = SCROLL_WHEEL_SENSITIVITY * deltaY; // Here we convert values such as -0.3 to -1 or 0.3 to 1, otherwise low speed scrolling will never scroll\n\n        const desiredScrollTop = futureScrollPosition.scrollTop - (deltaScrollTop < 0 ? Math.floor(deltaScrollTop) : Math.ceil(deltaScrollTop));\n\n        this._verticalScrollbar.writeScrollPosition(desiredScrollPosition, desiredScrollTop);\n      }\n\n      if (deltaX) {\n        const deltaScrollLeft = SCROLL_WHEEL_SENSITIVITY * deltaX; // Here we convert values such as -0.3 to -1 or 0.3 to 1, otherwise low speed scrolling will never scroll\n\n        const desiredScrollLeft = futureScrollPosition.scrollLeft - (deltaScrollLeft < 0 ? Math.floor(deltaScrollLeft) : Math.ceil(deltaScrollLeft));\n\n        this._horizontalScrollbar.writeScrollPosition(desiredScrollPosition, desiredScrollLeft);\n      } // Check that we are scrolling towards a location which is valid\n\n\n      desiredScrollPosition = this._scrollable.validateScrollPosition(desiredScrollPosition);\n\n      if (futureScrollPosition.scrollLeft !== desiredScrollPosition.scrollLeft || futureScrollPosition.scrollTop !== desiredScrollPosition.scrollTop) {\n        const canPerformSmoothScroll = SCROLL_WHEEL_SMOOTH_SCROLL_ENABLED && this._options.mouseWheelSmoothScroll && classifier.isPhysicalMouseWheel();\n\n        if (canPerformSmoothScroll) {\n          this._scrollable.setScrollPositionSmooth(desiredScrollPosition);\n        } else {\n          this._scrollable.setScrollPositionNow(desiredScrollPosition);\n        }\n\n        didScroll = true;\n      }\n    }\n\n    let consumeMouseWheel = didScroll;\n\n    if (!consumeMouseWheel && this._options.alwaysConsumeMouseWheel) {\n      consumeMouseWheel = true;\n    }\n\n    if (!consumeMouseWheel && this._options.consumeMouseWheelIfScrollbarIsNeeded && (this._verticalScrollbar.isNeeded() || this._horizontalScrollbar.isNeeded())) {\n      consumeMouseWheel = true;\n    }\n\n    if (consumeMouseWheel) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n\n  _onDidScroll(e) {\n    this._shouldRender = this._horizontalScrollbar.onDidScroll(e) || this._shouldRender;\n    this._shouldRender = this._verticalScrollbar.onDidScroll(e) || this._shouldRender;\n\n    if (this._options.useShadows) {\n      this._shouldRender = true;\n    }\n\n    if (this._revealOnScroll) {\n      this._reveal();\n    }\n\n    if (!this._options.lazyRender) {\n      this._render();\n    }\n  }\n  /**\n   * Render / mutate the DOM now.\n   * Should be used together with the ctor option `lazyRender`.\n   */\n\n\n  renderNow() {\n    if (!this._options.lazyRender) {\n      throw new Error('Please use `lazyRender` together with `renderNow`!');\n    }\n\n    this._render();\n  }\n\n  _render() {\n    if (!this._shouldRender) {\n      return;\n    }\n\n    this._shouldRender = false;\n\n    this._horizontalScrollbar.render();\n\n    this._verticalScrollbar.render();\n\n    if (this._options.useShadows) {\n      const scrollState = this._scrollable.getCurrentScrollPosition();\n\n      const enableTop = scrollState.scrollTop > 0;\n      const enableLeft = scrollState.scrollLeft > 0;\n      const leftClassName = enableLeft ? ' left' : '';\n      const topClassName = enableTop ? ' top' : '';\n      const topLeftClassName = enableLeft || enableTop ? ' top-left-corner' : '';\n\n      this._leftShadowDomNode.setClassName(`shadow${leftClassName}`);\n\n      this._topShadowDomNode.setClassName(`shadow${topClassName}`);\n\n      this._topLeftShadowDomNode.setClassName(`shadow${topLeftClassName}${topClassName}${leftClassName}`);\n    }\n  } // -------------------- fade in / fade out --------------------\n\n\n  _onDragStart() {\n    this._isDragging = true;\n\n    this._reveal();\n  }\n\n  _onDragEnd() {\n    this._isDragging = false;\n\n    this._hide();\n  }\n\n  _onMouseOut(e) {\n    this._mouseIsOver = false;\n\n    this._hide();\n  }\n\n  _onMouseOver(e) {\n    this._mouseIsOver = true;\n\n    this._reveal();\n  }\n\n  _reveal() {\n    this._verticalScrollbar.beginReveal();\n\n    this._horizontalScrollbar.beginReveal();\n\n    this._scheduleHide();\n  }\n\n  _hide() {\n    if (!this._mouseIsOver && !this._isDragging) {\n      this._verticalScrollbar.beginHide();\n\n      this._horizontalScrollbar.beginHide();\n    }\n  }\n\n  _scheduleHide() {\n    if (!this._mouseIsOver && !this._isDragging) {\n      this._hideTimeout.cancelAndSet(() => this._hide(), HIDE_TIMEOUT);\n    }\n  }\n\n}\nexport class ScrollableElement extends AbstractScrollableElement {\n  constructor(element, options) {\n    options = options || {};\n    options.mouseWheelSmoothScroll = false;\n    const scrollable = new Scrollable({\n      forceIntegerValues: true,\n      smoothScrollDuration: 0,\n      scheduleAtNextAnimationFrame: callback => dom.scheduleAtNextAnimationFrame(callback)\n    });\n    super(element, options, scrollable);\n\n    this._register(scrollable);\n  }\n\n  setScrollPosition(update) {\n    this._scrollable.setScrollPositionNow(update);\n  }\n\n}\nexport class SmoothScrollableElement extends AbstractScrollableElement {\n  constructor(element, options, scrollable) {\n    super(element, options, scrollable);\n  }\n\n  setScrollPosition(update) {\n    if (update.reuseAnimation) {\n      this._scrollable.setScrollPositionSmooth(update, update.reuseAnimation);\n    } else {\n      this._scrollable.setScrollPositionNow(update);\n    }\n  }\n\n  getScrollPosition() {\n    return this._scrollable.getCurrentScrollPosition();\n  }\n\n}\nexport class DomScrollableElement extends AbstractScrollableElement {\n  constructor(element, options) {\n    options = options || {};\n    options.mouseWheelSmoothScroll = false;\n    const scrollable = new Scrollable({\n      forceIntegerValues: false,\n      smoothScrollDuration: 0,\n      scheduleAtNextAnimationFrame: callback => dom.scheduleAtNextAnimationFrame(callback)\n    });\n    super(element, options, scrollable);\n\n    this._register(scrollable);\n\n    this._element = element;\n    this.onScroll(e => {\n      if (e.scrollTopChanged) {\n        this._element.scrollTop = e.scrollTop;\n      }\n\n      if (e.scrollLeftChanged) {\n        this._element.scrollLeft = e.scrollLeft;\n      }\n    });\n    this.scanDomNode();\n  }\n\n  setScrollPosition(update) {\n    this._scrollable.setScrollPositionNow(update);\n  }\n\n  getScrollPosition() {\n    return this._scrollable.getCurrentScrollPosition();\n  }\n\n  scanDomNode() {\n    // width, scrollLeft, scrollWidth, height, scrollTop, scrollHeight\n    this.setScrollDimensions({\n      width: this._element.clientWidth,\n      scrollWidth: this._element.scrollWidth,\n      height: this._element.clientHeight,\n      scrollHeight: this._element.scrollHeight\n    });\n    this.setScrollPosition({\n      scrollLeft: this._element.scrollLeft,\n      scrollTop: this._element.scrollTop\n    });\n  }\n\n}\n\nfunction resolveOptions(opts) {\n  const result = {\n    lazyRender: typeof opts.lazyRender !== 'undefined' ? opts.lazyRender : false,\n    className: typeof opts.className !== 'undefined' ? opts.className : '',\n    useShadows: typeof opts.useShadows !== 'undefined' ? opts.useShadows : true,\n    handleMouseWheel: typeof opts.handleMouseWheel !== 'undefined' ? opts.handleMouseWheel : true,\n    flipAxes: typeof opts.flipAxes !== 'undefined' ? opts.flipAxes : false,\n    consumeMouseWheelIfScrollbarIsNeeded: typeof opts.consumeMouseWheelIfScrollbarIsNeeded !== 'undefined' ? opts.consumeMouseWheelIfScrollbarIsNeeded : false,\n    alwaysConsumeMouseWheel: typeof opts.alwaysConsumeMouseWheel !== 'undefined' ? opts.alwaysConsumeMouseWheel : false,\n    scrollYToX: typeof opts.scrollYToX !== 'undefined' ? opts.scrollYToX : false,\n    mouseWheelScrollSensitivity: typeof opts.mouseWheelScrollSensitivity !== 'undefined' ? opts.mouseWheelScrollSensitivity : 1,\n    fastScrollSensitivity: typeof opts.fastScrollSensitivity !== 'undefined' ? opts.fastScrollSensitivity : 5,\n    scrollPredominantAxis: typeof opts.scrollPredominantAxis !== 'undefined' ? opts.scrollPredominantAxis : true,\n    mouseWheelSmoothScroll: typeof opts.mouseWheelSmoothScroll !== 'undefined' ? opts.mouseWheelSmoothScroll : true,\n    arrowSize: typeof opts.arrowSize !== 'undefined' ? opts.arrowSize : 11,\n    listenOnDomNode: typeof opts.listenOnDomNode !== 'undefined' ? opts.listenOnDomNode : null,\n    horizontal: typeof opts.horizontal !== 'undefined' ? opts.horizontal : 1\n    /* Auto */\n    ,\n    horizontalScrollbarSize: typeof opts.horizontalScrollbarSize !== 'undefined' ? opts.horizontalScrollbarSize : 10,\n    horizontalSliderSize: typeof opts.horizontalSliderSize !== 'undefined' ? opts.horizontalSliderSize : 0,\n    horizontalHasArrows: typeof opts.horizontalHasArrows !== 'undefined' ? opts.horizontalHasArrows : false,\n    vertical: typeof opts.vertical !== 'undefined' ? opts.vertical : 1\n    /* Auto */\n    ,\n    verticalScrollbarSize: typeof opts.verticalScrollbarSize !== 'undefined' ? opts.verticalScrollbarSize : 10,\n    verticalHasArrows: typeof opts.verticalHasArrows !== 'undefined' ? opts.verticalHasArrows : false,\n    verticalSliderSize: typeof opts.verticalSliderSize !== 'undefined' ? opts.verticalSliderSize : 0,\n    scrollByPage: typeof opts.scrollByPage !== 'undefined' ? opts.scrollByPage : false\n  };\n  result.horizontalSliderSize = typeof opts.horizontalSliderSize !== 'undefined' ? opts.horizontalSliderSize : result.horizontalScrollbarSize;\n  result.verticalSliderSize = typeof opts.verticalSliderSize !== 'undefined' ? opts.verticalSliderSize : result.verticalScrollbarSize; // Defaults are different on Macs\n\n  if (platform.isMacintosh) {\n    result.className += ' mac';\n  }\n\n  return result;\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/base/browser/ui/scrollbar/scrollableElement.js"],"names":["getZoomFactor","dom","createFastDomNode","StandardWheelEvent","HorizontalScrollbar","VerticalScrollbar","Widget","TimeoutTimer","Emitter","dispose","platform","Scrollable","HIDE_TIMEOUT","SCROLL_WHEEL_SENSITIVITY","SCROLL_WHEEL_SMOOTH_SCROLL_ENABLED","MouseWheelClassifierItem","constructor","timestamp","deltaX","deltaY","score","MouseWheelClassifier","_capacity","_memory","_front","_rear","isPhysicalMouseWheel","remainingInfluence","iteration","index","influence","Math","pow","accept","item","_computeScore","abs","prev","_isAlmostInt","min","max","value","delta","round","INSTANCE","AbstractScrollableElement","element","options","scrollable","_onScroll","_register","onScroll","event","_onWillScroll","style","overflow","_options","resolveOptions","_scrollable","e","fire","_onDidScroll","scrollbarHost","onMouseWheel","mouseWheelEvent","_onMouseWheel","onDragStart","_onDragStart","onDragEnd","_onDragEnd","_verticalScrollbar","_horizontalScrollbar","_domNode","document","createElement","className","setAttribute","position","appendChild","domNode","useShadows","_leftShadowDomNode","setClassName","_topShadowDomNode","_topLeftShadowDomNode","_listenOnDomNode","listenOnDomNode","_mouseWheelToDispose","_setListeningToMouseWheel","handleMouseWheel","onmouseover","_onMouseOver","onnonbubblingmouseout","_onMouseOut","_hideTimeout","_isDragging","_mouseIsOver","_shouldRender","_revealOnScroll","getDomNode","getOverviewRulerLayoutInfo","parent","insertBefore","delegateVerticalScrollbarMouseDown","browserEvent","delegateMouseDown","getScrollDimensions","setScrollDimensions","dimensions","updateClassName","newClassName","isMacintosh","updateOptions","newOptions","mouseWheelScrollSensitivity","fastScrollSensitivity","scrollPredominantAxis","horizontal","vertical","horizontalScrollbarSize","verticalScrollbarSize","scrollByPage","lazyRender","_render","shouldListen","isListening","length","push","addDisposableListener","EventType","MOUSE_WHEEL","passive","classifier","osZoomFactor","window","devicePixelRatio","isWindows","isLinux","Date","now","didScroll","flipAxes","shiftConvert","shiftKey","scrollYToX","altKey","futureScrollPosition","getFutureScrollPosition","desiredScrollPosition","deltaScrollTop","desiredScrollTop","scrollTop","floor","ceil","writeScrollPosition","deltaScrollLeft","desiredScrollLeft","scrollLeft","validateScrollPosition","canPerformSmoothScroll","mouseWheelSmoothScroll","setScrollPositionSmooth","setScrollPositionNow","consumeMouseWheel","alwaysConsumeMouseWheel","consumeMouseWheelIfScrollbarIsNeeded","isNeeded","preventDefault","stopPropagation","onDidScroll","_reveal","renderNow","Error","render","scrollState","getCurrentScrollPosition","enableTop","enableLeft","leftClassName","topClassName","topLeftClassName","_hide","beginReveal","_scheduleHide","beginHide","cancelAndSet","ScrollableElement","forceIntegerValues","smoothScrollDuration","scheduleAtNextAnimationFrame","callback","setScrollPosition","update","SmoothScrollableElement","reuseAnimation","getScrollPosition","DomScrollableElement","_element","scrollTopChanged","scrollLeftChanged","scanDomNode","width","clientWidth","scrollWidth","height","clientHeight","scrollHeight","opts","result","arrowSize","horizontalSliderSize","horizontalHasArrows","verticalHasArrows","verticalSliderSize"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getZoomFactor } from '../../browser.js';\nimport * as dom from '../../dom.js';\nimport { createFastDomNode } from '../../fastDomNode.js';\nimport { StandardWheelEvent } from '../../mouseEvent.js';\nimport { HorizontalScrollbar } from './horizontalScrollbar.js';\nimport { VerticalScrollbar } from './verticalScrollbar.js';\nimport { Widget } from '../widget.js';\nimport { TimeoutTimer } from '../../../common/async.js';\nimport { Emitter } from '../../../common/event.js';\nimport { dispose } from '../../../common/lifecycle.js';\nimport * as platform from '../../../common/platform.js';\nimport { Scrollable } from '../../../common/scrollable.js';\nimport './media/scrollbars.css';\nconst HIDE_TIMEOUT = 500;\nconst SCROLL_WHEEL_SENSITIVITY = 50;\nconst SCROLL_WHEEL_SMOOTH_SCROLL_ENABLED = true;\nclass MouseWheelClassifierItem {\n    constructor(timestamp, deltaX, deltaY) {\n        this.timestamp = timestamp;\n        this.deltaX = deltaX;\n        this.deltaY = deltaY;\n        this.score = 0;\n    }\n}\nexport class MouseWheelClassifier {\n    constructor() {\n        this._capacity = 5;\n        this._memory = [];\n        this._front = -1;\n        this._rear = -1;\n    }\n    isPhysicalMouseWheel() {\n        if (this._front === -1 && this._rear === -1) {\n            // no elements\n            return false;\n        }\n        // 0.5 * last + 0.25 * 2nd last + 0.125 * 3rd last + ...\n        let remainingInfluence = 1;\n        let score = 0;\n        let iteration = 1;\n        let index = this._rear;\n        do {\n            const influence = (index === this._front ? remainingInfluence : Math.pow(2, -iteration));\n            remainingInfluence -= influence;\n            score += this._memory[index].score * influence;\n            if (index === this._front) {\n                break;\n            }\n            index = (this._capacity + index - 1) % this._capacity;\n            iteration++;\n        } while (true);\n        return (score <= 0.5);\n    }\n    accept(timestamp, deltaX, deltaY) {\n        const item = new MouseWheelClassifierItem(timestamp, deltaX, deltaY);\n        item.score = this._computeScore(item);\n        if (this._front === -1 && this._rear === -1) {\n            this._memory[0] = item;\n            this._front = 0;\n            this._rear = 0;\n        }\n        else {\n            this._rear = (this._rear + 1) % this._capacity;\n            if (this._rear === this._front) {\n                // Drop oldest\n                this._front = (this._front + 1) % this._capacity;\n            }\n            this._memory[this._rear] = item;\n        }\n    }\n    /**\n     * A score between 0 and 1 for `item`.\n     *  - a score towards 0 indicates that the source appears to be a physical mouse wheel\n     *  - a score towards 1 indicates that the source appears to be a touchpad or magic mouse, etc.\n     */\n    _computeScore(item) {\n        if (Math.abs(item.deltaX) > 0 && Math.abs(item.deltaY) > 0) {\n            // both axes exercised => definitely not a physical mouse wheel\n            return 1;\n        }\n        let score = 0.5;\n        const prev = (this._front === -1 && this._rear === -1 ? null : this._memory[this._rear]);\n        if (prev) {\n            // const deltaT = item.timestamp - prev.timestamp;\n            // if (deltaT < 1000 / 30) {\n            // \t// sooner than X times per second => indicator that this is not a physical mouse wheel\n            // \tscore += 0.25;\n            // }\n            // if (item.deltaX === prev.deltaX && item.deltaY === prev.deltaY) {\n            // \t// equal amplitude => indicator that this is a physical mouse wheel\n            // \tscore -= 0.25;\n            // }\n        }\n        if (!this._isAlmostInt(item.deltaX) || !this._isAlmostInt(item.deltaY)) {\n            // non-integer deltas => indicator that this is not a physical mouse wheel\n            score += 0.25;\n        }\n        return Math.min(Math.max(score, 0), 1);\n    }\n    _isAlmostInt(value) {\n        const delta = Math.abs(Math.round(value) - value);\n        return (delta < 0.01);\n    }\n}\nMouseWheelClassifier.INSTANCE = new MouseWheelClassifier();\nexport class AbstractScrollableElement extends Widget {\n    constructor(element, options, scrollable) {\n        super();\n        this._onScroll = this._register(new Emitter());\n        this.onScroll = this._onScroll.event;\n        this._onWillScroll = this._register(new Emitter());\n        element.style.overflow = 'hidden';\n        this._options = resolveOptions(options);\n        this._scrollable = scrollable;\n        this._register(this._scrollable.onScroll((e) => {\n            this._onWillScroll.fire(e);\n            this._onDidScroll(e);\n            this._onScroll.fire(e);\n        }));\n        const scrollbarHost = {\n            onMouseWheel: (mouseWheelEvent) => this._onMouseWheel(mouseWheelEvent),\n            onDragStart: () => this._onDragStart(),\n            onDragEnd: () => this._onDragEnd(),\n        };\n        this._verticalScrollbar = this._register(new VerticalScrollbar(this._scrollable, this._options, scrollbarHost));\n        this._horizontalScrollbar = this._register(new HorizontalScrollbar(this._scrollable, this._options, scrollbarHost));\n        this._domNode = document.createElement('div');\n        this._domNode.className = 'monaco-scrollable-element ' + this._options.className;\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.style.position = 'relative';\n        this._domNode.style.overflow = 'hidden';\n        this._domNode.appendChild(element);\n        this._domNode.appendChild(this._horizontalScrollbar.domNode.domNode);\n        this._domNode.appendChild(this._verticalScrollbar.domNode.domNode);\n        if (this._options.useShadows) {\n            this._leftShadowDomNode = createFastDomNode(document.createElement('div'));\n            this._leftShadowDomNode.setClassName('shadow');\n            this._domNode.appendChild(this._leftShadowDomNode.domNode);\n            this._topShadowDomNode = createFastDomNode(document.createElement('div'));\n            this._topShadowDomNode.setClassName('shadow');\n            this._domNode.appendChild(this._topShadowDomNode.domNode);\n            this._topLeftShadowDomNode = createFastDomNode(document.createElement('div'));\n            this._topLeftShadowDomNode.setClassName('shadow');\n            this._domNode.appendChild(this._topLeftShadowDomNode.domNode);\n        }\n        else {\n            this._leftShadowDomNode = null;\n            this._topShadowDomNode = null;\n            this._topLeftShadowDomNode = null;\n        }\n        this._listenOnDomNode = this._options.listenOnDomNode || this._domNode;\n        this._mouseWheelToDispose = [];\n        this._setListeningToMouseWheel(this._options.handleMouseWheel);\n        this.onmouseover(this._listenOnDomNode, (e) => this._onMouseOver(e));\n        this.onnonbubblingmouseout(this._listenOnDomNode, (e) => this._onMouseOut(e));\n        this._hideTimeout = this._register(new TimeoutTimer());\n        this._isDragging = false;\n        this._mouseIsOver = false;\n        this._shouldRender = true;\n        this._revealOnScroll = true;\n    }\n    get options() {\n        return this._options;\n    }\n    dispose() {\n        this._mouseWheelToDispose = dispose(this._mouseWheelToDispose);\n        super.dispose();\n    }\n    /**\n     * Get the generated 'scrollable' dom node\n     */\n    getDomNode() {\n        return this._domNode;\n    }\n    getOverviewRulerLayoutInfo() {\n        return {\n            parent: this._domNode,\n            insertBefore: this._verticalScrollbar.domNode.domNode,\n        };\n    }\n    /**\n     * Delegate a mouse down event to the vertical scrollbar.\n     * This is to help with clicking somewhere else and having the scrollbar react.\n     */\n    delegateVerticalScrollbarMouseDown(browserEvent) {\n        this._verticalScrollbar.delegateMouseDown(browserEvent);\n    }\n    getScrollDimensions() {\n        return this._scrollable.getScrollDimensions();\n    }\n    setScrollDimensions(dimensions) {\n        this._scrollable.setScrollDimensions(dimensions, false);\n    }\n    /**\n     * Update the class name of the scrollable element.\n     */\n    updateClassName(newClassName) {\n        this._options.className = newClassName;\n        // Defaults are different on Macs\n        if (platform.isMacintosh) {\n            this._options.className += ' mac';\n        }\n        this._domNode.className = 'monaco-scrollable-element ' + this._options.className;\n    }\n    /**\n     * Update configuration options for the scrollbar.\n     */\n    updateOptions(newOptions) {\n        if (typeof newOptions.handleMouseWheel !== 'undefined') {\n            this._options.handleMouseWheel = newOptions.handleMouseWheel;\n            this._setListeningToMouseWheel(this._options.handleMouseWheel);\n        }\n        if (typeof newOptions.mouseWheelScrollSensitivity !== 'undefined') {\n            this._options.mouseWheelScrollSensitivity = newOptions.mouseWheelScrollSensitivity;\n        }\n        if (typeof newOptions.fastScrollSensitivity !== 'undefined') {\n            this._options.fastScrollSensitivity = newOptions.fastScrollSensitivity;\n        }\n        if (typeof newOptions.scrollPredominantAxis !== 'undefined') {\n            this._options.scrollPredominantAxis = newOptions.scrollPredominantAxis;\n        }\n        if (typeof newOptions.horizontal !== 'undefined') {\n            this._options.horizontal = newOptions.horizontal;\n        }\n        if (typeof newOptions.vertical !== 'undefined') {\n            this._options.vertical = newOptions.vertical;\n        }\n        if (typeof newOptions.horizontalScrollbarSize !== 'undefined') {\n            this._options.horizontalScrollbarSize = newOptions.horizontalScrollbarSize;\n        }\n        if (typeof newOptions.verticalScrollbarSize !== 'undefined') {\n            this._options.verticalScrollbarSize = newOptions.verticalScrollbarSize;\n        }\n        if (typeof newOptions.scrollByPage !== 'undefined') {\n            this._options.scrollByPage = newOptions.scrollByPage;\n        }\n        this._horizontalScrollbar.updateOptions(this._options);\n        this._verticalScrollbar.updateOptions(this._options);\n        if (!this._options.lazyRender) {\n            this._render();\n        }\n    }\n    // -------------------- mouse wheel scrolling --------------------\n    _setListeningToMouseWheel(shouldListen) {\n        const isListening = (this._mouseWheelToDispose.length > 0);\n        if (isListening === shouldListen) {\n            // No change\n            return;\n        }\n        // Stop listening (if necessary)\n        this._mouseWheelToDispose = dispose(this._mouseWheelToDispose);\n        // Start listening (if necessary)\n        if (shouldListen) {\n            const onMouseWheel = (browserEvent) => {\n                this._onMouseWheel(new StandardWheelEvent(browserEvent));\n            };\n            this._mouseWheelToDispose.push(dom.addDisposableListener(this._listenOnDomNode, dom.EventType.MOUSE_WHEEL, onMouseWheel, { passive: false }));\n        }\n    }\n    _onMouseWheel(e) {\n        const classifier = MouseWheelClassifier.INSTANCE;\n        if (SCROLL_WHEEL_SMOOTH_SCROLL_ENABLED) {\n            const osZoomFactor = window.devicePixelRatio / getZoomFactor();\n            if (platform.isWindows || platform.isLinux) {\n                // On Windows and Linux, the incoming delta events are multiplied with the OS zoom factor.\n                // The OS zoom factor can be reverse engineered by using the device pixel ratio and the configured zoom factor into account.\n                classifier.accept(Date.now(), e.deltaX / osZoomFactor, e.deltaY / osZoomFactor);\n            }\n            else {\n                classifier.accept(Date.now(), e.deltaX, e.deltaY);\n            }\n        }\n        // console.log(`${Date.now()}, ${e.deltaY}, ${e.deltaX}`);\n        let didScroll = false;\n        if (e.deltaY || e.deltaX) {\n            let deltaY = e.deltaY * this._options.mouseWheelScrollSensitivity;\n            let deltaX = e.deltaX * this._options.mouseWheelScrollSensitivity;\n            if (this._options.scrollPredominantAxis) {\n                if (Math.abs(deltaY) >= Math.abs(deltaX)) {\n                    deltaX = 0;\n                }\n                else {\n                    deltaY = 0;\n                }\n            }\n            if (this._options.flipAxes) {\n                [deltaY, deltaX] = [deltaX, deltaY];\n            }\n            // Convert vertical scrolling to horizontal if shift is held, this\n            // is handled at a higher level on Mac\n            const shiftConvert = !platform.isMacintosh && e.browserEvent && e.browserEvent.shiftKey;\n            if ((this._options.scrollYToX || shiftConvert) && !deltaX) {\n                deltaX = deltaY;\n                deltaY = 0;\n            }\n            if (e.browserEvent && e.browserEvent.altKey) {\n                // fastScrolling\n                deltaX = deltaX * this._options.fastScrollSensitivity;\n                deltaY = deltaY * this._options.fastScrollSensitivity;\n            }\n            const futureScrollPosition = this._scrollable.getFutureScrollPosition();\n            let desiredScrollPosition = {};\n            if (deltaY) {\n                const deltaScrollTop = SCROLL_WHEEL_SENSITIVITY * deltaY;\n                // Here we convert values such as -0.3 to -1 or 0.3 to 1, otherwise low speed scrolling will never scroll\n                const desiredScrollTop = futureScrollPosition.scrollTop - (deltaScrollTop < 0 ? Math.floor(deltaScrollTop) : Math.ceil(deltaScrollTop));\n                this._verticalScrollbar.writeScrollPosition(desiredScrollPosition, desiredScrollTop);\n            }\n            if (deltaX) {\n                const deltaScrollLeft = SCROLL_WHEEL_SENSITIVITY * deltaX;\n                // Here we convert values such as -0.3 to -1 or 0.3 to 1, otherwise low speed scrolling will never scroll\n                const desiredScrollLeft = futureScrollPosition.scrollLeft - (deltaScrollLeft < 0 ? Math.floor(deltaScrollLeft) : Math.ceil(deltaScrollLeft));\n                this._horizontalScrollbar.writeScrollPosition(desiredScrollPosition, desiredScrollLeft);\n            }\n            // Check that we are scrolling towards a location which is valid\n            desiredScrollPosition = this._scrollable.validateScrollPosition(desiredScrollPosition);\n            if (futureScrollPosition.scrollLeft !== desiredScrollPosition.scrollLeft || futureScrollPosition.scrollTop !== desiredScrollPosition.scrollTop) {\n                const canPerformSmoothScroll = (SCROLL_WHEEL_SMOOTH_SCROLL_ENABLED\n                    && this._options.mouseWheelSmoothScroll\n                    && classifier.isPhysicalMouseWheel());\n                if (canPerformSmoothScroll) {\n                    this._scrollable.setScrollPositionSmooth(desiredScrollPosition);\n                }\n                else {\n                    this._scrollable.setScrollPositionNow(desiredScrollPosition);\n                }\n                didScroll = true;\n            }\n        }\n        let consumeMouseWheel = didScroll;\n        if (!consumeMouseWheel && this._options.alwaysConsumeMouseWheel) {\n            consumeMouseWheel = true;\n        }\n        if (!consumeMouseWheel && this._options.consumeMouseWheelIfScrollbarIsNeeded && (this._verticalScrollbar.isNeeded() || this._horizontalScrollbar.isNeeded())) {\n            consumeMouseWheel = true;\n        }\n        if (consumeMouseWheel) {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n    _onDidScroll(e) {\n        this._shouldRender = this._horizontalScrollbar.onDidScroll(e) || this._shouldRender;\n        this._shouldRender = this._verticalScrollbar.onDidScroll(e) || this._shouldRender;\n        if (this._options.useShadows) {\n            this._shouldRender = true;\n        }\n        if (this._revealOnScroll) {\n            this._reveal();\n        }\n        if (!this._options.lazyRender) {\n            this._render();\n        }\n    }\n    /**\n     * Render / mutate the DOM now.\n     * Should be used together with the ctor option `lazyRender`.\n     */\n    renderNow() {\n        if (!this._options.lazyRender) {\n            throw new Error('Please use `lazyRender` together with `renderNow`!');\n        }\n        this._render();\n    }\n    _render() {\n        if (!this._shouldRender) {\n            return;\n        }\n        this._shouldRender = false;\n        this._horizontalScrollbar.render();\n        this._verticalScrollbar.render();\n        if (this._options.useShadows) {\n            const scrollState = this._scrollable.getCurrentScrollPosition();\n            const enableTop = scrollState.scrollTop > 0;\n            const enableLeft = scrollState.scrollLeft > 0;\n            const leftClassName = (enableLeft ? ' left' : '');\n            const topClassName = (enableTop ? ' top' : '');\n            const topLeftClassName = (enableLeft || enableTop ? ' top-left-corner' : '');\n            this._leftShadowDomNode.setClassName(`shadow${leftClassName}`);\n            this._topShadowDomNode.setClassName(`shadow${topClassName}`);\n            this._topLeftShadowDomNode.setClassName(`shadow${topLeftClassName}${topClassName}${leftClassName}`);\n        }\n    }\n    // -------------------- fade in / fade out --------------------\n    _onDragStart() {\n        this._isDragging = true;\n        this._reveal();\n    }\n    _onDragEnd() {\n        this._isDragging = false;\n        this._hide();\n    }\n    _onMouseOut(e) {\n        this._mouseIsOver = false;\n        this._hide();\n    }\n    _onMouseOver(e) {\n        this._mouseIsOver = true;\n        this._reveal();\n    }\n    _reveal() {\n        this._verticalScrollbar.beginReveal();\n        this._horizontalScrollbar.beginReveal();\n        this._scheduleHide();\n    }\n    _hide() {\n        if (!this._mouseIsOver && !this._isDragging) {\n            this._verticalScrollbar.beginHide();\n            this._horizontalScrollbar.beginHide();\n        }\n    }\n    _scheduleHide() {\n        if (!this._mouseIsOver && !this._isDragging) {\n            this._hideTimeout.cancelAndSet(() => this._hide(), HIDE_TIMEOUT);\n        }\n    }\n}\nexport class ScrollableElement extends AbstractScrollableElement {\n    constructor(element, options) {\n        options = options || {};\n        options.mouseWheelSmoothScroll = false;\n        const scrollable = new Scrollable({\n            forceIntegerValues: true,\n            smoothScrollDuration: 0,\n            scheduleAtNextAnimationFrame: (callback) => dom.scheduleAtNextAnimationFrame(callback)\n        });\n        super(element, options, scrollable);\n        this._register(scrollable);\n    }\n    setScrollPosition(update) {\n        this._scrollable.setScrollPositionNow(update);\n    }\n}\nexport class SmoothScrollableElement extends AbstractScrollableElement {\n    constructor(element, options, scrollable) {\n        super(element, options, scrollable);\n    }\n    setScrollPosition(update) {\n        if (update.reuseAnimation) {\n            this._scrollable.setScrollPositionSmooth(update, update.reuseAnimation);\n        }\n        else {\n            this._scrollable.setScrollPositionNow(update);\n        }\n    }\n    getScrollPosition() {\n        return this._scrollable.getCurrentScrollPosition();\n    }\n}\nexport class DomScrollableElement extends AbstractScrollableElement {\n    constructor(element, options) {\n        options = options || {};\n        options.mouseWheelSmoothScroll = false;\n        const scrollable = new Scrollable({\n            forceIntegerValues: false,\n            smoothScrollDuration: 0,\n            scheduleAtNextAnimationFrame: (callback) => dom.scheduleAtNextAnimationFrame(callback)\n        });\n        super(element, options, scrollable);\n        this._register(scrollable);\n        this._element = element;\n        this.onScroll((e) => {\n            if (e.scrollTopChanged) {\n                this._element.scrollTop = e.scrollTop;\n            }\n            if (e.scrollLeftChanged) {\n                this._element.scrollLeft = e.scrollLeft;\n            }\n        });\n        this.scanDomNode();\n    }\n    setScrollPosition(update) {\n        this._scrollable.setScrollPositionNow(update);\n    }\n    getScrollPosition() {\n        return this._scrollable.getCurrentScrollPosition();\n    }\n    scanDomNode() {\n        // width, scrollLeft, scrollWidth, height, scrollTop, scrollHeight\n        this.setScrollDimensions({\n            width: this._element.clientWidth,\n            scrollWidth: this._element.scrollWidth,\n            height: this._element.clientHeight,\n            scrollHeight: this._element.scrollHeight\n        });\n        this.setScrollPosition({\n            scrollLeft: this._element.scrollLeft,\n            scrollTop: this._element.scrollTop,\n        });\n    }\n}\nfunction resolveOptions(opts) {\n    const result = {\n        lazyRender: (typeof opts.lazyRender !== 'undefined' ? opts.lazyRender : false),\n        className: (typeof opts.className !== 'undefined' ? opts.className : ''),\n        useShadows: (typeof opts.useShadows !== 'undefined' ? opts.useShadows : true),\n        handleMouseWheel: (typeof opts.handleMouseWheel !== 'undefined' ? opts.handleMouseWheel : true),\n        flipAxes: (typeof opts.flipAxes !== 'undefined' ? opts.flipAxes : false),\n        consumeMouseWheelIfScrollbarIsNeeded: (typeof opts.consumeMouseWheelIfScrollbarIsNeeded !== 'undefined' ? opts.consumeMouseWheelIfScrollbarIsNeeded : false),\n        alwaysConsumeMouseWheel: (typeof opts.alwaysConsumeMouseWheel !== 'undefined' ? opts.alwaysConsumeMouseWheel : false),\n        scrollYToX: (typeof opts.scrollYToX !== 'undefined' ? opts.scrollYToX : false),\n        mouseWheelScrollSensitivity: (typeof opts.mouseWheelScrollSensitivity !== 'undefined' ? opts.mouseWheelScrollSensitivity : 1),\n        fastScrollSensitivity: (typeof opts.fastScrollSensitivity !== 'undefined' ? opts.fastScrollSensitivity : 5),\n        scrollPredominantAxis: (typeof opts.scrollPredominantAxis !== 'undefined' ? opts.scrollPredominantAxis : true),\n        mouseWheelSmoothScroll: (typeof opts.mouseWheelSmoothScroll !== 'undefined' ? opts.mouseWheelSmoothScroll : true),\n        arrowSize: (typeof opts.arrowSize !== 'undefined' ? opts.arrowSize : 11),\n        listenOnDomNode: (typeof opts.listenOnDomNode !== 'undefined' ? opts.listenOnDomNode : null),\n        horizontal: (typeof opts.horizontal !== 'undefined' ? opts.horizontal : 1 /* Auto */),\n        horizontalScrollbarSize: (typeof opts.horizontalScrollbarSize !== 'undefined' ? opts.horizontalScrollbarSize : 10),\n        horizontalSliderSize: (typeof opts.horizontalSliderSize !== 'undefined' ? opts.horizontalSliderSize : 0),\n        horizontalHasArrows: (typeof opts.horizontalHasArrows !== 'undefined' ? opts.horizontalHasArrows : false),\n        vertical: (typeof opts.vertical !== 'undefined' ? opts.vertical : 1 /* Auto */),\n        verticalScrollbarSize: (typeof opts.verticalScrollbarSize !== 'undefined' ? opts.verticalScrollbarSize : 10),\n        verticalHasArrows: (typeof opts.verticalHasArrows !== 'undefined' ? opts.verticalHasArrows : false),\n        verticalSliderSize: (typeof opts.verticalSliderSize !== 'undefined' ? opts.verticalSliderSize : 0),\n        scrollByPage: (typeof opts.scrollByPage !== 'undefined' ? opts.scrollByPage : false)\n    };\n    result.horizontalSliderSize = (typeof opts.horizontalSliderSize !== 'undefined' ? opts.horizontalSliderSize : result.horizontalScrollbarSize);\n    result.verticalSliderSize = (typeof opts.verticalSliderSize !== 'undefined' ? opts.verticalSliderSize : result.verticalScrollbarSize);\n    // Defaults are different on Macs\n    if (platform.isMacintosh) {\n        result.className += ' mac';\n    }\n    return result;\n}\n"]},"metadata":{},"sourceType":"module"}