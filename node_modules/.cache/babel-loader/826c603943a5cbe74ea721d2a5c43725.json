{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { forEach } from '../../../base/common/collections.js';\n/**\n * Compatibility with old options\n */\n\nexport function migrateOptions(options) {\n  const wordWrap = options.wordWrap;\n\n  if (wordWrap === true) {\n    options.wordWrap = 'on';\n  } else if (wordWrap === false) {\n    options.wordWrap = 'off';\n  }\n\n  const lineNumbers = options.lineNumbers;\n\n  if (lineNumbers === true) {\n    options.lineNumbers = 'on';\n  } else if (lineNumbers === false) {\n    options.lineNumbers = 'off';\n  }\n\n  const autoClosingBrackets = options.autoClosingBrackets;\n\n  if (autoClosingBrackets === false) {\n    options.autoClosingBrackets = 'never';\n    options.autoClosingQuotes = 'never';\n    options.autoSurround = 'never';\n  }\n\n  const cursorBlinking = options.cursorBlinking;\n\n  if (cursorBlinking === 'visible') {\n    options.cursorBlinking = 'solid';\n  }\n\n  const renderWhitespace = options.renderWhitespace;\n\n  if (renderWhitespace === true) {\n    options.renderWhitespace = 'boundary';\n  } else if (renderWhitespace === false) {\n    options.renderWhitespace = 'none';\n  }\n\n  const renderLineHighlight = options.renderLineHighlight;\n\n  if (renderLineHighlight === true) {\n    options.renderLineHighlight = 'line';\n  } else if (renderLineHighlight === false) {\n    options.renderLineHighlight = 'none';\n  }\n\n  const acceptSuggestionOnEnter = options.acceptSuggestionOnEnter;\n\n  if (acceptSuggestionOnEnter === true) {\n    options.acceptSuggestionOnEnter = 'on';\n  } else if (acceptSuggestionOnEnter === false) {\n    options.acceptSuggestionOnEnter = 'off';\n  }\n\n  const tabCompletion = options.tabCompletion;\n\n  if (tabCompletion === false) {\n    options.tabCompletion = 'off';\n  } else if (tabCompletion === true) {\n    options.tabCompletion = 'onlySnippets';\n  }\n\n  const suggest = options.suggest;\n\n  if (suggest && typeof suggest.filteredTypes === 'object' && suggest.filteredTypes) {\n    const mapping = {};\n    mapping['method'] = 'showMethods';\n    mapping['function'] = 'showFunctions';\n    mapping['constructor'] = 'showConstructors';\n    mapping['deprecated'] = 'showDeprecated';\n    mapping['field'] = 'showFields';\n    mapping['variable'] = 'showVariables';\n    mapping['class'] = 'showClasses';\n    mapping['struct'] = 'showStructs';\n    mapping['interface'] = 'showInterfaces';\n    mapping['module'] = 'showModules';\n    mapping['property'] = 'showProperties';\n    mapping['event'] = 'showEvents';\n    mapping['operator'] = 'showOperators';\n    mapping['unit'] = 'showUnits';\n    mapping['value'] = 'showValues';\n    mapping['constant'] = 'showConstants';\n    mapping['enum'] = 'showEnums';\n    mapping['enumMember'] = 'showEnumMembers';\n    mapping['keyword'] = 'showKeywords';\n    mapping['text'] = 'showWords';\n    mapping['color'] = 'showColors';\n    mapping['file'] = 'showFiles';\n    mapping['reference'] = 'showReferences';\n    mapping['folder'] = 'showFolders';\n    mapping['typeParameter'] = 'showTypeParameters';\n    mapping['snippet'] = 'showSnippets';\n    forEach(mapping, entry => {\n      const value = suggest.filteredTypes[entry.key];\n\n      if (value === false) {\n        suggest[entry.value] = value;\n      }\n    }); // delete (<any>suggest).filteredTypes;\n  }\n\n  const hover = options.hover;\n\n  if (hover === true) {\n    options.hover = {\n      enabled: true\n    };\n  } else if (hover === false) {\n    options.hover = {\n      enabled: false\n    };\n  }\n\n  const parameterHints = options.parameterHints;\n\n  if (parameterHints === true) {\n    options.parameterHints = {\n      enabled: true\n    };\n  } else if (parameterHints === false) {\n    options.parameterHints = {\n      enabled: false\n    };\n  }\n\n  const autoIndent = options.autoIndent;\n\n  if (autoIndent === true) {\n    options.autoIndent = 'full';\n  } else if (autoIndent === false) {\n    options.autoIndent = 'advanced';\n  }\n\n  const matchBrackets = options.matchBrackets;\n\n  if (matchBrackets === true) {\n    options.matchBrackets = 'always';\n  } else if (matchBrackets === false) {\n    options.matchBrackets = 'never';\n  }\n\n  const {\n    renderIndentGuides,\n    highlightActiveIndentGuide\n  } = options;\n\n  if (!options.guides) {\n    options.guides = {};\n  }\n\n  if (renderIndentGuides !== undefined) {\n    options.guides.indentation = !!renderIndentGuides;\n  }\n\n  if (highlightActiveIndentGuide !== undefined) {\n    options.guides.highlightActiveIndentation = !!highlightActiveIndentGuide;\n  }\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/browser/config/migrateOptions.js"],"names":["forEach","migrateOptions","options","wordWrap","lineNumbers","autoClosingBrackets","autoClosingQuotes","autoSurround","cursorBlinking","renderWhitespace","renderLineHighlight","acceptSuggestionOnEnter","tabCompletion","suggest","filteredTypes","mapping","entry","value","key","hover","enabled","parameterHints","autoIndent","matchBrackets","renderIndentGuides","highlightActiveIndentGuide","guides","undefined","indentation","highlightActiveIndentation"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { forEach } from '../../../base/common/collections.js';\n/**\n * Compatibility with old options\n */\nexport function migrateOptions(options) {\n    const wordWrap = options.wordWrap;\n    if (wordWrap === true) {\n        options.wordWrap = 'on';\n    }\n    else if (wordWrap === false) {\n        options.wordWrap = 'off';\n    }\n    const lineNumbers = options.lineNumbers;\n    if (lineNumbers === true) {\n        options.lineNumbers = 'on';\n    }\n    else if (lineNumbers === false) {\n        options.lineNumbers = 'off';\n    }\n    const autoClosingBrackets = options.autoClosingBrackets;\n    if (autoClosingBrackets === false) {\n        options.autoClosingBrackets = 'never';\n        options.autoClosingQuotes = 'never';\n        options.autoSurround = 'never';\n    }\n    const cursorBlinking = options.cursorBlinking;\n    if (cursorBlinking === 'visible') {\n        options.cursorBlinking = 'solid';\n    }\n    const renderWhitespace = options.renderWhitespace;\n    if (renderWhitespace === true) {\n        options.renderWhitespace = 'boundary';\n    }\n    else if (renderWhitespace === false) {\n        options.renderWhitespace = 'none';\n    }\n    const renderLineHighlight = options.renderLineHighlight;\n    if (renderLineHighlight === true) {\n        options.renderLineHighlight = 'line';\n    }\n    else if (renderLineHighlight === false) {\n        options.renderLineHighlight = 'none';\n    }\n    const acceptSuggestionOnEnter = options.acceptSuggestionOnEnter;\n    if (acceptSuggestionOnEnter === true) {\n        options.acceptSuggestionOnEnter = 'on';\n    }\n    else if (acceptSuggestionOnEnter === false) {\n        options.acceptSuggestionOnEnter = 'off';\n    }\n    const tabCompletion = options.tabCompletion;\n    if (tabCompletion === false) {\n        options.tabCompletion = 'off';\n    }\n    else if (tabCompletion === true) {\n        options.tabCompletion = 'onlySnippets';\n    }\n    const suggest = options.suggest;\n    if (suggest && typeof suggest.filteredTypes === 'object' && suggest.filteredTypes) {\n        const mapping = {};\n        mapping['method'] = 'showMethods';\n        mapping['function'] = 'showFunctions';\n        mapping['constructor'] = 'showConstructors';\n        mapping['deprecated'] = 'showDeprecated';\n        mapping['field'] = 'showFields';\n        mapping['variable'] = 'showVariables';\n        mapping['class'] = 'showClasses';\n        mapping['struct'] = 'showStructs';\n        mapping['interface'] = 'showInterfaces';\n        mapping['module'] = 'showModules';\n        mapping['property'] = 'showProperties';\n        mapping['event'] = 'showEvents';\n        mapping['operator'] = 'showOperators';\n        mapping['unit'] = 'showUnits';\n        mapping['value'] = 'showValues';\n        mapping['constant'] = 'showConstants';\n        mapping['enum'] = 'showEnums';\n        mapping['enumMember'] = 'showEnumMembers';\n        mapping['keyword'] = 'showKeywords';\n        mapping['text'] = 'showWords';\n        mapping['color'] = 'showColors';\n        mapping['file'] = 'showFiles';\n        mapping['reference'] = 'showReferences';\n        mapping['folder'] = 'showFolders';\n        mapping['typeParameter'] = 'showTypeParameters';\n        mapping['snippet'] = 'showSnippets';\n        forEach(mapping, entry => {\n            const value = suggest.filteredTypes[entry.key];\n            if (value === false) {\n                suggest[entry.value] = value;\n            }\n        });\n        // delete (<any>suggest).filteredTypes;\n    }\n    const hover = options.hover;\n    if (hover === true) {\n        options.hover = {\n            enabled: true\n        };\n    }\n    else if (hover === false) {\n        options.hover = {\n            enabled: false\n        };\n    }\n    const parameterHints = options.parameterHints;\n    if (parameterHints === true) {\n        options.parameterHints = {\n            enabled: true\n        };\n    }\n    else if (parameterHints === false) {\n        options.parameterHints = {\n            enabled: false\n        };\n    }\n    const autoIndent = options.autoIndent;\n    if (autoIndent === true) {\n        options.autoIndent = 'full';\n    }\n    else if (autoIndent === false) {\n        options.autoIndent = 'advanced';\n    }\n    const matchBrackets = options.matchBrackets;\n    if (matchBrackets === true) {\n        options.matchBrackets = 'always';\n    }\n    else if (matchBrackets === false) {\n        options.matchBrackets = 'never';\n    }\n    const { renderIndentGuides, highlightActiveIndentGuide } = options;\n    if (!options.guides) {\n        options.guides = {};\n    }\n    if (renderIndentGuides !== undefined) {\n        options.guides.indentation = !!renderIndentGuides;\n    }\n    if (highlightActiveIndentGuide !== undefined) {\n        options.guides.highlightActiveIndentation = !!highlightActiveIndentGuide;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}