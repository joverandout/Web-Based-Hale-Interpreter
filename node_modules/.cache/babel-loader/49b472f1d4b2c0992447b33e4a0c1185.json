{"ast":null,"code":"/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n// src/basic-languages/pla/pla.ts\nvar conf = {\n  comments: {\n    lineComment: \"#\"\n  },\n  brackets: [[\"[\", \"]\"], [\"<\", \">\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"<\",\n    close: \">\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }],\n  surroundingPairs: [{\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"<\",\n    close: \">\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".pla\",\n  brackets: [{\n    open: \"[\",\n    close: \"]\",\n    token: \"delimiter.square\"\n  }, {\n    open: \"<\",\n    close: \">\",\n    token: \"delimiter.angle\"\n  }, {\n    open: \"(\",\n    close: \")\",\n    token: \"delimiter.parenthesis\"\n  }],\n  keywords: [\".i\", \".o\", \".mv\", \".ilb\", \".ob\", \".label\", \".type\", \".phase\", \".pair\", \".symbolic\", \".symbolic-output\", \".kiss\", \".p\", \".e\", \".end\"],\n  comment: /#.*$/,\n  identifier: /[a-zA-Z]+[a-zA-Z0-9_\\-]*/,\n  plaContent: /[01\\-~\\|]+/,\n  tokenizer: {\n    root: [{\n      include: \"@whitespace\"\n    }, [/@comment/, \"comment\"], [/\\.([a-zA-Z_\\-]+)/, {\n      cases: {\n        \"@eos\": {\n          token: \"keyword.$1\"\n        },\n        \"@keywords\": {\n          cases: {\n            \".type\": {\n              token: \"keyword.$1\",\n              next: \"@type\"\n            },\n            \"@default\": {\n              token: \"keyword.$1\",\n              next: \"@keywordArg\"\n            }\n          }\n        },\n        \"@default\": {\n          token: \"keyword.$1\"\n        }\n      }\n    }], [/@identifier/, \"identifier\"], [/@plaContent/, \"string\"]],\n    whitespace: [[/[ \\t\\r\\n]+/, \"\"]],\n    type: [{\n      include: \"@whitespace\"\n    }, [/\\w+/, {\n      token: \"type\",\n      next: \"@pop\"\n    }]],\n    keywordArg: [[/[ \\t\\r\\n]+/, {\n      cases: {\n        \"@eos\": {\n          token: \"\",\n          next: \"@pop\"\n        },\n        \"@default\": \"\"\n      }\n    }], [/@comment/, \"comment\", \"@pop\"], [/[<>()\\[\\]]/, {\n      cases: {\n        \"@eos\": {\n          token: \"@brackets\",\n          next: \"@pop\"\n        },\n        \"@default\": \"@brackets\"\n      }\n    }], [/\\-?\\d+/, {\n      cases: {\n        \"@eos\": {\n          token: \"number\",\n          next: \"@pop\"\n        },\n        \"@default\": \"number\"\n      }\n    }], [/@identifier/, {\n      cases: {\n        \"@eos\": {\n          token: \"identifier\",\n          next: \"@pop\"\n        },\n        \"@default\": \"identifier\"\n      }\n    }], [/[;=]/, {\n      cases: {\n        \"@eos\": {\n          token: \"delimiter\",\n          next: \"@pop\"\n        },\n        \"@default\": \"delimiter\"\n      }\n    }]]\n  }\n};\nexport { conf, language };","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/basic-languages/pla/pla.js"],"names":["conf","comments","lineComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","tokenPostfix","token","keywords","comment","identifier","plaContent","tokenizer","root","include","cases","next","whitespace","type","keywordArg"],"mappings":"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","sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/pla/pla.ts\nvar conf = {\n  comments: {\n    lineComment: \"#\"\n  },\n  brackets: [\n    [\"[\", \"]\"],\n    [\"<\", \">\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"[\", close: \"]\" },\n    { open: \"<\", close: \">\" },\n    { open: \"(\", close: \")\" }\n  ],\n  surroundingPairs: [\n    { open: \"[\", close: \"]\" },\n    { open: \"<\", close: \">\" },\n    { open: \"(\", close: \")\" }\n  ]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".pla\",\n  brackets: [\n    { open: \"[\", close: \"]\", token: \"delimiter.square\" },\n    { open: \"<\", close: \">\", token: \"delimiter.angle\" },\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" }\n  ],\n  keywords: [\n    \".i\",\n    \".o\",\n    \".mv\",\n    \".ilb\",\n    \".ob\",\n    \".label\",\n    \".type\",\n    \".phase\",\n    \".pair\",\n    \".symbolic\",\n    \".symbolic-output\",\n    \".kiss\",\n    \".p\",\n    \".e\",\n    \".end\"\n  ],\n  comment: /#.*$/,\n  identifier: /[a-zA-Z]+[a-zA-Z0-9_\\-]*/,\n  plaContent: /[01\\-~\\|]+/,\n  tokenizer: {\n    root: [\n      { include: \"@whitespace\" },\n      [/@comment/, \"comment\"],\n      [\n        /\\.([a-zA-Z_\\-]+)/,\n        {\n          cases: {\n            \"@eos\": { token: \"keyword.$1\" },\n            \"@keywords\": {\n              cases: {\n                \".type\": { token: \"keyword.$1\", next: \"@type\" },\n                \"@default\": { token: \"keyword.$1\", next: \"@keywordArg\" }\n              }\n            },\n            \"@default\": { token: \"keyword.$1\" }\n          }\n        }\n      ],\n      [/@identifier/, \"identifier\"],\n      [/@plaContent/, \"string\"]\n    ],\n    whitespace: [[/[ \\t\\r\\n]+/, \"\"]],\n    type: [{ include: \"@whitespace\" }, [/\\w+/, { token: \"type\", next: \"@pop\" }]],\n    keywordArg: [\n      [\n        /[ \\t\\r\\n]+/,\n        {\n          cases: {\n            \"@eos\": { token: \"\", next: \"@pop\" },\n            \"@default\": \"\"\n          }\n        }\n      ],\n      [/@comment/, \"comment\", \"@pop\"],\n      [\n        /[<>()\\[\\]]/,\n        {\n          cases: {\n            \"@eos\": { token: \"@brackets\", next: \"@pop\" },\n            \"@default\": \"@brackets\"\n          }\n        }\n      ],\n      [\n        /\\-?\\d+/,\n        {\n          cases: {\n            \"@eos\": { token: \"number\", next: \"@pop\" },\n            \"@default\": \"number\"\n          }\n        }\n      ],\n      [\n        /@identifier/,\n        {\n          cases: {\n            \"@eos\": { token: \"identifier\", next: \"@pop\" },\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      [\n        /[;=]/,\n        {\n          cases: {\n            \"@eos\": { token: \"delimiter\", next: \"@pop\" },\n            \"@default\": \"delimiter\"\n          }\n        }\n      ]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"]},"metadata":{},"sourceType":"module"}