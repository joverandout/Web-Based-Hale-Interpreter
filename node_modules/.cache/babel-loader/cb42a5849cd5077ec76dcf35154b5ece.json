{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { renderLabelWithIcons } from '../iconLabel/iconLabels.js';\nimport * as objects from '../../../common/objects.js';\n/**\n * A widget which can render a label with substring highlights, often\n * originating from a filter function like the fuzzy matcher.\n */\n\nexport class HighlightedLabel {\n  /**\n   * Create a new {@link HighlightedLabel}.\n   *\n   * @param container The parent container to append to.\n   */\n  constructor(container, options) {\n    var _a;\n\n    this.text = '';\n    this.title = '';\n    this.highlights = [];\n    this.didEverRender = false;\n    this.supportIcons = (_a = options === null || options === void 0 ? void 0 : options.supportIcons) !== null && _a !== void 0 ? _a : false;\n    this.domNode = dom.append(container, dom.$('span.monaco-highlighted-label'));\n  }\n  /**\n   * The label's DOM node.\n   */\n\n\n  get element() {\n    return this.domNode;\n  }\n  /**\n   * Set the label and highlights.\n   *\n   * @param text The label to display.\n   * @param highlights The ranges to highlight.\n   * @param title An optional title for the hover tooltip.\n   * @param escapeNewLines Whether to escape new lines.\n   * @returns\n   */\n\n\n  set(text, highlights = [], title = '', escapeNewLines) {\n    if (!text) {\n      text = '';\n    }\n\n    if (escapeNewLines) {\n      // adjusts highlights inplace\n      text = HighlightedLabel.escapeNewLines(text, highlights);\n    }\n\n    if (this.didEverRender && this.text === text && this.title === title && objects.equals(this.highlights, highlights)) {\n      return;\n    }\n\n    this.text = text;\n    this.title = title;\n    this.highlights = highlights;\n    this.render();\n  }\n\n  render() {\n    const children = [];\n    let pos = 0;\n\n    for (const highlight of this.highlights) {\n      if (highlight.end === highlight.start) {\n        continue;\n      }\n\n      if (pos < highlight.start) {\n        const substring = this.text.substring(pos, highlight.start);\n        children.push(dom.$('span', undefined, ...(this.supportIcons ? renderLabelWithIcons(substring) : [substring])));\n        pos = highlight.end;\n      }\n\n      const substring = this.text.substring(highlight.start, highlight.end);\n      const element = dom.$('span.highlight', undefined, ...(this.supportIcons ? renderLabelWithIcons(substring) : [substring]));\n\n      if (highlight.extraClasses) {\n        element.classList.add(...highlight.extraClasses);\n      }\n\n      children.push(element);\n      pos = highlight.end;\n    }\n\n    if (pos < this.text.length) {\n      const substring = this.text.substring(pos);\n      children.push(dom.$('span', undefined, ...(this.supportIcons ? renderLabelWithIcons(substring) : [substring])));\n    }\n\n    dom.reset(this.domNode, ...children);\n\n    if (this.title) {\n      this.domNode.title = this.title;\n    } else {\n      this.domNode.removeAttribute('title');\n    }\n\n    this.didEverRender = true;\n  }\n\n  static escapeNewLines(text, highlights) {\n    let total = 0;\n    let extra = 0;\n    return text.replace(/\\r\\n|\\r|\\n/g, (match, offset) => {\n      extra = match === '\\r\\n' ? -1 : 0;\n      offset += total;\n\n      for (const highlight of highlights) {\n        if (highlight.end <= offset) {\n          continue;\n        }\n\n        if (highlight.start >= offset) {\n          highlight.start += extra;\n        }\n\n        if (highlight.end >= offset) {\n          highlight.end += extra;\n        }\n      }\n\n      total += extra;\n      return '\\u23CE';\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/base/browser/ui/highlightedlabel/highlightedLabel.js"],"names":["dom","renderLabelWithIcons","objects","HighlightedLabel","constructor","container","options","_a","text","title","highlights","didEverRender","supportIcons","domNode","append","$","element","set","escapeNewLines","equals","render","children","pos","highlight","end","start","substring","push","undefined","extraClasses","classList","add","length","reset","removeAttribute","total","extra","replace","match","offset"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { renderLabelWithIcons } from '../iconLabel/iconLabels.js';\nimport * as objects from '../../../common/objects.js';\n/**\n * A widget which can render a label with substring highlights, often\n * originating from a filter function like the fuzzy matcher.\n */\nexport class HighlightedLabel {\n    /**\n     * Create a new {@link HighlightedLabel}.\n     *\n     * @param container The parent container to append to.\n     */\n    constructor(container, options) {\n        var _a;\n        this.text = '';\n        this.title = '';\n        this.highlights = [];\n        this.didEverRender = false;\n        this.supportIcons = (_a = options === null || options === void 0 ? void 0 : options.supportIcons) !== null && _a !== void 0 ? _a : false;\n        this.domNode = dom.append(container, dom.$('span.monaco-highlighted-label'));\n    }\n    /**\n     * The label's DOM node.\n     */\n    get element() {\n        return this.domNode;\n    }\n    /**\n     * Set the label and highlights.\n     *\n     * @param text The label to display.\n     * @param highlights The ranges to highlight.\n     * @param title An optional title for the hover tooltip.\n     * @param escapeNewLines Whether to escape new lines.\n     * @returns\n     */\n    set(text, highlights = [], title = '', escapeNewLines) {\n        if (!text) {\n            text = '';\n        }\n        if (escapeNewLines) {\n            // adjusts highlights inplace\n            text = HighlightedLabel.escapeNewLines(text, highlights);\n        }\n        if (this.didEverRender && this.text === text && this.title === title && objects.equals(this.highlights, highlights)) {\n            return;\n        }\n        this.text = text;\n        this.title = title;\n        this.highlights = highlights;\n        this.render();\n    }\n    render() {\n        const children = [];\n        let pos = 0;\n        for (const highlight of this.highlights) {\n            if (highlight.end === highlight.start) {\n                continue;\n            }\n            if (pos < highlight.start) {\n                const substring = this.text.substring(pos, highlight.start);\n                children.push(dom.$('span', undefined, ...this.supportIcons ? renderLabelWithIcons(substring) : [substring]));\n                pos = highlight.end;\n            }\n            const substring = this.text.substring(highlight.start, highlight.end);\n            const element = dom.$('span.highlight', undefined, ...this.supportIcons ? renderLabelWithIcons(substring) : [substring]);\n            if (highlight.extraClasses) {\n                element.classList.add(...highlight.extraClasses);\n            }\n            children.push(element);\n            pos = highlight.end;\n        }\n        if (pos < this.text.length) {\n            const substring = this.text.substring(pos);\n            children.push(dom.$('span', undefined, ...this.supportIcons ? renderLabelWithIcons(substring) : [substring]));\n        }\n        dom.reset(this.domNode, ...children);\n        if (this.title) {\n            this.domNode.title = this.title;\n        }\n        else {\n            this.domNode.removeAttribute('title');\n        }\n        this.didEverRender = true;\n    }\n    static escapeNewLines(text, highlights) {\n        let total = 0;\n        let extra = 0;\n        return text.replace(/\\r\\n|\\r|\\n/g, (match, offset) => {\n            extra = match === '\\r\\n' ? -1 : 0;\n            offset += total;\n            for (const highlight of highlights) {\n                if (highlight.end <= offset) {\n                    continue;\n                }\n                if (highlight.start >= offset) {\n                    highlight.start += extra;\n                }\n                if (highlight.end >= offset) {\n                    highlight.end += extra;\n                }\n            }\n            total += extra;\n            return '\\u23CE';\n        });\n    }\n}\n"]},"metadata":{},"sourceType":"module"}