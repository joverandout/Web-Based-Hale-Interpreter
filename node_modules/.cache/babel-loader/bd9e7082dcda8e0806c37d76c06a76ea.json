{"ast":null,"code":"import * as React from 'react';\nimport CurrentRenderContext from './CurrentRenderContext';\n/**\n * Write the current options, so that server renderer can get current values\n * Mutating values like this is not safe in async mode, but it doesn't apply to SSR\n */\n\nexport default function useCurrentRender(_ref) {\n  let {\n    state,\n    navigation,\n    descriptors\n  } = _ref;\n  const current = React.useContext(CurrentRenderContext);\n\n  if (current && navigation.isFocused()) {\n    current.options = descriptors[state.routes[state.index].key].options;\n  }\n}","map":{"version":3,"sources":["useCurrentRender.tsx"],"names":["descriptors","current","React","navigation","state"],"mappings":"AACA,OAAO,KAAP,KAAA,MAAA,OAAA;AAEA,OAAA,oBAAA,MAAA,wBAAA;AAiBA;AACA;AACA;AACA;;AACA,eAAe,SAAA,gBAAA,CAAA,IAAA,EAIH;AAAA,MAJ6B;AAAA,IAAA,KAAA;AAAA,IAAA,UAAA;AAGvCA,IAAAA;AAHuC,MAI7B,IAAA;AACV,QAAMC,OAAO,GAAGC,KAAK,CAALA,UAAAA,CAAhB,oBAAgBA,CAAhB;;AAEA,MAAID,OAAO,IAAIE,UAAU,CAAzB,SAAeA,EAAf,EAAuC;AACrCF,IAAAA,OAAO,CAAPA,OAAAA,GAAkBD,WAAW,CAACI,KAAK,CAALA,MAAAA,CAAaA,KAAK,CAAlBA,KAAAA,EAAZJ,GAAW,CAAXA,CAAlBC,OAAAA;AACD;AACF","sourcesContent":["import type { NavigationState, ParamListBase } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport CurrentRenderContext from './CurrentRenderContext';\nimport type {\n  Descriptor,\n  NavigationHelpers,\n  NavigationProp,\n  RouteProp,\n} from './types';\n\ntype Options = {\n  state: NavigationState;\n  navigation: NavigationHelpers<ParamListBase>;\n  descriptors: Record<\n    string,\n    Descriptor<object, NavigationProp<ParamListBase>, RouteProp<ParamListBase>>\n  >;\n};\n\n/**\n * Write the current options, so that server renderer can get current values\n * Mutating values like this is not safe in async mode, but it doesn't apply to SSR\n */\nexport default function useCurrentRender({\n  state,\n  navigation,\n  descriptors,\n}: Options) {\n  const current = React.useContext(CurrentRenderContext);\n\n  if (current && navigation.isFocused()) {\n    current.options = descriptors[state.routes[state.index].key].options;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}