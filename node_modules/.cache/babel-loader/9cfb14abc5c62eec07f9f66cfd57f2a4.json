{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { PixelRatio } from '../../../../base/browser/browser.js';\nimport * as dom from '../../../../base/browser/dom.js';\nimport { GlobalMouseMoveMonitor, standardMouseMoveMerger } from '../../../../base/browser/globalMouseMoveMonitor.js';\nimport { Widget } from '../../../../base/browser/ui/widget.js';\nimport { Color, HSVA, RGBA } from '../../../../base/common/color.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport './colorPicker.css';\nimport { localize } from '../../../../nls.js';\nimport { editorHoverBackground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nconst $ = dom.$;\nexport class ColorPickerHeader extends Disposable {\n  constructor(container, model, themeService) {\n    super();\n    this.model = model;\n    this.domNode = $('.colorpicker-header');\n    dom.append(container, this.domNode);\n    this.pickedColorNode = dom.append(this.domNode, $('.picked-color'));\n    const tooltip = localize('clickToToggleColorOptions', \"Click to toggle color options (rgb/hsl/hex)\");\n    this.pickedColorNode.setAttribute('title', tooltip);\n    const colorBox = dom.append(this.domNode, $('.original-color'));\n    colorBox.style.backgroundColor = Color.Format.CSS.format(this.model.originalColor) || '';\n    this.backgroundColor = themeService.getColorTheme().getColor(editorHoverBackground) || Color.white;\n\n    this._register(registerThemingParticipant((theme, collector) => {\n      this.backgroundColor = theme.getColor(editorHoverBackground) || Color.white;\n    }));\n\n    this._register(dom.addDisposableListener(this.pickedColorNode, dom.EventType.CLICK, () => this.model.selectNextColorPresentation()));\n\n    this._register(dom.addDisposableListener(colorBox, dom.EventType.CLICK, () => {\n      this.model.color = this.model.originalColor;\n      this.model.flushColor();\n    }));\n\n    this._register(model.onDidChangeColor(this.onDidChangeColor, this));\n\n    this._register(model.onDidChangePresentation(this.onDidChangePresentation, this));\n\n    this.pickedColorNode.style.backgroundColor = Color.Format.CSS.format(model.color) || '';\n    this.pickedColorNode.classList.toggle('light', model.color.rgba.a < 0.5 ? this.backgroundColor.isLighter() : model.color.isLighter());\n    this.onDidChangeColor(this.model.color);\n  }\n\n  onDidChangeColor(color) {\n    this.pickedColorNode.style.backgroundColor = Color.Format.CSS.format(color) || '';\n    this.pickedColorNode.classList.toggle('light', color.rgba.a < 0.5 ? this.backgroundColor.isLighter() : color.isLighter());\n    this.onDidChangePresentation();\n  }\n\n  onDidChangePresentation() {\n    this.pickedColorNode.textContent = this.model.presentation ? this.model.presentation.label : '';\n    this.pickedColorNode.prepend($('.codicon.codicon-color-mode'));\n  }\n\n}\nexport class ColorPickerBody extends Disposable {\n  constructor(container, model, pixelRatio) {\n    super();\n    this.model = model;\n    this.pixelRatio = pixelRatio;\n    this.domNode = $('.colorpicker-body');\n    dom.append(container, this.domNode);\n    this.saturationBox = new SaturationBox(this.domNode, this.model, this.pixelRatio);\n\n    this._register(this.saturationBox);\n\n    this._register(this.saturationBox.onDidChange(this.onDidSaturationValueChange, this));\n\n    this._register(this.saturationBox.onColorFlushed(this.flushColor, this));\n\n    this.opacityStrip = new OpacityStrip(this.domNode, this.model);\n\n    this._register(this.opacityStrip);\n\n    this._register(this.opacityStrip.onDidChange(this.onDidOpacityChange, this));\n\n    this._register(this.opacityStrip.onColorFlushed(this.flushColor, this));\n\n    this.hueStrip = new HueStrip(this.domNode, this.model);\n\n    this._register(this.hueStrip);\n\n    this._register(this.hueStrip.onDidChange(this.onDidHueChange, this));\n\n    this._register(this.hueStrip.onColorFlushed(this.flushColor, this));\n  }\n\n  flushColor() {\n    this.model.flushColor();\n  }\n\n  onDidSaturationValueChange({\n    s,\n    v\n  }) {\n    const hsva = this.model.color.hsva;\n    this.model.color = new Color(new HSVA(hsva.h, s, v, hsva.a));\n  }\n\n  onDidOpacityChange(a) {\n    const hsva = this.model.color.hsva;\n    this.model.color = new Color(new HSVA(hsva.h, hsva.s, hsva.v, a));\n  }\n\n  onDidHueChange(value) {\n    const hsva = this.model.color.hsva;\n    const h = (1 - value) * 360;\n    this.model.color = new Color(new HSVA(h === 360 ? 0 : h, hsva.s, hsva.v, hsva.a));\n  }\n\n  layout() {\n    this.saturationBox.layout();\n    this.opacityStrip.layout();\n    this.hueStrip.layout();\n  }\n\n}\n\nclass SaturationBox extends Disposable {\n  constructor(container, model, pixelRatio) {\n    super();\n    this.model = model;\n    this.pixelRatio = pixelRatio;\n    this._onDidChange = new Emitter();\n    this.onDidChange = this._onDidChange.event;\n    this._onColorFlushed = new Emitter();\n    this.onColorFlushed = this._onColorFlushed.event;\n    this.domNode = $('.saturation-wrap');\n    dom.append(container, this.domNode); // Create canvas, draw selected color\n\n    this.canvas = document.createElement('canvas');\n    this.canvas.className = 'saturation-box';\n    dom.append(this.domNode, this.canvas); // Add selection circle\n\n    this.selection = $('.saturation-selection');\n    dom.append(this.domNode, this.selection);\n    this.layout();\n\n    this._register(dom.addDisposableGenericMouseDownListner(this.domNode, e => this.onMouseDown(e)));\n\n    this._register(this.model.onDidChangeColor(this.onDidChangeColor, this));\n\n    this.monitor = null;\n  }\n\n  onMouseDown(e) {\n    this.monitor = this._register(new GlobalMouseMoveMonitor());\n    const origin = dom.getDomNodePagePosition(this.domNode);\n\n    if (e.target !== this.selection) {\n      this.onDidChangePosition(e.offsetX, e.offsetY);\n    }\n\n    this.monitor.startMonitoring(e.target, e.buttons, standardMouseMoveMerger, event => this.onDidChangePosition(event.posx - origin.left, event.posy - origin.top), () => null);\n    const mouseUpListener = dom.addDisposableGenericMouseUpListner(document, () => {\n      this._onColorFlushed.fire();\n\n      mouseUpListener.dispose();\n\n      if (this.monitor) {\n        this.monitor.stopMonitoring(true);\n        this.monitor = null;\n      }\n    }, true);\n  }\n\n  onDidChangePosition(left, top) {\n    const s = Math.max(0, Math.min(1, left / this.width));\n    const v = Math.max(0, Math.min(1, 1 - top / this.height));\n    this.paintSelection(s, v);\n\n    this._onDidChange.fire({\n      s,\n      v\n    });\n  }\n\n  layout() {\n    this.width = this.domNode.offsetWidth;\n    this.height = this.domNode.offsetHeight;\n    this.canvas.width = this.width * this.pixelRatio;\n    this.canvas.height = this.height * this.pixelRatio;\n    this.paint();\n    const hsva = this.model.color.hsva;\n    this.paintSelection(hsva.s, hsva.v);\n  }\n\n  paint() {\n    const hsva = this.model.color.hsva;\n    const saturatedColor = new Color(new HSVA(hsva.h, 1, 1, 1));\n    const ctx = this.canvas.getContext('2d');\n    const whiteGradient = ctx.createLinearGradient(0, 0, this.canvas.width, 0);\n    whiteGradient.addColorStop(0, 'rgba(255, 255, 255, 1)');\n    whiteGradient.addColorStop(0.5, 'rgba(255, 255, 255, 0.5)');\n    whiteGradient.addColorStop(1, 'rgba(255, 255, 255, 0)');\n    const blackGradient = ctx.createLinearGradient(0, 0, 0, this.canvas.height);\n    blackGradient.addColorStop(0, 'rgba(0, 0, 0, 0)');\n    blackGradient.addColorStop(1, 'rgba(0, 0, 0, 1)');\n    ctx.rect(0, 0, this.canvas.width, this.canvas.height);\n    ctx.fillStyle = Color.Format.CSS.format(saturatedColor);\n    ctx.fill();\n    ctx.fillStyle = whiteGradient;\n    ctx.fill();\n    ctx.fillStyle = blackGradient;\n    ctx.fill();\n  }\n\n  paintSelection(s, v) {\n    this.selection.style.left = `${s * this.width}px`;\n    this.selection.style.top = `${this.height - v * this.height}px`;\n  }\n\n  onDidChangeColor() {\n    if (this.monitor && this.monitor.isMonitoring()) {\n      return;\n    }\n\n    this.paint();\n  }\n\n}\n\nclass Strip extends Disposable {\n  constructor(container, model) {\n    super();\n    this.model = model;\n    this._onDidChange = new Emitter();\n    this.onDidChange = this._onDidChange.event;\n    this._onColorFlushed = new Emitter();\n    this.onColorFlushed = this._onColorFlushed.event;\n    this.domNode = dom.append(container, $('.strip'));\n    this.overlay = dom.append(this.domNode, $('.overlay'));\n    this.slider = dom.append(this.domNode, $('.slider'));\n    this.slider.style.top = `0px`;\n\n    this._register(dom.addDisposableGenericMouseDownListner(this.domNode, e => this.onMouseDown(e)));\n\n    this.layout();\n  }\n\n  layout() {\n    this.height = this.domNode.offsetHeight - this.slider.offsetHeight;\n    const value = this.getValue(this.model.color);\n    this.updateSliderPosition(value);\n  }\n\n  onMouseDown(e) {\n    const monitor = this._register(new GlobalMouseMoveMonitor());\n\n    const origin = dom.getDomNodePagePosition(this.domNode);\n    this.domNode.classList.add('grabbing');\n\n    if (e.target !== this.slider) {\n      this.onDidChangeTop(e.offsetY);\n    }\n\n    monitor.startMonitoring(e.target, e.buttons, standardMouseMoveMerger, event => this.onDidChangeTop(event.posy - origin.top), () => null);\n    const mouseUpListener = dom.addDisposableGenericMouseUpListner(document, () => {\n      this._onColorFlushed.fire();\n\n      mouseUpListener.dispose();\n      monitor.stopMonitoring(true);\n      this.domNode.classList.remove('grabbing');\n    }, true);\n  }\n\n  onDidChangeTop(top) {\n    const value = Math.max(0, Math.min(1, 1 - top / this.height));\n    this.updateSliderPosition(value);\n\n    this._onDidChange.fire(value);\n  }\n\n  updateSliderPosition(value) {\n    this.slider.style.top = `${(1 - value) * this.height}px`;\n  }\n\n}\n\nclass OpacityStrip extends Strip {\n  constructor(container, model) {\n    super(container, model);\n    this.domNode.classList.add('opacity-strip');\n\n    this._register(model.onDidChangeColor(this.onDidChangeColor, this));\n\n    this.onDidChangeColor(this.model.color);\n  }\n\n  onDidChangeColor(color) {\n    const {\n      r,\n      g,\n      b\n    } = color.rgba;\n    const opaque = new Color(new RGBA(r, g, b, 1));\n    const transparent = new Color(new RGBA(r, g, b, 0));\n    this.overlay.style.background = `linear-gradient(to bottom, ${opaque} 0%, ${transparent} 100%)`;\n  }\n\n  getValue(color) {\n    return color.hsva.a;\n  }\n\n}\n\nclass HueStrip extends Strip {\n  constructor(container, model) {\n    super(container, model);\n    this.domNode.classList.add('hue-strip');\n  }\n\n  getValue(color) {\n    return 1 - color.hsva.h / 360;\n  }\n\n}\n\nexport class ColorPickerWidget extends Widget {\n  constructor(container, model, pixelRatio, themeService) {\n    super();\n    this.model = model;\n    this.pixelRatio = pixelRatio;\n\n    this._register(PixelRatio.onDidChange(() => this.layout()));\n\n    const element = $('.colorpicker-widget');\n    container.appendChild(element);\n    const header = new ColorPickerHeader(element, this.model, themeService);\n    this.body = new ColorPickerBody(element, this.model, this.pixelRatio);\n\n    this._register(header);\n\n    this._register(this.body);\n  }\n\n  layout() {\n    this.body.layout();\n  }\n\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/contrib/colorPicker/browser/colorPickerWidget.js"],"names":["PixelRatio","dom","GlobalMouseMoveMonitor","standardMouseMoveMerger","Widget","Color","HSVA","RGBA","Emitter","Disposable","localize","editorHoverBackground","registerThemingParticipant","$","ColorPickerHeader","constructor","container","model","themeService","domNode","append","pickedColorNode","tooltip","setAttribute","colorBox","style","backgroundColor","Format","CSS","format","originalColor","getColorTheme","getColor","white","_register","theme","collector","addDisposableListener","EventType","CLICK","selectNextColorPresentation","color","flushColor","onDidChangeColor","onDidChangePresentation","classList","toggle","rgba","a","isLighter","textContent","presentation","label","prepend","ColorPickerBody","pixelRatio","saturationBox","SaturationBox","onDidChange","onDidSaturationValueChange","onColorFlushed","opacityStrip","OpacityStrip","onDidOpacityChange","hueStrip","HueStrip","onDidHueChange","s","v","hsva","h","value","layout","_onDidChange","event","_onColorFlushed","canvas","document","createElement","className","selection","addDisposableGenericMouseDownListner","e","onMouseDown","monitor","origin","getDomNodePagePosition","target","onDidChangePosition","offsetX","offsetY","startMonitoring","buttons","posx","left","posy","top","mouseUpListener","addDisposableGenericMouseUpListner","fire","dispose","stopMonitoring","Math","max","min","width","height","paintSelection","offsetWidth","offsetHeight","paint","saturatedColor","ctx","getContext","whiteGradient","createLinearGradient","addColorStop","blackGradient","rect","fillStyle","fill","isMonitoring","Strip","overlay","slider","getValue","updateSliderPosition","add","onDidChangeTop","remove","r","g","b","opaque","transparent","background","ColorPickerWidget","element","appendChild","header","body"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { PixelRatio } from '../../../../base/browser/browser.js';\nimport * as dom from '../../../../base/browser/dom.js';\nimport { GlobalMouseMoveMonitor, standardMouseMoveMerger } from '../../../../base/browser/globalMouseMoveMonitor.js';\nimport { Widget } from '../../../../base/browser/ui/widget.js';\nimport { Color, HSVA, RGBA } from '../../../../base/common/color.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport './colorPicker.css';\nimport { localize } from '../../../../nls.js';\nimport { editorHoverBackground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nconst $ = dom.$;\nexport class ColorPickerHeader extends Disposable {\n    constructor(container, model, themeService) {\n        super();\n        this.model = model;\n        this.domNode = $('.colorpicker-header');\n        dom.append(container, this.domNode);\n        this.pickedColorNode = dom.append(this.domNode, $('.picked-color'));\n        const tooltip = localize('clickToToggleColorOptions', \"Click to toggle color options (rgb/hsl/hex)\");\n        this.pickedColorNode.setAttribute('title', tooltip);\n        const colorBox = dom.append(this.domNode, $('.original-color'));\n        colorBox.style.backgroundColor = Color.Format.CSS.format(this.model.originalColor) || '';\n        this.backgroundColor = themeService.getColorTheme().getColor(editorHoverBackground) || Color.white;\n        this._register(registerThemingParticipant((theme, collector) => {\n            this.backgroundColor = theme.getColor(editorHoverBackground) || Color.white;\n        }));\n        this._register(dom.addDisposableListener(this.pickedColorNode, dom.EventType.CLICK, () => this.model.selectNextColorPresentation()));\n        this._register(dom.addDisposableListener(colorBox, dom.EventType.CLICK, () => {\n            this.model.color = this.model.originalColor;\n            this.model.flushColor();\n        }));\n        this._register(model.onDidChangeColor(this.onDidChangeColor, this));\n        this._register(model.onDidChangePresentation(this.onDidChangePresentation, this));\n        this.pickedColorNode.style.backgroundColor = Color.Format.CSS.format(model.color) || '';\n        this.pickedColorNode.classList.toggle('light', model.color.rgba.a < 0.5 ? this.backgroundColor.isLighter() : model.color.isLighter());\n        this.onDidChangeColor(this.model.color);\n    }\n    onDidChangeColor(color) {\n        this.pickedColorNode.style.backgroundColor = Color.Format.CSS.format(color) || '';\n        this.pickedColorNode.classList.toggle('light', color.rgba.a < 0.5 ? this.backgroundColor.isLighter() : color.isLighter());\n        this.onDidChangePresentation();\n    }\n    onDidChangePresentation() {\n        this.pickedColorNode.textContent = this.model.presentation ? this.model.presentation.label : '';\n        this.pickedColorNode.prepend($('.codicon.codicon-color-mode'));\n    }\n}\nexport class ColorPickerBody extends Disposable {\n    constructor(container, model, pixelRatio) {\n        super();\n        this.model = model;\n        this.pixelRatio = pixelRatio;\n        this.domNode = $('.colorpicker-body');\n        dom.append(container, this.domNode);\n        this.saturationBox = new SaturationBox(this.domNode, this.model, this.pixelRatio);\n        this._register(this.saturationBox);\n        this._register(this.saturationBox.onDidChange(this.onDidSaturationValueChange, this));\n        this._register(this.saturationBox.onColorFlushed(this.flushColor, this));\n        this.opacityStrip = new OpacityStrip(this.domNode, this.model);\n        this._register(this.opacityStrip);\n        this._register(this.opacityStrip.onDidChange(this.onDidOpacityChange, this));\n        this._register(this.opacityStrip.onColorFlushed(this.flushColor, this));\n        this.hueStrip = new HueStrip(this.domNode, this.model);\n        this._register(this.hueStrip);\n        this._register(this.hueStrip.onDidChange(this.onDidHueChange, this));\n        this._register(this.hueStrip.onColorFlushed(this.flushColor, this));\n    }\n    flushColor() {\n        this.model.flushColor();\n    }\n    onDidSaturationValueChange({ s, v }) {\n        const hsva = this.model.color.hsva;\n        this.model.color = new Color(new HSVA(hsva.h, s, v, hsva.a));\n    }\n    onDidOpacityChange(a) {\n        const hsva = this.model.color.hsva;\n        this.model.color = new Color(new HSVA(hsva.h, hsva.s, hsva.v, a));\n    }\n    onDidHueChange(value) {\n        const hsva = this.model.color.hsva;\n        const h = (1 - value) * 360;\n        this.model.color = new Color(new HSVA(h === 360 ? 0 : h, hsva.s, hsva.v, hsva.a));\n    }\n    layout() {\n        this.saturationBox.layout();\n        this.opacityStrip.layout();\n        this.hueStrip.layout();\n    }\n}\nclass SaturationBox extends Disposable {\n    constructor(container, model, pixelRatio) {\n        super();\n        this.model = model;\n        this.pixelRatio = pixelRatio;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onColorFlushed = new Emitter();\n        this.onColorFlushed = this._onColorFlushed.event;\n        this.domNode = $('.saturation-wrap');\n        dom.append(container, this.domNode);\n        // Create canvas, draw selected color\n        this.canvas = document.createElement('canvas');\n        this.canvas.className = 'saturation-box';\n        dom.append(this.domNode, this.canvas);\n        // Add selection circle\n        this.selection = $('.saturation-selection');\n        dom.append(this.domNode, this.selection);\n        this.layout();\n        this._register(dom.addDisposableGenericMouseDownListner(this.domNode, e => this.onMouseDown(e)));\n        this._register(this.model.onDidChangeColor(this.onDidChangeColor, this));\n        this.monitor = null;\n    }\n    onMouseDown(e) {\n        this.monitor = this._register(new GlobalMouseMoveMonitor());\n        const origin = dom.getDomNodePagePosition(this.domNode);\n        if (e.target !== this.selection) {\n            this.onDidChangePosition(e.offsetX, e.offsetY);\n        }\n        this.monitor.startMonitoring(e.target, e.buttons, standardMouseMoveMerger, event => this.onDidChangePosition(event.posx - origin.left, event.posy - origin.top), () => null);\n        const mouseUpListener = dom.addDisposableGenericMouseUpListner(document, () => {\n            this._onColorFlushed.fire();\n            mouseUpListener.dispose();\n            if (this.monitor) {\n                this.monitor.stopMonitoring(true);\n                this.monitor = null;\n            }\n        }, true);\n    }\n    onDidChangePosition(left, top) {\n        const s = Math.max(0, Math.min(1, left / this.width));\n        const v = Math.max(0, Math.min(1, 1 - (top / this.height)));\n        this.paintSelection(s, v);\n        this._onDidChange.fire({ s, v });\n    }\n    layout() {\n        this.width = this.domNode.offsetWidth;\n        this.height = this.domNode.offsetHeight;\n        this.canvas.width = this.width * this.pixelRatio;\n        this.canvas.height = this.height * this.pixelRatio;\n        this.paint();\n        const hsva = this.model.color.hsva;\n        this.paintSelection(hsva.s, hsva.v);\n    }\n    paint() {\n        const hsva = this.model.color.hsva;\n        const saturatedColor = new Color(new HSVA(hsva.h, 1, 1, 1));\n        const ctx = this.canvas.getContext('2d');\n        const whiteGradient = ctx.createLinearGradient(0, 0, this.canvas.width, 0);\n        whiteGradient.addColorStop(0, 'rgba(255, 255, 255, 1)');\n        whiteGradient.addColorStop(0.5, 'rgba(255, 255, 255, 0.5)');\n        whiteGradient.addColorStop(1, 'rgba(255, 255, 255, 0)');\n        const blackGradient = ctx.createLinearGradient(0, 0, 0, this.canvas.height);\n        blackGradient.addColorStop(0, 'rgba(0, 0, 0, 0)');\n        blackGradient.addColorStop(1, 'rgba(0, 0, 0, 1)');\n        ctx.rect(0, 0, this.canvas.width, this.canvas.height);\n        ctx.fillStyle = Color.Format.CSS.format(saturatedColor);\n        ctx.fill();\n        ctx.fillStyle = whiteGradient;\n        ctx.fill();\n        ctx.fillStyle = blackGradient;\n        ctx.fill();\n    }\n    paintSelection(s, v) {\n        this.selection.style.left = `${s * this.width}px`;\n        this.selection.style.top = `${this.height - v * this.height}px`;\n    }\n    onDidChangeColor() {\n        if (this.monitor && this.monitor.isMonitoring()) {\n            return;\n        }\n        this.paint();\n    }\n}\nclass Strip extends Disposable {\n    constructor(container, model) {\n        super();\n        this.model = model;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onColorFlushed = new Emitter();\n        this.onColorFlushed = this._onColorFlushed.event;\n        this.domNode = dom.append(container, $('.strip'));\n        this.overlay = dom.append(this.domNode, $('.overlay'));\n        this.slider = dom.append(this.domNode, $('.slider'));\n        this.slider.style.top = `0px`;\n        this._register(dom.addDisposableGenericMouseDownListner(this.domNode, e => this.onMouseDown(e)));\n        this.layout();\n    }\n    layout() {\n        this.height = this.domNode.offsetHeight - this.slider.offsetHeight;\n        const value = this.getValue(this.model.color);\n        this.updateSliderPosition(value);\n    }\n    onMouseDown(e) {\n        const monitor = this._register(new GlobalMouseMoveMonitor());\n        const origin = dom.getDomNodePagePosition(this.domNode);\n        this.domNode.classList.add('grabbing');\n        if (e.target !== this.slider) {\n            this.onDidChangeTop(e.offsetY);\n        }\n        monitor.startMonitoring(e.target, e.buttons, standardMouseMoveMerger, event => this.onDidChangeTop(event.posy - origin.top), () => null);\n        const mouseUpListener = dom.addDisposableGenericMouseUpListner(document, () => {\n            this._onColorFlushed.fire();\n            mouseUpListener.dispose();\n            monitor.stopMonitoring(true);\n            this.domNode.classList.remove('grabbing');\n        }, true);\n    }\n    onDidChangeTop(top) {\n        const value = Math.max(0, Math.min(1, 1 - (top / this.height)));\n        this.updateSliderPosition(value);\n        this._onDidChange.fire(value);\n    }\n    updateSliderPosition(value) {\n        this.slider.style.top = `${(1 - value) * this.height}px`;\n    }\n}\nclass OpacityStrip extends Strip {\n    constructor(container, model) {\n        super(container, model);\n        this.domNode.classList.add('opacity-strip');\n        this._register(model.onDidChangeColor(this.onDidChangeColor, this));\n        this.onDidChangeColor(this.model.color);\n    }\n    onDidChangeColor(color) {\n        const { r, g, b } = color.rgba;\n        const opaque = new Color(new RGBA(r, g, b, 1));\n        const transparent = new Color(new RGBA(r, g, b, 0));\n        this.overlay.style.background = `linear-gradient(to bottom, ${opaque} 0%, ${transparent} 100%)`;\n    }\n    getValue(color) {\n        return color.hsva.a;\n    }\n}\nclass HueStrip extends Strip {\n    constructor(container, model) {\n        super(container, model);\n        this.domNode.classList.add('hue-strip');\n    }\n    getValue(color) {\n        return 1 - (color.hsva.h / 360);\n    }\n}\nexport class ColorPickerWidget extends Widget {\n    constructor(container, model, pixelRatio, themeService) {\n        super();\n        this.model = model;\n        this.pixelRatio = pixelRatio;\n        this._register(PixelRatio.onDidChange(() => this.layout()));\n        const element = $('.colorpicker-widget');\n        container.appendChild(element);\n        const header = new ColorPickerHeader(element, this.model, themeService);\n        this.body = new ColorPickerBody(element, this.model, this.pixelRatio);\n        this._register(header);\n        this._register(this.body);\n    }\n    layout() {\n        this.body.layout();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}