{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { ActionBar } from '../../../../base/browser/ui/actionbar/actionbar.js';\nimport { Action } from '../../../../base/common/actions.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport * as objects from '../../../../base/common/objects.js';\nimport './media/peekViewWidget.css';\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { EmbeddedCodeEditorWidget } from '../../../browser/widget/embeddedCodeEditorWidget.js';\nimport { ZoneWidget } from '../../zoneWidget/browser/zoneWidget.js';\nimport * as nls from '../../../../nls.js';\nimport { createActionViewItem } from '../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { createDecorator, IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { activeContrastBorder, contrastBorder, editorInfoForeground, registerColor, transparent } from '../../../../platform/theme/common/colorRegistry.js';\nexport const IPeekViewService = createDecorator('IPeekViewService');\nregisterSingleton(IPeekViewService, class {\n  constructor() {\n    this._widgets = new Map();\n  }\n\n  addExclusiveWidget(editor, widget) {\n    const existing = this._widgets.get(editor);\n\n    if (existing) {\n      existing.listener.dispose();\n      existing.widget.dispose();\n    }\n\n    const remove = () => {\n      const data = this._widgets.get(editor);\n\n      if (data && data.widget === widget) {\n        data.listener.dispose();\n\n        this._widgets.delete(editor);\n      }\n    };\n\n    this._widgets.set(editor, {\n      widget,\n      listener: widget.onDidClose(remove)\n    });\n  }\n\n});\nexport var PeekContext;\n\n(function (PeekContext) {\n  PeekContext.inPeekEditor = new RawContextKey('inReferenceSearchEditor', true, nls.localize('inReferenceSearchEditor', \"Whether the current code editor is embedded inside peek\"));\n  PeekContext.notInPeekEditor = PeekContext.inPeekEditor.toNegated();\n})(PeekContext || (PeekContext = {}));\n\nlet PeekContextController = class PeekContextController {\n  constructor(editor, contextKeyService) {\n    if (editor instanceof EmbeddedCodeEditorWidget) {\n      PeekContext.inPeekEditor.bindTo(contextKeyService);\n    }\n  }\n\n  dispose() {}\n\n};\nPeekContextController.ID = 'editor.contrib.referenceController';\nPeekContextController = __decorate([__param(1, IContextKeyService)], PeekContextController);\nregisterEditorContribution(PeekContextController.ID, PeekContextController);\nexport function getOuterEditor(accessor) {\n  let editor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n\n  if (editor instanceof EmbeddedCodeEditorWidget) {\n    return editor.getParentEditor();\n  }\n\n  return editor;\n}\nconst defaultOptions = {\n  headerBackgroundColor: Color.white,\n  primaryHeadingColor: Color.fromHex('#333333'),\n  secondaryHeadingColor: Color.fromHex('#6c6c6cb3')\n};\nlet PeekViewWidget = class PeekViewWidget extends ZoneWidget {\n  constructor(editor, options, instantiationService) {\n    super(editor, options);\n    this.instantiationService = instantiationService;\n    this._onDidClose = new Emitter();\n    this.onDidClose = this._onDidClose.event;\n    objects.mixin(this.options, defaultOptions, false);\n  }\n\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true; // prevent consumers who dispose on onDidClose from looping\n\n      super.dispose();\n\n      this._onDidClose.fire(this);\n    }\n  }\n\n  style(styles) {\n    let options = this.options;\n\n    if (styles.headerBackgroundColor) {\n      options.headerBackgroundColor = styles.headerBackgroundColor;\n    }\n\n    if (styles.primaryHeadingColor) {\n      options.primaryHeadingColor = styles.primaryHeadingColor;\n    }\n\n    if (styles.secondaryHeadingColor) {\n      options.secondaryHeadingColor = styles.secondaryHeadingColor;\n    }\n\n    super.style(styles);\n  }\n\n  _applyStyles() {\n    super._applyStyles();\n\n    let options = this.options;\n\n    if (this._headElement && options.headerBackgroundColor) {\n      this._headElement.style.backgroundColor = options.headerBackgroundColor.toString();\n    }\n\n    if (this._primaryHeading && options.primaryHeadingColor) {\n      this._primaryHeading.style.color = options.primaryHeadingColor.toString();\n    }\n\n    if (this._secondaryHeading && options.secondaryHeadingColor) {\n      this._secondaryHeading.style.color = options.secondaryHeadingColor.toString();\n    }\n\n    if (this._bodyElement && options.frameColor) {\n      this._bodyElement.style.borderColor = options.frameColor.toString();\n    }\n  }\n\n  _fillContainer(container) {\n    this.setCssClass('peekview-widget');\n    this._headElement = dom.$('.head');\n    this._bodyElement = dom.$('.body');\n\n    this._fillHead(this._headElement);\n\n    this._fillBody(this._bodyElement);\n\n    container.appendChild(this._headElement);\n    container.appendChild(this._bodyElement);\n  }\n\n  _fillHead(container, noCloseAction) {\n    const titleElement = dom.$('.peekview-title');\n\n    if (this.options.supportOnTitleClick) {\n      titleElement.classList.add('clickable');\n      dom.addStandardDisposableListener(titleElement, 'click', event => this._onTitleClick(event));\n    }\n\n    dom.append(this._headElement, titleElement);\n\n    this._fillTitleIcon(titleElement);\n\n    this._primaryHeading = dom.$('span.filename');\n    this._secondaryHeading = dom.$('span.dirname');\n    this._metaHeading = dom.$('span.meta');\n    dom.append(titleElement, this._primaryHeading, this._secondaryHeading, this._metaHeading);\n    const actionsContainer = dom.$('.peekview-actions');\n    dom.append(this._headElement, actionsContainer);\n\n    const actionBarOptions = this._getActionBarOptions();\n\n    this._actionbarWidget = new ActionBar(actionsContainer, actionBarOptions);\n\n    this._disposables.add(this._actionbarWidget);\n\n    if (!noCloseAction) {\n      this._actionbarWidget.push(new Action('peekview.close', nls.localize('label.close', \"Close\"), Codicon.close.classNames, true, () => {\n        this.dispose();\n        return Promise.resolve();\n      }), {\n        label: false,\n        icon: true\n      });\n    }\n  }\n\n  _fillTitleIcon(container) {}\n\n  _getActionBarOptions() {\n    return {\n      actionViewItemProvider: createActionViewItem.bind(undefined, this.instantiationService),\n      orientation: 0\n      /* HORIZONTAL */\n\n    };\n  }\n\n  _onTitleClick(event) {// implement me if supportOnTitleClick option is set\n  }\n\n  setTitle(primaryHeading, secondaryHeading) {\n    if (this._primaryHeading && this._secondaryHeading) {\n      this._primaryHeading.innerText = primaryHeading;\n\n      this._primaryHeading.setAttribute('title', primaryHeading);\n\n      if (secondaryHeading) {\n        this._secondaryHeading.innerText = secondaryHeading;\n      } else {\n        dom.clearNode(this._secondaryHeading);\n      }\n    }\n  }\n\n  setMetaTitle(value) {\n    if (this._metaHeading) {\n      if (value) {\n        this._metaHeading.innerText = value;\n        dom.show(this._metaHeading);\n      } else {\n        dom.hide(this._metaHeading);\n      }\n    }\n  }\n\n  _doLayout(heightInPixel, widthInPixel) {\n    if (!this._isShowing && heightInPixel < 0) {\n      // Looks like the view zone got folded away!\n      this.dispose();\n      return;\n    }\n\n    const headHeight = Math.ceil(this.editor.getOption(59\n    /* lineHeight */\n    ) * 1.2);\n    const bodyHeight = Math.round(heightInPixel - (headHeight + 2\n    /* the border-top/bottom width*/\n    ));\n\n    this._doLayoutHead(headHeight, widthInPixel);\n\n    this._doLayoutBody(bodyHeight, widthInPixel);\n  }\n\n  _doLayoutHead(heightInPixel, widthInPixel) {\n    if (this._headElement) {\n      this._headElement.style.height = `${heightInPixel}px`;\n      this._headElement.style.lineHeight = this._headElement.style.height;\n    }\n  }\n\n  _doLayoutBody(heightInPixel, widthInPixel) {\n    if (this._bodyElement) {\n      this._bodyElement.style.height = `${heightInPixel}px`;\n    }\n  }\n\n};\nPeekViewWidget = __decorate([__param(2, IInstantiationService)], PeekViewWidget);\nexport { PeekViewWidget };\nexport const peekViewTitleBackground = registerColor('peekViewTitle.background', {\n  dark: transparent(editorInfoForeground, .1),\n  light: transparent(editorInfoForeground, .1),\n  hc: null\n}, nls.localize('peekViewTitleBackground', 'Background color of the peek view title area.'));\nexport const peekViewTitleForeground = registerColor('peekViewTitleLabel.foreground', {\n  dark: Color.white,\n  light: Color.black,\n  hc: Color.white\n}, nls.localize('peekViewTitleForeground', 'Color of the peek view title.'));\nexport const peekViewTitleInfoForeground = registerColor('peekViewTitleDescription.foreground', {\n  dark: '#ccccccb3',\n  light: '#616161',\n  hc: '#FFFFFF99'\n}, nls.localize('peekViewTitleInfoForeground', 'Color of the peek view title info.'));\nexport const peekViewBorder = registerColor('peekView.border', {\n  dark: editorInfoForeground,\n  light: editorInfoForeground,\n  hc: contrastBorder\n}, nls.localize('peekViewBorder', 'Color of the peek view borders and arrow.'));\nexport const peekViewResultsBackground = registerColor('peekViewResult.background', {\n  dark: '#252526',\n  light: '#F3F3F3',\n  hc: Color.black\n}, nls.localize('peekViewResultsBackground', 'Background color of the peek view result list.'));\nexport const peekViewResultsMatchForeground = registerColor('peekViewResult.lineForeground', {\n  dark: '#bbbbbb',\n  light: '#646465',\n  hc: Color.white\n}, nls.localize('peekViewResultsMatchForeground', 'Foreground color for line nodes in the peek view result list.'));\nexport const peekViewResultsFileForeground = registerColor('peekViewResult.fileForeground', {\n  dark: Color.white,\n  light: '#1E1E1E',\n  hc: Color.white\n}, nls.localize('peekViewResultsFileForeground', 'Foreground color for file nodes in the peek view result list.'));\nexport const peekViewResultsSelectionBackground = registerColor('peekViewResult.selectionBackground', {\n  dark: '#3399ff33',\n  light: '#3399ff33',\n  hc: null\n}, nls.localize('peekViewResultsSelectionBackground', 'Background color of the selected entry in the peek view result list.'));\nexport const peekViewResultsSelectionForeground = registerColor('peekViewResult.selectionForeground', {\n  dark: Color.white,\n  light: '#6C6C6C',\n  hc: Color.white\n}, nls.localize('peekViewResultsSelectionForeground', 'Foreground color of the selected entry in the peek view result list.'));\nexport const peekViewEditorBackground = registerColor('peekViewEditor.background', {\n  dark: '#001F33',\n  light: '#F2F8FC',\n  hc: Color.black\n}, nls.localize('peekViewEditorBackground', 'Background color of the peek view editor.'));\nexport const peekViewEditorGutterBackground = registerColor('peekViewEditorGutter.background', {\n  dark: peekViewEditorBackground,\n  light: peekViewEditorBackground,\n  hc: peekViewEditorBackground\n}, nls.localize('peekViewEditorGutterBackground', 'Background color of the gutter in the peek view editor.'));\nexport const peekViewResultsMatchHighlight = registerColor('peekViewResult.matchHighlightBackground', {\n  dark: '#ea5c004d',\n  light: '#ea5c004d',\n  hc: null\n}, nls.localize('peekViewResultsMatchHighlight', 'Match highlight color in the peek view result list.'));\nexport const peekViewEditorMatchHighlight = registerColor('peekViewEditor.matchHighlightBackground', {\n  dark: '#ff8f0099',\n  light: '#f5d802de',\n  hc: null\n}, nls.localize('peekViewEditorMatchHighlight', 'Match highlight color in the peek view editor.'));\nexport const peekViewEditorMatchHighlightBorder = registerColor('peekViewEditor.matchHighlightBorder', {\n  dark: null,\n  light: null,\n  hc: activeContrastBorder\n}, nls.localize('peekViewEditorMatchHighlightBorder', 'Match highlight border in the peek view editor.'));","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/contrib/peekView/browser/peekView.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","dom","ActionBar","Action","Codicon","Color","Emitter","objects","registerEditorContribution","ICodeEditorService","EmbeddedCodeEditorWidget","ZoneWidget","nls","createActionViewItem","IContextKeyService","RawContextKey","registerSingleton","createDecorator","IInstantiationService","activeContrastBorder","contrastBorder","editorInfoForeground","registerColor","transparent","IPeekViewService","constructor","_widgets","Map","addExclusiveWidget","editor","widget","existing","get","listener","dispose","remove","data","delete","set","onDidClose","PeekContext","inPeekEditor","localize","notInPeekEditor","toNegated","PeekContextController","contextKeyService","bindTo","ID","getOuterEditor","accessor","getFocusedCodeEditor","getParentEditor","defaultOptions","headerBackgroundColor","white","primaryHeadingColor","fromHex","secondaryHeadingColor","PeekViewWidget","options","instantiationService","_onDidClose","event","mixin","disposed","fire","style","styles","_applyStyles","_headElement","backgroundColor","toString","_primaryHeading","color","_secondaryHeading","_bodyElement","frameColor","borderColor","_fillContainer","container","setCssClass","$","_fillHead","_fillBody","appendChild","noCloseAction","titleElement","supportOnTitleClick","classList","add","addStandardDisposableListener","_onTitleClick","append","_fillTitleIcon","_metaHeading","actionsContainer","actionBarOptions","_getActionBarOptions","_actionbarWidget","_disposables","push","close","classNames","Promise","resolve","label","icon","actionViewItemProvider","bind","undefined","orientation","setTitle","primaryHeading","secondaryHeading","innerText","setAttribute","clearNode","setMetaTitle","value","show","hide","_doLayout","heightInPixel","widthInPixel","_isShowing","headHeight","Math","ceil","getOption","bodyHeight","round","_doLayoutHead","_doLayoutBody","height","lineHeight","peekViewTitleBackground","dark","light","hc","peekViewTitleForeground","black","peekViewTitleInfoForeground","peekViewBorder","peekViewResultsBackground","peekViewResultsMatchForeground","peekViewResultsFileForeground","peekViewResultsSelectionBackground","peekViewResultsSelectionForeground","peekViewEditorBackground","peekViewEditorGutterBackground","peekViewResultsMatchHighlight","peekViewEditorMatchHighlight","peekViewEditorMatchHighlightBorder"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { ActionBar } from '../../../../base/browser/ui/actionbar/actionbar.js';\nimport { Action } from '../../../../base/common/actions.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport * as objects from '../../../../base/common/objects.js';\nimport './media/peekViewWidget.css';\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { EmbeddedCodeEditorWidget } from '../../../browser/widget/embeddedCodeEditorWidget.js';\nimport { ZoneWidget } from '../../zoneWidget/browser/zoneWidget.js';\nimport * as nls from '../../../../nls.js';\nimport { createActionViewItem } from '../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { createDecorator, IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { activeContrastBorder, contrastBorder, editorInfoForeground, registerColor, transparent } from '../../../../platform/theme/common/colorRegistry.js';\nexport const IPeekViewService = createDecorator('IPeekViewService');\nregisterSingleton(IPeekViewService, class {\n    constructor() {\n        this._widgets = new Map();\n    }\n    addExclusiveWidget(editor, widget) {\n        const existing = this._widgets.get(editor);\n        if (existing) {\n            existing.listener.dispose();\n            existing.widget.dispose();\n        }\n        const remove = () => {\n            const data = this._widgets.get(editor);\n            if (data && data.widget === widget) {\n                data.listener.dispose();\n                this._widgets.delete(editor);\n            }\n        };\n        this._widgets.set(editor, { widget, listener: widget.onDidClose(remove) });\n    }\n});\nexport var PeekContext;\n(function (PeekContext) {\n    PeekContext.inPeekEditor = new RawContextKey('inReferenceSearchEditor', true, nls.localize('inReferenceSearchEditor', \"Whether the current code editor is embedded inside peek\"));\n    PeekContext.notInPeekEditor = PeekContext.inPeekEditor.toNegated();\n})(PeekContext || (PeekContext = {}));\nlet PeekContextController = class PeekContextController {\n    constructor(editor, contextKeyService) {\n        if (editor instanceof EmbeddedCodeEditorWidget) {\n            PeekContext.inPeekEditor.bindTo(contextKeyService);\n        }\n    }\n    dispose() { }\n};\nPeekContextController.ID = 'editor.contrib.referenceController';\nPeekContextController = __decorate([\n    __param(1, IContextKeyService)\n], PeekContextController);\nregisterEditorContribution(PeekContextController.ID, PeekContextController);\nexport function getOuterEditor(accessor) {\n    let editor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n    if (editor instanceof EmbeddedCodeEditorWidget) {\n        return editor.getParentEditor();\n    }\n    return editor;\n}\nconst defaultOptions = {\n    headerBackgroundColor: Color.white,\n    primaryHeadingColor: Color.fromHex('#333333'),\n    secondaryHeadingColor: Color.fromHex('#6c6c6cb3')\n};\nlet PeekViewWidget = class PeekViewWidget extends ZoneWidget {\n    constructor(editor, options, instantiationService) {\n        super(editor, options);\n        this.instantiationService = instantiationService;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        objects.mixin(this.options, defaultOptions, false);\n    }\n    dispose() {\n        if (!this.disposed) {\n            this.disposed = true; // prevent consumers who dispose on onDidClose from looping\n            super.dispose();\n            this._onDidClose.fire(this);\n        }\n    }\n    style(styles) {\n        let options = this.options;\n        if (styles.headerBackgroundColor) {\n            options.headerBackgroundColor = styles.headerBackgroundColor;\n        }\n        if (styles.primaryHeadingColor) {\n            options.primaryHeadingColor = styles.primaryHeadingColor;\n        }\n        if (styles.secondaryHeadingColor) {\n            options.secondaryHeadingColor = styles.secondaryHeadingColor;\n        }\n        super.style(styles);\n    }\n    _applyStyles() {\n        super._applyStyles();\n        let options = this.options;\n        if (this._headElement && options.headerBackgroundColor) {\n            this._headElement.style.backgroundColor = options.headerBackgroundColor.toString();\n        }\n        if (this._primaryHeading && options.primaryHeadingColor) {\n            this._primaryHeading.style.color = options.primaryHeadingColor.toString();\n        }\n        if (this._secondaryHeading && options.secondaryHeadingColor) {\n            this._secondaryHeading.style.color = options.secondaryHeadingColor.toString();\n        }\n        if (this._bodyElement && options.frameColor) {\n            this._bodyElement.style.borderColor = options.frameColor.toString();\n        }\n    }\n    _fillContainer(container) {\n        this.setCssClass('peekview-widget');\n        this._headElement = dom.$('.head');\n        this._bodyElement = dom.$('.body');\n        this._fillHead(this._headElement);\n        this._fillBody(this._bodyElement);\n        container.appendChild(this._headElement);\n        container.appendChild(this._bodyElement);\n    }\n    _fillHead(container, noCloseAction) {\n        const titleElement = dom.$('.peekview-title');\n        if (this.options.supportOnTitleClick) {\n            titleElement.classList.add('clickable');\n            dom.addStandardDisposableListener(titleElement, 'click', event => this._onTitleClick(event));\n        }\n        dom.append(this._headElement, titleElement);\n        this._fillTitleIcon(titleElement);\n        this._primaryHeading = dom.$('span.filename');\n        this._secondaryHeading = dom.$('span.dirname');\n        this._metaHeading = dom.$('span.meta');\n        dom.append(titleElement, this._primaryHeading, this._secondaryHeading, this._metaHeading);\n        const actionsContainer = dom.$('.peekview-actions');\n        dom.append(this._headElement, actionsContainer);\n        const actionBarOptions = this._getActionBarOptions();\n        this._actionbarWidget = new ActionBar(actionsContainer, actionBarOptions);\n        this._disposables.add(this._actionbarWidget);\n        if (!noCloseAction) {\n            this._actionbarWidget.push(new Action('peekview.close', nls.localize('label.close', \"Close\"), Codicon.close.classNames, true, () => {\n                this.dispose();\n                return Promise.resolve();\n            }), { label: false, icon: true });\n        }\n    }\n    _fillTitleIcon(container) {\n    }\n    _getActionBarOptions() {\n        return {\n            actionViewItemProvider: createActionViewItem.bind(undefined, this.instantiationService),\n            orientation: 0 /* HORIZONTAL */\n        };\n    }\n    _onTitleClick(event) {\n        // implement me if supportOnTitleClick option is set\n    }\n    setTitle(primaryHeading, secondaryHeading) {\n        if (this._primaryHeading && this._secondaryHeading) {\n            this._primaryHeading.innerText = primaryHeading;\n            this._primaryHeading.setAttribute('title', primaryHeading);\n            if (secondaryHeading) {\n                this._secondaryHeading.innerText = secondaryHeading;\n            }\n            else {\n                dom.clearNode(this._secondaryHeading);\n            }\n        }\n    }\n    setMetaTitle(value) {\n        if (this._metaHeading) {\n            if (value) {\n                this._metaHeading.innerText = value;\n                dom.show(this._metaHeading);\n            }\n            else {\n                dom.hide(this._metaHeading);\n            }\n        }\n    }\n    _doLayout(heightInPixel, widthInPixel) {\n        if (!this._isShowing && heightInPixel < 0) {\n            // Looks like the view zone got folded away!\n            this.dispose();\n            return;\n        }\n        const headHeight = Math.ceil(this.editor.getOption(59 /* lineHeight */) * 1.2);\n        const bodyHeight = Math.round(heightInPixel - (headHeight + 2 /* the border-top/bottom width*/));\n        this._doLayoutHead(headHeight, widthInPixel);\n        this._doLayoutBody(bodyHeight, widthInPixel);\n    }\n    _doLayoutHead(heightInPixel, widthInPixel) {\n        if (this._headElement) {\n            this._headElement.style.height = `${heightInPixel}px`;\n            this._headElement.style.lineHeight = this._headElement.style.height;\n        }\n    }\n    _doLayoutBody(heightInPixel, widthInPixel) {\n        if (this._bodyElement) {\n            this._bodyElement.style.height = `${heightInPixel}px`;\n        }\n    }\n};\nPeekViewWidget = __decorate([\n    __param(2, IInstantiationService)\n], PeekViewWidget);\nexport { PeekViewWidget };\nexport const peekViewTitleBackground = registerColor('peekViewTitle.background', { dark: transparent(editorInfoForeground, .1), light: transparent(editorInfoForeground, .1), hc: null }, nls.localize('peekViewTitleBackground', 'Background color of the peek view title area.'));\nexport const peekViewTitleForeground = registerColor('peekViewTitleLabel.foreground', { dark: Color.white, light: Color.black, hc: Color.white }, nls.localize('peekViewTitleForeground', 'Color of the peek view title.'));\nexport const peekViewTitleInfoForeground = registerColor('peekViewTitleDescription.foreground', { dark: '#ccccccb3', light: '#616161', hc: '#FFFFFF99' }, nls.localize('peekViewTitleInfoForeground', 'Color of the peek view title info.'));\nexport const peekViewBorder = registerColor('peekView.border', { dark: editorInfoForeground, light: editorInfoForeground, hc: contrastBorder }, nls.localize('peekViewBorder', 'Color of the peek view borders and arrow.'));\nexport const peekViewResultsBackground = registerColor('peekViewResult.background', { dark: '#252526', light: '#F3F3F3', hc: Color.black }, nls.localize('peekViewResultsBackground', 'Background color of the peek view result list.'));\nexport const peekViewResultsMatchForeground = registerColor('peekViewResult.lineForeground', { dark: '#bbbbbb', light: '#646465', hc: Color.white }, nls.localize('peekViewResultsMatchForeground', 'Foreground color for line nodes in the peek view result list.'));\nexport const peekViewResultsFileForeground = registerColor('peekViewResult.fileForeground', { dark: Color.white, light: '#1E1E1E', hc: Color.white }, nls.localize('peekViewResultsFileForeground', 'Foreground color for file nodes in the peek view result list.'));\nexport const peekViewResultsSelectionBackground = registerColor('peekViewResult.selectionBackground', { dark: '#3399ff33', light: '#3399ff33', hc: null }, nls.localize('peekViewResultsSelectionBackground', 'Background color of the selected entry in the peek view result list.'));\nexport const peekViewResultsSelectionForeground = registerColor('peekViewResult.selectionForeground', { dark: Color.white, light: '#6C6C6C', hc: Color.white }, nls.localize('peekViewResultsSelectionForeground', 'Foreground color of the selected entry in the peek view result list.'));\nexport const peekViewEditorBackground = registerColor('peekViewEditor.background', { dark: '#001F33', light: '#F2F8FC', hc: Color.black }, nls.localize('peekViewEditorBackground', 'Background color of the peek view editor.'));\nexport const peekViewEditorGutterBackground = registerColor('peekViewEditorGutter.background', { dark: peekViewEditorBackground, light: peekViewEditorBackground, hc: peekViewEditorBackground }, nls.localize('peekViewEditorGutterBackground', 'Background color of the gutter in the peek view editor.'));\nexport const peekViewResultsMatchHighlight = registerColor('peekViewResult.matchHighlightBackground', { dark: '#ea5c004d', light: '#ea5c004d', hc: null }, nls.localize('peekViewResultsMatchHighlight', 'Match highlight color in the peek view result list.'));\nexport const peekViewEditorMatchHighlight = registerColor('peekViewEditor.matchHighlightBackground', { dark: '#ff8f0099', light: '#f5d802de', hc: null }, nls.localize('peekViewEditorMatchHighlight', 'Match highlight color in the peek view editor.'));\nexport const peekViewEditorMatchHighlightBorder = registerColor('peekViewEditor.matchHighlightBorder', { dark: null, light: null, hc: activeContrastBorder }, nls.localize('peekViewEditorMatchHighlightBorder', 'Match highlight border in the peek view editor.'));\n"]},"metadata":{},"sourceType":"module"}