{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function countEOL(text) {\n  let eolCount = 0;\n  let firstLineLength = 0;\n  let lastLineStart = 0;\n  let eol = 0\n  /* Unknown */\n  ;\n\n  for (let i = 0, len = text.length; i < len; i++) {\n    const chr = text.charCodeAt(i);\n\n    if (chr === 13\n    /* CarriageReturn */\n    ) {\n      if (eolCount === 0) {\n        firstLineLength = i;\n      }\n\n      eolCount++;\n\n      if (i + 1 < len && text.charCodeAt(i + 1) === 10\n      /* LineFeed */\n      ) {\n        // \\r\\n... case\n        eol |= 2\n        /* CRLF */\n        ;\n        i++; // skip \\n\n      } else {\n        // \\r... case\n        eol |= 3\n        /* Invalid */\n        ;\n      }\n\n      lastLineStart = i + 1;\n    } else if (chr === 10\n    /* LineFeed */\n    ) {\n      // \\n... case\n      eol |= 1\n      /* LF */\n      ;\n\n      if (eolCount === 0) {\n        firstLineLength = i;\n      }\n\n      eolCount++;\n      lastLineStart = i + 1;\n    }\n  }\n\n  if (eolCount === 0) {\n    firstLineLength = text.length;\n  }\n\n  return [eolCount, firstLineLength, text.length - lastLineStart, eol];\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/common/core/eolCounter.js"],"names":["countEOL","text","eolCount","firstLineLength","lastLineStart","eol","i","len","length","chr","charCodeAt"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,SAASA,QAAT,CAAkBC,IAAlB,EAAwB;AAC3B,MAAIC,QAAQ,GAAG,CAAf;AACA,MAAIC,eAAe,GAAG,CAAtB;AACA,MAAIC,aAAa,GAAG,CAApB;AACA,MAAIC,GAAG,GAAG;AAAE;AAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGN,IAAI,CAACO,MAA3B,EAAmCF,CAAC,GAAGC,GAAvC,EAA4CD,CAAC,EAA7C,EAAiD;AAC7C,UAAMG,GAAG,GAAGR,IAAI,CAACS,UAAL,CAAgBJ,CAAhB,CAAZ;;AACA,QAAIG,GAAG,KAAK;AAAG;AAAf,MAAqC;AACjC,UAAIP,QAAQ,KAAK,CAAjB,EAAoB;AAChBC,QAAAA,eAAe,GAAGG,CAAlB;AACH;;AACDJ,MAAAA,QAAQ;;AACR,UAAII,CAAC,GAAG,CAAJ,GAAQC,GAAR,IAAeN,IAAI,CAACS,UAAL,CAAgBJ,CAAC,GAAG,CAApB,MAA2B;AAAG;AAAjD,QAAiE;AAC7D;AACAD,QAAAA,GAAG,IAAI;AAAE;AAAT;AACAC,QAAAA,CAAC,GAH4D,CAGxD;AACR,OAJD,MAKK;AACD;AACAD,QAAAA,GAAG,IAAI;AAAE;AAAT;AACH;;AACDD,MAAAA,aAAa,GAAGE,CAAC,GAAG,CAApB;AACH,KAfD,MAgBK,IAAIG,GAAG,KAAK;AAAG;AAAf,MAA+B;AAChC;AACAJ,MAAAA,GAAG,IAAI;AAAE;AAAT;;AACA,UAAIH,QAAQ,KAAK,CAAjB,EAAoB;AAChBC,QAAAA,eAAe,GAAGG,CAAlB;AACH;;AACDJ,MAAAA,QAAQ;AACRE,MAAAA,aAAa,GAAGE,CAAC,GAAG,CAApB;AACH;AACJ;;AACD,MAAIJ,QAAQ,KAAK,CAAjB,EAAoB;AAChBC,IAAAA,eAAe,GAAGF,IAAI,CAACO,MAAvB;AACH;;AACD,SAAO,CAACN,QAAD,EAAWC,eAAX,EAA4BF,IAAI,CAACO,MAAL,GAAcJ,aAA1C,EAAyDC,GAAzD,CAAP;AACH","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function countEOL(text) {\n    let eolCount = 0;\n    let firstLineLength = 0;\n    let lastLineStart = 0;\n    let eol = 0 /* Unknown */;\n    for (let i = 0, len = text.length; i < len; i++) {\n        const chr = text.charCodeAt(i);\n        if (chr === 13 /* CarriageReturn */) {\n            if (eolCount === 0) {\n                firstLineLength = i;\n            }\n            eolCount++;\n            if (i + 1 < len && text.charCodeAt(i + 1) === 10 /* LineFeed */) {\n                // \\r\\n... case\n                eol |= 2 /* CRLF */;\n                i++; // skip \\n\n            }\n            else {\n                // \\r... case\n                eol |= 3 /* Invalid */;\n            }\n            lastLineStart = i + 1;\n        }\n        else if (chr === 10 /* LineFeed */) {\n            // \\n... case\n            eol |= 1 /* LF */;\n            if (eolCount === 0) {\n                firstLineLength = i;\n            }\n            eolCount++;\n            lastLineStart = i + 1;\n        }\n    }\n    if (eolCount === 0) {\n        firstLineLength = text.length;\n    }\n    return [eolCount, firstLineLength, text.length - lastLineStart, eol];\n}\n"]},"metadata":{},"sourceType":"module"}