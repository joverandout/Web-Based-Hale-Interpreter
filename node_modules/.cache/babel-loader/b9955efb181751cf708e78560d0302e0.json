{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { globals, isMacintosh, isWindows } from './platform.js';\nlet safeProcess; // Native sandbox environment\n\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n  const sandboxProcess = globals.vscode.process;\n  safeProcess = {\n    get platform() {\n      return sandboxProcess.platform;\n    },\n\n    get arch() {\n      return sandboxProcess.arch;\n    },\n\n    get env() {\n      return sandboxProcess.env;\n    },\n\n    cwd() {\n      return sandboxProcess.cwd();\n    }\n\n  };\n} // Native node.js environment\nelse if (typeof process !== 'undefined') {\n  safeProcess = {\n    get platform() {\n      return process.platform;\n    },\n\n    get arch() {\n      return process.arch;\n    },\n\n    get env() {\n      return process.env;\n    },\n\n    cwd() {\n      return process.env['VSCODE_CWD'] || process.cwd();\n    }\n\n  };\n} // Web environment\nelse {\n  safeProcess = {\n    // Supported\n    get platform() {\n      return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux';\n    },\n\n    get arch() {\n      return undefined;\n      /* arch is undefined in web */\n    },\n\n    // Unsupported\n    get env() {\n      return {};\n    },\n\n    cwd() {\n      return '/';\n    }\n\n  };\n}\n/**\n * Provides safe access to the `cwd` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `/`.\n */\n\n\nexport const cwd = safeProcess.cwd;\n/**\n * Provides safe access to the `env` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `{}`.\n */\n\nexport const env = safeProcess.env;\n/**\n * Provides safe access to the `platform` property in node.js, sandboxed or web\n * environments.\n */\n\nexport const platform = safeProcess.platform;","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/base/common/process.js"],"names":["globals","isMacintosh","isWindows","safeProcess","vscode","process","sandboxProcess","platform","arch","env","cwd","undefined"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,OAAT,EAAkBC,WAAlB,EAA+BC,SAA/B,QAAgD,eAAhD;AACA,IAAIC,WAAJ,C,CACA;;AACA,IAAI,OAAOH,OAAO,CAACI,MAAf,KAA0B,WAA1B,IAAyC,OAAOJ,OAAO,CAACI,MAAR,CAAeC,OAAtB,KAAkC,WAA/E,EAA4F;AACxF,QAAMC,cAAc,GAAGN,OAAO,CAACI,MAAR,CAAeC,OAAtC;AACAF,EAAAA,WAAW,GAAG;AACV,QAAII,QAAJ,GAAe;AAAE,aAAOD,cAAc,CAACC,QAAtB;AAAiC,KADxC;;AAEV,QAAIC,IAAJ,GAAW;AAAE,aAAOF,cAAc,CAACE,IAAtB;AAA6B,KAFhC;;AAGV,QAAIC,GAAJ,GAAU;AAAE,aAAOH,cAAc,CAACG,GAAtB;AAA4B,KAH9B;;AAIVC,IAAAA,GAAG,GAAG;AAAE,aAAOJ,cAAc,CAACI,GAAf,EAAP;AAA8B;;AAJ5B,GAAd;AAMH,CARD,CASA;AATA,KAUK,IAAI,OAAOL,OAAP,KAAmB,WAAvB,EAAoC;AACrCF,EAAAA,WAAW,GAAG;AACV,QAAII,QAAJ,GAAe;AAAE,aAAOF,OAAO,CAACE,QAAf;AAA0B,KADjC;;AAEV,QAAIC,IAAJ,GAAW;AAAE,aAAOH,OAAO,CAACG,IAAf;AAAsB,KAFzB;;AAGV,QAAIC,GAAJ,GAAU;AAAE,aAAOJ,OAAO,CAACI,GAAf;AAAqB,KAHvB;;AAIVC,IAAAA,GAAG,GAAG;AAAE,aAAOL,OAAO,CAACI,GAAR,CAAY,YAAZ,KAA6BJ,OAAO,CAACK,GAAR,EAApC;AAAoD;;AAJlD,GAAd;AAMH,CAPI,CAQL;AARK,KASA;AACDP,EAAAA,WAAW,GAAG;AACV;AACA,QAAII,QAAJ,GAAe;AAAE,aAAOL,SAAS,GAAG,OAAH,GAAaD,WAAW,GAAG,QAAH,GAAc,OAAtD;AAAgE,KAFvE;;AAGV,QAAIO,IAAJ,GAAW;AAAE,aAAOG,SAAP;AAAkB;AAAgC,KAHrD;;AAIV;AACA,QAAIF,GAAJ,GAAU;AAAE,aAAO,EAAP;AAAY,KALd;;AAMVC,IAAAA,GAAG,GAAG;AAAE,aAAO,GAAP;AAAa;;AANX,GAAd;AAQH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAMA,GAAG,GAAGP,WAAW,CAACO,GAAxB;AACP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMD,GAAG,GAAGN,WAAW,CAACM,GAAxB;AACP;AACA;AACA;AACA;;AACA,OAAO,MAAMF,QAAQ,GAAGJ,WAAW,CAACI,QAA7B","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { globals, isMacintosh, isWindows } from './platform.js';\nlet safeProcess;\n// Native sandbox environment\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n    const sandboxProcess = globals.vscode.process;\n    safeProcess = {\n        get platform() { return sandboxProcess.platform; },\n        get arch() { return sandboxProcess.arch; },\n        get env() { return sandboxProcess.env; },\n        cwd() { return sandboxProcess.cwd(); }\n    };\n}\n// Native node.js environment\nelse if (typeof process !== 'undefined') {\n    safeProcess = {\n        get platform() { return process.platform; },\n        get arch() { return process.arch; },\n        get env() { return process.env; },\n        cwd() { return process.env['VSCODE_CWD'] || process.cwd(); }\n    };\n}\n// Web environment\nelse {\n    safeProcess = {\n        // Supported\n        get platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n        get arch() { return undefined; /* arch is undefined in web */ },\n        // Unsupported\n        get env() { return {}; },\n        cwd() { return '/'; }\n    };\n}\n/**\n * Provides safe access to the `cwd` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `/`.\n */\nexport const cwd = safeProcess.cwd;\n/**\n * Provides safe access to the `env` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `{}`.\n */\nexport const env = safeProcess.env;\n/**\n * Provides safe access to the `platform` property in node.js, sandboxed or web\n * environments.\n */\nexport const platform = safeProcess.platform;\n"]},"metadata":{},"sourceType":"module"}