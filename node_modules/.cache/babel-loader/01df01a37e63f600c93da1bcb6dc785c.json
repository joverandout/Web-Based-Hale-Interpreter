{"ast":null,"code":"/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n// src/basic-languages/markdown/markdown.ts\nvar conf = {\n  comments: {\n    blockComment: [\"<!--\", \"-->\"]\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: \"<\",\n    close: \">\",\n    notIn: [\"string\"]\n  }],\n  surroundingPairs: [{\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"`\",\n    close: \"`\"\n  }],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*<!--\\\\s*#?region\\\\b.*-->\"),\n      end: new RegExp(\"^\\\\s*<!--\\\\s*#?endregion\\\\b.*-->\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".md\",\n  control: /[\\\\`*_\\[\\]{}()#+\\-\\.!]/,\n  noncontrol: /[^\\\\`*_\\[\\]{}()#+\\-\\.!]/,\n  escapes: /\\\\(?:@control)/,\n  jsescapes: /\\\\(?:[btnfr\\\\\"']|[0-7][0-7]?|[0-3][0-7]{2})/,\n  empty: [\"area\", \"base\", \"basefont\", \"br\", \"col\", \"frame\", \"hr\", \"img\", \"input\", \"isindex\", \"link\", \"meta\", \"param\"],\n  tokenizer: {\n    root: [[/^\\s*\\|/, \"@rematch\", \"@table_header\"], [/^(\\s{0,3})(#+)((?:[^\\\\#]|@escapes)+)((?:#+)?)/, [\"white\", \"keyword\", \"keyword\", \"keyword\"]], [/^\\s*(=+|\\-+)\\s*$/, \"keyword\"], [/^\\s*((\\*[ ]?)+)\\s*$/, \"meta.separator\"], [/^\\s*>+/, \"comment\"], [/^\\s*([\\*\\-+:]|\\d+\\.)\\s/, \"keyword\"], [/^(\\t|[ ]{4})[^ ].*$/, \"string\"], [/^\\s*~~~\\s*((?:\\w|[\\/\\-#])+)?\\s*$/, {\n      token: \"string\",\n      next: \"@codeblock\"\n    }], [/^\\s*```\\s*((?:\\w|[\\/\\-#])+).*$/, {\n      token: \"string\",\n      next: \"@codeblockgh\",\n      nextEmbedded: \"$1\"\n    }], [/^\\s*```\\s*$/, {\n      token: \"string\",\n      next: \"@codeblock\"\n    }], {\n      include: \"@linecontent\"\n    }],\n    table_header: [{\n      include: \"@table_common\"\n    }, [/[^\\|]+/, \"keyword.table.header\"]],\n    table_body: [{\n      include: \"@table_common\"\n    }, {\n      include: \"@linecontent\"\n    }],\n    table_common: [[/\\s*[\\-:]+\\s*/, {\n      token: \"keyword\",\n      switchTo: \"table_body\"\n    }], [/^\\s*\\|/, \"keyword.table.left\"], [/^\\s*[^\\|]/, \"@rematch\", \"@pop\"], [/^\\s*$/, \"@rematch\", \"@pop\"], [/\\|/, {\n      cases: {\n        \"@eos\": \"keyword.table.right\",\n        \"@default\": \"keyword.table.middle\"\n      }\n    }]],\n    codeblock: [[/^\\s*~~~\\s*$/, {\n      token: \"string\",\n      next: \"@pop\"\n    }], [/^\\s*```\\s*$/, {\n      token: \"string\",\n      next: \"@pop\"\n    }], [/.*$/, \"variable.source\"]],\n    codeblockgh: [[/```\\s*$/, {\n      token: \"string\",\n      next: \"@pop\",\n      nextEmbedded: \"@pop\"\n    }], [/[^`]+/, \"variable.source\"]],\n    linecontent: [[/&\\w+;/, \"string.escape\"], [/@escapes/, \"escape\"], [/\\b__([^\\\\_]|@escapes|_(?!_))+__\\b/, \"strong\"], [/\\*\\*([^\\\\*]|@escapes|\\*(?!\\*))+\\*\\*/, \"strong\"], [/\\b_[^_]+_\\b/, \"emphasis\"], [/\\*([^\\\\*]|@escapes)+\\*/, \"emphasis\"], [/`([^\\\\`]|@escapes)+`/, \"variable\"], [/\\{+[^}]+\\}+/, \"string.target\"], [/(!?\\[)((?:[^\\]\\\\]|@escapes)*)(\\]\\([^\\)]+\\))/, [\"string.link\", \"\", \"string.link\"]], [/(!?\\[)((?:[^\\]\\\\]|@escapes)*)(\\])/, \"string.link\"], {\n      include: \"html\"\n    }],\n    html: [[/<(\\w+)\\/>/, \"tag\"], [/<(\\w+)(\\-|\\w)*/, {\n      cases: {\n        \"@empty\": {\n          token: \"tag\",\n          next: \"@tag.$1\"\n        },\n        \"@default\": {\n          token: \"tag\",\n          next: \"@tag.$1\"\n        }\n      }\n    }], [/<\\/(\\w+)(\\-|\\w)*\\s*>/, {\n      token: \"tag\"\n    }], [/<!--/, \"comment\", \"@comment\"]],\n    comment: [[/[^<\\-]+/, \"comment.content\"], [/-->/, \"comment\", \"@pop\"], [/<!--/, \"comment.content.invalid\"], [/[<\\-]/, \"comment.content\"]],\n    tag: [[/[ \\t\\r\\n]+/, \"white\"], [/(type)(\\s*=\\s*)(\")([^\"]+)(\")/, [\"attribute.name.html\", \"delimiter.html\", \"string.html\", {\n      token: \"string.html\",\n      switchTo: \"@tag.$S2.$4\"\n    }, \"string.html\"]], [/(type)(\\s*=\\s*)(')([^']+)(')/, [\"attribute.name.html\", \"delimiter.html\", \"string.html\", {\n      token: \"string.html\",\n      switchTo: \"@tag.$S2.$4\"\n    }, \"string.html\"]], [/(\\w+)(\\s*=\\s*)(\"[^\"]*\"|'[^']*')/, [\"attribute.name.html\", \"delimiter.html\", \"string.html\"]], [/\\w+/, \"attribute.name.html\"], [/\\/>/, \"tag\", \"@pop\"], [/>/, {\n      cases: {\n        \"$S2==style\": {\n          token: \"tag\",\n          switchTo: \"embeddedStyle\",\n          nextEmbedded: \"text/css\"\n        },\n        \"$S2==script\": {\n          cases: {\n            $S3: {\n              token: \"tag\",\n              switchTo: \"embeddedScript\",\n              nextEmbedded: \"$S3\"\n            },\n            \"@default\": {\n              token: \"tag\",\n              switchTo: \"embeddedScript\",\n              nextEmbedded: \"text/javascript\"\n            }\n          }\n        },\n        \"@default\": {\n          token: \"tag\",\n          next: \"@pop\"\n        }\n      }\n    }]],\n    embeddedStyle: [[/[^<]+/, \"\"], [/<\\/style\\s*>/, {\n      token: \"@rematch\",\n      next: \"@pop\",\n      nextEmbedded: \"@pop\"\n    }], [/</, \"\"]],\n    embeddedScript: [[/[^<]+/, \"\"], [/<\\/script\\s*>/, {\n      token: \"@rematch\",\n      next: \"@pop\",\n      nextEmbedded: \"@pop\"\n    }], [/</, \"\"]]\n  }\n};\nexport { conf, language };","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/basic-languages/markdown/markdown.js"],"names":["conf","comments","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","control","noncontrol","escapes","jsescapes","empty","tokenizer","root","token","next","nextEmbedded","include","table_header","table_body","table_common","switchTo","cases","codeblock","codeblockgh","linecontent","html","comment","tag","$S3","embeddedStyle","embeddedScript"],"mappings":"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","sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/markdown/markdown.ts\nvar conf = {\n  comments: {\n    blockComment: [\"<!--\", \"-->\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: \"<\", close: \">\", notIn: [\"string\"] }\n  ],\n  surroundingPairs: [\n    { open: \"(\", close: \")\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"`\", close: \"`\" }\n  ],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*<!--\\\\s*#?region\\\\b.*-->\"),\n      end: new RegExp(\"^\\\\s*<!--\\\\s*#?endregion\\\\b.*-->\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".md\",\n  control: /[\\\\`*_\\[\\]{}()#+\\-\\.!]/,\n  noncontrol: /[^\\\\`*_\\[\\]{}()#+\\-\\.!]/,\n  escapes: /\\\\(?:@control)/,\n  jsescapes: /\\\\(?:[btnfr\\\\\"']|[0-7][0-7]?|[0-3][0-7]{2})/,\n  empty: [\n    \"area\",\n    \"base\",\n    \"basefont\",\n    \"br\",\n    \"col\",\n    \"frame\",\n    \"hr\",\n    \"img\",\n    \"input\",\n    \"isindex\",\n    \"link\",\n    \"meta\",\n    \"param\"\n  ],\n  tokenizer: {\n    root: [\n      [/^\\s*\\|/, \"@rematch\", \"@table_header\"],\n      [/^(\\s{0,3})(#+)((?:[^\\\\#]|@escapes)+)((?:#+)?)/, [\"white\", \"keyword\", \"keyword\", \"keyword\"]],\n      [/^\\s*(=+|\\-+)\\s*$/, \"keyword\"],\n      [/^\\s*((\\*[ ]?)+)\\s*$/, \"meta.separator\"],\n      [/^\\s*>+/, \"comment\"],\n      [/^\\s*([\\*\\-+:]|\\d+\\.)\\s/, \"keyword\"],\n      [/^(\\t|[ ]{4})[^ ].*$/, \"string\"],\n      [/^\\s*~~~\\s*((?:\\w|[\\/\\-#])+)?\\s*$/, { token: \"string\", next: \"@codeblock\" }],\n      [\n        /^\\s*```\\s*((?:\\w|[\\/\\-#])+).*$/,\n        { token: \"string\", next: \"@codeblockgh\", nextEmbedded: \"$1\" }\n      ],\n      [/^\\s*```\\s*$/, { token: \"string\", next: \"@codeblock\" }],\n      { include: \"@linecontent\" }\n    ],\n    table_header: [\n      { include: \"@table_common\" },\n      [/[^\\|]+/, \"keyword.table.header\"]\n    ],\n    table_body: [{ include: \"@table_common\" }, { include: \"@linecontent\" }],\n    table_common: [\n      [/\\s*[\\-:]+\\s*/, { token: \"keyword\", switchTo: \"table_body\" }],\n      [/^\\s*\\|/, \"keyword.table.left\"],\n      [/^\\s*[^\\|]/, \"@rematch\", \"@pop\"],\n      [/^\\s*$/, \"@rematch\", \"@pop\"],\n      [\n        /\\|/,\n        {\n          cases: {\n            \"@eos\": \"keyword.table.right\",\n            \"@default\": \"keyword.table.middle\"\n          }\n        }\n      ]\n    ],\n    codeblock: [\n      [/^\\s*~~~\\s*$/, { token: \"string\", next: \"@pop\" }],\n      [/^\\s*```\\s*$/, { token: \"string\", next: \"@pop\" }],\n      [/.*$/, \"variable.source\"]\n    ],\n    codeblockgh: [\n      [/```\\s*$/, { token: \"string\", next: \"@pop\", nextEmbedded: \"@pop\" }],\n      [/[^`]+/, \"variable.source\"]\n    ],\n    linecontent: [\n      [/&\\w+;/, \"string.escape\"],\n      [/@escapes/, \"escape\"],\n      [/\\b__([^\\\\_]|@escapes|_(?!_))+__\\b/, \"strong\"],\n      [/\\*\\*([^\\\\*]|@escapes|\\*(?!\\*))+\\*\\*/, \"strong\"],\n      [/\\b_[^_]+_\\b/, \"emphasis\"],\n      [/\\*([^\\\\*]|@escapes)+\\*/, \"emphasis\"],\n      [/`([^\\\\`]|@escapes)+`/, \"variable\"],\n      [/\\{+[^}]+\\}+/, \"string.target\"],\n      [/(!?\\[)((?:[^\\]\\\\]|@escapes)*)(\\]\\([^\\)]+\\))/, [\"string.link\", \"\", \"string.link\"]],\n      [/(!?\\[)((?:[^\\]\\\\]|@escapes)*)(\\])/, \"string.link\"],\n      { include: \"html\" }\n    ],\n    html: [\n      [/<(\\w+)\\/>/, \"tag\"],\n      [\n        /<(\\w+)(\\-|\\w)*/,\n        {\n          cases: {\n            \"@empty\": { token: \"tag\", next: \"@tag.$1\" },\n            \"@default\": { token: \"tag\", next: \"@tag.$1\" }\n          }\n        }\n      ],\n      [/<\\/(\\w+)(\\-|\\w)*\\s*>/, { token: \"tag\" }],\n      [/<!--/, \"comment\", \"@comment\"]\n    ],\n    comment: [\n      [/[^<\\-]+/, \"comment.content\"],\n      [/-->/, \"comment\", \"@pop\"],\n      [/<!--/, \"comment.content.invalid\"],\n      [/[<\\-]/, \"comment.content\"]\n    ],\n    tag: [\n      [/[ \\t\\r\\n]+/, \"white\"],\n      [\n        /(type)(\\s*=\\s*)(\")([^\"]+)(\")/,\n        [\n          \"attribute.name.html\",\n          \"delimiter.html\",\n          \"string.html\",\n          { token: \"string.html\", switchTo: \"@tag.$S2.$4\" },\n          \"string.html\"\n        ]\n      ],\n      [\n        /(type)(\\s*=\\s*)(')([^']+)(')/,\n        [\n          \"attribute.name.html\",\n          \"delimiter.html\",\n          \"string.html\",\n          { token: \"string.html\", switchTo: \"@tag.$S2.$4\" },\n          \"string.html\"\n        ]\n      ],\n      [/(\\w+)(\\s*=\\s*)(\"[^\"]*\"|'[^']*')/, [\"attribute.name.html\", \"delimiter.html\", \"string.html\"]],\n      [/\\w+/, \"attribute.name.html\"],\n      [/\\/>/, \"tag\", \"@pop\"],\n      [\n        />/,\n        {\n          cases: {\n            \"$S2==style\": {\n              token: \"tag\",\n              switchTo: \"embeddedStyle\",\n              nextEmbedded: \"text/css\"\n            },\n            \"$S2==script\": {\n              cases: {\n                $S3: {\n                  token: \"tag\",\n                  switchTo: \"embeddedScript\",\n                  nextEmbedded: \"$S3\"\n                },\n                \"@default\": {\n                  token: \"tag\",\n                  switchTo: \"embeddedScript\",\n                  nextEmbedded: \"text/javascript\"\n                }\n              }\n            },\n            \"@default\": { token: \"tag\", next: \"@pop\" }\n          }\n        }\n      ]\n    ],\n    embeddedStyle: [\n      [/[^<]+/, \"\"],\n      [/<\\/style\\s*>/, { token: \"@rematch\", next: \"@pop\", nextEmbedded: \"@pop\" }],\n      [/</, \"\"]\n    ],\n    embeddedScript: [\n      [/[^<]+/, \"\"],\n      [/<\\/script\\s*>/, { token: \"@rematch\", next: \"@pop\", nextEmbedded: \"@pop\" }],\n      [/</, \"\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"]},"metadata":{},"sourceType":"module"}