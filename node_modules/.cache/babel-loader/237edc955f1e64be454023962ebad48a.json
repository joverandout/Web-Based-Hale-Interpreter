{"ast":null,"code":"var _jsxFileName = \"/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport hostLogIn from \"../../api/hostLogIn\";\nimport UserContext from \"../../api/user-context\";\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function loginUser(credentials) {\n  return fetch('http://localhost:8080/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(credentials)\n  }).then(data => data.json());\n}\n\nexport default function Login({\n  setToken\n}) {\n  _s();\n\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n  const [signedIn, setSignedIn] = useState(false);\n  const [error, setError] = useState(null);\n  const history = useNavigate();\n  let contextUser = useContext(UserContext);\n\n  function login() {\n    let data = {\n      username: username,\n      password: password\n    };\n    hostLogIn(data).then(hostid => {\n      contextUser.setUser({\n        \"Name\": username,\n        \"hostid\": hostid\n      });\n      history.push('/dashboard');\n    }).catch(err => {\n      console.log(\"Could not log in, make sure credentials are valid\");\n      setError( /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"Could not log in, make sure credentials are valid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 18\n      }, this));\n    });\n  }\n\n  function usernameChange(e) {\n    setUserName(e.target.value);\n  }\n\n  function passwordChange(e) {\n    setPassword(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hale - A Web Based Interpreter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Please login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          onChange: usernameChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          onChange: passwordChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"pw\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"link\",\n        children: \"I've forgotten my password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: login,\n        className: \"green_button\",\n        children: \"GO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"/jW/R126A5aVTZh5IoEDMTZqXtA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Login/Login.js"],"names":["React","useContext","useState","useNavigate","PropTypes","hostLogIn","UserContext","loginUser","credentials","fetch","method","headers","body","JSON","stringify","then","data","json","Login","setToken","username","setUserName","password","setPassword","signedIn","setSignedIn","error","setError","history","contextUser","login","hostid","setUser","push","catch","err","console","log","color","usernameChange","e","target","value","passwordChange","propTypes","func","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AAEA,OAAO,aAAP;;;AAEA,eAAeC,SAAf,CAAyBC,WAAzB,EAAsC;AAClC,SAAOC,KAAK,CAAC,6BAAD,EAAgC;AAC1CC,IAAAA,MAAM,EAAE,MADkC;AAE1CC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFiC;AAK1CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,WAAf;AALoC,GAAhC,CAAL,CAOJO,IAPI,CAOCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAPT,CAAP;AAQH;;AAED,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAA6B;AAAA;;AACxC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,EAAxC;AACA,QAAM,CAACoB,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,EAAxC;AACA,QAAM,CAACsB,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACwB,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAM0B,OAAO,GAAGzB,WAAW,EAA3B;AAEA,MAAI0B,WAAW,GAAG5B,UAAU,CAACK,WAAD,CAA5B;;AAGA,WAASwB,KAAT,GAAgB;AACd,QAAId,IAAI,GAAC;AACPI,MAAAA,QAAQ,EAAEA,QADH;AAEPE,MAAAA,QAAQ,EAAEA;AAFH,KAAT;AAIAjB,IAAAA,SAAS,CAACW,IAAD,CAAT,CAAgBD,IAAhB,CAAqBgB,MAAM,IAAE;AAE3BF,MAAAA,WAAW,CAACG,OAAZ,CAAoB;AAClB,gBAAOZ,QADW;AAElB,kBAASW;AAFS,OAApB;AAKAH,MAAAA,OAAO,CAACK,IAAR,CAAa,YAAb;AACD,KARD,EAQGC,KARH,CAQSC,GAAG,IAAE;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,mDAAZ;AACAV,MAAAA,QAAQ,eAAC;AAAG,QAAA,KAAK,EAAE;AAACW,UAAAA,KAAK,EAAC;AAAP,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAD,CAAR;AACD,KAXD;AAYD;;AAED,WAASC,cAAT,CAAwBC,CAAxB,EAA0B;AACxBnB,IAAAA,WAAW,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD;;AAED,WAASC,cAAT,CAAwBH,CAAxB,EAA0B;AACxBjB,IAAAA,WAAW,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD;;AAED,sBAEI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAM,MAAA,MAAM,EAAC,EAAb;AAAA,8BAEI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,SAAS,EAAC,cAA7B;AAA4C,UAAA,QAAQ,EAAEH,cAAtD;AAAuE,UAAA,QAAQ;AAA/E;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAOI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAwB,UAAA,SAAS,EAAC,cAAlC;AAAiD,UAAA,QAAQ,EAAEI,cAA3D;AAA2E,UAAA,QAAQ;AAAnF;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,OAAO,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAYI;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ,EAcKjB,KAdL;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAqBI;AAAA,6BACQ;AAAQ,QAAA,OAAO,EAAEI,KAAjB;AAAwB,QAAA,SAAS,EAAC,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,YArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AA4BH;;GAlEuBZ,K;UAMJf,W;;;KANIe,K;AAoExBA,KAAK,CAAC0B,SAAN,GAAkB;AACdzB,EAAAA,QAAQ,EAAEf,SAAS,CAACyC,IAAV,CAAeC;AADX,CAAlB","sourcesContent":["import React, {useContext, useState} from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\n\nimport hostLogIn from \"../../api/hostLogIn\"\nimport UserContext from \"../../api/user-context\"\n\nimport './Login.css';\n\nasync function loginUser(credentials) {\n    return fetch('http://localhost:8080/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    })\n      .then(data => data.json())\n}\n\nexport default function Login({ setToken }) {\n    const [username, setUserName] = useState();\n    const [password, setPassword] = useState();\n    const [signedIn, setSignedIn] = useState(false);\n    const [error, setError] = useState(null);\n\n    const history = useNavigate();\n\n    let contextUser = useContext(UserContext)\n\n\n    function login(){\n      let data={\n        username: username,\n        password: password\n      }\n      hostLogIn(data).then(hostid=>{\n\n        contextUser.setUser({\n          \"Name\":username,\n          \"hostid\":hostid\n        })\n\n        history.push('/dashboard')\n      }).catch(err=>{\n        console.log(\"Could not log in, make sure credentials are valid\")\n        setError(<p style={{color:\"red\"}}>Could not log in, make sure credentials are valid</p>)\n      })\n    }\n\n    function usernameChange(e){\n      setUserName(e.target.value)\n    }\n  \n    function passwordChange(e){\n      setPassword(e.target.value) \n    }\n    \n    return(\n      \n        <div className=\"login-wrapper\">\n            <h1>Hale - A Web Based Interpreter</h1>\n            <h2>Please login</h2>\n            <form action=\"\"> \n\n                <div className=\"row\">\n                    <input type=\"text\" className=\"form-control\" onChange={usernameChange}  required/> \n                    <label htmlFor=\"name\">Username</label>\n                </div>\n\n                <div className=\"row\">\n                    <input type=\"password\"  className=\"form-control\" onChange={passwordChange} required/>\n                    <label htmlFor=\"pw\">Password</label>\n                </div>\n                \n                <span className=\"link\">I've forgotten my password</span>\n\n                {error}\n                \n            </form>\n            \n            <div>\n                    <button onClick={login} className=\"green_button\">GO</button>\n              </div>\n        </div>\n    )\n}\n\nLogin.propTypes = {\n    setToken: PropTypes.func.isRequired\n  }"]},"metadata":{},"sourceType":"module"}