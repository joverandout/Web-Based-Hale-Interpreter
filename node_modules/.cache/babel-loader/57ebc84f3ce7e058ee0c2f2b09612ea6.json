{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { Checkbox } from '../checkbox/checkbox.js';\nimport { HistoryInputBox } from '../inputbox/inputBox.js';\nimport { Widget } from '../widget.js';\nimport { Codicon } from '../../../common/codicons.js';\nimport { Emitter } from '../../../common/event.js';\nimport './findInput.css';\nimport * as nls from '../../../../nls.js';\nconst NLS_DEFAULT_LABEL = nls.localize('defaultLabel', \"input\");\nconst NLS_PRESERVE_CASE_LABEL = nls.localize('label.preserveCaseCheckbox', \"Preserve Case\");\nexport class PreserveCaseCheckbox extends Checkbox {\n  constructor(opts) {\n    super({\n      // TODO: does this need its own icon?\n      icon: Codicon.preserveCase,\n      title: NLS_PRESERVE_CASE_LABEL + opts.appendTitle,\n      isChecked: opts.isChecked,\n      inputActiveOptionBorder: opts.inputActiveOptionBorder,\n      inputActiveOptionForeground: opts.inputActiveOptionForeground,\n      inputActiveOptionBackground: opts.inputActiveOptionBackground\n    });\n  }\n\n}\nexport class ReplaceInput extends Widget {\n  constructor(parent, contextViewProvider, _showOptionButtons, options) {\n    super();\n    this._showOptionButtons = _showOptionButtons;\n    this.fixFocusOnOptionClickEnabled = true;\n    this.cachedOptionsWidth = 0;\n    this._onDidOptionChange = this._register(new Emitter());\n    this.onDidOptionChange = this._onDidOptionChange.event;\n    this._onKeyDown = this._register(new Emitter());\n    this.onKeyDown = this._onKeyDown.event;\n    this._onMouseDown = this._register(new Emitter());\n    this._onInput = this._register(new Emitter());\n    this._onKeyUp = this._register(new Emitter());\n    this._onPreserveCaseKeyDown = this._register(new Emitter());\n    this.onPreserveCaseKeyDown = this._onPreserveCaseKeyDown.event;\n    this.contextViewProvider = contextViewProvider;\n    this.placeholder = options.placeholder || '';\n    this.validation = options.validation;\n    this.label = options.label || NLS_DEFAULT_LABEL;\n    this.inputActiveOptionBorder = options.inputActiveOptionBorder;\n    this.inputActiveOptionForeground = options.inputActiveOptionForeground;\n    this.inputActiveOptionBackground = options.inputActiveOptionBackground;\n    this.inputBackground = options.inputBackground;\n    this.inputForeground = options.inputForeground;\n    this.inputBorder = options.inputBorder;\n    this.inputValidationInfoBorder = options.inputValidationInfoBorder;\n    this.inputValidationInfoBackground = options.inputValidationInfoBackground;\n    this.inputValidationInfoForeground = options.inputValidationInfoForeground;\n    this.inputValidationWarningBorder = options.inputValidationWarningBorder;\n    this.inputValidationWarningBackground = options.inputValidationWarningBackground;\n    this.inputValidationWarningForeground = options.inputValidationWarningForeground;\n    this.inputValidationErrorBorder = options.inputValidationErrorBorder;\n    this.inputValidationErrorBackground = options.inputValidationErrorBackground;\n    this.inputValidationErrorForeground = options.inputValidationErrorForeground;\n    const appendPreserveCaseLabel = options.appendPreserveCaseLabel || '';\n    const history = options.history || [];\n    const flexibleHeight = !!options.flexibleHeight;\n    const flexibleWidth = !!options.flexibleWidth;\n    const flexibleMaxHeight = options.flexibleMaxHeight;\n    this.domNode = document.createElement('div');\n    this.domNode.classList.add('monaco-findInput');\n    this.inputBox = this._register(new HistoryInputBox(this.domNode, this.contextViewProvider, {\n      ariaLabel: this.label || '',\n      placeholder: this.placeholder || '',\n      validationOptions: {\n        validation: this.validation\n      },\n      inputBackground: this.inputBackground,\n      inputForeground: this.inputForeground,\n      inputBorder: this.inputBorder,\n      inputValidationInfoBackground: this.inputValidationInfoBackground,\n      inputValidationInfoForeground: this.inputValidationInfoForeground,\n      inputValidationInfoBorder: this.inputValidationInfoBorder,\n      inputValidationWarningBackground: this.inputValidationWarningBackground,\n      inputValidationWarningForeground: this.inputValidationWarningForeground,\n      inputValidationWarningBorder: this.inputValidationWarningBorder,\n      inputValidationErrorBackground: this.inputValidationErrorBackground,\n      inputValidationErrorForeground: this.inputValidationErrorForeground,\n      inputValidationErrorBorder: this.inputValidationErrorBorder,\n      history,\n      showHistoryHint: options.showHistoryHint,\n      flexibleHeight,\n      flexibleWidth,\n      flexibleMaxHeight\n    }));\n    this.preserveCase = this._register(new PreserveCaseCheckbox({\n      appendTitle: appendPreserveCaseLabel,\n      isChecked: false,\n      inputActiveOptionBorder: this.inputActiveOptionBorder,\n      inputActiveOptionForeground: this.inputActiveOptionForeground,\n      inputActiveOptionBackground: this.inputActiveOptionBackground\n    }));\n\n    this._register(this.preserveCase.onChange(viaKeyboard => {\n      this._onDidOptionChange.fire(viaKeyboard);\n\n      if (!viaKeyboard && this.fixFocusOnOptionClickEnabled) {\n        this.inputBox.focus();\n      }\n\n      this.validate();\n    }));\n\n    this._register(this.preserveCase.onKeyDown(e => {\n      this._onPreserveCaseKeyDown.fire(e);\n    }));\n\n    if (this._showOptionButtons) {\n      this.cachedOptionsWidth = this.preserveCase.width();\n    } else {\n      this.cachedOptionsWidth = 0;\n    } // Arrow-Key support to navigate between options\n\n\n    let indexes = [this.preserveCase.domNode];\n    this.onkeydown(this.domNode, event => {\n      if (event.equals(15\n      /* LeftArrow */\n      ) || event.equals(17\n      /* RightArrow */\n      ) || event.equals(9\n      /* Escape */\n      )) {\n        let index = indexes.indexOf(document.activeElement);\n\n        if (index >= 0) {\n          let newIndex = -1;\n\n          if (event.equals(17\n          /* RightArrow */\n          )) {\n            newIndex = (index + 1) % indexes.length;\n          } else if (event.equals(15\n          /* LeftArrow */\n          )) {\n            if (index === 0) {\n              newIndex = indexes.length - 1;\n            } else {\n              newIndex = index - 1;\n            }\n          }\n\n          if (event.equals(9\n          /* Escape */\n          )) {\n            indexes[index].blur();\n            this.inputBox.focus();\n          } else if (newIndex >= 0) {\n            indexes[newIndex].focus();\n          }\n\n          dom.EventHelper.stop(event, true);\n        }\n      }\n    });\n    let controls = document.createElement('div');\n    controls.className = 'controls';\n    controls.style.display = this._showOptionButtons ? 'block' : 'none';\n    controls.appendChild(this.preserveCase.domNode);\n    this.domNode.appendChild(controls);\n\n    if (parent) {\n      parent.appendChild(this.domNode);\n    }\n\n    this.onkeydown(this.inputBox.inputElement, e => this._onKeyDown.fire(e));\n    this.onkeyup(this.inputBox.inputElement, e => this._onKeyUp.fire(e));\n    this.oninput(this.inputBox.inputElement, e => this._onInput.fire());\n    this.onmousedown(this.inputBox.inputElement, e => this._onMouseDown.fire(e));\n  }\n\n  enable() {\n    this.domNode.classList.remove('disabled');\n    this.inputBox.enable();\n    this.preserveCase.enable();\n  }\n\n  disable() {\n    this.domNode.classList.add('disabled');\n    this.inputBox.disable();\n    this.preserveCase.disable();\n  }\n\n  setEnabled(enabled) {\n    if (enabled) {\n      this.enable();\n    } else {\n      this.disable();\n    }\n  }\n\n  style(styles) {\n    this.inputActiveOptionBorder = styles.inputActiveOptionBorder;\n    this.inputActiveOptionForeground = styles.inputActiveOptionForeground;\n    this.inputActiveOptionBackground = styles.inputActiveOptionBackground;\n    this.inputBackground = styles.inputBackground;\n    this.inputForeground = styles.inputForeground;\n    this.inputBorder = styles.inputBorder;\n    this.inputValidationInfoBackground = styles.inputValidationInfoBackground;\n    this.inputValidationInfoForeground = styles.inputValidationInfoForeground;\n    this.inputValidationInfoBorder = styles.inputValidationInfoBorder;\n    this.inputValidationWarningBackground = styles.inputValidationWarningBackground;\n    this.inputValidationWarningForeground = styles.inputValidationWarningForeground;\n    this.inputValidationWarningBorder = styles.inputValidationWarningBorder;\n    this.inputValidationErrorBackground = styles.inputValidationErrorBackground;\n    this.inputValidationErrorForeground = styles.inputValidationErrorForeground;\n    this.inputValidationErrorBorder = styles.inputValidationErrorBorder;\n    this.applyStyles();\n  }\n\n  applyStyles() {\n    if (this.domNode) {\n      const checkBoxStyles = {\n        inputActiveOptionBorder: this.inputActiveOptionBorder,\n        inputActiveOptionForeground: this.inputActiveOptionForeground,\n        inputActiveOptionBackground: this.inputActiveOptionBackground\n      };\n      this.preserveCase.style(checkBoxStyles);\n      const inputBoxStyles = {\n        inputBackground: this.inputBackground,\n        inputForeground: this.inputForeground,\n        inputBorder: this.inputBorder,\n        inputValidationInfoBackground: this.inputValidationInfoBackground,\n        inputValidationInfoForeground: this.inputValidationInfoForeground,\n        inputValidationInfoBorder: this.inputValidationInfoBorder,\n        inputValidationWarningBackground: this.inputValidationWarningBackground,\n        inputValidationWarningForeground: this.inputValidationWarningForeground,\n        inputValidationWarningBorder: this.inputValidationWarningBorder,\n        inputValidationErrorBackground: this.inputValidationErrorBackground,\n        inputValidationErrorForeground: this.inputValidationErrorForeground,\n        inputValidationErrorBorder: this.inputValidationErrorBorder\n      };\n      this.inputBox.style(inputBoxStyles);\n    }\n  }\n\n  select() {\n    this.inputBox.select();\n  }\n\n  focus() {\n    this.inputBox.focus();\n  }\n\n  getPreserveCase() {\n    return this.preserveCase.checked;\n  }\n\n  setPreserveCase(value) {\n    this.preserveCase.checked = value;\n  }\n\n  focusOnPreserve() {\n    this.preserveCase.focus();\n  }\n\n  validate() {\n    if (this.inputBox) {\n      this.inputBox.validate();\n    }\n  }\n\n  set width(newWidth) {\n    this.inputBox.paddingRight = this.cachedOptionsWidth;\n    this.inputBox.width = newWidth;\n    this.domNode.style.width = newWidth + 'px';\n  }\n\n  dispose() {\n    super.dispose();\n  }\n\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/base/browser/ui/findinput/replaceInput.js"],"names":["dom","Checkbox","HistoryInputBox","Widget","Codicon","Emitter","nls","NLS_DEFAULT_LABEL","localize","NLS_PRESERVE_CASE_LABEL","PreserveCaseCheckbox","constructor","opts","icon","preserveCase","title","appendTitle","isChecked","inputActiveOptionBorder","inputActiveOptionForeground","inputActiveOptionBackground","ReplaceInput","parent","contextViewProvider","_showOptionButtons","options","fixFocusOnOptionClickEnabled","cachedOptionsWidth","_onDidOptionChange","_register","onDidOptionChange","event","_onKeyDown","onKeyDown","_onMouseDown","_onInput","_onKeyUp","_onPreserveCaseKeyDown","onPreserveCaseKeyDown","placeholder","validation","label","inputBackground","inputForeground","inputBorder","inputValidationInfoBorder","inputValidationInfoBackground","inputValidationInfoForeground","inputValidationWarningBorder","inputValidationWarningBackground","inputValidationWarningForeground","inputValidationErrorBorder","inputValidationErrorBackground","inputValidationErrorForeground","appendPreserveCaseLabel","history","flexibleHeight","flexibleWidth","flexibleMaxHeight","domNode","document","createElement","classList","add","inputBox","ariaLabel","validationOptions","showHistoryHint","onChange","viaKeyboard","fire","focus","validate","e","width","indexes","onkeydown","equals","index","indexOf","activeElement","newIndex","length","blur","EventHelper","stop","controls","className","style","display","appendChild","inputElement","onkeyup","oninput","onmousedown","enable","remove","disable","setEnabled","enabled","styles","applyStyles","checkBoxStyles","inputBoxStyles","select","getPreserveCase","checked","setPreserveCase","value","focusOnPreserve","newWidth","paddingRight","dispose"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { Checkbox } from '../checkbox/checkbox.js';\nimport { HistoryInputBox } from '../inputbox/inputBox.js';\nimport { Widget } from '../widget.js';\nimport { Codicon } from '../../../common/codicons.js';\nimport { Emitter } from '../../../common/event.js';\nimport './findInput.css';\nimport * as nls from '../../../../nls.js';\nconst NLS_DEFAULT_LABEL = nls.localize('defaultLabel', \"input\");\nconst NLS_PRESERVE_CASE_LABEL = nls.localize('label.preserveCaseCheckbox', \"Preserve Case\");\nexport class PreserveCaseCheckbox extends Checkbox {\n    constructor(opts) {\n        super({\n            // TODO: does this need its own icon?\n            icon: Codicon.preserveCase,\n            title: NLS_PRESERVE_CASE_LABEL + opts.appendTitle,\n            isChecked: opts.isChecked,\n            inputActiveOptionBorder: opts.inputActiveOptionBorder,\n            inputActiveOptionForeground: opts.inputActiveOptionForeground,\n            inputActiveOptionBackground: opts.inputActiveOptionBackground\n        });\n    }\n}\nexport class ReplaceInput extends Widget {\n    constructor(parent, contextViewProvider, _showOptionButtons, options) {\n        super();\n        this._showOptionButtons = _showOptionButtons;\n        this.fixFocusOnOptionClickEnabled = true;\n        this.cachedOptionsWidth = 0;\n        this._onDidOptionChange = this._register(new Emitter());\n        this.onDidOptionChange = this._onDidOptionChange.event;\n        this._onKeyDown = this._register(new Emitter());\n        this.onKeyDown = this._onKeyDown.event;\n        this._onMouseDown = this._register(new Emitter());\n        this._onInput = this._register(new Emitter());\n        this._onKeyUp = this._register(new Emitter());\n        this._onPreserveCaseKeyDown = this._register(new Emitter());\n        this.onPreserveCaseKeyDown = this._onPreserveCaseKeyDown.event;\n        this.contextViewProvider = contextViewProvider;\n        this.placeholder = options.placeholder || '';\n        this.validation = options.validation;\n        this.label = options.label || NLS_DEFAULT_LABEL;\n        this.inputActiveOptionBorder = options.inputActiveOptionBorder;\n        this.inputActiveOptionForeground = options.inputActiveOptionForeground;\n        this.inputActiveOptionBackground = options.inputActiveOptionBackground;\n        this.inputBackground = options.inputBackground;\n        this.inputForeground = options.inputForeground;\n        this.inputBorder = options.inputBorder;\n        this.inputValidationInfoBorder = options.inputValidationInfoBorder;\n        this.inputValidationInfoBackground = options.inputValidationInfoBackground;\n        this.inputValidationInfoForeground = options.inputValidationInfoForeground;\n        this.inputValidationWarningBorder = options.inputValidationWarningBorder;\n        this.inputValidationWarningBackground = options.inputValidationWarningBackground;\n        this.inputValidationWarningForeground = options.inputValidationWarningForeground;\n        this.inputValidationErrorBorder = options.inputValidationErrorBorder;\n        this.inputValidationErrorBackground = options.inputValidationErrorBackground;\n        this.inputValidationErrorForeground = options.inputValidationErrorForeground;\n        const appendPreserveCaseLabel = options.appendPreserveCaseLabel || '';\n        const history = options.history || [];\n        const flexibleHeight = !!options.flexibleHeight;\n        const flexibleWidth = !!options.flexibleWidth;\n        const flexibleMaxHeight = options.flexibleMaxHeight;\n        this.domNode = document.createElement('div');\n        this.domNode.classList.add('monaco-findInput');\n        this.inputBox = this._register(new HistoryInputBox(this.domNode, this.contextViewProvider, {\n            ariaLabel: this.label || '',\n            placeholder: this.placeholder || '',\n            validationOptions: {\n                validation: this.validation\n            },\n            inputBackground: this.inputBackground,\n            inputForeground: this.inputForeground,\n            inputBorder: this.inputBorder,\n            inputValidationInfoBackground: this.inputValidationInfoBackground,\n            inputValidationInfoForeground: this.inputValidationInfoForeground,\n            inputValidationInfoBorder: this.inputValidationInfoBorder,\n            inputValidationWarningBackground: this.inputValidationWarningBackground,\n            inputValidationWarningForeground: this.inputValidationWarningForeground,\n            inputValidationWarningBorder: this.inputValidationWarningBorder,\n            inputValidationErrorBackground: this.inputValidationErrorBackground,\n            inputValidationErrorForeground: this.inputValidationErrorForeground,\n            inputValidationErrorBorder: this.inputValidationErrorBorder,\n            history,\n            showHistoryHint: options.showHistoryHint,\n            flexibleHeight,\n            flexibleWidth,\n            flexibleMaxHeight\n        }));\n        this.preserveCase = this._register(new PreserveCaseCheckbox({\n            appendTitle: appendPreserveCaseLabel,\n            isChecked: false,\n            inputActiveOptionBorder: this.inputActiveOptionBorder,\n            inputActiveOptionForeground: this.inputActiveOptionForeground,\n            inputActiveOptionBackground: this.inputActiveOptionBackground,\n        }));\n        this._register(this.preserveCase.onChange(viaKeyboard => {\n            this._onDidOptionChange.fire(viaKeyboard);\n            if (!viaKeyboard && this.fixFocusOnOptionClickEnabled) {\n                this.inputBox.focus();\n            }\n            this.validate();\n        }));\n        this._register(this.preserveCase.onKeyDown(e => {\n            this._onPreserveCaseKeyDown.fire(e);\n        }));\n        if (this._showOptionButtons) {\n            this.cachedOptionsWidth = this.preserveCase.width();\n        }\n        else {\n            this.cachedOptionsWidth = 0;\n        }\n        // Arrow-Key support to navigate between options\n        let indexes = [this.preserveCase.domNode];\n        this.onkeydown(this.domNode, (event) => {\n            if (event.equals(15 /* LeftArrow */) || event.equals(17 /* RightArrow */) || event.equals(9 /* Escape */)) {\n                let index = indexes.indexOf(document.activeElement);\n                if (index >= 0) {\n                    let newIndex = -1;\n                    if (event.equals(17 /* RightArrow */)) {\n                        newIndex = (index + 1) % indexes.length;\n                    }\n                    else if (event.equals(15 /* LeftArrow */)) {\n                        if (index === 0) {\n                            newIndex = indexes.length - 1;\n                        }\n                        else {\n                            newIndex = index - 1;\n                        }\n                    }\n                    if (event.equals(9 /* Escape */)) {\n                        indexes[index].blur();\n                        this.inputBox.focus();\n                    }\n                    else if (newIndex >= 0) {\n                        indexes[newIndex].focus();\n                    }\n                    dom.EventHelper.stop(event, true);\n                }\n            }\n        });\n        let controls = document.createElement('div');\n        controls.className = 'controls';\n        controls.style.display = this._showOptionButtons ? 'block' : 'none';\n        controls.appendChild(this.preserveCase.domNode);\n        this.domNode.appendChild(controls);\n        if (parent) {\n            parent.appendChild(this.domNode);\n        }\n        this.onkeydown(this.inputBox.inputElement, (e) => this._onKeyDown.fire(e));\n        this.onkeyup(this.inputBox.inputElement, (e) => this._onKeyUp.fire(e));\n        this.oninput(this.inputBox.inputElement, (e) => this._onInput.fire());\n        this.onmousedown(this.inputBox.inputElement, (e) => this._onMouseDown.fire(e));\n    }\n    enable() {\n        this.domNode.classList.remove('disabled');\n        this.inputBox.enable();\n        this.preserveCase.enable();\n    }\n    disable() {\n        this.domNode.classList.add('disabled');\n        this.inputBox.disable();\n        this.preserveCase.disable();\n    }\n    setEnabled(enabled) {\n        if (enabled) {\n            this.enable();\n        }\n        else {\n            this.disable();\n        }\n    }\n    style(styles) {\n        this.inputActiveOptionBorder = styles.inputActiveOptionBorder;\n        this.inputActiveOptionForeground = styles.inputActiveOptionForeground;\n        this.inputActiveOptionBackground = styles.inputActiveOptionBackground;\n        this.inputBackground = styles.inputBackground;\n        this.inputForeground = styles.inputForeground;\n        this.inputBorder = styles.inputBorder;\n        this.inputValidationInfoBackground = styles.inputValidationInfoBackground;\n        this.inputValidationInfoForeground = styles.inputValidationInfoForeground;\n        this.inputValidationInfoBorder = styles.inputValidationInfoBorder;\n        this.inputValidationWarningBackground = styles.inputValidationWarningBackground;\n        this.inputValidationWarningForeground = styles.inputValidationWarningForeground;\n        this.inputValidationWarningBorder = styles.inputValidationWarningBorder;\n        this.inputValidationErrorBackground = styles.inputValidationErrorBackground;\n        this.inputValidationErrorForeground = styles.inputValidationErrorForeground;\n        this.inputValidationErrorBorder = styles.inputValidationErrorBorder;\n        this.applyStyles();\n    }\n    applyStyles() {\n        if (this.domNode) {\n            const checkBoxStyles = {\n                inputActiveOptionBorder: this.inputActiveOptionBorder,\n                inputActiveOptionForeground: this.inputActiveOptionForeground,\n                inputActiveOptionBackground: this.inputActiveOptionBackground,\n            };\n            this.preserveCase.style(checkBoxStyles);\n            const inputBoxStyles = {\n                inputBackground: this.inputBackground,\n                inputForeground: this.inputForeground,\n                inputBorder: this.inputBorder,\n                inputValidationInfoBackground: this.inputValidationInfoBackground,\n                inputValidationInfoForeground: this.inputValidationInfoForeground,\n                inputValidationInfoBorder: this.inputValidationInfoBorder,\n                inputValidationWarningBackground: this.inputValidationWarningBackground,\n                inputValidationWarningForeground: this.inputValidationWarningForeground,\n                inputValidationWarningBorder: this.inputValidationWarningBorder,\n                inputValidationErrorBackground: this.inputValidationErrorBackground,\n                inputValidationErrorForeground: this.inputValidationErrorForeground,\n                inputValidationErrorBorder: this.inputValidationErrorBorder\n            };\n            this.inputBox.style(inputBoxStyles);\n        }\n    }\n    select() {\n        this.inputBox.select();\n    }\n    focus() {\n        this.inputBox.focus();\n    }\n    getPreserveCase() {\n        return this.preserveCase.checked;\n    }\n    setPreserveCase(value) {\n        this.preserveCase.checked = value;\n    }\n    focusOnPreserve() {\n        this.preserveCase.focus();\n    }\n    validate() {\n        if (this.inputBox) {\n            this.inputBox.validate();\n        }\n    }\n    set width(newWidth) {\n        this.inputBox.paddingRight = this.cachedOptionsWidth;\n        this.inputBox.width = newWidth;\n        this.domNode.style.width = newWidth + 'px';\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}