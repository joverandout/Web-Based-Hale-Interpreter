{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { Lazy } from '../../../../base/common/lazy.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { escapeRegExpCharacters } from '../../../../base/common/strings.js';\nimport { EditorAction, EditorCommand } from '../../../browser/editorExtensions.js';\nimport { IBulkEditService, ResourceEdit } from '../../../browser/services/bulkEditService.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { codeActionCommandId, fixAllCommandId, organizeImportsCommandId, refactorCommandId, sourceActionCommandId } from './codeAction.js';\nimport { CodeActionUi } from './codeActionUi.js';\nimport { MessageController } from '../../message/browser/messageController.js';\nimport * as nls from '../../../../nls.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IMarkerService } from '../../../../platform/markers/common/markers.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IEditorProgressService } from '../../../../platform/progress/common/progress.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { CodeActionModel, SUPPORTED_CODE_ACTIONS } from './codeActionModel.js';\nimport { CodeActionCommandArgs, CodeActionKind } from './types.js';\n\nfunction contextKeyForSupportedActions(kind) {\n  return ContextKeyExpr.regex(SUPPORTED_CODE_ACTIONS.keys()[0], new RegExp('(\\\\s|^)' + escapeRegExpCharacters(kind.value) + '\\\\b'));\n}\n\nconst argsSchema = {\n  type: 'object',\n  defaultSnippets: [{\n    body: {\n      kind: ''\n    }\n  }],\n  properties: {\n    'kind': {\n      type: 'string',\n      description: nls.localize('args.schema.kind', \"Kind of the code action to run.\")\n    },\n    'apply': {\n      type: 'string',\n      description: nls.localize('args.schema.apply', \"Controls when the returned actions are applied.\"),\n      default: \"ifSingle\"\n      /* IfSingle */\n      ,\n      enum: [\"first\"\n      /* First */\n      , \"ifSingle\"\n      /* IfSingle */\n      , \"never\"\n      /* Never */\n      ],\n      enumDescriptions: [nls.localize('args.schema.apply.first', \"Always apply the first returned code action.\"), nls.localize('args.schema.apply.ifSingle', \"Apply the first returned code action if it is the only one.\"), nls.localize('args.schema.apply.never', \"Do not apply the returned code actions.\")]\n    },\n    'preferred': {\n      type: 'boolean',\n      default: false,\n      description: nls.localize('args.schema.preferred', \"Controls if only preferred code actions should be returned.\")\n    }\n  }\n};\nlet QuickFixController = class QuickFixController extends Disposable {\n  constructor(editor, markerService, contextKeyService, progressService, _instantiationService) {\n    super();\n    this._instantiationService = _instantiationService;\n    this._editor = editor;\n    this._model = this._register(new CodeActionModel(this._editor, markerService, contextKeyService, progressService));\n\n    this._register(this._model.onDidChangeState(newState => this.update(newState)));\n\n    this._ui = new Lazy(() => this._register(new CodeActionUi(editor, QuickFixAction.Id, AutoFixAction.Id, {\n      applyCodeAction: (action, retrigger) => __awaiter(this, void 0, void 0, function* () {\n        try {\n          yield this._applyCodeAction(action);\n        } finally {\n          if (retrigger) {\n            this._trigger({\n              type: 2\n              /* Auto */\n              ,\n              filter: {}\n            });\n          }\n        }\n      })\n    }, this._instantiationService)));\n  }\n\n  static get(editor) {\n    return editor.getContribution(QuickFixController.ID);\n  }\n\n  update(newState) {\n    this._ui.getValue().update(newState);\n  }\n\n  showCodeActions(trigger, actions, at) {\n    return this._ui.getValue().showCodeActionList(trigger, actions, at, {\n      includeDisabledActions: false\n    });\n  }\n\n  manualTriggerAtCurrentPosition(notAvailableMessage, filter, autoApply) {\n    var _a;\n\n    if (!this._editor.hasModel()) {\n      return;\n    }\n\n    (_a = MessageController.get(this._editor)) === null || _a === void 0 ? void 0 : _a.closeMessage();\n\n    const triggerPosition = this._editor.getPosition();\n\n    this._trigger({\n      type: 1\n      /* Invoke */\n      ,\n      filter,\n      autoApply,\n      context: {\n        notAvailableMessage,\n        position: triggerPosition\n      }\n    });\n  }\n\n  _trigger(trigger) {\n    return this._model.trigger(trigger);\n  }\n\n  _applyCodeAction(action) {\n    return this._instantiationService.invokeFunction(applyCodeAction, action, this._editor);\n  }\n\n};\nQuickFixController.ID = 'editor.contrib.quickFixController';\nQuickFixController = __decorate([__param(1, IMarkerService), __param(2, IContextKeyService), __param(3, IEditorProgressService), __param(4, IInstantiationService)], QuickFixController);\nexport { QuickFixController };\nexport function applyCodeAction(accessor, item, editor) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const bulkEditService = accessor.get(IBulkEditService);\n    const commandService = accessor.get(ICommandService);\n    const telemetryService = accessor.get(ITelemetryService);\n    const notificationService = accessor.get(INotificationService);\n    telemetryService.publicLog2('codeAction.applyCodeAction', {\n      codeActionTitle: item.action.title,\n      codeActionKind: item.action.kind,\n      codeActionIsPreferred: !!item.action.isPreferred\n    });\n    yield item.resolve(CancellationToken.None);\n\n    if (item.action.edit) {\n      yield bulkEditService.apply(ResourceEdit.convert(item.action.edit), {\n        editor,\n        label: item.action.title\n      });\n    }\n\n    if (item.action.command) {\n      try {\n        yield commandService.executeCommand(item.action.command.id, ...(item.action.command.arguments || []));\n      } catch (err) {\n        const message = asMessage(err);\n        notificationService.error(typeof message === 'string' ? message : nls.localize('applyCodeActionFailed', \"An unknown error occurred while applying the code action\"));\n      }\n    }\n  });\n}\n\nfunction asMessage(err) {\n  if (typeof err === 'string') {\n    return err;\n  } else if (err instanceof Error && typeof err.message === 'string') {\n    return err.message;\n  } else {\n    return undefined;\n  }\n}\n\nfunction triggerCodeActionsForEditorSelection(editor, notAvailableMessage, filter, autoApply) {\n  if (editor.hasModel()) {\n    const controller = QuickFixController.get(editor);\n\n    if (controller) {\n      controller.manualTriggerAtCurrentPosition(notAvailableMessage, filter, autoApply);\n    }\n  }\n}\n\nexport class QuickFixAction extends EditorAction {\n  constructor() {\n    super({\n      id: QuickFixAction.Id,\n      label: nls.localize('quickfix.trigger.label', \"Quick Fix...\"),\n      alias: 'Quick Fix...',\n      precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 2048\n        /* CtrlCmd */\n        | 84\n        /* Period */\n        ,\n        weight: 100\n        /* EditorContrib */\n\n      }\n    });\n  }\n\n  run(_accessor, editor) {\n    return triggerCodeActionsForEditorSelection(editor, nls.localize('editor.action.quickFix.noneMessage', \"No code actions available\"), undefined, undefined);\n  }\n\n}\nQuickFixAction.Id = 'editor.action.quickFix';\nexport class CodeActionCommand extends EditorCommand {\n  constructor() {\n    super({\n      id: codeActionCommandId,\n      precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\n      description: {\n        description: 'Trigger a code action',\n        args: [{\n          name: 'args',\n          schema: argsSchema\n        }]\n      }\n    });\n  }\n\n  runEditorCommand(_accessor, editor, userArgs) {\n    const args = CodeActionCommandArgs.fromUser(userArgs, {\n      kind: CodeActionKind.Empty,\n      apply: \"ifSingle\"\n      /* IfSingle */\n\n    });\n    return triggerCodeActionsForEditorSelection(editor, typeof (userArgs === null || userArgs === void 0 ? void 0 : userArgs.kind) === 'string' ? args.preferred ? nls.localize('editor.action.codeAction.noneMessage.preferred.kind', \"No preferred code actions for '{0}' available\", userArgs.kind) : nls.localize('editor.action.codeAction.noneMessage.kind', \"No code actions for '{0}' available\", userArgs.kind) : args.preferred ? nls.localize('editor.action.codeAction.noneMessage.preferred', \"No preferred code actions available\") : nls.localize('editor.action.codeAction.noneMessage', \"No code actions available\"), {\n      include: args.kind,\n      includeSourceActions: true,\n      onlyIncludePreferredActions: args.preferred\n    }, args.apply);\n  }\n\n}\nexport class RefactorAction extends EditorAction {\n  constructor() {\n    super({\n      id: refactorCommandId,\n      label: nls.localize('refactor.label', \"Refactor...\"),\n      alias: 'Refactor...',\n      precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 2048\n        /* CtrlCmd */\n        | 1024\n        /* Shift */\n        | 48\n        /* KeyR */\n        ,\n        mac: {\n          primary: 256\n          /* WinCtrl */\n          | 1024\n          /* Shift */\n          | 48\n          /* KeyR */\n\n        },\n        weight: 100\n        /* EditorContrib */\n\n      },\n      contextMenuOpts: {\n        group: '1_modification',\n        order: 2,\n        when: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.Refactor))\n      },\n      description: {\n        description: 'Refactor...',\n        args: [{\n          name: 'args',\n          schema: argsSchema\n        }]\n      }\n    });\n  }\n\n  run(_accessor, editor, userArgs) {\n    const args = CodeActionCommandArgs.fromUser(userArgs, {\n      kind: CodeActionKind.Refactor,\n      apply: \"never\"\n      /* Never */\n\n    });\n    return triggerCodeActionsForEditorSelection(editor, typeof (userArgs === null || userArgs === void 0 ? void 0 : userArgs.kind) === 'string' ? args.preferred ? nls.localize('editor.action.refactor.noneMessage.preferred.kind', \"No preferred refactorings for '{0}' available\", userArgs.kind) : nls.localize('editor.action.refactor.noneMessage.kind', \"No refactorings for '{0}' available\", userArgs.kind) : args.preferred ? nls.localize('editor.action.refactor.noneMessage.preferred', \"No preferred refactorings available\") : nls.localize('editor.action.refactor.noneMessage', \"No refactorings available\"), {\n      include: CodeActionKind.Refactor.contains(args.kind) ? args.kind : CodeActionKind.None,\n      onlyIncludePreferredActions: args.preferred\n    }, args.apply);\n  }\n\n}\nexport class SourceAction extends EditorAction {\n  constructor() {\n    super({\n      id: sourceActionCommandId,\n      label: nls.localize('source.label', \"Source Action...\"),\n      alias: 'Source Action...',\n      precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\n      contextMenuOpts: {\n        group: '1_modification',\n        order: 2.1,\n        when: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.Source))\n      },\n      description: {\n        description: 'Source Action...',\n        args: [{\n          name: 'args',\n          schema: argsSchema\n        }]\n      }\n    });\n  }\n\n  run(_accessor, editor, userArgs) {\n    const args = CodeActionCommandArgs.fromUser(userArgs, {\n      kind: CodeActionKind.Source,\n      apply: \"never\"\n      /* Never */\n\n    });\n    return triggerCodeActionsForEditorSelection(editor, typeof (userArgs === null || userArgs === void 0 ? void 0 : userArgs.kind) === 'string' ? args.preferred ? nls.localize('editor.action.source.noneMessage.preferred.kind', \"No preferred source actions for '{0}' available\", userArgs.kind) : nls.localize('editor.action.source.noneMessage.kind', \"No source actions for '{0}' available\", userArgs.kind) : args.preferred ? nls.localize('editor.action.source.noneMessage.preferred', \"No preferred source actions available\") : nls.localize('editor.action.source.noneMessage', \"No source actions available\"), {\n      include: CodeActionKind.Source.contains(args.kind) ? args.kind : CodeActionKind.None,\n      includeSourceActions: true,\n      onlyIncludePreferredActions: args.preferred\n    }, args.apply);\n  }\n\n}\nexport class OrganizeImportsAction extends EditorAction {\n  constructor() {\n    super({\n      id: organizeImportsCommandId,\n      label: nls.localize('organizeImports.label', \"Organize Imports\"),\n      alias: 'Organize Imports',\n      precondition: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.SourceOrganizeImports)),\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 1024\n        /* Shift */\n        | 512\n        /* Alt */\n        | 45\n        /* KeyO */\n        ,\n        weight: 100\n        /* EditorContrib */\n\n      }\n    });\n  }\n\n  run(_accessor, editor) {\n    return triggerCodeActionsForEditorSelection(editor, nls.localize('editor.action.organize.noneMessage', \"No organize imports action available\"), {\n      include: CodeActionKind.SourceOrganizeImports,\n      includeSourceActions: true\n    }, \"ifSingle\"\n    /* IfSingle */\n    );\n  }\n\n}\nexport class FixAllAction extends EditorAction {\n  constructor() {\n    super({\n      id: fixAllCommandId,\n      label: nls.localize('fixAll.label', \"Fix All\"),\n      alias: 'Fix All',\n      precondition: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.SourceFixAll))\n    });\n  }\n\n  run(_accessor, editor) {\n    return triggerCodeActionsForEditorSelection(editor, nls.localize('fixAll.noneMessage', \"No fix all action available\"), {\n      include: CodeActionKind.SourceFixAll,\n      includeSourceActions: true\n    }, \"ifSingle\"\n    /* IfSingle */\n    );\n  }\n\n}\nexport class AutoFixAction extends EditorAction {\n  constructor() {\n    super({\n      id: AutoFixAction.Id,\n      label: nls.localize('autoFix.label', \"Auto Fix...\"),\n      alias: 'Auto Fix...',\n      precondition: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.QuickFix)),\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 512\n        /* Alt */\n        | 1024\n        /* Shift */\n        | 84\n        /* Period */\n        ,\n        mac: {\n          primary: 2048\n          /* CtrlCmd */\n          | 512\n          /* Alt */\n          | 84\n          /* Period */\n\n        },\n        weight: 100\n        /* EditorContrib */\n\n      }\n    });\n  }\n\n  run(_accessor, editor) {\n    return triggerCodeActionsForEditorSelection(editor, nls.localize('editor.action.autoFix.noneMessage', \"No auto fixes available\"), {\n      include: CodeActionKind.QuickFix,\n      onlyIncludePreferredActions: true\n    }, \"ifSingle\"\n    /* IfSingle */\n    );\n  }\n\n}\nAutoFixAction.Id = 'editor.action.autoFix';","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/browser/codeActionCommands.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","CancellationToken","Lazy","Disposable","escapeRegExpCharacters","EditorAction","EditorCommand","IBulkEditService","ResourceEdit","EditorContextKeys","codeActionCommandId","fixAllCommandId","organizeImportsCommandId","refactorCommandId","sourceActionCommandId","CodeActionUi","MessageController","nls","ICommandService","ContextKeyExpr","IContextKeyService","IInstantiationService","IMarkerService","INotificationService","IEditorProgressService","ITelemetryService","CodeActionModel","SUPPORTED_CODE_ACTIONS","CodeActionCommandArgs","CodeActionKind","contextKeyForSupportedActions","kind","regex","keys","RegExp","argsSchema","type","defaultSnippets","body","properties","description","localize","default","enum","enumDescriptions","QuickFixController","constructor","editor","markerService","contextKeyService","progressService","_instantiationService","_editor","_model","_register","onDidChangeState","newState","update","_ui","QuickFixAction","Id","AutoFixAction","applyCodeAction","action","retrigger","_applyCodeAction","_trigger","filter","get","getContribution","ID","getValue","showCodeActions","trigger","actions","at","showCodeActionList","includeDisabledActions","manualTriggerAtCurrentPosition","notAvailableMessage","autoApply","_a","hasModel","closeMessage","triggerPosition","getPosition","context","position","invokeFunction","accessor","item","bulkEditService","commandService","telemetryService","notificationService","publicLog2","codeActionTitle","title","codeActionKind","codeActionIsPreferred","isPreferred","None","edit","convert","label","command","executeCommand","id","err","message","asMessage","error","Error","undefined","triggerCodeActionsForEditorSelection","controller","alias","precondition","and","writable","hasCodeActionsProvider","kbOpts","kbExpr","editorTextFocus","primary","weight","run","_accessor","CodeActionCommand","args","name","schema","runEditorCommand","userArgs","fromUser","Empty","preferred","include","includeSourceActions","onlyIncludePreferredActions","RefactorAction","mac","contextMenuOpts","group","order","when","Refactor","contains","SourceAction","Source","OrganizeImportsAction","SourceOrganizeImports","FixAllAction","SourceFixAll","QuickFix"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { Lazy } from '../../../../base/common/lazy.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { escapeRegExpCharacters } from '../../../../base/common/strings.js';\nimport { EditorAction, EditorCommand } from '../../../browser/editorExtensions.js';\nimport { IBulkEditService, ResourceEdit } from '../../../browser/services/bulkEditService.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { codeActionCommandId, fixAllCommandId, organizeImportsCommandId, refactorCommandId, sourceActionCommandId } from './codeAction.js';\nimport { CodeActionUi } from './codeActionUi.js';\nimport { MessageController } from '../../message/browser/messageController.js';\nimport * as nls from '../../../../nls.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IMarkerService } from '../../../../platform/markers/common/markers.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IEditorProgressService } from '../../../../platform/progress/common/progress.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { CodeActionModel, SUPPORTED_CODE_ACTIONS } from './codeActionModel.js';\nimport { CodeActionCommandArgs, CodeActionKind } from './types.js';\nfunction contextKeyForSupportedActions(kind) {\n    return ContextKeyExpr.regex(SUPPORTED_CODE_ACTIONS.keys()[0], new RegExp('(\\\\s|^)' + escapeRegExpCharacters(kind.value) + '\\\\b'));\n}\nconst argsSchema = {\n    type: 'object',\n    defaultSnippets: [{ body: { kind: '' } }],\n    properties: {\n        'kind': {\n            type: 'string',\n            description: nls.localize('args.schema.kind', \"Kind of the code action to run.\"),\n        },\n        'apply': {\n            type: 'string',\n            description: nls.localize('args.schema.apply', \"Controls when the returned actions are applied.\"),\n            default: \"ifSingle\" /* IfSingle */,\n            enum: [\"first\" /* First */, \"ifSingle\" /* IfSingle */, \"never\" /* Never */],\n            enumDescriptions: [\n                nls.localize('args.schema.apply.first', \"Always apply the first returned code action.\"),\n                nls.localize('args.schema.apply.ifSingle', \"Apply the first returned code action if it is the only one.\"),\n                nls.localize('args.schema.apply.never', \"Do not apply the returned code actions.\"),\n            ]\n        },\n        'preferred': {\n            type: 'boolean',\n            default: false,\n            description: nls.localize('args.schema.preferred', \"Controls if only preferred code actions should be returned.\"),\n        }\n    }\n};\nlet QuickFixController = class QuickFixController extends Disposable {\n    constructor(editor, markerService, contextKeyService, progressService, _instantiationService) {\n        super();\n        this._instantiationService = _instantiationService;\n        this._editor = editor;\n        this._model = this._register(new CodeActionModel(this._editor, markerService, contextKeyService, progressService));\n        this._register(this._model.onDidChangeState(newState => this.update(newState)));\n        this._ui = new Lazy(() => this._register(new CodeActionUi(editor, QuickFixAction.Id, AutoFixAction.Id, {\n            applyCodeAction: (action, retrigger) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    yield this._applyCodeAction(action);\n                }\n                finally {\n                    if (retrigger) {\n                        this._trigger({ type: 2 /* Auto */, filter: {} });\n                    }\n                }\n            })\n        }, this._instantiationService)));\n    }\n    static get(editor) {\n        return editor.getContribution(QuickFixController.ID);\n    }\n    update(newState) {\n        this._ui.getValue().update(newState);\n    }\n    showCodeActions(trigger, actions, at) {\n        return this._ui.getValue().showCodeActionList(trigger, actions, at, { includeDisabledActions: false });\n    }\n    manualTriggerAtCurrentPosition(notAvailableMessage, filter, autoApply) {\n        var _a;\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        (_a = MessageController.get(this._editor)) === null || _a === void 0 ? void 0 : _a.closeMessage();\n        const triggerPosition = this._editor.getPosition();\n        this._trigger({ type: 1 /* Invoke */, filter, autoApply, context: { notAvailableMessage, position: triggerPosition } });\n    }\n    _trigger(trigger) {\n        return this._model.trigger(trigger);\n    }\n    _applyCodeAction(action) {\n        return this._instantiationService.invokeFunction(applyCodeAction, action, this._editor);\n    }\n};\nQuickFixController.ID = 'editor.contrib.quickFixController';\nQuickFixController = __decorate([\n    __param(1, IMarkerService),\n    __param(2, IContextKeyService),\n    __param(3, IEditorProgressService),\n    __param(4, IInstantiationService)\n], QuickFixController);\nexport { QuickFixController };\nexport function applyCodeAction(accessor, item, editor) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const bulkEditService = accessor.get(IBulkEditService);\n        const commandService = accessor.get(ICommandService);\n        const telemetryService = accessor.get(ITelemetryService);\n        const notificationService = accessor.get(INotificationService);\n        telemetryService.publicLog2('codeAction.applyCodeAction', {\n            codeActionTitle: item.action.title,\n            codeActionKind: item.action.kind,\n            codeActionIsPreferred: !!item.action.isPreferred,\n        });\n        yield item.resolve(CancellationToken.None);\n        if (item.action.edit) {\n            yield bulkEditService.apply(ResourceEdit.convert(item.action.edit), { editor, label: item.action.title });\n        }\n        if (item.action.command) {\n            try {\n                yield commandService.executeCommand(item.action.command.id, ...(item.action.command.arguments || []));\n            }\n            catch (err) {\n                const message = asMessage(err);\n                notificationService.error(typeof message === 'string'\n                    ? message\n                    : nls.localize('applyCodeActionFailed', \"An unknown error occurred while applying the code action\"));\n            }\n        }\n    });\n}\nfunction asMessage(err) {\n    if (typeof err === 'string') {\n        return err;\n    }\n    else if (err instanceof Error && typeof err.message === 'string') {\n        return err.message;\n    }\n    else {\n        return undefined;\n    }\n}\nfunction triggerCodeActionsForEditorSelection(editor, notAvailableMessage, filter, autoApply) {\n    if (editor.hasModel()) {\n        const controller = QuickFixController.get(editor);\n        if (controller) {\n            controller.manualTriggerAtCurrentPosition(notAvailableMessage, filter, autoApply);\n        }\n    }\n}\nexport class QuickFixAction extends EditorAction {\n    constructor() {\n        super({\n            id: QuickFixAction.Id,\n            label: nls.localize('quickfix.trigger.label', \"Quick Fix...\"),\n            alias: 'Quick Fix...',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* CtrlCmd */ | 84 /* Period */,\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        return triggerCodeActionsForEditorSelection(editor, nls.localize('editor.action.quickFix.noneMessage', \"No code actions available\"), undefined, undefined);\n    }\n}\nQuickFixAction.Id = 'editor.action.quickFix';\nexport class CodeActionCommand extends EditorCommand {\n    constructor() {\n        super({\n            id: codeActionCommandId,\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\n            description: {\n                description: 'Trigger a code action',\n                args: [{ name: 'args', schema: argsSchema, }]\n            }\n        });\n    }\n    runEditorCommand(_accessor, editor, userArgs) {\n        const args = CodeActionCommandArgs.fromUser(userArgs, {\n            kind: CodeActionKind.Empty,\n            apply: \"ifSingle\" /* IfSingle */,\n        });\n        return triggerCodeActionsForEditorSelection(editor, typeof (userArgs === null || userArgs === void 0 ? void 0 : userArgs.kind) === 'string'\n            ? args.preferred\n                ? nls.localize('editor.action.codeAction.noneMessage.preferred.kind', \"No preferred code actions for '{0}' available\", userArgs.kind)\n                : nls.localize('editor.action.codeAction.noneMessage.kind', \"No code actions for '{0}' available\", userArgs.kind)\n            : args.preferred\n                ? nls.localize('editor.action.codeAction.noneMessage.preferred', \"No preferred code actions available\")\n                : nls.localize('editor.action.codeAction.noneMessage', \"No code actions available\"), {\n            include: args.kind,\n            includeSourceActions: true,\n            onlyIncludePreferredActions: args.preferred,\n        }, args.apply);\n    }\n}\nexport class RefactorAction extends EditorAction {\n    constructor() {\n        super({\n            id: refactorCommandId,\n            label: nls.localize('refactor.label', \"Refactor...\"),\n            alias: 'Refactor...',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 48 /* KeyR */,\n                mac: {\n                    primary: 256 /* WinCtrl */ | 1024 /* Shift */ | 48 /* KeyR */\n                },\n                weight: 100 /* EditorContrib */\n            },\n            contextMenuOpts: {\n                group: '1_modification',\n                order: 2,\n                when: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.Refactor)),\n            },\n            description: {\n                description: 'Refactor...',\n                args: [{ name: 'args', schema: argsSchema }]\n            }\n        });\n    }\n    run(_accessor, editor, userArgs) {\n        const args = CodeActionCommandArgs.fromUser(userArgs, {\n            kind: CodeActionKind.Refactor,\n            apply: \"never\" /* Never */\n        });\n        return triggerCodeActionsForEditorSelection(editor, typeof (userArgs === null || userArgs === void 0 ? void 0 : userArgs.kind) === 'string'\n            ? args.preferred\n                ? nls.localize('editor.action.refactor.noneMessage.preferred.kind', \"No preferred refactorings for '{0}' available\", userArgs.kind)\n                : nls.localize('editor.action.refactor.noneMessage.kind', \"No refactorings for '{0}' available\", userArgs.kind)\n            : args.preferred\n                ? nls.localize('editor.action.refactor.noneMessage.preferred', \"No preferred refactorings available\")\n                : nls.localize('editor.action.refactor.noneMessage', \"No refactorings available\"), {\n            include: CodeActionKind.Refactor.contains(args.kind) ? args.kind : CodeActionKind.None,\n            onlyIncludePreferredActions: args.preferred,\n        }, args.apply);\n    }\n}\nexport class SourceAction extends EditorAction {\n    constructor() {\n        super({\n            id: sourceActionCommandId,\n            label: nls.localize('source.label', \"Source Action...\"),\n            alias: 'Source Action...',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\n            contextMenuOpts: {\n                group: '1_modification',\n                order: 2.1,\n                when: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.Source)),\n            },\n            description: {\n                description: 'Source Action...',\n                args: [{ name: 'args', schema: argsSchema }]\n            }\n        });\n    }\n    run(_accessor, editor, userArgs) {\n        const args = CodeActionCommandArgs.fromUser(userArgs, {\n            kind: CodeActionKind.Source,\n            apply: \"never\" /* Never */\n        });\n        return triggerCodeActionsForEditorSelection(editor, typeof (userArgs === null || userArgs === void 0 ? void 0 : userArgs.kind) === 'string'\n            ? args.preferred\n                ? nls.localize('editor.action.source.noneMessage.preferred.kind', \"No preferred source actions for '{0}' available\", userArgs.kind)\n                : nls.localize('editor.action.source.noneMessage.kind', \"No source actions for '{0}' available\", userArgs.kind)\n            : args.preferred\n                ? nls.localize('editor.action.source.noneMessage.preferred', \"No preferred source actions available\")\n                : nls.localize('editor.action.source.noneMessage', \"No source actions available\"), {\n            include: CodeActionKind.Source.contains(args.kind) ? args.kind : CodeActionKind.None,\n            includeSourceActions: true,\n            onlyIncludePreferredActions: args.preferred,\n        }, args.apply);\n    }\n}\nexport class OrganizeImportsAction extends EditorAction {\n    constructor() {\n        super({\n            id: organizeImportsCommandId,\n            label: nls.localize('organizeImports.label', \"Organize Imports\"),\n            alias: 'Organize Imports',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.SourceOrganizeImports)),\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 1024 /* Shift */ | 512 /* Alt */ | 45 /* KeyO */,\n                weight: 100 /* EditorContrib */\n            },\n        });\n    }\n    run(_accessor, editor) {\n        return triggerCodeActionsForEditorSelection(editor, nls.localize('editor.action.organize.noneMessage', \"No organize imports action available\"), { include: CodeActionKind.SourceOrganizeImports, includeSourceActions: true }, \"ifSingle\" /* IfSingle */);\n    }\n}\nexport class FixAllAction extends EditorAction {\n    constructor() {\n        super({\n            id: fixAllCommandId,\n            label: nls.localize('fixAll.label', \"Fix All\"),\n            alias: 'Fix All',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.SourceFixAll))\n        });\n    }\n    run(_accessor, editor) {\n        return triggerCodeActionsForEditorSelection(editor, nls.localize('fixAll.noneMessage', \"No fix all action available\"), { include: CodeActionKind.SourceFixAll, includeSourceActions: true }, \"ifSingle\" /* IfSingle */);\n    }\n}\nexport class AutoFixAction extends EditorAction {\n    constructor() {\n        super({\n            id: AutoFixAction.Id,\n            label: nls.localize('autoFix.label', \"Auto Fix...\"),\n            alias: 'Auto Fix...',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.QuickFix)),\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* Alt */ | 1024 /* Shift */ | 84 /* Period */,\n                mac: {\n                    primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 84 /* Period */\n                },\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        return triggerCodeActionsForEditorSelection(editor, nls.localize('editor.action.autoFix.noneMessage', \"No auto fixes available\"), {\n            include: CodeActionKind.QuickFix,\n            onlyIncludePreferredActions: true\n        }, \"ifSingle\" /* IfSingle */);\n    }\n}\nAutoFixAction.Id = 'editor.action.autoFix';\n"]},"metadata":{},"sourceType":"module"}