{"ast":null,"code":"import { addDisposableListener, EventHelper, EventType, reset, trackFocus } from '../../dom.js';\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\nimport { EventType as TouchEventType, Gesture } from '../../touch.js';\nimport { renderLabelWithIcons } from '../iconLabel/iconLabels.js';\nimport { Color } from '../../../common/color.js';\nimport { Emitter } from '../../../common/event.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nimport { mixin } from '../../../common/objects.js';\nimport './button.css';\nconst defaultOptions = {\n  buttonBackground: Color.fromHex('#0E639C'),\n  buttonHoverBackground: Color.fromHex('#006BB3'),\n  buttonForeground: Color.white\n};\nexport class Button extends Disposable {\n  constructor(container, options) {\n    super();\n    this._onDidClick = this._register(new Emitter());\n    this.options = options || Object.create(null);\n    mixin(this.options, defaultOptions, false);\n    this.buttonForeground = this.options.buttonForeground;\n    this.buttonBackground = this.options.buttonBackground;\n    this.buttonHoverBackground = this.options.buttonHoverBackground;\n    this.buttonSecondaryForeground = this.options.buttonSecondaryForeground;\n    this.buttonSecondaryBackground = this.options.buttonSecondaryBackground;\n    this.buttonSecondaryHoverBackground = this.options.buttonSecondaryHoverBackground;\n    this.buttonBorder = this.options.buttonBorder;\n    this._element = document.createElement('a');\n\n    this._element.classList.add('monaco-button');\n\n    this._element.tabIndex = 0;\n\n    this._element.setAttribute('role', 'button');\n\n    container.appendChild(this._element);\n\n    this._register(Gesture.addTarget(this._element));\n\n    [EventType.CLICK, TouchEventType.Tap].forEach(eventType => {\n      this._register(addDisposableListener(this._element, eventType, e => {\n        if (!this.enabled) {\n          EventHelper.stop(e);\n          return;\n        }\n\n        this._onDidClick.fire(e);\n      }));\n    });\n\n    this._register(addDisposableListener(this._element, EventType.KEY_DOWN, e => {\n      const event = new StandardKeyboardEvent(e);\n      let eventHandled = false;\n\n      if (this.enabled && (event.equals(3\n      /* Enter */\n      ) || event.equals(10\n      /* Space */\n      ))) {\n        this._onDidClick.fire(e);\n\n        eventHandled = true;\n      } else if (event.equals(9\n      /* Escape */\n      )) {\n        this._element.blur();\n\n        eventHandled = true;\n      }\n\n      if (eventHandled) {\n        EventHelper.stop(event, true);\n      }\n    }));\n\n    this._register(addDisposableListener(this._element, EventType.MOUSE_OVER, e => {\n      if (!this._element.classList.contains('disabled')) {\n        this.setHoverBackground();\n      }\n    }));\n\n    this._register(addDisposableListener(this._element, EventType.MOUSE_OUT, e => {\n      this.applyStyles(); // restore standard styles\n    })); // Also set hover background when button is focused for feedback\n\n\n    this.focusTracker = this._register(trackFocus(this._element));\n\n    this._register(this.focusTracker.onDidFocus(() => this.setHoverBackground()));\n\n    this._register(this.focusTracker.onDidBlur(() => this.applyStyles())); // restore standard styles\n\n\n    this.applyStyles();\n  }\n\n  get onDidClick() {\n    return this._onDidClick.event;\n  }\n\n  setHoverBackground() {\n    let hoverBackground;\n\n    if (this.options.secondary) {\n      hoverBackground = this.buttonSecondaryHoverBackground ? this.buttonSecondaryHoverBackground.toString() : null;\n    } else {\n      hoverBackground = this.buttonHoverBackground ? this.buttonHoverBackground.toString() : null;\n    }\n\n    if (hoverBackground) {\n      this._element.style.backgroundColor = hoverBackground;\n    }\n  }\n\n  style(styles) {\n    this.buttonForeground = styles.buttonForeground;\n    this.buttonBackground = styles.buttonBackground;\n    this.buttonHoverBackground = styles.buttonHoverBackground;\n    this.buttonSecondaryForeground = styles.buttonSecondaryForeground;\n    this.buttonSecondaryBackground = styles.buttonSecondaryBackground;\n    this.buttonSecondaryHoverBackground = styles.buttonSecondaryHoverBackground;\n    this.buttonBorder = styles.buttonBorder;\n    this.applyStyles();\n  }\n\n  applyStyles() {\n    if (this._element) {\n      let background, foreground;\n\n      if (this.options.secondary) {\n        foreground = this.buttonSecondaryForeground ? this.buttonSecondaryForeground.toString() : '';\n        background = this.buttonSecondaryBackground ? this.buttonSecondaryBackground.toString() : '';\n      } else {\n        foreground = this.buttonForeground ? this.buttonForeground.toString() : '';\n        background = this.buttonBackground ? this.buttonBackground.toString() : '';\n      }\n\n      const border = this.buttonBorder ? this.buttonBorder.toString() : '';\n      this._element.style.color = foreground;\n      this._element.style.backgroundColor = background;\n      this._element.style.borderWidth = border ? '1px' : '';\n      this._element.style.borderStyle = border ? 'solid' : '';\n      this._element.style.borderColor = border;\n    }\n  }\n\n  get element() {\n    return this._element;\n  }\n\n  set label(value) {\n    this._element.classList.add('monaco-text-button');\n\n    if (this.options.supportIcons) {\n      reset(this._element, ...renderLabelWithIcons(value));\n    } else {\n      this._element.textContent = value;\n    }\n\n    if (typeof this.options.title === 'string') {\n      this._element.title = this.options.title;\n    } else if (this.options.title) {\n      this._element.title = value;\n    }\n  }\n\n  set enabled(value) {\n    if (value) {\n      this._element.classList.remove('disabled');\n\n      this._element.setAttribute('aria-disabled', String(false));\n\n      this._element.tabIndex = 0;\n    } else {\n      this._element.classList.add('disabled');\n\n      this._element.setAttribute('aria-disabled', String(true));\n    }\n  }\n\n  get enabled() {\n    return !this._element.classList.contains('disabled');\n  }\n\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/base/browser/ui/button/button.js"],"names":["addDisposableListener","EventHelper","EventType","reset","trackFocus","StandardKeyboardEvent","TouchEventType","Gesture","renderLabelWithIcons","Color","Emitter","Disposable","mixin","defaultOptions","buttonBackground","fromHex","buttonHoverBackground","buttonForeground","white","Button","constructor","container","options","_onDidClick","_register","Object","create","buttonSecondaryForeground","buttonSecondaryBackground","buttonSecondaryHoverBackground","buttonBorder","_element","document","createElement","classList","add","tabIndex","setAttribute","appendChild","addTarget","CLICK","Tap","forEach","eventType","e","enabled","stop","fire","KEY_DOWN","event","eventHandled","equals","blur","MOUSE_OVER","contains","setHoverBackground","MOUSE_OUT","applyStyles","focusTracker","onDidFocus","onDidBlur","onDidClick","hoverBackground","secondary","toString","style","backgroundColor","styles","background","foreground","border","color","borderWidth","borderStyle","borderColor","element","label","value","supportIcons","textContent","title","remove","String"],"mappings":"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","sourcesContent":["import { addDisposableListener, EventHelper, EventType, reset, trackFocus } from '../../dom.js';\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\nimport { EventType as TouchEventType, Gesture } from '../../touch.js';\nimport { renderLabelWithIcons } from '../iconLabel/iconLabels.js';\nimport { Color } from '../../../common/color.js';\nimport { Emitter } from '../../../common/event.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nimport { mixin } from '../../../common/objects.js';\nimport './button.css';\nconst defaultOptions = {\n    buttonBackground: Color.fromHex('#0E639C'),\n    buttonHoverBackground: Color.fromHex('#006BB3'),\n    buttonForeground: Color.white\n};\nexport class Button extends Disposable {\n    constructor(container, options) {\n        super();\n        this._onDidClick = this._register(new Emitter());\n        this.options = options || Object.create(null);\n        mixin(this.options, defaultOptions, false);\n        this.buttonForeground = this.options.buttonForeground;\n        this.buttonBackground = this.options.buttonBackground;\n        this.buttonHoverBackground = this.options.buttonHoverBackground;\n        this.buttonSecondaryForeground = this.options.buttonSecondaryForeground;\n        this.buttonSecondaryBackground = this.options.buttonSecondaryBackground;\n        this.buttonSecondaryHoverBackground = this.options.buttonSecondaryHoverBackground;\n        this.buttonBorder = this.options.buttonBorder;\n        this._element = document.createElement('a');\n        this._element.classList.add('monaco-button');\n        this._element.tabIndex = 0;\n        this._element.setAttribute('role', 'button');\n        container.appendChild(this._element);\n        this._register(Gesture.addTarget(this._element));\n        [EventType.CLICK, TouchEventType.Tap].forEach(eventType => {\n            this._register(addDisposableListener(this._element, eventType, e => {\n                if (!this.enabled) {\n                    EventHelper.stop(e);\n                    return;\n                }\n                this._onDidClick.fire(e);\n            }));\n        });\n        this._register(addDisposableListener(this._element, EventType.KEY_DOWN, e => {\n            const event = new StandardKeyboardEvent(e);\n            let eventHandled = false;\n            if (this.enabled && (event.equals(3 /* Enter */) || event.equals(10 /* Space */))) {\n                this._onDidClick.fire(e);\n                eventHandled = true;\n            }\n            else if (event.equals(9 /* Escape */)) {\n                this._element.blur();\n                eventHandled = true;\n            }\n            if (eventHandled) {\n                EventHelper.stop(event, true);\n            }\n        }));\n        this._register(addDisposableListener(this._element, EventType.MOUSE_OVER, e => {\n            if (!this._element.classList.contains('disabled')) {\n                this.setHoverBackground();\n            }\n        }));\n        this._register(addDisposableListener(this._element, EventType.MOUSE_OUT, e => {\n            this.applyStyles(); // restore standard styles\n        }));\n        // Also set hover background when button is focused for feedback\n        this.focusTracker = this._register(trackFocus(this._element));\n        this._register(this.focusTracker.onDidFocus(() => this.setHoverBackground()));\n        this._register(this.focusTracker.onDidBlur(() => this.applyStyles())); // restore standard styles\n        this.applyStyles();\n    }\n    get onDidClick() { return this._onDidClick.event; }\n    setHoverBackground() {\n        let hoverBackground;\n        if (this.options.secondary) {\n            hoverBackground = this.buttonSecondaryHoverBackground ? this.buttonSecondaryHoverBackground.toString() : null;\n        }\n        else {\n            hoverBackground = this.buttonHoverBackground ? this.buttonHoverBackground.toString() : null;\n        }\n        if (hoverBackground) {\n            this._element.style.backgroundColor = hoverBackground;\n        }\n    }\n    style(styles) {\n        this.buttonForeground = styles.buttonForeground;\n        this.buttonBackground = styles.buttonBackground;\n        this.buttonHoverBackground = styles.buttonHoverBackground;\n        this.buttonSecondaryForeground = styles.buttonSecondaryForeground;\n        this.buttonSecondaryBackground = styles.buttonSecondaryBackground;\n        this.buttonSecondaryHoverBackground = styles.buttonSecondaryHoverBackground;\n        this.buttonBorder = styles.buttonBorder;\n        this.applyStyles();\n    }\n    applyStyles() {\n        if (this._element) {\n            let background, foreground;\n            if (this.options.secondary) {\n                foreground = this.buttonSecondaryForeground ? this.buttonSecondaryForeground.toString() : '';\n                background = this.buttonSecondaryBackground ? this.buttonSecondaryBackground.toString() : '';\n            }\n            else {\n                foreground = this.buttonForeground ? this.buttonForeground.toString() : '';\n                background = this.buttonBackground ? this.buttonBackground.toString() : '';\n            }\n            const border = this.buttonBorder ? this.buttonBorder.toString() : '';\n            this._element.style.color = foreground;\n            this._element.style.backgroundColor = background;\n            this._element.style.borderWidth = border ? '1px' : '';\n            this._element.style.borderStyle = border ? 'solid' : '';\n            this._element.style.borderColor = border;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    set label(value) {\n        this._element.classList.add('monaco-text-button');\n        if (this.options.supportIcons) {\n            reset(this._element, ...renderLabelWithIcons(value));\n        }\n        else {\n            this._element.textContent = value;\n        }\n        if (typeof this.options.title === 'string') {\n            this._element.title = this.options.title;\n        }\n        else if (this.options.title) {\n            this._element.title = value;\n        }\n    }\n    set enabled(value) {\n        if (value) {\n            this._element.classList.remove('disabled');\n            this._element.setAttribute('aria-disabled', String(false));\n            this._element.tabIndex = 0;\n        }\n        else {\n            this._element.classList.add('disabled');\n            this._element.setAttribute('aria-disabled', String(true));\n        }\n    }\n    get enabled() {\n        return !this._element.classList.contains('disabled');\n    }\n}\n"]},"metadata":{},"sourceType":"module"}