{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { Emitter } from '../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../base/common/lifecycle.js';\nexport class TokenizationRegistry {\n  constructor() {\n    this._map = new Map();\n    this._factories = new Map();\n    this._onDidChange = new Emitter();\n    this.onDidChange = this._onDidChange.event;\n    this._colorMap = null;\n  }\n\n  fire(languages) {\n    this._onDidChange.fire({\n      changedLanguages: languages,\n      changedColorMap: false\n    });\n  }\n\n  register(language, support) {\n    this._map.set(language, support);\n\n    this.fire([language]);\n    return toDisposable(() => {\n      if (this._map.get(language) !== support) {\n        return;\n      }\n\n      this._map.delete(language);\n\n      this.fire([language]);\n    });\n  }\n\n  registerFactory(languageId, factory) {\n    var _a;\n\n    (_a = this._factories.get(languageId)) === null || _a === void 0 ? void 0 : _a.dispose();\n    const myData = new TokenizationSupportFactoryData(this, languageId, factory);\n\n    this._factories.set(languageId, myData);\n\n    return toDisposable(() => {\n      const v = this._factories.get(languageId);\n\n      if (!v || v !== myData) {\n        return;\n      }\n\n      this._factories.delete(languageId);\n\n      v.dispose();\n    });\n  }\n\n  getOrCreate(languageId) {\n    return __awaiter(this, void 0, void 0, function* () {\n      // check first if the support is already set\n      const tokenizationSupport = this.get(languageId);\n\n      if (tokenizationSupport) {\n        return tokenizationSupport;\n      }\n\n      const factory = this._factories.get(languageId);\n\n      if (!factory || factory.isResolved) {\n        // no factory or factory.resolve already finished\n        return null;\n      }\n\n      yield factory.resolve();\n      return this.get(languageId);\n    });\n  }\n\n  get(language) {\n    return this._map.get(language) || null;\n  }\n\n  isResolved(languageId) {\n    const tokenizationSupport = this.get(languageId);\n\n    if (tokenizationSupport) {\n      return true;\n    }\n\n    const factory = this._factories.get(languageId);\n\n    if (!factory || factory.isResolved) {\n      return true;\n    }\n\n    return false;\n  }\n\n  setColorMap(colorMap) {\n    this._colorMap = colorMap;\n\n    this._onDidChange.fire({\n      changedLanguages: Array.from(this._map.keys()),\n      changedColorMap: true\n    });\n  }\n\n  getColorMap() {\n    return this._colorMap;\n  }\n\n  getDefaultBackground() {\n    if (this._colorMap && this._colorMap.length > 2\n    /* DefaultBackground */\n    ) {\n      return this._colorMap[2\n      /* DefaultBackground */\n      ];\n    }\n\n    return null;\n  }\n\n}\n\nclass TokenizationSupportFactoryData extends Disposable {\n  constructor(_registry, _languageId, _factory) {\n    super();\n    this._registry = _registry;\n    this._languageId = _languageId;\n    this._factory = _factory;\n    this._isDisposed = false;\n    this._resolvePromise = null;\n    this._isResolved = false;\n  }\n\n  get isResolved() {\n    return this._isResolved;\n  }\n\n  dispose() {\n    this._isDisposed = true;\n    super.dispose();\n  }\n\n  resolve() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this._resolvePromise) {\n        this._resolvePromise = this._create();\n      }\n\n      return this._resolvePromise;\n    });\n  }\n\n  _create() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const value = yield Promise.resolve(this._factory.createTokenizationSupport());\n      this._isResolved = true;\n\n      if (value && !this._isDisposed) {\n        this._register(this._registry.register(this._languageId, value));\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/common/tokenizationRegistry.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Emitter","Disposable","toDisposable","TokenizationRegistry","constructor","_map","Map","_factories","_onDidChange","onDidChange","event","_colorMap","fire","languages","changedLanguages","changedColorMap","register","language","support","set","get","delete","registerFactory","languageId","factory","_a","dispose","myData","TokenizationSupportFactoryData","v","getOrCreate","tokenizationSupport","isResolved","setColorMap","colorMap","Array","from","keys","getColorMap","getDefaultBackground","length","_registry","_languageId","_factory","_isDisposed","_resolvePromise","_isResolved","_create","createTokenizationSupport","_register"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Emitter } from '../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../base/common/lifecycle.js';\nexport class TokenizationRegistry {\n    constructor() {\n        this._map = new Map();\n        this._factories = new Map();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._colorMap = null;\n    }\n    fire(languages) {\n        this._onDidChange.fire({\n            changedLanguages: languages,\n            changedColorMap: false\n        });\n    }\n    register(language, support) {\n        this._map.set(language, support);\n        this.fire([language]);\n        return toDisposable(() => {\n            if (this._map.get(language) !== support) {\n                return;\n            }\n            this._map.delete(language);\n            this.fire([language]);\n        });\n    }\n    registerFactory(languageId, factory) {\n        var _a;\n        (_a = this._factories.get(languageId)) === null || _a === void 0 ? void 0 : _a.dispose();\n        const myData = new TokenizationSupportFactoryData(this, languageId, factory);\n        this._factories.set(languageId, myData);\n        return toDisposable(() => {\n            const v = this._factories.get(languageId);\n            if (!v || v !== myData) {\n                return;\n            }\n            this._factories.delete(languageId);\n            v.dispose();\n        });\n    }\n    getOrCreate(languageId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // check first if the support is already set\n            const tokenizationSupport = this.get(languageId);\n            if (tokenizationSupport) {\n                return tokenizationSupport;\n            }\n            const factory = this._factories.get(languageId);\n            if (!factory || factory.isResolved) {\n                // no factory or factory.resolve already finished\n                return null;\n            }\n            yield factory.resolve();\n            return this.get(languageId);\n        });\n    }\n    get(language) {\n        return (this._map.get(language) || null);\n    }\n    isResolved(languageId) {\n        const tokenizationSupport = this.get(languageId);\n        if (tokenizationSupport) {\n            return true;\n        }\n        const factory = this._factories.get(languageId);\n        if (!factory || factory.isResolved) {\n            return true;\n        }\n        return false;\n    }\n    setColorMap(colorMap) {\n        this._colorMap = colorMap;\n        this._onDidChange.fire({\n            changedLanguages: Array.from(this._map.keys()),\n            changedColorMap: true\n        });\n    }\n    getColorMap() {\n        return this._colorMap;\n    }\n    getDefaultBackground() {\n        if (this._colorMap && this._colorMap.length > 2 /* DefaultBackground */) {\n            return this._colorMap[2 /* DefaultBackground */];\n        }\n        return null;\n    }\n}\nclass TokenizationSupportFactoryData extends Disposable {\n    constructor(_registry, _languageId, _factory) {\n        super();\n        this._registry = _registry;\n        this._languageId = _languageId;\n        this._factory = _factory;\n        this._isDisposed = false;\n        this._resolvePromise = null;\n        this._isResolved = false;\n    }\n    get isResolved() {\n        return this._isResolved;\n    }\n    dispose() {\n        this._isDisposed = true;\n        super.dispose();\n    }\n    resolve() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._resolvePromise) {\n                this._resolvePromise = this._create();\n            }\n            return this._resolvePromise;\n        });\n    }\n    _create() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const value = yield Promise.resolve(this._factory.createTokenizationSupport());\n            this._isResolved = true;\n            if (value && !this._isDisposed) {\n                this._register(this._registry.register(this._languageId, value));\n            }\n        });\n    }\n}\n"]},"metadata":{},"sourceType":"module"}