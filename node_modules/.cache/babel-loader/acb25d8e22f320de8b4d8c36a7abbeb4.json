{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nvar _a;\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport './ghostText.css';\nimport { applyFontInfo } from '../../../browser/config/domFontInfo.js';\nimport { EditorFontLigatures } from '../../../common/config/editorOptions.js';\nimport { LineTokens } from '../../../common/tokens/lineTokens.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { createStringBuilder } from '../../../common/core/stringBuilder.js';\nimport { ILanguageService } from '../../../common/services/language.js';\nimport { ghostTextBackground, ghostTextBorder, ghostTextForeground } from '../../../common/core/editorColorRegistry.js';\nimport { LineDecoration } from '../../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nconst ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('editorGhostText', {\n  createHTML: value => value\n});\nlet GhostTextWidget = class GhostTextWidget extends Disposable {\n  constructor(editor, model, instantiationService, languageService) {\n    super();\n    this.editor = editor;\n    this.model = model;\n    this.instantiationService = instantiationService;\n    this.languageService = languageService;\n    this.disposed = false;\n    this.partsWidget = this._register(this.instantiationService.createInstance(DecorationsWidget, this.editor));\n    this.additionalLinesWidget = this._register(new AdditionalLinesWidget(this.editor, this.languageService.languageIdCodec));\n    this.viewMoreContentWidget = undefined;\n\n    this._register(this.editor.onDidChangeConfiguration(e => {\n      if (e.hasChanged(29\n      /* disableMonospaceOptimizations */\n      ) || e.hasChanged(105\n      /* stopRenderingLineAfter */\n      ) || e.hasChanged(88\n      /* renderWhitespace */\n      ) || e.hasChanged(83\n      /* renderControlCharacters */\n      ) || e.hasChanged(45\n      /* fontLigatures */\n      ) || e.hasChanged(44\n      /* fontInfo */\n      ) || e.hasChanged(59\n      /* lineHeight */\n      )) {\n        this.update();\n      }\n    }));\n\n    this._register(toDisposable(() => {\n      var _a;\n\n      this.disposed = true;\n      this.update();\n      (_a = this.viewMoreContentWidget) === null || _a === void 0 ? void 0 : _a.dispose();\n      this.viewMoreContentWidget = undefined;\n    }));\n\n    this._register(model.onDidChange(() => {\n      this.update();\n    }));\n\n    this.update();\n  }\n\n  shouldShowHoverAtViewZone(viewZoneId) {\n    return this.additionalLinesWidget.viewZoneId === viewZoneId;\n  }\n\n  update() {\n    var _a;\n\n    const ghostText = this.model.ghostText;\n\n    if (!this.editor.hasModel() || !ghostText || this.disposed) {\n      this.partsWidget.clear();\n      this.additionalLinesWidget.clear();\n      return;\n    }\n\n    const inlineTexts = new Array();\n    const additionalLines = new Array();\n\n    function addToAdditionalLines(lines, className) {\n      if (additionalLines.length > 0) {\n        const lastLine = additionalLines[additionalLines.length - 1];\n\n        if (className) {\n          lastLine.decorations.push(new LineDecoration(lastLine.content.length + 1, lastLine.content.length + 1 + lines[0].length, className, 0\n          /* Regular */\n          ));\n        }\n\n        lastLine.content += lines[0];\n        lines = lines.slice(1);\n      }\n\n      for (const line of lines) {\n        additionalLines.push({\n          content: line,\n          decorations: className ? [new LineDecoration(1, line.length + 1, className, 0\n          /* Regular */\n          )] : []\n        });\n      }\n    }\n\n    const textBufferLine = this.editor.getModel().getLineContent(ghostText.lineNumber);\n    this.editor.getModel().getLineTokens(ghostText.lineNumber);\n    let hiddenTextStartColumn = undefined;\n    let lastIdx = 0;\n\n    for (const part of ghostText.parts) {\n      let lines = part.lines;\n\n      if (hiddenTextStartColumn === undefined) {\n        inlineTexts.push({\n          column: part.column,\n          text: lines[0],\n          preview: part.preview\n        });\n        lines = lines.slice(1);\n      } else {\n        addToAdditionalLines([textBufferLine.substring(lastIdx, part.column - 1)], undefined);\n      }\n\n      if (lines.length > 0) {\n        addToAdditionalLines(lines, 'ghost-text');\n\n        if (hiddenTextStartColumn === undefined && part.column <= textBufferLine.length) {\n          hiddenTextStartColumn = part.column;\n        }\n      }\n\n      lastIdx = part.column - 1;\n    }\n\n    if (hiddenTextStartColumn !== undefined) {\n      addToAdditionalLines([textBufferLine.substring(lastIdx)], undefined);\n    }\n\n    this.partsWidget.setParts(ghostText.lineNumber, inlineTexts, hiddenTextStartColumn !== undefined ? {\n      column: hiddenTextStartColumn,\n      length: textBufferLine.length + 1 - hiddenTextStartColumn\n    } : undefined);\n    this.additionalLinesWidget.updateLines(ghostText.lineNumber, additionalLines, ghostText.additionalReservedLineCount);\n\n    if (ghostText.parts.some(p => p.lines.length < 0)) {\n      // Not supported at the moment, condition is always false.\n      this.viewMoreContentWidget = this.renderViewMoreLines(new Position(ghostText.lineNumber, this.editor.getModel().getLineMaxColumn(ghostText.lineNumber)), '', 0);\n    } else {\n      (_a = this.viewMoreContentWidget) === null || _a === void 0 ? void 0 : _a.dispose();\n      this.viewMoreContentWidget = undefined;\n    }\n  }\n\n  renderViewMoreLines(position, firstLineText, remainingLinesLength) {\n    const fontInfo = this.editor.getOption(44\n    /* fontInfo */\n    );\n    const domNode = document.createElement('div');\n    domNode.className = 'suggest-preview-additional-widget';\n    applyFontInfo(domNode, fontInfo);\n    const spacer = document.createElement('span');\n    spacer.className = 'content-spacer';\n    spacer.append(firstLineText);\n    domNode.append(spacer);\n    const newline = document.createElement('span');\n    newline.className = 'content-newline suggest-preview-text';\n    newline.append('⏎  ');\n    domNode.append(newline);\n    const disposableStore = new DisposableStore();\n    const button = document.createElement('div');\n    button.className = 'button suggest-preview-text';\n    button.append(`+${remainingLinesLength} lines…`);\n    disposableStore.add(dom.addStandardDisposableListener(button, 'mousedown', e => {\n      var _a;\n\n      (_a = this.model) === null || _a === void 0 ? void 0 : _a.setExpanded(true);\n      e.preventDefault();\n      this.editor.focus();\n    }));\n    domNode.append(button);\n    return new ViewMoreLinesContentWidget(this.editor, position, domNode, disposableStore);\n  }\n\n};\nGhostTextWidget = __decorate([__param(2, IInstantiationService), __param(3, ILanguageService)], GhostTextWidget);\nexport { GhostTextWidget };\n\nclass DecorationsWidget {\n  constructor(editor) {\n    this.editor = editor;\n    this.decorationIds = [];\n    this.disposableStore = new DisposableStore();\n  }\n\n  dispose() {\n    this.clear();\n    this.disposableStore.dispose();\n  }\n\n  clear() {\n    this.editor.deltaDecorations(this.decorationIds, []);\n    this.disposableStore.clear();\n  }\n\n  setParts(lineNumber, parts, hiddenText) {\n    this.disposableStore.clear();\n    const textModel = this.editor.getModel();\n\n    if (!textModel) {\n      return;\n    }\n\n    const hiddenTextDecorations = new Array();\n\n    if (hiddenText) {\n      hiddenTextDecorations.push({\n        range: Range.fromPositions(new Position(lineNumber, hiddenText.column), new Position(lineNumber, hiddenText.column + hiddenText.length)),\n        options: {\n          inlineClassName: 'ghost-text-hidden',\n          description: 'ghost-text-hidden'\n        }\n      });\n    }\n\n    this.decorationIds = this.editor.deltaDecorations(this.decorationIds, parts.map(p => {\n      return {\n        range: Range.fromPositions(new Position(lineNumber, p.column)),\n        options: {\n          description: 'ghost-text',\n          after: {\n            content: p.text,\n            inlineClassName: p.preview ? 'ghost-text-decoration-preview' : 'ghost-text-decoration'\n          },\n          showIfCollapsed: true\n        }\n      };\n    }).concat(hiddenTextDecorations));\n  }\n\n}\n\nclass AdditionalLinesWidget {\n  constructor(editor, languageIdCodec) {\n    this.editor = editor;\n    this.languageIdCodec = languageIdCodec;\n    this._viewZoneId = undefined;\n  }\n\n  get viewZoneId() {\n    return this._viewZoneId;\n  }\n\n  dispose() {\n    this.clear();\n  }\n\n  clear() {\n    this.editor.changeViewZones(changeAccessor => {\n      if (this._viewZoneId) {\n        changeAccessor.removeZone(this._viewZoneId);\n        this._viewZoneId = undefined;\n      }\n    });\n  }\n\n  updateLines(lineNumber, additionalLines, minReservedLineCount) {\n    const textModel = this.editor.getModel();\n\n    if (!textModel) {\n      return;\n    }\n\n    const {\n      tabSize\n    } = textModel.getOptions();\n    this.editor.changeViewZones(changeAccessor => {\n      if (this._viewZoneId) {\n        changeAccessor.removeZone(this._viewZoneId);\n        this._viewZoneId = undefined;\n      }\n\n      const heightInLines = Math.max(additionalLines.length, minReservedLineCount);\n\n      if (heightInLines > 0) {\n        const domNode = document.createElement('div');\n        renderLines(domNode, tabSize, additionalLines, this.editor.getOptions(), this.languageIdCodec);\n        this._viewZoneId = changeAccessor.addZone({\n          afterLineNumber: lineNumber,\n          heightInLines: heightInLines,\n          domNode,\n          afterColumnAffinity: 1\n          /* Right */\n\n        });\n      }\n    });\n  }\n\n}\n\nfunction renderLines(domNode, tabSize, lines, opts, languageIdCodec) {\n  const disableMonospaceOptimizations = opts.get(29\n  /* disableMonospaceOptimizations */\n  );\n  const stopRenderingLineAfter = opts.get(105\n  /* stopRenderingLineAfter */\n  ); // To avoid visual confusion, we don't want to render visible whitespace\n\n  const renderWhitespace = 'none';\n  const renderControlCharacters = opts.get(83\n  /* renderControlCharacters */\n  );\n  const fontLigatures = opts.get(45\n  /* fontLigatures */\n  );\n  const fontInfo = opts.get(44\n  /* fontInfo */\n  );\n  const lineHeight = opts.get(59\n  /* lineHeight */\n  );\n  const sb = createStringBuilder(10000);\n  sb.appendASCIIString('<div class=\"suggest-preview-text\">');\n\n  for (let i = 0, len = lines.length; i < len; i++) {\n    const lineData = lines[i];\n    const line = lineData.content;\n    sb.appendASCIIString('<div class=\"view-line');\n    sb.appendASCIIString('\" style=\"top:');\n    sb.appendASCIIString(String(i * lineHeight));\n    sb.appendASCIIString('px;width:1000000px;\">');\n    const isBasicASCII = strings.isBasicASCII(line);\n    const containsRTL = strings.containsRTL(line);\n    const lineTokens = LineTokens.createEmpty(line, languageIdCodec);\n    renderViewLine(new RenderLineInput(fontInfo.isMonospace && !disableMonospaceOptimizations, fontInfo.canUseHalfwidthRightwardsArrow, line, false, isBasicASCII, containsRTL, 0, lineTokens, lineData.decorations, tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures !== EditorFontLigatures.OFF, null), sb);\n    sb.appendASCIIString('</div>');\n  }\n\n  sb.appendASCIIString('</div>');\n  applyFontInfo(domNode, fontInfo);\n  const html = sb.build();\n  const trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\n  domNode.innerHTML = trustedhtml;\n}\n\nclass ViewMoreLinesContentWidget extends Disposable {\n  constructor(editor, position, domNode, disposableStore) {\n    super();\n    this.editor = editor;\n    this.position = position;\n    this.domNode = domNode;\n    this.allowEditorOverflow = false;\n    this.suppressMouseDown = false;\n\n    this._register(disposableStore);\n\n    this._register(toDisposable(() => {\n      this.editor.removeContentWidget(this);\n    }));\n\n    this.editor.addContentWidget(this);\n  }\n\n  getId() {\n    return 'editor.widget.viewMoreLinesWidget';\n  }\n\n  getDomNode() {\n    return this.domNode;\n  }\n\n  getPosition() {\n    return {\n      position: this.position,\n      preference: [0\n      /* EXACT */\n      ]\n    };\n  }\n\n}\n\nregisterThemingParticipant((theme, collector) => {\n  const foreground = theme.getColor(ghostTextForeground);\n\n  if (foreground) {\n    // `!important` ensures that other decorations don't cause a style conflict (#132017).\n    collector.addRule(`.monaco-editor .ghost-text-decoration { color: ${foreground.toString()} !important; }`);\n    collector.addRule(`.monaco-editor .ghost-text-decoration-preview { color: ${foreground.toString()} !important; }`);\n    collector.addRule(`.monaco-editor .suggest-preview-text .ghost-text { color: ${foreground.toString()} !important; }`);\n  }\n\n  const background = theme.getColor(ghostTextBackground);\n\n  if (background) {\n    collector.addRule(`.monaco-editor .ghost-text-decoration { background-color: ${background.toString()}; }`);\n    collector.addRule(`.monaco-editor .ghost-text-decoration-preview { background-color: ${background.toString()}; }`);\n    collector.addRule(`.monaco-editor .suggest-preview-text .ghost-text { background-color: ${background.toString()}; }`);\n  }\n\n  const border = theme.getColor(ghostTextBorder);\n\n  if (border) {\n    collector.addRule(`.monaco-editor .suggest-preview-text .ghost-text { border: 1px solid ${border}; }`);\n    collector.addRule(`.monaco-editor .ghost-text-decoration { border: 1px solid ${border}; }`);\n    collector.addRule(`.monaco-editor .ghost-text-decoration-preview { border: 1px solid ${border}; }`);\n  }\n});","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostTextWidget.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","_a","dom","Disposable","DisposableStore","toDisposable","strings","applyFontInfo","EditorFontLigatures","LineTokens","Position","Range","createStringBuilder","ILanguageService","ghostTextBackground","ghostTextBorder","ghostTextForeground","LineDecoration","RenderLineInput","renderViewLine","IInstantiationService","registerThemingParticipant","ttPolicy","window","trustedTypes","createPolicy","createHTML","value","GhostTextWidget","constructor","editor","model","instantiationService","languageService","disposed","partsWidget","_register","createInstance","DecorationsWidget","additionalLinesWidget","AdditionalLinesWidget","languageIdCodec","viewMoreContentWidget","undefined","onDidChangeConfiguration","e","hasChanged","update","dispose","onDidChange","shouldShowHoverAtViewZone","viewZoneId","ghostText","hasModel","clear","inlineTexts","Array","additionalLines","addToAdditionalLines","lines","className","lastLine","decorations","push","content","slice","line","textBufferLine","getModel","getLineContent","lineNumber","getLineTokens","hiddenTextStartColumn","lastIdx","part","parts","column","text","preview","substring","setParts","updateLines","additionalReservedLineCount","some","p","renderViewMoreLines","getLineMaxColumn","position","firstLineText","remainingLinesLength","fontInfo","getOption","domNode","document","createElement","spacer","append","newline","disposableStore","button","add","addStandardDisposableListener","setExpanded","preventDefault","focus","ViewMoreLinesContentWidget","decorationIds","deltaDecorations","hiddenText","textModel","hiddenTextDecorations","range","fromPositions","options","inlineClassName","description","map","after","showIfCollapsed","concat","_viewZoneId","changeViewZones","changeAccessor","removeZone","minReservedLineCount","tabSize","getOptions","heightInLines","Math","max","renderLines","addZone","afterLineNumber","afterColumnAffinity","opts","disableMonospaceOptimizations","get","stopRenderingLineAfter","renderWhitespace","renderControlCharacters","fontLigatures","lineHeight","sb","appendASCIIString","len","lineData","String","isBasicASCII","containsRTL","lineTokens","createEmpty","isMonospace","canUseHalfwidthRightwardsArrow","spaceWidth","middotWidth","wsmiddotWidth","OFF","html","build","trustedhtml","innerHTML","allowEditorOverflow","suppressMouseDown","removeContentWidget","addContentWidget","getId","getDomNode","getPosition","preference","theme","collector","foreground","getColor","addRule","toString","background","border"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar _a;\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport './ghostText.css';\nimport { applyFontInfo } from '../../../browser/config/domFontInfo.js';\nimport { EditorFontLigatures } from '../../../common/config/editorOptions.js';\nimport { LineTokens } from '../../../common/tokens/lineTokens.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { createStringBuilder } from '../../../common/core/stringBuilder.js';\nimport { ILanguageService } from '../../../common/services/language.js';\nimport { ghostTextBackground, ghostTextBorder, ghostTextForeground } from '../../../common/core/editorColorRegistry.js';\nimport { LineDecoration } from '../../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nconst ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('editorGhostText', { createHTML: value => value });\nlet GhostTextWidget = class GhostTextWidget extends Disposable {\n    constructor(editor, model, instantiationService, languageService) {\n        super();\n        this.editor = editor;\n        this.model = model;\n        this.instantiationService = instantiationService;\n        this.languageService = languageService;\n        this.disposed = false;\n        this.partsWidget = this._register(this.instantiationService.createInstance(DecorationsWidget, this.editor));\n        this.additionalLinesWidget = this._register(new AdditionalLinesWidget(this.editor, this.languageService.languageIdCodec));\n        this.viewMoreContentWidget = undefined;\n        this._register(this.editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(29 /* disableMonospaceOptimizations */)\n                || e.hasChanged(105 /* stopRenderingLineAfter */)\n                || e.hasChanged(88 /* renderWhitespace */)\n                || e.hasChanged(83 /* renderControlCharacters */)\n                || e.hasChanged(45 /* fontLigatures */)\n                || e.hasChanged(44 /* fontInfo */)\n                || e.hasChanged(59 /* lineHeight */)) {\n                this.update();\n            }\n        }));\n        this._register(toDisposable(() => {\n            var _a;\n            this.disposed = true;\n            this.update();\n            (_a = this.viewMoreContentWidget) === null || _a === void 0 ? void 0 : _a.dispose();\n            this.viewMoreContentWidget = undefined;\n        }));\n        this._register(model.onDidChange(() => {\n            this.update();\n        }));\n        this.update();\n    }\n    shouldShowHoverAtViewZone(viewZoneId) {\n        return (this.additionalLinesWidget.viewZoneId === viewZoneId);\n    }\n    update() {\n        var _a;\n        const ghostText = this.model.ghostText;\n        if (!this.editor.hasModel() || !ghostText || this.disposed) {\n            this.partsWidget.clear();\n            this.additionalLinesWidget.clear();\n            return;\n        }\n        const inlineTexts = new Array();\n        const additionalLines = new Array();\n        function addToAdditionalLines(lines, className) {\n            if (additionalLines.length > 0) {\n                const lastLine = additionalLines[additionalLines.length - 1];\n                if (className) {\n                    lastLine.decorations.push(new LineDecoration(lastLine.content.length + 1, lastLine.content.length + 1 + lines[0].length, className, 0 /* Regular */));\n                }\n                lastLine.content += lines[0];\n                lines = lines.slice(1);\n            }\n            for (const line of lines) {\n                additionalLines.push({\n                    content: line,\n                    decorations: className ? [new LineDecoration(1, line.length + 1, className, 0 /* Regular */)] : []\n                });\n            }\n        }\n        const textBufferLine = this.editor.getModel().getLineContent(ghostText.lineNumber);\n        this.editor.getModel().getLineTokens(ghostText.lineNumber);\n        let hiddenTextStartColumn = undefined;\n        let lastIdx = 0;\n        for (const part of ghostText.parts) {\n            let lines = part.lines;\n            if (hiddenTextStartColumn === undefined) {\n                inlineTexts.push({\n                    column: part.column,\n                    text: lines[0],\n                    preview: part.preview,\n                });\n                lines = lines.slice(1);\n            }\n            else {\n                addToAdditionalLines([textBufferLine.substring(lastIdx, part.column - 1)], undefined);\n            }\n            if (lines.length > 0) {\n                addToAdditionalLines(lines, 'ghost-text');\n                if (hiddenTextStartColumn === undefined && part.column <= textBufferLine.length) {\n                    hiddenTextStartColumn = part.column;\n                }\n            }\n            lastIdx = part.column - 1;\n        }\n        if (hiddenTextStartColumn !== undefined) {\n            addToAdditionalLines([textBufferLine.substring(lastIdx)], undefined);\n        }\n        this.partsWidget.setParts(ghostText.lineNumber, inlineTexts, hiddenTextStartColumn !== undefined ? { column: hiddenTextStartColumn, length: textBufferLine.length + 1 - hiddenTextStartColumn } : undefined);\n        this.additionalLinesWidget.updateLines(ghostText.lineNumber, additionalLines, ghostText.additionalReservedLineCount);\n        if (ghostText.parts.some(p => p.lines.length < 0)) {\n            // Not supported at the moment, condition is always false.\n            this.viewMoreContentWidget = this.renderViewMoreLines(new Position(ghostText.lineNumber, this.editor.getModel().getLineMaxColumn(ghostText.lineNumber)), '', 0);\n        }\n        else {\n            (_a = this.viewMoreContentWidget) === null || _a === void 0 ? void 0 : _a.dispose();\n            this.viewMoreContentWidget = undefined;\n        }\n    }\n    renderViewMoreLines(position, firstLineText, remainingLinesLength) {\n        const fontInfo = this.editor.getOption(44 /* fontInfo */);\n        const domNode = document.createElement('div');\n        domNode.className = 'suggest-preview-additional-widget';\n        applyFontInfo(domNode, fontInfo);\n        const spacer = document.createElement('span');\n        spacer.className = 'content-spacer';\n        spacer.append(firstLineText);\n        domNode.append(spacer);\n        const newline = document.createElement('span');\n        newline.className = 'content-newline suggest-preview-text';\n        newline.append('⏎  ');\n        domNode.append(newline);\n        const disposableStore = new DisposableStore();\n        const button = document.createElement('div');\n        button.className = 'button suggest-preview-text';\n        button.append(`+${remainingLinesLength} lines…`);\n        disposableStore.add(dom.addStandardDisposableListener(button, 'mousedown', (e) => {\n            var _a;\n            (_a = this.model) === null || _a === void 0 ? void 0 : _a.setExpanded(true);\n            e.preventDefault();\n            this.editor.focus();\n        }));\n        domNode.append(button);\n        return new ViewMoreLinesContentWidget(this.editor, position, domNode, disposableStore);\n    }\n};\nGhostTextWidget = __decorate([\n    __param(2, IInstantiationService),\n    __param(3, ILanguageService)\n], GhostTextWidget);\nexport { GhostTextWidget };\nclass DecorationsWidget {\n    constructor(editor) {\n        this.editor = editor;\n        this.decorationIds = [];\n        this.disposableStore = new DisposableStore();\n    }\n    dispose() {\n        this.clear();\n        this.disposableStore.dispose();\n    }\n    clear() {\n        this.editor.deltaDecorations(this.decorationIds, []);\n        this.disposableStore.clear();\n    }\n    setParts(lineNumber, parts, hiddenText) {\n        this.disposableStore.clear();\n        const textModel = this.editor.getModel();\n        if (!textModel) {\n            return;\n        }\n        const hiddenTextDecorations = new Array();\n        if (hiddenText) {\n            hiddenTextDecorations.push({\n                range: Range.fromPositions(new Position(lineNumber, hiddenText.column), new Position(lineNumber, hiddenText.column + hiddenText.length)),\n                options: {\n                    inlineClassName: 'ghost-text-hidden',\n                    description: 'ghost-text-hidden'\n                }\n            });\n        }\n        this.decorationIds = this.editor.deltaDecorations(this.decorationIds, parts.map(p => {\n            return ({\n                range: Range.fromPositions(new Position(lineNumber, p.column)),\n                options: {\n                    description: 'ghost-text',\n                    after: { content: p.text, inlineClassName: p.preview ? 'ghost-text-decoration-preview' : 'ghost-text-decoration' },\n                    showIfCollapsed: true,\n                }\n            });\n        }).concat(hiddenTextDecorations));\n    }\n}\nclass AdditionalLinesWidget {\n    constructor(editor, languageIdCodec) {\n        this.editor = editor;\n        this.languageIdCodec = languageIdCodec;\n        this._viewZoneId = undefined;\n    }\n    get viewZoneId() { return this._viewZoneId; }\n    dispose() {\n        this.clear();\n    }\n    clear() {\n        this.editor.changeViewZones((changeAccessor) => {\n            if (this._viewZoneId) {\n                changeAccessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n            }\n        });\n    }\n    updateLines(lineNumber, additionalLines, minReservedLineCount) {\n        const textModel = this.editor.getModel();\n        if (!textModel) {\n            return;\n        }\n        const { tabSize } = textModel.getOptions();\n        this.editor.changeViewZones((changeAccessor) => {\n            if (this._viewZoneId) {\n                changeAccessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n            }\n            const heightInLines = Math.max(additionalLines.length, minReservedLineCount);\n            if (heightInLines > 0) {\n                const domNode = document.createElement('div');\n                renderLines(domNode, tabSize, additionalLines, this.editor.getOptions(), this.languageIdCodec);\n                this._viewZoneId = changeAccessor.addZone({\n                    afterLineNumber: lineNumber,\n                    heightInLines: heightInLines,\n                    domNode,\n                    afterColumnAffinity: 1 /* Right */\n                });\n            }\n        });\n    }\n}\nfunction renderLines(domNode, tabSize, lines, opts, languageIdCodec) {\n    const disableMonospaceOptimizations = opts.get(29 /* disableMonospaceOptimizations */);\n    const stopRenderingLineAfter = opts.get(105 /* stopRenderingLineAfter */);\n    // To avoid visual confusion, we don't want to render visible whitespace\n    const renderWhitespace = 'none';\n    const renderControlCharacters = opts.get(83 /* renderControlCharacters */);\n    const fontLigatures = opts.get(45 /* fontLigatures */);\n    const fontInfo = opts.get(44 /* fontInfo */);\n    const lineHeight = opts.get(59 /* lineHeight */);\n    const sb = createStringBuilder(10000);\n    sb.appendASCIIString('<div class=\"suggest-preview-text\">');\n    for (let i = 0, len = lines.length; i < len; i++) {\n        const lineData = lines[i];\n        const line = lineData.content;\n        sb.appendASCIIString('<div class=\"view-line');\n        sb.appendASCIIString('\" style=\"top:');\n        sb.appendASCIIString(String(i * lineHeight));\n        sb.appendASCIIString('px;width:1000000px;\">');\n        const isBasicASCII = strings.isBasicASCII(line);\n        const containsRTL = strings.containsRTL(line);\n        const lineTokens = LineTokens.createEmpty(line, languageIdCodec);\n        renderViewLine(new RenderLineInput((fontInfo.isMonospace && !disableMonospaceOptimizations), fontInfo.canUseHalfwidthRightwardsArrow, line, false, isBasicASCII, containsRTL, 0, lineTokens, lineData.decorations, tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures !== EditorFontLigatures.OFF, null), sb);\n        sb.appendASCIIString('</div>');\n    }\n    sb.appendASCIIString('</div>');\n    applyFontInfo(domNode, fontInfo);\n    const html = sb.build();\n    const trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\n    domNode.innerHTML = trustedhtml;\n}\nclass ViewMoreLinesContentWidget extends Disposable {\n    constructor(editor, position, domNode, disposableStore) {\n        super();\n        this.editor = editor;\n        this.position = position;\n        this.domNode = domNode;\n        this.allowEditorOverflow = false;\n        this.suppressMouseDown = false;\n        this._register(disposableStore);\n        this._register(toDisposable(() => {\n            this.editor.removeContentWidget(this);\n        }));\n        this.editor.addContentWidget(this);\n    }\n    getId() {\n        return 'editor.widget.viewMoreLinesWidget';\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    getPosition() {\n        return {\n            position: this.position,\n            preference: [0 /* EXACT */]\n        };\n    }\n}\nregisterThemingParticipant((theme, collector) => {\n    const foreground = theme.getColor(ghostTextForeground);\n    if (foreground) {\n        // `!important` ensures that other decorations don't cause a style conflict (#132017).\n        collector.addRule(`.monaco-editor .ghost-text-decoration { color: ${foreground.toString()} !important; }`);\n        collector.addRule(`.monaco-editor .ghost-text-decoration-preview { color: ${foreground.toString()} !important; }`);\n        collector.addRule(`.monaco-editor .suggest-preview-text .ghost-text { color: ${foreground.toString()} !important; }`);\n    }\n    const background = theme.getColor(ghostTextBackground);\n    if (background) {\n        collector.addRule(`.monaco-editor .ghost-text-decoration { background-color: ${background.toString()}; }`);\n        collector.addRule(`.monaco-editor .ghost-text-decoration-preview { background-color: ${background.toString()}; }`);\n        collector.addRule(`.monaco-editor .suggest-preview-text .ghost-text { background-color: ${background.toString()}; }`);\n    }\n    const border = theme.getColor(ghostTextBorder);\n    if (border) {\n        collector.addRule(`.monaco-editor .suggest-preview-text .ghost-text { border: 1px solid ${border}; }`);\n        collector.addRule(`.monaco-editor .ghost-text-decoration { border: 1px solid ${border}; }`);\n        collector.addRule(`.monaco-editor .ghost-text-decoration-preview { border: 1px solid ${border}; }`);\n    }\n});\n"]},"metadata":{},"sourceType":"module"}