{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nexport class FormattingEdit {\n  static _handleEolEdits(editor, edits) {\n    let newEol = undefined;\n    let singleEdits = [];\n\n    for (let edit of edits) {\n      if (typeof edit.eol === 'number') {\n        newEol = edit.eol;\n      }\n\n      if (edit.range && typeof edit.text === 'string') {\n        singleEdits.push(edit);\n      }\n    }\n\n    if (typeof newEol === 'number') {\n      if (editor.hasModel()) {\n        editor.getModel().pushEOL(newEol);\n      }\n    }\n\n    return singleEdits;\n  }\n\n  static _isFullModelReplaceEdit(editor, edit) {\n    if (!editor.hasModel()) {\n      return false;\n    }\n\n    const model = editor.getModel();\n    const editRange = model.validateRange(edit.range);\n    const fullModelRange = model.getFullModelRange();\n    return fullModelRange.equalsRange(editRange);\n  }\n\n  static execute(editor, _edits, addUndoStops) {\n    if (addUndoStops) {\n      editor.pushUndoStop();\n    }\n\n    const edits = FormattingEdit._handleEolEdits(editor, _edits);\n\n    if (edits.length === 1 && FormattingEdit._isFullModelReplaceEdit(editor, edits[0])) {\n      // We use replace semantics and hope that markers stay put...\n      editor.executeEdits('formatEditsCommand', edits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text)));\n    } else {\n      editor.executeEdits('formatEditsCommand', edits.map(edit => EditOperation.replaceMove(Range.lift(edit.range), edit.text)));\n    }\n\n    if (addUndoStops) {\n      editor.pushUndoStop();\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/contrib/format/browser/formattingEdit.js"],"names":["EditOperation","Range","FormattingEdit","_handleEolEdits","editor","edits","newEol","undefined","singleEdits","edit","eol","range","text","push","hasModel","getModel","pushEOL","_isFullModelReplaceEdit","model","editRange","validateRange","fullModelRange","getFullModelRange","equalsRange","execute","_edits","addUndoStops","pushUndoStop","length","executeEdits","map","replace","lift","replaceMove"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,aAAT,QAA8B,uCAA9B;AACA,SAASC,KAAT,QAAsB,+BAAtB;AACA,OAAO,MAAMC,cAAN,CAAqB;AACF,SAAfC,eAAe,CAACC,MAAD,EAASC,KAAT,EAAgB;AAClC,QAAIC,MAAM,GAAGC,SAAb;AACA,QAAIC,WAAW,GAAG,EAAlB;;AACA,SAAK,IAAIC,IAAT,IAAiBJ,KAAjB,EAAwB;AACpB,UAAI,OAAOI,IAAI,CAACC,GAAZ,KAAoB,QAAxB,EAAkC;AAC9BJ,QAAAA,MAAM,GAAGG,IAAI,CAACC,GAAd;AACH;;AACD,UAAID,IAAI,CAACE,KAAL,IAAc,OAAOF,IAAI,CAACG,IAAZ,KAAqB,QAAvC,EAAiD;AAC7CJ,QAAAA,WAAW,CAACK,IAAZ,CAAiBJ,IAAjB;AACH;AACJ;;AACD,QAAI,OAAOH,MAAP,KAAkB,QAAtB,EAAgC;AAC5B,UAAIF,MAAM,CAACU,QAAP,EAAJ,EAAuB;AACnBV,QAAAA,MAAM,CAACW,QAAP,GAAkBC,OAAlB,CAA0BV,MAA1B;AACH;AACJ;;AACD,WAAOE,WAAP;AACH;;AAC6B,SAAvBS,uBAAuB,CAACb,MAAD,EAASK,IAAT,EAAe;AACzC,QAAI,CAACL,MAAM,CAACU,QAAP,EAAL,EAAwB;AACpB,aAAO,KAAP;AACH;;AACD,UAAMI,KAAK,GAAGd,MAAM,CAACW,QAAP,EAAd;AACA,UAAMI,SAAS,GAAGD,KAAK,CAACE,aAAN,CAAoBX,IAAI,CAACE,KAAzB,CAAlB;AACA,UAAMU,cAAc,GAAGH,KAAK,CAACI,iBAAN,EAAvB;AACA,WAAOD,cAAc,CAACE,WAAf,CAA2BJ,SAA3B,CAAP;AACH;;AACa,SAAPK,OAAO,CAACpB,MAAD,EAASqB,MAAT,EAAiBC,YAAjB,EAA+B;AACzC,QAAIA,YAAJ,EAAkB;AACdtB,MAAAA,MAAM,CAACuB,YAAP;AACH;;AACD,UAAMtB,KAAK,GAAGH,cAAc,CAACC,eAAf,CAA+BC,MAA/B,EAAuCqB,MAAvC,CAAd;;AACA,QAAIpB,KAAK,CAACuB,MAAN,KAAiB,CAAjB,IAAsB1B,cAAc,CAACe,uBAAf,CAAuCb,MAAvC,EAA+CC,KAAK,CAAC,CAAD,CAApD,CAA1B,EAAoF;AAChF;AACAD,MAAAA,MAAM,CAACyB,YAAP,CAAoB,oBAApB,EAA0CxB,KAAK,CAACyB,GAAN,CAAUrB,IAAI,IAAIT,aAAa,CAAC+B,OAAd,CAAsB9B,KAAK,CAAC+B,IAAN,CAAWvB,IAAI,CAACE,KAAhB,CAAtB,EAA8CF,IAAI,CAACG,IAAnD,CAAlB,CAA1C;AACH,KAHD,MAIK;AACDR,MAAAA,MAAM,CAACyB,YAAP,CAAoB,oBAApB,EAA0CxB,KAAK,CAACyB,GAAN,CAAUrB,IAAI,IAAIT,aAAa,CAACiC,WAAd,CAA0BhC,KAAK,CAAC+B,IAAN,CAAWvB,IAAI,CAACE,KAAhB,CAA1B,EAAkDF,IAAI,CAACG,IAAvD,CAAlB,CAA1C;AACH;;AACD,QAAIc,YAAJ,EAAkB;AACdtB,MAAAA,MAAM,CAACuB,YAAP;AACH;AACJ;;AA3CuB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nexport class FormattingEdit {\n    static _handleEolEdits(editor, edits) {\n        let newEol = undefined;\n        let singleEdits = [];\n        for (let edit of edits) {\n            if (typeof edit.eol === 'number') {\n                newEol = edit.eol;\n            }\n            if (edit.range && typeof edit.text === 'string') {\n                singleEdits.push(edit);\n            }\n        }\n        if (typeof newEol === 'number') {\n            if (editor.hasModel()) {\n                editor.getModel().pushEOL(newEol);\n            }\n        }\n        return singleEdits;\n    }\n    static _isFullModelReplaceEdit(editor, edit) {\n        if (!editor.hasModel()) {\n            return false;\n        }\n        const model = editor.getModel();\n        const editRange = model.validateRange(edit.range);\n        const fullModelRange = model.getFullModelRange();\n        return fullModelRange.equalsRange(editRange);\n    }\n    static execute(editor, _edits, addUndoStops) {\n        if (addUndoStops) {\n            editor.pushUndoStop();\n        }\n        const edits = FormattingEdit._handleEolEdits(editor, _edits);\n        if (edits.length === 1 && FormattingEdit._isFullModelReplaceEdit(editor, edits[0])) {\n            // We use replace semantics and hope that markers stay put...\n            editor.executeEdits('formatEditsCommand', edits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text)));\n        }\n        else {\n            editor.executeEdits('formatEditsCommand', edits.map(edit => EditOperation.replaceMove(Range.lift(edit.range), edit.text)));\n        }\n        if (addUndoStops) {\n            editor.pushUndoStop();\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}