{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../../../base/common/event.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../../base/common/platform.js';\n\nfunction hasModifier(e, modifier) {\n  return !!e[modifier];\n}\n/**\n * An event that encapsulates the various trigger modifiers logic needed for go to definition.\n */\n\n\nexport class ClickLinkMouseEvent {\n  constructor(source, opts) {\n    this.target = source.target;\n    this.hasTriggerModifier = hasModifier(source.event, opts.triggerModifier);\n    this.hasSideBySideModifier = hasModifier(source.event, opts.triggerSideBySideModifier);\n    this.isNoneOrSingleMouseDown = source.event.detail <= 1;\n  }\n\n}\n/**\n * An event that encapsulates the various trigger modifiers logic needed for go to definition.\n */\n\nexport class ClickLinkKeyboardEvent {\n  constructor(source, opts) {\n    this.keyCodeIsTriggerKey = source.keyCode === opts.triggerKey;\n    this.keyCodeIsSideBySideKey = source.keyCode === opts.triggerSideBySideKey;\n    this.hasTriggerModifier = hasModifier(source, opts.triggerModifier);\n  }\n\n}\nexport class ClickLinkOptions {\n  constructor(triggerKey, triggerModifier, triggerSideBySideKey, triggerSideBySideModifier) {\n    this.triggerKey = triggerKey;\n    this.triggerModifier = triggerModifier;\n    this.triggerSideBySideKey = triggerSideBySideKey;\n    this.triggerSideBySideModifier = triggerSideBySideModifier;\n  }\n\n  equals(other) {\n    return this.triggerKey === other.triggerKey && this.triggerModifier === other.triggerModifier && this.triggerSideBySideKey === other.triggerSideBySideKey && this.triggerSideBySideModifier === other.triggerSideBySideModifier;\n  }\n\n}\n\nfunction createOptions(multiCursorModifier) {\n  if (multiCursorModifier === 'altKey') {\n    if (platform.isMacintosh) {\n      return new ClickLinkOptions(57\n      /* Meta */\n      , 'metaKey', 6\n      /* Alt */\n      , 'altKey');\n    }\n\n    return new ClickLinkOptions(5\n    /* Ctrl */\n    , 'ctrlKey', 6\n    /* Alt */\n    , 'altKey');\n  }\n\n  if (platform.isMacintosh) {\n    return new ClickLinkOptions(6\n    /* Alt */\n    , 'altKey', 57\n    /* Meta */\n    , 'metaKey');\n  }\n\n  return new ClickLinkOptions(6\n  /* Alt */\n  , 'altKey', 5\n  /* Ctrl */\n  , 'ctrlKey');\n}\n\nexport class ClickLinkGesture extends Disposable {\n  constructor(editor) {\n    super();\n    this._onMouseMoveOrRelevantKeyDown = this._register(new Emitter());\n    this.onMouseMoveOrRelevantKeyDown = this._onMouseMoveOrRelevantKeyDown.event;\n    this._onExecute = this._register(new Emitter());\n    this.onExecute = this._onExecute.event;\n    this._onCancel = this._register(new Emitter());\n    this.onCancel = this._onCancel.event;\n    this._editor = editor;\n    this._opts = createOptions(this._editor.getOption(70\n    /* multiCursorModifier */\n    ));\n    this._lastMouseMoveEvent = null;\n    this._hasTriggerKeyOnMouseDown = false;\n    this._lineNumberOnMouseDown = 0;\n\n    this._register(this._editor.onDidChangeConfiguration(e => {\n      if (e.hasChanged(70\n      /* multiCursorModifier */\n      )) {\n        const newOpts = createOptions(this._editor.getOption(70\n        /* multiCursorModifier */\n        ));\n\n        if (this._opts.equals(newOpts)) {\n          return;\n        }\n\n        this._opts = newOpts;\n        this._lastMouseMoveEvent = null;\n        this._hasTriggerKeyOnMouseDown = false;\n        this._lineNumberOnMouseDown = 0;\n\n        this._onCancel.fire();\n      }\n    }));\n\n    this._register(this._editor.onMouseMove(e => this._onEditorMouseMove(new ClickLinkMouseEvent(e, this._opts))));\n\n    this._register(this._editor.onMouseDown(e => this._onEditorMouseDown(new ClickLinkMouseEvent(e, this._opts))));\n\n    this._register(this._editor.onMouseUp(e => this._onEditorMouseUp(new ClickLinkMouseEvent(e, this._opts))));\n\n    this._register(this._editor.onKeyDown(e => this._onEditorKeyDown(new ClickLinkKeyboardEvent(e, this._opts))));\n\n    this._register(this._editor.onKeyUp(e => this._onEditorKeyUp(new ClickLinkKeyboardEvent(e, this._opts))));\n\n    this._register(this._editor.onMouseDrag(() => this._resetHandler()));\n\n    this._register(this._editor.onDidChangeCursorSelection(e => this._onDidChangeCursorSelection(e)));\n\n    this._register(this._editor.onDidChangeModel(e => this._resetHandler()));\n\n    this._register(this._editor.onDidChangeModelContent(() => this._resetHandler()));\n\n    this._register(this._editor.onDidScrollChange(e => {\n      if (e.scrollTopChanged || e.scrollLeftChanged) {\n        this._resetHandler();\n      }\n    }));\n  }\n\n  _onDidChangeCursorSelection(e) {\n    if (e.selection && e.selection.startColumn !== e.selection.endColumn) {\n      this._resetHandler(); // immediately stop this feature if the user starts to select (https://github.com/microsoft/vscode/issues/7827)\n\n    }\n  }\n\n  _onEditorMouseMove(mouseEvent) {\n    this._lastMouseMoveEvent = mouseEvent;\n\n    this._onMouseMoveOrRelevantKeyDown.fire([mouseEvent, null]);\n  }\n\n  _onEditorMouseDown(mouseEvent) {\n    // We need to record if we had the trigger key on mouse down because someone might select something in the editor\n    // holding the mouse down and then while mouse is down start to press Ctrl/Cmd to start a copy operation and then\n    // release the mouse button without wanting to do the navigation.\n    // With this flag we prevent goto definition if the mouse was down before the trigger key was pressed.\n    this._hasTriggerKeyOnMouseDown = mouseEvent.hasTriggerModifier;\n    this._lineNumberOnMouseDown = mouseEvent.target.position ? mouseEvent.target.position.lineNumber : 0;\n  }\n\n  _onEditorMouseUp(mouseEvent) {\n    const currentLineNumber = mouseEvent.target.position ? mouseEvent.target.position.lineNumber : 0;\n\n    if (this._hasTriggerKeyOnMouseDown && this._lineNumberOnMouseDown && this._lineNumberOnMouseDown === currentLineNumber) {\n      this._onExecute.fire(mouseEvent);\n    }\n  }\n\n  _onEditorKeyDown(e) {\n    if (this._lastMouseMoveEvent && (e.keyCodeIsTriggerKey // User just pressed Ctrl/Cmd (normal goto definition)\n    || e.keyCodeIsSideBySideKey && e.hasTriggerModifier // User pressed Ctrl/Cmd+Alt (goto definition to the side)\n    )) {\n      this._onMouseMoveOrRelevantKeyDown.fire([this._lastMouseMoveEvent, e]);\n    } else if (e.hasTriggerModifier) {\n      this._onCancel.fire(); // remove decorations if user holds another key with ctrl/cmd to prevent accident goto declaration\n\n    }\n  }\n\n  _onEditorKeyUp(e) {\n    if (e.keyCodeIsTriggerKey) {\n      this._onCancel.fire();\n    }\n  }\n\n  _resetHandler() {\n    this._lastMouseMoveEvent = null;\n    this._hasTriggerKeyOnMouseDown = false;\n\n    this._onCancel.fire();\n  }\n\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/contrib/gotoSymbol/browser/link/clickLinkGesture.js"],"names":["Emitter","Disposable","platform","hasModifier","e","modifier","ClickLinkMouseEvent","constructor","source","opts","target","hasTriggerModifier","event","triggerModifier","hasSideBySideModifier","triggerSideBySideModifier","isNoneOrSingleMouseDown","detail","ClickLinkKeyboardEvent","keyCodeIsTriggerKey","keyCode","triggerKey","keyCodeIsSideBySideKey","triggerSideBySideKey","ClickLinkOptions","equals","other","createOptions","multiCursorModifier","isMacintosh","ClickLinkGesture","editor","_onMouseMoveOrRelevantKeyDown","_register","onMouseMoveOrRelevantKeyDown","_onExecute","onExecute","_onCancel","onCancel","_editor","_opts","getOption","_lastMouseMoveEvent","_hasTriggerKeyOnMouseDown","_lineNumberOnMouseDown","onDidChangeConfiguration","hasChanged","newOpts","fire","onMouseMove","_onEditorMouseMove","onMouseDown","_onEditorMouseDown","onMouseUp","_onEditorMouseUp","onKeyDown","_onEditorKeyDown","onKeyUp","_onEditorKeyUp","onMouseDrag","_resetHandler","onDidChangeCursorSelection","_onDidChangeCursorSelection","onDidChangeModel","onDidChangeModelContent","onDidScrollChange","scrollTopChanged","scrollLeftChanged","selection","startColumn","endColumn","mouseEvent","position","lineNumber","currentLineNumber"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../../../base/common/event.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../../base/common/platform.js';\nfunction hasModifier(e, modifier) {\n    return !!e[modifier];\n}\n/**\n * An event that encapsulates the various trigger modifiers logic needed for go to definition.\n */\nexport class ClickLinkMouseEvent {\n    constructor(source, opts) {\n        this.target = source.target;\n        this.hasTriggerModifier = hasModifier(source.event, opts.triggerModifier);\n        this.hasSideBySideModifier = hasModifier(source.event, opts.triggerSideBySideModifier);\n        this.isNoneOrSingleMouseDown = (source.event.detail <= 1);\n    }\n}\n/**\n * An event that encapsulates the various trigger modifiers logic needed for go to definition.\n */\nexport class ClickLinkKeyboardEvent {\n    constructor(source, opts) {\n        this.keyCodeIsTriggerKey = (source.keyCode === opts.triggerKey);\n        this.keyCodeIsSideBySideKey = (source.keyCode === opts.triggerSideBySideKey);\n        this.hasTriggerModifier = hasModifier(source, opts.triggerModifier);\n    }\n}\nexport class ClickLinkOptions {\n    constructor(triggerKey, triggerModifier, triggerSideBySideKey, triggerSideBySideModifier) {\n        this.triggerKey = triggerKey;\n        this.triggerModifier = triggerModifier;\n        this.triggerSideBySideKey = triggerSideBySideKey;\n        this.triggerSideBySideModifier = triggerSideBySideModifier;\n    }\n    equals(other) {\n        return (this.triggerKey === other.triggerKey\n            && this.triggerModifier === other.triggerModifier\n            && this.triggerSideBySideKey === other.triggerSideBySideKey\n            && this.triggerSideBySideModifier === other.triggerSideBySideModifier);\n    }\n}\nfunction createOptions(multiCursorModifier) {\n    if (multiCursorModifier === 'altKey') {\n        if (platform.isMacintosh) {\n            return new ClickLinkOptions(57 /* Meta */, 'metaKey', 6 /* Alt */, 'altKey');\n        }\n        return new ClickLinkOptions(5 /* Ctrl */, 'ctrlKey', 6 /* Alt */, 'altKey');\n    }\n    if (platform.isMacintosh) {\n        return new ClickLinkOptions(6 /* Alt */, 'altKey', 57 /* Meta */, 'metaKey');\n    }\n    return new ClickLinkOptions(6 /* Alt */, 'altKey', 5 /* Ctrl */, 'ctrlKey');\n}\nexport class ClickLinkGesture extends Disposable {\n    constructor(editor) {\n        super();\n        this._onMouseMoveOrRelevantKeyDown = this._register(new Emitter());\n        this.onMouseMoveOrRelevantKeyDown = this._onMouseMoveOrRelevantKeyDown.event;\n        this._onExecute = this._register(new Emitter());\n        this.onExecute = this._onExecute.event;\n        this._onCancel = this._register(new Emitter());\n        this.onCancel = this._onCancel.event;\n        this._editor = editor;\n        this._opts = createOptions(this._editor.getOption(70 /* multiCursorModifier */));\n        this._lastMouseMoveEvent = null;\n        this._hasTriggerKeyOnMouseDown = false;\n        this._lineNumberOnMouseDown = 0;\n        this._register(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(70 /* multiCursorModifier */)) {\n                const newOpts = createOptions(this._editor.getOption(70 /* multiCursorModifier */));\n                if (this._opts.equals(newOpts)) {\n                    return;\n                }\n                this._opts = newOpts;\n                this._lastMouseMoveEvent = null;\n                this._hasTriggerKeyOnMouseDown = false;\n                this._lineNumberOnMouseDown = 0;\n                this._onCancel.fire();\n            }\n        }));\n        this._register(this._editor.onMouseMove((e) => this._onEditorMouseMove(new ClickLinkMouseEvent(e, this._opts))));\n        this._register(this._editor.onMouseDown((e) => this._onEditorMouseDown(new ClickLinkMouseEvent(e, this._opts))));\n        this._register(this._editor.onMouseUp((e) => this._onEditorMouseUp(new ClickLinkMouseEvent(e, this._opts))));\n        this._register(this._editor.onKeyDown((e) => this._onEditorKeyDown(new ClickLinkKeyboardEvent(e, this._opts))));\n        this._register(this._editor.onKeyUp((e) => this._onEditorKeyUp(new ClickLinkKeyboardEvent(e, this._opts))));\n        this._register(this._editor.onMouseDrag(() => this._resetHandler()));\n        this._register(this._editor.onDidChangeCursorSelection((e) => this._onDidChangeCursorSelection(e)));\n        this._register(this._editor.onDidChangeModel((e) => this._resetHandler()));\n        this._register(this._editor.onDidChangeModelContent(() => this._resetHandler()));\n        this._register(this._editor.onDidScrollChange((e) => {\n            if (e.scrollTopChanged || e.scrollLeftChanged) {\n                this._resetHandler();\n            }\n        }));\n    }\n    _onDidChangeCursorSelection(e) {\n        if (e.selection && e.selection.startColumn !== e.selection.endColumn) {\n            this._resetHandler(); // immediately stop this feature if the user starts to select (https://github.com/microsoft/vscode/issues/7827)\n        }\n    }\n    _onEditorMouseMove(mouseEvent) {\n        this._lastMouseMoveEvent = mouseEvent;\n        this._onMouseMoveOrRelevantKeyDown.fire([mouseEvent, null]);\n    }\n    _onEditorMouseDown(mouseEvent) {\n        // We need to record if we had the trigger key on mouse down because someone might select something in the editor\n        // holding the mouse down and then while mouse is down start to press Ctrl/Cmd to start a copy operation and then\n        // release the mouse button without wanting to do the navigation.\n        // With this flag we prevent goto definition if the mouse was down before the trigger key was pressed.\n        this._hasTriggerKeyOnMouseDown = mouseEvent.hasTriggerModifier;\n        this._lineNumberOnMouseDown = mouseEvent.target.position ? mouseEvent.target.position.lineNumber : 0;\n    }\n    _onEditorMouseUp(mouseEvent) {\n        const currentLineNumber = mouseEvent.target.position ? mouseEvent.target.position.lineNumber : 0;\n        if (this._hasTriggerKeyOnMouseDown && this._lineNumberOnMouseDown && this._lineNumberOnMouseDown === currentLineNumber) {\n            this._onExecute.fire(mouseEvent);\n        }\n    }\n    _onEditorKeyDown(e) {\n        if (this._lastMouseMoveEvent\n            && (e.keyCodeIsTriggerKey // User just pressed Ctrl/Cmd (normal goto definition)\n                || (e.keyCodeIsSideBySideKey && e.hasTriggerModifier) // User pressed Ctrl/Cmd+Alt (goto definition to the side)\n            )) {\n            this._onMouseMoveOrRelevantKeyDown.fire([this._lastMouseMoveEvent, e]);\n        }\n        else if (e.hasTriggerModifier) {\n            this._onCancel.fire(); // remove decorations if user holds another key with ctrl/cmd to prevent accident goto declaration\n        }\n    }\n    _onEditorKeyUp(e) {\n        if (e.keyCodeIsTriggerKey) {\n            this._onCancel.fire();\n        }\n    }\n    _resetHandler() {\n        this._lastMouseMoveEvent = null;\n        this._hasTriggerKeyOnMouseDown = false;\n        this._onCancel.fire();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}