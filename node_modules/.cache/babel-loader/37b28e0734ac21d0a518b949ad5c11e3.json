{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { alert as alertFn } from '../../../../base/browser/ui/aria/aria.js';\nimport { Checkbox } from '../../../../base/browser/ui/checkbox/checkbox.js';\nimport { Sash } from '../../../../base/browser/ui/sash/sash.js';\nimport { Widget } from '../../../../base/browser/ui/widget.js';\nimport { Delayer } from '../../../../base/common/async.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { toDisposable } from '../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport './findWidget.css';\nimport { Range } from '../../../common/core/range.js';\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_REPLACE_INPUT_FOCUSED, FIND_IDS, MATCHES_LIMIT } from './findModel.js';\nimport * as nls from '../../../../nls.js';\nimport { ContextScopedFindInput, ContextScopedReplaceInput } from '../../../../platform/history/browser/contextScopedHistoryWidget.js';\nimport { showHistoryKeybindingHint } from '../../../../platform/history/browser/historyWidgetKeybindingHint.js';\nimport { contrastBorder, editorFindMatch, editorFindMatchBorder, editorFindMatchHighlight, editorFindMatchHighlightBorder, editorFindRangeHighlight, editorFindRangeHighlightBorder, editorWidgetBackground, editorWidgetBorder, editorWidgetForeground, editorWidgetResizeBorder, errorForeground, focusBorder, inputActiveOptionBackground, inputActiveOptionBorder, inputActiveOptionForeground, inputBackground, inputBorder, inputForeground, inputValidationErrorBackground, inputValidationErrorBorder, inputValidationErrorForeground, inputValidationInfoBackground, inputValidationInfoBorder, inputValidationInfoForeground, inputValidationWarningBackground, inputValidationWarningBorder, inputValidationWarningForeground, toolbarHoverBackground, widgetShadow } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerIcon, widgetClose } from '../../../../platform/theme/common/iconRegistry.js';\nimport { registerThemingParticipant, ThemeIcon } from '../../../../platform/theme/common/themeService.js';\nconst findSelectionIcon = registerIcon('find-selection', Codicon.selection, nls.localize('findSelectionIcon', 'Icon for \\'Find in Selection\\' in the editor find widget.'));\nconst findCollapsedIcon = registerIcon('find-collapsed', Codicon.chevronRight, nls.localize('findCollapsedIcon', 'Icon to indicate that the editor find widget is collapsed.'));\nconst findExpandedIcon = registerIcon('find-expanded', Codicon.chevronDown, nls.localize('findExpandedIcon', 'Icon to indicate that the editor find widget is expanded.'));\nexport const findReplaceIcon = registerIcon('find-replace', Codicon.replace, nls.localize('findReplaceIcon', 'Icon for \\'Replace\\' in the editor find widget.'));\nexport const findReplaceAllIcon = registerIcon('find-replace-all', Codicon.replaceAll, nls.localize('findReplaceAllIcon', 'Icon for \\'Replace All\\' in the editor find widget.'));\nexport const findPreviousMatchIcon = registerIcon('find-previous-match', Codicon.arrowUp, nls.localize('findPreviousMatchIcon', 'Icon for \\'Find Previous\\' in the editor find widget.'));\nexport const findNextMatchIcon = registerIcon('find-next-match', Codicon.arrowDown, nls.localize('findNextMatchIcon', 'Icon for \\'Find Next\\' in the editor find widget.'));\nconst NLS_FIND_INPUT_LABEL = nls.localize('label.find', \"Find\");\nconst NLS_FIND_INPUT_PLACEHOLDER = nls.localize('placeholder.find', \"Find\");\nconst NLS_PREVIOUS_MATCH_BTN_LABEL = nls.localize('label.previousMatchButton', \"Previous Match\");\nconst NLS_NEXT_MATCH_BTN_LABEL = nls.localize('label.nextMatchButton', \"Next Match\");\nconst NLS_TOGGLE_SELECTION_FIND_TITLE = nls.localize('label.toggleSelectionFind', \"Find in Selection\");\nconst NLS_CLOSE_BTN_LABEL = nls.localize('label.closeButton', \"Close\");\nconst NLS_REPLACE_INPUT_LABEL = nls.localize('label.replace', \"Replace\");\nconst NLS_REPLACE_INPUT_PLACEHOLDER = nls.localize('placeholder.replace', \"Replace\");\nconst NLS_REPLACE_BTN_LABEL = nls.localize('label.replaceButton', \"Replace\");\nconst NLS_REPLACE_ALL_BTN_LABEL = nls.localize('label.replaceAllButton', \"Replace All\");\nconst NLS_TOGGLE_REPLACE_MODE_BTN_LABEL = nls.localize('label.toggleReplaceButton', \"Toggle Replace\");\nconst NLS_MATCHES_COUNT_LIMIT_TITLE = nls.localize('title.matchesCountLimit', \"Only the first {0} results are highlighted, but all find operations work on the entire text.\", MATCHES_LIMIT);\nexport const NLS_MATCHES_LOCATION = nls.localize('label.matchesLocation', \"{0} of {1}\");\nexport const NLS_NO_RESULTS = nls.localize('label.noResults', \"No results\");\nconst FIND_WIDGET_INITIAL_WIDTH = 419;\nconst PART_WIDTH = 275;\nconst FIND_INPUT_AREA_WIDTH = PART_WIDTH - 54;\nlet MAX_MATCHES_COUNT_WIDTH = 69; // let FIND_ALL_CONTROLS_WIDTH = 17/** Find Input margin-left */ + (MAX_MATCHES_COUNT_WIDTH + 3 + 1) /** Match Results */ + 23 /** Button */ * 4 + 2/** sash */;\n\nconst FIND_INPUT_AREA_HEIGHT = 33; // The height of Find Widget when Replace Input is not visible.\n\nconst ctrlEnterReplaceAllWarningPromptedKey = 'ctrlEnterReplaceAll.windows.donotask';\nconst ctrlKeyMod = platform.isMacintosh ? 256\n/* WinCtrl */\n: 2048\n/* CtrlCmd */\n;\nexport class FindWidgetViewZone {\n  constructor(afterLineNumber) {\n    this.afterLineNumber = afterLineNumber;\n    this.heightInPx = FIND_INPUT_AREA_HEIGHT;\n    this.suppressMouseDown = false;\n    this.domNode = document.createElement('div');\n    this.domNode.className = 'dock-find-viewzone';\n  }\n\n}\n\nfunction stopPropagationForMultiLineUpwards(event, value, textarea) {\n  const isMultiline = !!value.match(/\\n/);\n\n  if (textarea && isMultiline && textarea.selectionStart > 0) {\n    event.stopPropagation();\n    return;\n  }\n}\n\nfunction stopPropagationForMultiLineDownwards(event, value, textarea) {\n  const isMultiline = !!value.match(/\\n/);\n\n  if (textarea && isMultiline && textarea.selectionEnd < textarea.value.length) {\n    event.stopPropagation();\n    return;\n  }\n}\n\nexport class FindWidget extends Widget {\n  constructor(codeEditor, controller, state, contextViewProvider, keybindingService, contextKeyService, themeService, storageService, notificationService) {\n    super();\n    this._cachedHeight = null;\n    this._revealTimeouts = [];\n    this._codeEditor = codeEditor;\n    this._controller = controller;\n    this._state = state;\n    this._contextViewProvider = contextViewProvider;\n    this._keybindingService = keybindingService;\n    this._contextKeyService = contextKeyService;\n    this._storageService = storageService;\n    this._notificationService = notificationService;\n    this._ctrlEnterReplaceAllWarningPrompted = !!storageService.getBoolean(ctrlEnterReplaceAllWarningPromptedKey, 0\n    /* GLOBAL */\n    );\n    this._isVisible = false;\n    this._isReplaceVisible = false;\n    this._ignoreChangeEvent = false;\n    this._updateHistoryDelayer = new Delayer(500);\n\n    this._register(toDisposable(() => this._updateHistoryDelayer.cancel()));\n\n    this._register(this._state.onFindReplaceStateChange(e => this._onStateChanged(e)));\n\n    this._buildDomNode();\n\n    this._updateButtons();\n\n    this._tryUpdateWidgetWidth();\n\n    this._findInput.inputBox.layout();\n\n    this._register(this._codeEditor.onDidChangeConfiguration(e => {\n      if (e.hasChanged(81\n      /* readOnly */\n      )) {\n        if (this._codeEditor.getOption(81\n        /* readOnly */\n        )) {\n          // Hide replace part if editor becomes read only\n          this._state.change({\n            isReplaceRevealed: false\n          }, false);\n        }\n\n        this._updateButtons();\n      }\n\n      if (e.hasChanged(131\n      /* layoutInfo */\n      )) {\n        this._tryUpdateWidgetWidth();\n      }\n\n      if (e.hasChanged(2\n      /* accessibilitySupport */\n      )) {\n        this.updateAccessibilitySupport();\n      }\n\n      if (e.hasChanged(35\n      /* find */\n      )) {\n        const addExtraSpaceOnTop = this._codeEditor.getOption(35\n        /* find */\n        ).addExtraSpaceOnTop;\n\n        if (addExtraSpaceOnTop && !this._viewZone) {\n          this._viewZone = new FindWidgetViewZone(0);\n\n          this._showViewZone();\n        }\n\n        if (!addExtraSpaceOnTop && this._viewZone) {\n          this._removeViewZone();\n        }\n      }\n    }));\n\n    this.updateAccessibilitySupport();\n\n    this._register(this._codeEditor.onDidChangeCursorSelection(() => {\n      if (this._isVisible) {\n        this._updateToggleSelectionFindButton();\n      }\n    }));\n\n    this._register(this._codeEditor.onDidFocusEditorWidget(() => __awaiter(this, void 0, void 0, function* () {\n      if (this._isVisible) {\n        let globalBufferTerm = yield this._controller.getGlobalBufferTerm();\n\n        if (globalBufferTerm && globalBufferTerm !== this._state.searchString) {\n          this._state.change({\n            searchString: globalBufferTerm\n          }, false);\n\n          this._findInput.select();\n        }\n      }\n    })));\n\n    this._findInputFocused = CONTEXT_FIND_INPUT_FOCUSED.bindTo(contextKeyService);\n    this._findFocusTracker = this._register(dom.trackFocus(this._findInput.inputBox.inputElement));\n\n    this._register(this._findFocusTracker.onDidFocus(() => {\n      this._findInputFocused.set(true);\n\n      this._updateSearchScope();\n    }));\n\n    this._register(this._findFocusTracker.onDidBlur(() => {\n      this._findInputFocused.set(false);\n    }));\n\n    this._replaceInputFocused = CONTEXT_REPLACE_INPUT_FOCUSED.bindTo(contextKeyService);\n    this._replaceFocusTracker = this._register(dom.trackFocus(this._replaceInput.inputBox.inputElement));\n\n    this._register(this._replaceFocusTracker.onDidFocus(() => {\n      this._replaceInputFocused.set(true);\n\n      this._updateSearchScope();\n    }));\n\n    this._register(this._replaceFocusTracker.onDidBlur(() => {\n      this._replaceInputFocused.set(false);\n    }));\n\n    this._codeEditor.addOverlayWidget(this);\n\n    if (this._codeEditor.getOption(35\n    /* find */\n    ).addExtraSpaceOnTop) {\n      this._viewZone = new FindWidgetViewZone(0); // Put it before the first line then users can scroll beyond the first line.\n    }\n\n    this._applyTheme(themeService.getColorTheme());\n\n    this._register(themeService.onDidColorThemeChange(this._applyTheme.bind(this)));\n\n    this._register(this._codeEditor.onDidChangeModel(() => {\n      if (!this._isVisible) {\n        return;\n      }\n\n      this._viewZoneId = undefined;\n    }));\n\n    this._register(this._codeEditor.onDidScrollChange(e => {\n      if (e.scrollTopChanged) {\n        this._layoutViewZone();\n\n        return;\n      } // for other scroll changes, layout the viewzone in next tick to avoid ruining current rendering.\n\n\n      setTimeout(() => {\n        this._layoutViewZone();\n      }, 0);\n    }));\n  } // ----- IOverlayWidget API\n\n\n  getId() {\n    return FindWidget.ID;\n  }\n\n  getDomNode() {\n    return this._domNode;\n  }\n\n  getPosition() {\n    if (this._isVisible) {\n      return {\n        preference: 0\n        /* TOP_RIGHT_CORNER */\n\n      };\n    }\n\n    return null;\n  } // ----- React to state changes\n\n\n  _onStateChanged(e) {\n    if (e.searchString) {\n      try {\n        this._ignoreChangeEvent = true;\n\n        this._findInput.setValue(this._state.searchString);\n      } finally {\n        this._ignoreChangeEvent = false;\n      }\n\n      this._updateButtons();\n    }\n\n    if (e.replaceString) {\n      this._replaceInput.inputBox.value = this._state.replaceString;\n    }\n\n    if (e.isRevealed) {\n      if (this._state.isRevealed) {\n        this._reveal();\n      } else {\n        this._hide(true);\n      }\n    }\n\n    if (e.isReplaceRevealed) {\n      if (this._state.isReplaceRevealed) {\n        if (!this._codeEditor.getOption(81\n        /* readOnly */\n        ) && !this._isReplaceVisible) {\n          this._isReplaceVisible = true;\n          this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n\n          this._updateButtons();\n\n          this._replaceInput.inputBox.layout();\n        }\n      } else {\n        if (this._isReplaceVisible) {\n          this._isReplaceVisible = false;\n\n          this._updateButtons();\n        }\n      }\n    }\n\n    if ((e.isRevealed || e.isReplaceRevealed) && (this._state.isRevealed || this._state.isReplaceRevealed)) {\n      if (this._tryUpdateHeight()) {\n        this._showViewZone();\n      }\n    }\n\n    if (e.isRegex) {\n      this._findInput.setRegex(this._state.isRegex);\n    }\n\n    if (e.wholeWord) {\n      this._findInput.setWholeWords(this._state.wholeWord);\n    }\n\n    if (e.matchCase) {\n      this._findInput.setCaseSensitive(this._state.matchCase);\n    }\n\n    if (e.preserveCase) {\n      this._replaceInput.setPreserveCase(this._state.preserveCase);\n    }\n\n    if (e.searchScope) {\n      if (this._state.searchScope) {\n        this._toggleSelectionFind.checked = true;\n      } else {\n        this._toggleSelectionFind.checked = false;\n      }\n\n      this._updateToggleSelectionFindButton();\n    }\n\n    if (e.searchString || e.matchesCount || e.matchesPosition) {\n      let showRedOutline = this._state.searchString.length > 0 && this._state.matchesCount === 0;\n\n      this._domNode.classList.toggle('no-results', showRedOutline);\n\n      this._updateMatchesCount();\n\n      this._updateButtons();\n    }\n\n    if (e.searchString || e.currentMatch) {\n      this._layoutViewZone();\n    }\n\n    if (e.updateHistory) {\n      this._delayedUpdateHistory();\n    }\n\n    if (e.loop) {\n      this._updateButtons();\n    }\n  }\n\n  _delayedUpdateHistory() {\n    this._updateHistoryDelayer.trigger(this._updateHistory.bind(this)).then(undefined, onUnexpectedError);\n  }\n\n  _updateHistory() {\n    if (this._state.searchString) {\n      this._findInput.inputBox.addToHistory();\n    }\n\n    if (this._state.replaceString) {\n      this._replaceInput.inputBox.addToHistory();\n    }\n  }\n\n  _updateMatchesCount() {\n    this._matchesCount.style.minWidth = MAX_MATCHES_COUNT_WIDTH + 'px';\n\n    if (this._state.matchesCount >= MATCHES_LIMIT) {\n      this._matchesCount.title = NLS_MATCHES_COUNT_LIMIT_TITLE;\n    } else {\n      this._matchesCount.title = '';\n    } // remove previous content\n\n\n    if (this._matchesCount.firstChild) {\n      this._matchesCount.removeChild(this._matchesCount.firstChild);\n    }\n\n    let label;\n\n    if (this._state.matchesCount > 0) {\n      let matchesCount = String(this._state.matchesCount);\n\n      if (this._state.matchesCount >= MATCHES_LIMIT) {\n        matchesCount += '+';\n      }\n\n      let matchesPosition = String(this._state.matchesPosition);\n\n      if (matchesPosition === '0') {\n        matchesPosition = '?';\n      }\n\n      label = strings.format(NLS_MATCHES_LOCATION, matchesPosition, matchesCount);\n    } else {\n      label = NLS_NO_RESULTS;\n    }\n\n    this._matchesCount.appendChild(document.createTextNode(label));\n\n    alertFn(this._getAriaLabel(label, this._state.currentMatch, this._state.searchString));\n    MAX_MATCHES_COUNT_WIDTH = Math.max(MAX_MATCHES_COUNT_WIDTH, this._matchesCount.clientWidth);\n  } // ----- actions\n\n\n  _getAriaLabel(label, currentMatch, searchString) {\n    if (label === NLS_NO_RESULTS) {\n      return searchString === '' ? nls.localize('ariaSearchNoResultEmpty', \"{0} found\", label) : nls.localize('ariaSearchNoResult', \"{0} found for '{1}'\", label, searchString);\n    }\n\n    if (currentMatch) {\n      const ariaLabel = nls.localize('ariaSearchNoResultWithLineNum', \"{0} found for '{1}', at {2}\", label, searchString, currentMatch.startLineNumber + ':' + currentMatch.startColumn);\n\n      const model = this._codeEditor.getModel();\n\n      if (model && currentMatch.startLineNumber <= model.getLineCount() && currentMatch.startLineNumber >= 1) {\n        const lineContent = model.getLineContent(currentMatch.startLineNumber);\n        return `${lineContent}, ${ariaLabel}`;\n      }\n\n      return ariaLabel;\n    }\n\n    return nls.localize('ariaSearchNoResultWithLineNumNoCurrentMatch', \"{0} found for '{1}'\", label, searchString);\n  }\n  /**\n   * If 'selection find' is ON we should not disable the button (its function is to cancel 'selection find').\n   * If 'selection find' is OFF we enable the button only if there is a selection.\n   */\n\n\n  _updateToggleSelectionFindButton() {\n    let selection = this._codeEditor.getSelection();\n\n    let isSelection = selection ? selection.startLineNumber !== selection.endLineNumber || selection.startColumn !== selection.endColumn : false;\n    let isChecked = this._toggleSelectionFind.checked;\n\n    if (this._isVisible && (isChecked || isSelection)) {\n      this._toggleSelectionFind.enable();\n    } else {\n      this._toggleSelectionFind.disable();\n    }\n  }\n\n  _updateButtons() {\n    this._findInput.setEnabled(this._isVisible);\n\n    this._replaceInput.setEnabled(this._isVisible && this._isReplaceVisible);\n\n    this._updateToggleSelectionFindButton();\n\n    this._closeBtn.setEnabled(this._isVisible);\n\n    let findInputIsNonEmpty = this._state.searchString.length > 0;\n    let matchesCount = this._state.matchesCount ? true : false;\n\n    this._prevBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateBack());\n\n    this._nextBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateForward());\n\n    this._replaceBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\n\n    this._replaceAllBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\n\n    this._domNode.classList.toggle('replaceToggled', this._isReplaceVisible);\n\n    this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);\n\n    let canReplace = !this._codeEditor.getOption(81\n    /* readOnly */\n    );\n\n    this._toggleReplaceBtn.setEnabled(this._isVisible && canReplace);\n  }\n\n  _reveal() {\n    this._revealTimeouts.forEach(e => {\n      clearTimeout(e);\n    });\n\n    this._revealTimeouts = [];\n\n    if (!this._isVisible) {\n      this._isVisible = true;\n\n      const selection = this._codeEditor.getSelection();\n\n      switch (this._codeEditor.getOption(35\n      /* find */\n      ).autoFindInSelection) {\n        case 'always':\n          this._toggleSelectionFind.checked = true;\n          break;\n\n        case 'never':\n          this._toggleSelectionFind.checked = false;\n          break;\n\n        case 'multiline':\n          {\n            const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\n            this._toggleSelectionFind.checked = isSelectionMultipleLine;\n            break;\n          }\n\n        default:\n          break;\n      }\n\n      this._tryUpdateWidgetWidth();\n\n      this._updateButtons();\n\n      this._revealTimeouts.push(setTimeout(() => {\n        this._domNode.classList.add('visible');\n\n        this._domNode.setAttribute('aria-hidden', 'false');\n      }, 0)); // validate query again as it's being dismissed when we hide the find widget.\n\n\n      this._revealTimeouts.push(setTimeout(() => {\n        this._findInput.validate();\n      }, 200));\n\n      this._codeEditor.layoutOverlayWidget(this);\n\n      let adjustEditorScrollTop = true;\n\n      if (this._codeEditor.getOption(35\n      /* find */\n      ).seedSearchStringFromSelection && selection) {\n        const domNode = this._codeEditor.getDomNode();\n\n        if (domNode) {\n          const editorCoords = dom.getDomNodePagePosition(domNode);\n\n          const startCoords = this._codeEditor.getScrolledVisiblePosition(selection.getStartPosition());\n\n          const startLeft = editorCoords.left + (startCoords ? startCoords.left : 0);\n          const startTop = startCoords ? startCoords.top : 0;\n\n          if (this._viewZone && startTop < this._viewZone.heightInPx) {\n            if (selection.endLineNumber > selection.startLineNumber) {\n              adjustEditorScrollTop = false;\n            }\n\n            const leftOfFindWidget = dom.getTopLeftOffset(this._domNode).left;\n\n            if (startLeft > leftOfFindWidget) {\n              adjustEditorScrollTop = false;\n            }\n\n            const endCoords = this._codeEditor.getScrolledVisiblePosition(selection.getEndPosition());\n\n            const endLeft = editorCoords.left + (endCoords ? endCoords.left : 0);\n\n            if (endLeft > leftOfFindWidget) {\n              adjustEditorScrollTop = false;\n            }\n          }\n        }\n      }\n\n      this._showViewZone(adjustEditorScrollTop);\n    }\n  }\n\n  _hide(focusTheEditor) {\n    this._revealTimeouts.forEach(e => {\n      clearTimeout(e);\n    });\n\n    this._revealTimeouts = [];\n\n    if (this._isVisible) {\n      this._isVisible = false;\n\n      this._updateButtons();\n\n      this._domNode.classList.remove('visible');\n\n      this._domNode.setAttribute('aria-hidden', 'true');\n\n      this._findInput.clearMessage();\n\n      if (focusTheEditor) {\n        this._codeEditor.focus();\n      }\n\n      this._codeEditor.layoutOverlayWidget(this);\n\n      this._removeViewZone();\n    }\n  }\n\n  _layoutViewZone(targetScrollTop) {\n    const addExtraSpaceOnTop = this._codeEditor.getOption(35\n    /* find */\n    ).addExtraSpaceOnTop;\n\n    if (!addExtraSpaceOnTop) {\n      this._removeViewZone();\n\n      return;\n    }\n\n    if (!this._isVisible) {\n      return;\n    }\n\n    const viewZone = this._viewZone;\n\n    if (this._viewZoneId !== undefined || !viewZone) {\n      return;\n    }\n\n    this._codeEditor.changeViewZones(accessor => {\n      viewZone.heightInPx = this._getHeight();\n      this._viewZoneId = accessor.addZone(viewZone); // scroll top adjust to make sure the editor doesn't scroll when adding viewzone at the beginning.\n\n      this._codeEditor.setScrollTop(targetScrollTop || this._codeEditor.getScrollTop() + viewZone.heightInPx);\n    });\n  }\n\n  _showViewZone(adjustScroll = true) {\n    if (!this._isVisible) {\n      return;\n    }\n\n    const addExtraSpaceOnTop = this._codeEditor.getOption(35\n    /* find */\n    ).addExtraSpaceOnTop;\n\n    if (!addExtraSpaceOnTop) {\n      return;\n    }\n\n    if (this._viewZone === undefined) {\n      this._viewZone = new FindWidgetViewZone(0);\n    }\n\n    const viewZone = this._viewZone;\n\n    this._codeEditor.changeViewZones(accessor => {\n      if (this._viewZoneId !== undefined) {\n        // the view zone already exists, we need to update the height\n        const newHeight = this._getHeight();\n\n        if (newHeight === viewZone.heightInPx) {\n          return;\n        }\n\n        let scrollAdjustment = newHeight - viewZone.heightInPx;\n        viewZone.heightInPx = newHeight;\n        accessor.layoutZone(this._viewZoneId);\n\n        if (adjustScroll) {\n          this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\n        }\n\n        return;\n      } else {\n        let scrollAdjustment = this._getHeight(); // if the editor has top padding, factor that into the zone height\n\n\n        scrollAdjustment -= this._codeEditor.getOption(75\n        /* padding */\n        ).top;\n\n        if (scrollAdjustment <= 0) {\n          return;\n        }\n\n        viewZone.heightInPx = scrollAdjustment;\n        this._viewZoneId = accessor.addZone(viewZone);\n\n        if (adjustScroll) {\n          this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\n        }\n      }\n    });\n  }\n\n  _removeViewZone() {\n    this._codeEditor.changeViewZones(accessor => {\n      if (this._viewZoneId !== undefined) {\n        accessor.removeZone(this._viewZoneId);\n        this._viewZoneId = undefined;\n\n        if (this._viewZone) {\n          this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() - this._viewZone.heightInPx);\n\n          this._viewZone = undefined;\n        }\n      }\n    });\n  }\n\n  _applyTheme(theme) {\n    let inputStyles = {\n      inputActiveOptionBorder: theme.getColor(inputActiveOptionBorder),\n      inputActiveOptionBackground: theme.getColor(inputActiveOptionBackground),\n      inputActiveOptionForeground: theme.getColor(inputActiveOptionForeground),\n      inputBackground: theme.getColor(inputBackground),\n      inputForeground: theme.getColor(inputForeground),\n      inputBorder: theme.getColor(inputBorder),\n      inputValidationInfoBackground: theme.getColor(inputValidationInfoBackground),\n      inputValidationInfoForeground: theme.getColor(inputValidationInfoForeground),\n      inputValidationInfoBorder: theme.getColor(inputValidationInfoBorder),\n      inputValidationWarningBackground: theme.getColor(inputValidationWarningBackground),\n      inputValidationWarningForeground: theme.getColor(inputValidationWarningForeground),\n      inputValidationWarningBorder: theme.getColor(inputValidationWarningBorder),\n      inputValidationErrorBackground: theme.getColor(inputValidationErrorBackground),\n      inputValidationErrorForeground: theme.getColor(inputValidationErrorForeground),\n      inputValidationErrorBorder: theme.getColor(inputValidationErrorBorder)\n    };\n\n    this._findInput.style(inputStyles);\n\n    this._replaceInput.style(inputStyles);\n\n    this._toggleSelectionFind.style(inputStyles);\n  }\n\n  _tryUpdateWidgetWidth() {\n    if (!this._isVisible) {\n      return;\n    }\n\n    if (!dom.isInDOM(this._domNode)) {\n      // the widget is not in the DOM\n      return;\n    }\n\n    const layoutInfo = this._codeEditor.getLayoutInfo();\n\n    const editorContentWidth = layoutInfo.contentWidth;\n\n    if (editorContentWidth <= 0) {\n      // for example, diff view original editor\n      this._domNode.classList.add('hiddenEditor');\n\n      return;\n    } else if (this._domNode.classList.contains('hiddenEditor')) {\n      this._domNode.classList.remove('hiddenEditor');\n    }\n\n    const editorWidth = layoutInfo.width;\n    const minimapWidth = layoutInfo.minimap.minimapWidth;\n    let collapsedFindWidget = false;\n    let reducedFindWidget = false;\n    let narrowFindWidget = false;\n\n    if (this._resized) {\n      let widgetWidth = dom.getTotalWidth(this._domNode);\n\n      if (widgetWidth > FIND_WIDGET_INITIAL_WIDTH) {\n        // as the widget is resized by users, we may need to change the max width of the widget as the editor width changes.\n        this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;\n        this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n        return;\n      }\n    }\n\n    if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth >= editorWidth) {\n      reducedFindWidget = true;\n    }\n\n    if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth) {\n      narrowFindWidget = true;\n    }\n\n    if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth + 50) {\n      collapsedFindWidget = true;\n    }\n\n    this._domNode.classList.toggle('collapsed-find-widget', collapsedFindWidget);\n\n    this._domNode.classList.toggle('narrow-find-widget', narrowFindWidget);\n\n    this._domNode.classList.toggle('reduced-find-widget', reducedFindWidget);\n\n    if (!narrowFindWidget && !collapsedFindWidget) {\n      // the minimal left offset of findwidget is 15px.\n      this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;\n    }\n\n    if (this._resized) {\n      this._findInput.inputBox.layout();\n\n      let findInputWidth = this._findInput.inputBox.element.clientWidth;\n\n      if (findInputWidth > 0) {\n        this._replaceInput.width = findInputWidth;\n      }\n    } else if (this._isReplaceVisible) {\n      this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n    }\n  }\n\n  _getHeight() {\n    let totalheight = 0; // find input margin top\n\n    totalheight += 4; // find input height\n\n    totalheight += this._findInput.inputBox.height + 2\n    /** input box border */\n    ;\n\n    if (this._isReplaceVisible) {\n      // replace input margin\n      totalheight += 4;\n      totalheight += this._replaceInput.inputBox.height + 2\n      /** input box border */\n      ;\n    } // margin bottom\n\n\n    totalheight += 4;\n    return totalheight;\n  }\n\n  _tryUpdateHeight() {\n    const totalHeight = this._getHeight();\n\n    if (this._cachedHeight !== null && this._cachedHeight === totalHeight) {\n      return false;\n    }\n\n    this._cachedHeight = totalHeight;\n    this._domNode.style.height = `${totalHeight}px`;\n    return true;\n  } // ----- Public\n\n\n  focusFindInput() {\n    this._findInput.select(); // Edge browser requires focus() in addition to select()\n\n\n    this._findInput.focus();\n  }\n\n  focusReplaceInput() {\n    this._replaceInput.select(); // Edge browser requires focus() in addition to select()\n\n\n    this._replaceInput.focus();\n  }\n\n  highlightFindOptions() {\n    this._findInput.highlightFindOptions();\n  }\n\n  _updateSearchScope() {\n    if (!this._codeEditor.hasModel()) {\n      return;\n    }\n\n    if (this._toggleSelectionFind.checked) {\n      let selections = this._codeEditor.getSelections();\n\n      selections.map(selection => {\n        if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n          selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n        }\n\n        const currentMatch = this._state.currentMatch;\n\n        if (selection.startLineNumber !== selection.endLineNumber) {\n          if (!Range.equalsRange(selection, currentMatch)) {\n            return selection;\n          }\n        }\n\n        return null;\n      }).filter(element => !!element);\n\n      if (selections.length) {\n        this._state.change({\n          searchScope: selections\n        }, true);\n      }\n    }\n  }\n\n  _onFindInputMouseDown(e) {\n    // on linux, middle key does pasting.\n    if (e.middleButton) {\n      e.stopPropagation();\n    }\n  }\n\n  _onFindInputKeyDown(e) {\n    if (e.equals(ctrlKeyMod | 3\n    /* Enter */\n    )) {\n      if (this._keybindingService.dispatchEvent(e, e.target)) {\n        e.preventDefault();\n        return;\n      } else {\n        this._findInput.inputBox.insertAtCursor('\\n');\n\n        e.preventDefault();\n        return;\n      }\n    }\n\n    if (e.equals(2\n    /* Tab */\n    )) {\n      if (this._isReplaceVisible) {\n        this._replaceInput.focus();\n      } else {\n        this._findInput.focusOnCaseSensitive();\n      }\n\n      e.preventDefault();\n      return;\n    }\n\n    if (e.equals(2048\n    /* CtrlCmd */\n    | 18\n    /* DownArrow */\n    )) {\n      this._codeEditor.focus();\n\n      e.preventDefault();\n      return;\n    }\n\n    if (e.equals(16\n    /* UpArrow */\n    )) {\n      return stopPropagationForMultiLineUpwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\n    }\n\n    if (e.equals(18\n    /* DownArrow */\n    )) {\n      return stopPropagationForMultiLineDownwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\n    }\n  }\n\n  _onReplaceInputKeyDown(e) {\n    if (e.equals(ctrlKeyMod | 3\n    /* Enter */\n    )) {\n      if (this._keybindingService.dispatchEvent(e, e.target)) {\n        e.preventDefault();\n        return;\n      } else {\n        if (platform.isWindows && platform.isNative && !this._ctrlEnterReplaceAllWarningPrompted) {\n          // this is the first time when users press Ctrl + Enter to replace all\n          this._notificationService.info(nls.localize('ctrlEnter.keybindingChanged', 'Ctrl+Enter now inserts line break instead of replacing all. You can modify the keybinding for editor.action.replaceAll to override this behavior.'));\n\n          this._ctrlEnterReplaceAllWarningPrompted = true;\n\n          this._storageService.store(ctrlEnterReplaceAllWarningPromptedKey, true, 0\n          /* GLOBAL */\n          , 0\n          /* USER */\n          );\n        }\n\n        this._replaceInput.inputBox.insertAtCursor('\\n');\n\n        e.preventDefault();\n        return;\n      }\n    }\n\n    if (e.equals(2\n    /* Tab */\n    )) {\n      this._findInput.focusOnCaseSensitive();\n\n      e.preventDefault();\n      return;\n    }\n\n    if (e.equals(1024\n    /* Shift */\n    | 2\n    /* Tab */\n    )) {\n      this._findInput.focus();\n\n      e.preventDefault();\n      return;\n    }\n\n    if (e.equals(2048\n    /* CtrlCmd */\n    | 18\n    /* DownArrow */\n    )) {\n      this._codeEditor.focus();\n\n      e.preventDefault();\n      return;\n    }\n\n    if (e.equals(16\n    /* UpArrow */\n    )) {\n      return stopPropagationForMultiLineUpwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\n    }\n\n    if (e.equals(18\n    /* DownArrow */\n    )) {\n      return stopPropagationForMultiLineDownwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\n    }\n  } // ----- sash\n\n\n  getVerticalSashLeft(_sash) {\n    return 0;\n  } // ----- initialization\n\n\n  _keybindingLabelFor(actionId) {\n    let kb = this._keybindingService.lookupKeybinding(actionId);\n\n    if (!kb) {\n      return '';\n    }\n\n    return ` (${kb.getLabel()})`;\n  }\n\n  _buildDomNode() {\n    const flexibleHeight = true;\n    const flexibleWidth = true; // Find input\n\n    this._findInput = this._register(new ContextScopedFindInput(null, this._contextViewProvider, {\n      width: FIND_INPUT_AREA_WIDTH,\n      label: NLS_FIND_INPUT_LABEL,\n      placeholder: NLS_FIND_INPUT_PLACEHOLDER,\n      appendCaseSensitiveLabel: this._keybindingLabelFor(FIND_IDS.ToggleCaseSensitiveCommand),\n      appendWholeWordsLabel: this._keybindingLabelFor(FIND_IDS.ToggleWholeWordCommand),\n      appendRegexLabel: this._keybindingLabelFor(FIND_IDS.ToggleRegexCommand),\n      validation: value => {\n        if (value.length === 0 || !this._findInput.getRegex()) {\n          return null;\n        }\n\n        try {\n          // use `g` and `u` which are also used by the TextModel search\n          new RegExp(value, 'gu');\n          return null;\n        } catch (e) {\n          return {\n            content: e.message\n          };\n        }\n      },\n      flexibleHeight,\n      flexibleWidth,\n      flexibleMaxHeight: 118,\n      showHistoryHint: () => showHistoryKeybindingHint(this._keybindingService)\n    }, this._contextKeyService, true));\n\n    this._findInput.setRegex(!!this._state.isRegex);\n\n    this._findInput.setCaseSensitive(!!this._state.matchCase);\n\n    this._findInput.setWholeWords(!!this._state.wholeWord);\n\n    this._register(this._findInput.onKeyDown(e => this._onFindInputKeyDown(e)));\n\n    this._register(this._findInput.inputBox.onDidChange(() => {\n      if (this._ignoreChangeEvent) {\n        return;\n      }\n\n      this._state.change({\n        searchString: this._findInput.getValue()\n      }, true);\n    }));\n\n    this._register(this._findInput.onDidOptionChange(() => {\n      this._state.change({\n        isRegex: this._findInput.getRegex(),\n        wholeWord: this._findInput.getWholeWords(),\n        matchCase: this._findInput.getCaseSensitive()\n      }, true);\n    }));\n\n    this._register(this._findInput.onCaseSensitiveKeyDown(e => {\n      if (e.equals(1024\n      /* Shift */\n      | 2\n      /* Tab */\n      )) {\n        if (this._isReplaceVisible) {\n          this._replaceInput.focus();\n\n          e.preventDefault();\n        }\n      }\n    }));\n\n    this._register(this._findInput.onRegexKeyDown(e => {\n      if (e.equals(2\n      /* Tab */\n      )) {\n        if (this._isReplaceVisible) {\n          this._replaceInput.focusOnPreserve();\n\n          e.preventDefault();\n        }\n      }\n    }));\n\n    this._register(this._findInput.inputBox.onDidHeightChange(e => {\n      if (this._tryUpdateHeight()) {\n        this._showViewZone();\n      }\n    }));\n\n    if (platform.isLinux) {\n      this._register(this._findInput.onMouseDown(e => this._onFindInputMouseDown(e)));\n    }\n\n    this._matchesCount = document.createElement('div');\n    this._matchesCount.className = 'matchesCount';\n\n    this._updateMatchesCount(); // Previous button\n\n\n    this._prevBtn = this._register(new SimpleButton({\n      label: NLS_PREVIOUS_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.PreviousMatchFindAction),\n      icon: findPreviousMatchIcon,\n      onTrigger: () => {\n        this._codeEditor.getAction(FIND_IDS.PreviousMatchFindAction).run().then(undefined, onUnexpectedError);\n      }\n    })); // Next button\n\n    this._nextBtn = this._register(new SimpleButton({\n      label: NLS_NEXT_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.NextMatchFindAction),\n      icon: findNextMatchIcon,\n      onTrigger: () => {\n        this._codeEditor.getAction(FIND_IDS.NextMatchFindAction).run().then(undefined, onUnexpectedError);\n      }\n    }));\n    let findPart = document.createElement('div');\n    findPart.className = 'find-part';\n    findPart.appendChild(this._findInput.domNode);\n    const actionsContainer = document.createElement('div');\n    actionsContainer.className = 'find-actions';\n    findPart.appendChild(actionsContainer);\n    actionsContainer.appendChild(this._matchesCount);\n    actionsContainer.appendChild(this._prevBtn.domNode);\n    actionsContainer.appendChild(this._nextBtn.domNode); // Toggle selection button\n\n    this._toggleSelectionFind = this._register(new Checkbox({\n      icon: findSelectionIcon,\n      title: NLS_TOGGLE_SELECTION_FIND_TITLE + this._keybindingLabelFor(FIND_IDS.ToggleSearchScopeCommand),\n      isChecked: false\n    }));\n\n    this._register(this._toggleSelectionFind.onChange(() => {\n      if (this._toggleSelectionFind.checked) {\n        if (this._codeEditor.hasModel()) {\n          let selections = this._codeEditor.getSelections();\n\n          selections.map(selection => {\n            if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n              selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n            }\n\n            if (!selection.isEmpty()) {\n              return selection;\n            }\n\n            return null;\n          }).filter(element => !!element);\n\n          if (selections.length) {\n            this._state.change({\n              searchScope: selections\n            }, true);\n          }\n        }\n      } else {\n        this._state.change({\n          searchScope: null\n        }, true);\n      }\n    }));\n\n    actionsContainer.appendChild(this._toggleSelectionFind.domNode); // Close button\n\n    this._closeBtn = this._register(new SimpleButton({\n      label: NLS_CLOSE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.CloseFindWidgetCommand),\n      icon: widgetClose,\n      onTrigger: () => {\n        this._state.change({\n          isRevealed: false,\n          searchScope: null\n        }, false);\n      },\n      onKeyDown: e => {\n        if (e.equals(2\n        /* Tab */\n        )) {\n          if (this._isReplaceVisible) {\n            if (this._replaceBtn.isEnabled()) {\n              this._replaceBtn.focus();\n            } else {\n              this._codeEditor.focus();\n            }\n\n            e.preventDefault();\n          }\n        }\n      }\n    }));\n    actionsContainer.appendChild(this._closeBtn.domNode); // Replace input\n\n    this._replaceInput = this._register(new ContextScopedReplaceInput(null, undefined, {\n      label: NLS_REPLACE_INPUT_LABEL,\n      placeholder: NLS_REPLACE_INPUT_PLACEHOLDER,\n      appendPreserveCaseLabel: this._keybindingLabelFor(FIND_IDS.TogglePreserveCaseCommand),\n      history: [],\n      flexibleHeight,\n      flexibleWidth,\n      flexibleMaxHeight: 118,\n      showHistoryHint: () => showHistoryKeybindingHint(this._keybindingService)\n    }, this._contextKeyService, true));\n\n    this._replaceInput.setPreserveCase(!!this._state.preserveCase);\n\n    this._register(this._replaceInput.onKeyDown(e => this._onReplaceInputKeyDown(e)));\n\n    this._register(this._replaceInput.inputBox.onDidChange(() => {\n      this._state.change({\n        replaceString: this._replaceInput.inputBox.value\n      }, false);\n    }));\n\n    this._register(this._replaceInput.inputBox.onDidHeightChange(e => {\n      if (this._isReplaceVisible && this._tryUpdateHeight()) {\n        this._showViewZone();\n      }\n    }));\n\n    this._register(this._replaceInput.onDidOptionChange(() => {\n      this._state.change({\n        preserveCase: this._replaceInput.getPreserveCase()\n      }, true);\n    }));\n\n    this._register(this._replaceInput.onPreserveCaseKeyDown(e => {\n      if (e.equals(2\n      /* Tab */\n      )) {\n        if (this._prevBtn.isEnabled()) {\n          this._prevBtn.focus();\n        } else if (this._nextBtn.isEnabled()) {\n          this._nextBtn.focus();\n        } else if (this._toggleSelectionFind.enabled) {\n          this._toggleSelectionFind.focus();\n        } else if (this._closeBtn.isEnabled()) {\n          this._closeBtn.focus();\n        }\n\n        e.preventDefault();\n      }\n    })); // Replace one button\n\n\n    this._replaceBtn = this._register(new SimpleButton({\n      label: NLS_REPLACE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceOneAction),\n      icon: findReplaceIcon,\n      onTrigger: () => {\n        this._controller.replace();\n      },\n      onKeyDown: e => {\n        if (e.equals(1024\n        /* Shift */\n        | 2\n        /* Tab */\n        )) {\n          this._closeBtn.focus();\n\n          e.preventDefault();\n        }\n      }\n    })); // Replace all button\n\n    this._replaceAllBtn = this._register(new SimpleButton({\n      label: NLS_REPLACE_ALL_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceAllAction),\n      icon: findReplaceAllIcon,\n      onTrigger: () => {\n        this._controller.replaceAll();\n      }\n    }));\n    let replacePart = document.createElement('div');\n    replacePart.className = 'replace-part';\n    replacePart.appendChild(this._replaceInput.domNode);\n    const replaceActionsContainer = document.createElement('div');\n    replaceActionsContainer.className = 'replace-actions';\n    replacePart.appendChild(replaceActionsContainer);\n    replaceActionsContainer.appendChild(this._replaceBtn.domNode);\n    replaceActionsContainer.appendChild(this._replaceAllBtn.domNode); // Toggle replace button\n\n    this._toggleReplaceBtn = this._register(new SimpleButton({\n      label: NLS_TOGGLE_REPLACE_MODE_BTN_LABEL,\n      className: 'codicon toggle left',\n      onTrigger: () => {\n        this._state.change({\n          isReplaceRevealed: !this._isReplaceVisible\n        }, false);\n\n        if (this._isReplaceVisible) {\n          this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n\n          this._replaceInput.inputBox.layout();\n        }\n\n        this._showViewZone();\n      }\n    }));\n\n    this._toggleReplaceBtn.setExpanded(this._isReplaceVisible); // Widget\n\n\n    this._domNode = document.createElement('div');\n    this._domNode.className = 'editor-widget find-widget';\n\n    this._domNode.setAttribute('aria-hidden', 'true'); // We need to set this explicitly, otherwise on IE11, the width inheritence of flex doesn't work.\n\n\n    this._domNode.style.width = `${FIND_WIDGET_INITIAL_WIDTH}px`;\n\n    this._domNode.appendChild(this._toggleReplaceBtn.domNode);\n\n    this._domNode.appendChild(findPart);\n\n    this._domNode.appendChild(replacePart);\n\n    this._resizeSash = new Sash(this._domNode, this, {\n      orientation: 0\n      /* VERTICAL */\n      ,\n      size: 2\n    });\n    this._resized = false;\n    let originalWidth = FIND_WIDGET_INITIAL_WIDTH;\n\n    this._register(this._resizeSash.onDidStart(() => {\n      originalWidth = dom.getTotalWidth(this._domNode);\n    }));\n\n    this._register(this._resizeSash.onDidChange(evt => {\n      this._resized = true;\n      let width = originalWidth + evt.startX - evt.currentX;\n\n      if (width < FIND_WIDGET_INITIAL_WIDTH) {\n        // narrow down the find widget should be handled by CSS.\n        return;\n      }\n\n      const maxWidth = parseFloat(dom.getComputedStyle(this._domNode).maxWidth) || 0;\n\n      if (width > maxWidth) {\n        return;\n      }\n\n      this._domNode.style.width = `${width}px`;\n\n      if (this._isReplaceVisible) {\n        this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n      }\n\n      this._findInput.inputBox.layout();\n\n      this._tryUpdateHeight();\n    }));\n\n    this._register(this._resizeSash.onDidReset(() => {\n      // users double click on the sash\n      const currentWidth = dom.getTotalWidth(this._domNode);\n\n      if (currentWidth < FIND_WIDGET_INITIAL_WIDTH) {\n        // The editor is narrow and the width of the find widget is controlled fully by CSS.\n        return;\n      }\n\n      let width = FIND_WIDGET_INITIAL_WIDTH;\n\n      if (!this._resized || currentWidth === FIND_WIDGET_INITIAL_WIDTH) {\n        // 1. never resized before, double click should maximizes it\n        // 2. users resized it already but its width is the same as default\n        const layoutInfo = this._codeEditor.getLayoutInfo();\n\n        width = layoutInfo.width - 28 - layoutInfo.minimap.minimapWidth - 15;\n        this._resized = true;\n      } else {\n        /**\n         * no op, the find widget should be shrinked to its default size.\n         */\n      }\n\n      this._domNode.style.width = `${width}px`;\n\n      if (this._isReplaceVisible) {\n        this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n      }\n\n      this._findInput.inputBox.layout();\n    }));\n  }\n\n  updateAccessibilitySupport() {\n    const value = this._codeEditor.getOption(2\n    /* accessibilitySupport */\n    );\n\n    this._findInput.setFocusInputOnOptionClick(value !== 2\n    /* Enabled */\n    );\n  }\n\n}\nFindWidget.ID = 'editor.contrib.findWidget';\nexport class SimpleButton extends Widget {\n  constructor(opts) {\n    super();\n    this._opts = opts;\n    let className = 'button';\n\n    if (this._opts.className) {\n      className = className + ' ' + this._opts.className;\n    }\n\n    if (this._opts.icon) {\n      className = className + ' ' + ThemeIcon.asClassName(this._opts.icon);\n    }\n\n    this._domNode = document.createElement('div');\n    this._domNode.title = this._opts.label;\n    this._domNode.tabIndex = 0;\n    this._domNode.className = className;\n\n    this._domNode.setAttribute('role', 'button');\n\n    this._domNode.setAttribute('aria-label', this._opts.label);\n\n    this.onclick(this._domNode, e => {\n      this._opts.onTrigger();\n\n      e.preventDefault();\n    });\n    this.onkeydown(this._domNode, e => {\n      if (e.equals(10\n      /* Space */\n      ) || e.equals(3\n      /* Enter */\n      )) {\n        this._opts.onTrigger();\n\n        e.preventDefault();\n        return;\n      }\n\n      if (this._opts.onKeyDown) {\n        this._opts.onKeyDown(e);\n      }\n    });\n  }\n\n  get domNode() {\n    return this._domNode;\n  }\n\n  isEnabled() {\n    return this._domNode.tabIndex >= 0;\n  }\n\n  focus() {\n    this._domNode.focus();\n  }\n\n  setEnabled(enabled) {\n    this._domNode.classList.toggle('disabled', !enabled);\n\n    this._domNode.setAttribute('aria-disabled', String(!enabled));\n\n    this._domNode.tabIndex = enabled ? 0 : -1;\n  }\n\n  setExpanded(expanded) {\n    this._domNode.setAttribute('aria-expanded', String(!!expanded));\n\n    if (expanded) {\n      this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findCollapsedIcon));\n\n      this._domNode.classList.add(...ThemeIcon.asClassNameArray(findExpandedIcon));\n    } else {\n      this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findExpandedIcon));\n\n      this._domNode.classList.add(...ThemeIcon.asClassNameArray(findCollapsedIcon));\n    }\n  }\n\n} // theming\n\nregisterThemingParticipant((theme, collector) => {\n  const addBackgroundColorRule = (selector, color) => {\n    if (color) {\n      collector.addRule(`.monaco-editor ${selector} { background-color: ${color}; }`);\n    }\n  };\n\n  addBackgroundColorRule('.findMatch', theme.getColor(editorFindMatchHighlight));\n  addBackgroundColorRule('.currentFindMatch', theme.getColor(editorFindMatch));\n  addBackgroundColorRule('.findScope', theme.getColor(editorFindRangeHighlight));\n  const widgetBackground = theme.getColor(editorWidgetBackground);\n  addBackgroundColorRule('.find-widget', widgetBackground);\n  const widgetShadowColor = theme.getColor(widgetShadow);\n\n  if (widgetShadowColor) {\n    collector.addRule(`.monaco-editor .find-widget { box-shadow: 0 0 8px 2px ${widgetShadowColor}; }`);\n  }\n\n  const findMatchHighlightBorder = theme.getColor(editorFindMatchHighlightBorder);\n\n  if (findMatchHighlightBorder) {\n    collector.addRule(`.monaco-editor .findMatch { border: 1px ${theme.type === 'hc' ? 'dotted' : 'solid'} ${findMatchHighlightBorder}; box-sizing: border-box; }`);\n  }\n\n  const findMatchBorder = theme.getColor(editorFindMatchBorder);\n\n  if (findMatchBorder) {\n    collector.addRule(`.monaco-editor .currentFindMatch { border: 2px solid ${findMatchBorder}; padding: 1px; box-sizing: border-box; }`);\n  }\n\n  const findRangeHighlightBorder = theme.getColor(editorFindRangeHighlightBorder);\n\n  if (findRangeHighlightBorder) {\n    collector.addRule(`.monaco-editor .findScope { border: 1px ${theme.type === 'hc' ? 'dashed' : 'solid'} ${findRangeHighlightBorder}; }`);\n  }\n\n  const hcBorder = theme.getColor(contrastBorder);\n\n  if (hcBorder) {\n    collector.addRule(`.monaco-editor .find-widget { border: 1px solid ${hcBorder}; }`);\n  }\n\n  const foreground = theme.getColor(editorWidgetForeground);\n\n  if (foreground) {\n    collector.addRule(`.monaco-editor .find-widget { color: ${foreground}; }`);\n  }\n\n  const error = theme.getColor(errorForeground);\n\n  if (error) {\n    collector.addRule(`.monaco-editor .find-widget.no-results .matchesCount { color: ${error}; }`);\n  }\n\n  const resizeBorderBackground = theme.getColor(editorWidgetResizeBorder);\n\n  if (resizeBorderBackground) {\n    collector.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${resizeBorderBackground}; }`);\n  } else {\n    const border = theme.getColor(editorWidgetBorder);\n\n    if (border) {\n      collector.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${border}; }`);\n    }\n  } // Action bars\n\n\n  const toolbarHoverBackgroundColor = theme.getColor(toolbarHoverBackground);\n\n  if (toolbarHoverBackgroundColor) {\n    collector.addRule(`\n\t\t.monaco-editor .find-widget .button:not(.disabled):hover,\n\t\t.monaco-editor .find-widget .codicon-find-selection:hover {\n\t\t\tbackground-color: ${toolbarHoverBackgroundColor} !important;\n\t\t}\n\t`);\n  } // This rule is used to override the outline color for synthetic-focus find input.\n\n\n  const focusOutline = theme.getColor(focusBorder);\n\n  if (focusOutline) {\n    collector.addRule(`.monaco-editor .find-widget .monaco-inputbox.synthetic-focus { outline-color: ${focusOutline}; }`);\n  }\n});","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findWidget.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","dom","alert","alertFn","Checkbox","Sash","Widget","Delayer","Codicon","onUnexpectedError","toDisposable","platform","strings","Range","CONTEXT_FIND_INPUT_FOCUSED","CONTEXT_REPLACE_INPUT_FOCUSED","FIND_IDS","MATCHES_LIMIT","nls","ContextScopedFindInput","ContextScopedReplaceInput","showHistoryKeybindingHint","contrastBorder","editorFindMatch","editorFindMatchBorder","editorFindMatchHighlight","editorFindMatchHighlightBorder","editorFindRangeHighlight","editorFindRangeHighlightBorder","editorWidgetBackground","editorWidgetBorder","editorWidgetForeground","editorWidgetResizeBorder","errorForeground","focusBorder","inputActiveOptionBackground","inputActiveOptionBorder","inputActiveOptionForeground","inputBackground","inputBorder","inputForeground","inputValidationErrorBackground","inputValidationErrorBorder","inputValidationErrorForeground","inputValidationInfoBackground","inputValidationInfoBorder","inputValidationInfoForeground","inputValidationWarningBackground","inputValidationWarningBorder","inputValidationWarningForeground","toolbarHoverBackground","widgetShadow","registerIcon","widgetClose","registerThemingParticipant","ThemeIcon","findSelectionIcon","selection","localize","findCollapsedIcon","chevronRight","findExpandedIcon","chevronDown","findReplaceIcon","replace","findReplaceAllIcon","replaceAll","findPreviousMatchIcon","arrowUp","findNextMatchIcon","arrowDown","NLS_FIND_INPUT_LABEL","NLS_FIND_INPUT_PLACEHOLDER","NLS_PREVIOUS_MATCH_BTN_LABEL","NLS_NEXT_MATCH_BTN_LABEL","NLS_TOGGLE_SELECTION_FIND_TITLE","NLS_CLOSE_BTN_LABEL","NLS_REPLACE_INPUT_LABEL","NLS_REPLACE_INPUT_PLACEHOLDER","NLS_REPLACE_BTN_LABEL","NLS_REPLACE_ALL_BTN_LABEL","NLS_TOGGLE_REPLACE_MODE_BTN_LABEL","NLS_MATCHES_COUNT_LIMIT_TITLE","NLS_MATCHES_LOCATION","NLS_NO_RESULTS","FIND_WIDGET_INITIAL_WIDTH","PART_WIDTH","FIND_INPUT_AREA_WIDTH","MAX_MATCHES_COUNT_WIDTH","FIND_INPUT_AREA_HEIGHT","ctrlEnterReplaceAllWarningPromptedKey","ctrlKeyMod","isMacintosh","FindWidgetViewZone","constructor","afterLineNumber","heightInPx","suppressMouseDown","domNode","document","createElement","className","stopPropagationForMultiLineUpwards","event","textarea","isMultiline","match","selectionStart","stopPropagation","stopPropagationForMultiLineDownwards","selectionEnd","length","FindWidget","codeEditor","controller","state","contextViewProvider","keybindingService","contextKeyService","themeService","storageService","notificationService","_cachedHeight","_revealTimeouts","_codeEditor","_controller","_state","_contextViewProvider","_keybindingService","_contextKeyService","_storageService","_notificationService","_ctrlEnterReplaceAllWarningPrompted","getBoolean","_isVisible","_isReplaceVisible","_ignoreChangeEvent","_updateHistoryDelayer","_register","cancel","onFindReplaceStateChange","_onStateChanged","_buildDomNode","_updateButtons","_tryUpdateWidgetWidth","_findInput","inputBox","layout","onDidChangeConfiguration","hasChanged","getOption","change","isReplaceRevealed","updateAccessibilitySupport","addExtraSpaceOnTop","_viewZone","_showViewZone","_removeViewZone","onDidChangeCursorSelection","_updateToggleSelectionFindButton","onDidFocusEditorWidget","globalBufferTerm","getGlobalBufferTerm","searchString","select","_findInputFocused","bindTo","_findFocusTracker","trackFocus","inputElement","onDidFocus","set","_updateSearchScope","onDidBlur","_replaceInputFocused","_replaceFocusTracker","_replaceInput","addOverlayWidget","_applyTheme","getColorTheme","onDidColorThemeChange","bind","onDidChangeModel","_viewZoneId","undefined","onDidScrollChange","scrollTopChanged","_layoutViewZone","setTimeout","getId","ID","getDomNode","_domNode","getPosition","preference","setValue","replaceString","isRevealed","_reveal","_hide","width","getTotalWidth","_tryUpdateHeight","isRegex","setRegex","wholeWord","setWholeWords","matchCase","setCaseSensitive","preserveCase","setPreserveCase","searchScope","_toggleSelectionFind","checked","matchesCount","matchesPosition","showRedOutline","classList","toggle","_updateMatchesCount","currentMatch","updateHistory","_delayedUpdateHistory","loop","trigger","_updateHistory","addToHistory","_matchesCount","style","minWidth","title","firstChild","removeChild","label","String","format","appendChild","createTextNode","_getAriaLabel","Math","max","clientWidth","ariaLabel","startLineNumber","startColumn","model","getModel","getLineCount","lineContent","getLineContent","getSelection","isSelection","endLineNumber","endColumn","isChecked","enable","disable","setEnabled","_closeBtn","findInputIsNonEmpty","_prevBtn","canNavigateBack","_nextBtn","canNavigateForward","_replaceBtn","_replaceAllBtn","_toggleReplaceBtn","setExpanded","canReplace","forEach","clearTimeout","autoFindInSelection","isSelectionMultipleLine","push","add","setAttribute","validate","layoutOverlayWidget","adjustEditorScrollTop","seedSearchStringFromSelection","editorCoords","getDomNodePagePosition","startCoords","getScrolledVisiblePosition","getStartPosition","startLeft","left","startTop","top","leftOfFindWidget","getTopLeftOffset","endCoords","getEndPosition","endLeft","focusTheEditor","remove","clearMessage","focus","targetScrollTop","viewZone","changeViewZones","accessor","_getHeight","addZone","setScrollTop","getScrollTop","adjustScroll","newHeight","scrollAdjustment","layoutZone","removeZone","theme","inputStyles","getColor","isInDOM","layoutInfo","getLayoutInfo","editorContentWidth","contentWidth","contains","editorWidth","minimapWidth","minimap","collapsedFindWidget","reducedFindWidget","narrowFindWidget","_resized","widgetWidth","maxWidth","findInputWidth","element","totalheight","height","totalHeight","focusFindInput","focusReplaceInput","highlightFindOptions","hasModel","selections","getSelections","map","setEndPosition","getLineMaxColumn","equalsRange","filter","_onFindInputMouseDown","middleButton","_onFindInputKeyDown","equals","dispatchEvent","target","preventDefault","insertAtCursor","focusOnCaseSensitive","getValue","querySelector","_onReplaceInputKeyDown","isWindows","isNative","info","store","getVerticalSashLeft","_sash","_keybindingLabelFor","actionId","kb","lookupKeybinding","getLabel","flexibleHeight","flexibleWidth","placeholder","appendCaseSensitiveLabel","ToggleCaseSensitiveCommand","appendWholeWordsLabel","ToggleWholeWordCommand","appendRegexLabel","ToggleRegexCommand","validation","getRegex","RegExp","content","message","flexibleMaxHeight","showHistoryHint","onKeyDown","onDidChange","onDidOptionChange","getWholeWords","getCaseSensitive","onCaseSensitiveKeyDown","onRegexKeyDown","focusOnPreserve","onDidHeightChange","isLinux","onMouseDown","SimpleButton","PreviousMatchFindAction","icon","onTrigger","getAction","run","NextMatchFindAction","findPart","actionsContainer","ToggleSearchScopeCommand","onChange","isEmpty","CloseFindWidgetCommand","isEnabled","appendPreserveCaseLabel","TogglePreserveCaseCommand","history","getPreserveCase","onPreserveCaseKeyDown","enabled","ReplaceOneAction","ReplaceAllAction","replacePart","replaceActionsContainer","_resizeSash","orientation","size","originalWidth","onDidStart","evt","startX","currentX","parseFloat","getComputedStyle","onDidReset","currentWidth","setFocusInputOnOptionClick","opts","_opts","asClassName","tabIndex","onclick","onkeydown","expanded","asClassNameArray","collector","addBackgroundColorRule","selector","color","addRule","widgetBackground","widgetShadowColor","findMatchHighlightBorder","type","findMatchBorder","findRangeHighlightBorder","hcBorder","foreground","error","resizeBorderBackground","border","toolbarHoverBackgroundColor","focusOutline"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { alert as alertFn } from '../../../../base/browser/ui/aria/aria.js';\nimport { Checkbox } from '../../../../base/browser/ui/checkbox/checkbox.js';\nimport { Sash } from '../../../../base/browser/ui/sash/sash.js';\nimport { Widget } from '../../../../base/browser/ui/widget.js';\nimport { Delayer } from '../../../../base/common/async.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { toDisposable } from '../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport './findWidget.css';\nimport { Range } from '../../../common/core/range.js';\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_REPLACE_INPUT_FOCUSED, FIND_IDS, MATCHES_LIMIT } from './findModel.js';\nimport * as nls from '../../../../nls.js';\nimport { ContextScopedFindInput, ContextScopedReplaceInput } from '../../../../platform/history/browser/contextScopedHistoryWidget.js';\nimport { showHistoryKeybindingHint } from '../../../../platform/history/browser/historyWidgetKeybindingHint.js';\nimport { contrastBorder, editorFindMatch, editorFindMatchBorder, editorFindMatchHighlight, editorFindMatchHighlightBorder, editorFindRangeHighlight, editorFindRangeHighlightBorder, editorWidgetBackground, editorWidgetBorder, editorWidgetForeground, editorWidgetResizeBorder, errorForeground, focusBorder, inputActiveOptionBackground, inputActiveOptionBorder, inputActiveOptionForeground, inputBackground, inputBorder, inputForeground, inputValidationErrorBackground, inputValidationErrorBorder, inputValidationErrorForeground, inputValidationInfoBackground, inputValidationInfoBorder, inputValidationInfoForeground, inputValidationWarningBackground, inputValidationWarningBorder, inputValidationWarningForeground, toolbarHoverBackground, widgetShadow } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerIcon, widgetClose } from '../../../../platform/theme/common/iconRegistry.js';\nimport { registerThemingParticipant, ThemeIcon } from '../../../../platform/theme/common/themeService.js';\nconst findSelectionIcon = registerIcon('find-selection', Codicon.selection, nls.localize('findSelectionIcon', 'Icon for \\'Find in Selection\\' in the editor find widget.'));\nconst findCollapsedIcon = registerIcon('find-collapsed', Codicon.chevronRight, nls.localize('findCollapsedIcon', 'Icon to indicate that the editor find widget is collapsed.'));\nconst findExpandedIcon = registerIcon('find-expanded', Codicon.chevronDown, nls.localize('findExpandedIcon', 'Icon to indicate that the editor find widget is expanded.'));\nexport const findReplaceIcon = registerIcon('find-replace', Codicon.replace, nls.localize('findReplaceIcon', 'Icon for \\'Replace\\' in the editor find widget.'));\nexport const findReplaceAllIcon = registerIcon('find-replace-all', Codicon.replaceAll, nls.localize('findReplaceAllIcon', 'Icon for \\'Replace All\\' in the editor find widget.'));\nexport const findPreviousMatchIcon = registerIcon('find-previous-match', Codicon.arrowUp, nls.localize('findPreviousMatchIcon', 'Icon for \\'Find Previous\\' in the editor find widget.'));\nexport const findNextMatchIcon = registerIcon('find-next-match', Codicon.arrowDown, nls.localize('findNextMatchIcon', 'Icon for \\'Find Next\\' in the editor find widget.'));\nconst NLS_FIND_INPUT_LABEL = nls.localize('label.find', \"Find\");\nconst NLS_FIND_INPUT_PLACEHOLDER = nls.localize('placeholder.find', \"Find\");\nconst NLS_PREVIOUS_MATCH_BTN_LABEL = nls.localize('label.previousMatchButton', \"Previous Match\");\nconst NLS_NEXT_MATCH_BTN_LABEL = nls.localize('label.nextMatchButton', \"Next Match\");\nconst NLS_TOGGLE_SELECTION_FIND_TITLE = nls.localize('label.toggleSelectionFind', \"Find in Selection\");\nconst NLS_CLOSE_BTN_LABEL = nls.localize('label.closeButton', \"Close\");\nconst NLS_REPLACE_INPUT_LABEL = nls.localize('label.replace', \"Replace\");\nconst NLS_REPLACE_INPUT_PLACEHOLDER = nls.localize('placeholder.replace', \"Replace\");\nconst NLS_REPLACE_BTN_LABEL = nls.localize('label.replaceButton', \"Replace\");\nconst NLS_REPLACE_ALL_BTN_LABEL = nls.localize('label.replaceAllButton', \"Replace All\");\nconst NLS_TOGGLE_REPLACE_MODE_BTN_LABEL = nls.localize('label.toggleReplaceButton', \"Toggle Replace\");\nconst NLS_MATCHES_COUNT_LIMIT_TITLE = nls.localize('title.matchesCountLimit', \"Only the first {0} results are highlighted, but all find operations work on the entire text.\", MATCHES_LIMIT);\nexport const NLS_MATCHES_LOCATION = nls.localize('label.matchesLocation', \"{0} of {1}\");\nexport const NLS_NO_RESULTS = nls.localize('label.noResults', \"No results\");\nconst FIND_WIDGET_INITIAL_WIDTH = 419;\nconst PART_WIDTH = 275;\nconst FIND_INPUT_AREA_WIDTH = PART_WIDTH - 54;\nlet MAX_MATCHES_COUNT_WIDTH = 69;\n// let FIND_ALL_CONTROLS_WIDTH = 17/** Find Input margin-left */ + (MAX_MATCHES_COUNT_WIDTH + 3 + 1) /** Match Results */ + 23 /** Button */ * 4 + 2/** sash */;\nconst FIND_INPUT_AREA_HEIGHT = 33; // The height of Find Widget when Replace Input is not visible.\nconst ctrlEnterReplaceAllWarningPromptedKey = 'ctrlEnterReplaceAll.windows.donotask';\nconst ctrlKeyMod = (platform.isMacintosh ? 256 /* WinCtrl */ : 2048 /* CtrlCmd */);\nexport class FindWidgetViewZone {\n    constructor(afterLineNumber) {\n        this.afterLineNumber = afterLineNumber;\n        this.heightInPx = FIND_INPUT_AREA_HEIGHT;\n        this.suppressMouseDown = false;\n        this.domNode = document.createElement('div');\n        this.domNode.className = 'dock-find-viewzone';\n    }\n}\nfunction stopPropagationForMultiLineUpwards(event, value, textarea) {\n    const isMultiline = !!value.match(/\\n/);\n    if (textarea && isMultiline && textarea.selectionStart > 0) {\n        event.stopPropagation();\n        return;\n    }\n}\nfunction stopPropagationForMultiLineDownwards(event, value, textarea) {\n    const isMultiline = !!value.match(/\\n/);\n    if (textarea && isMultiline && textarea.selectionEnd < textarea.value.length) {\n        event.stopPropagation();\n        return;\n    }\n}\nexport class FindWidget extends Widget {\n    constructor(codeEditor, controller, state, contextViewProvider, keybindingService, contextKeyService, themeService, storageService, notificationService) {\n        super();\n        this._cachedHeight = null;\n        this._revealTimeouts = [];\n        this._codeEditor = codeEditor;\n        this._controller = controller;\n        this._state = state;\n        this._contextViewProvider = contextViewProvider;\n        this._keybindingService = keybindingService;\n        this._contextKeyService = contextKeyService;\n        this._storageService = storageService;\n        this._notificationService = notificationService;\n        this._ctrlEnterReplaceAllWarningPrompted = !!storageService.getBoolean(ctrlEnterReplaceAllWarningPromptedKey, 0 /* GLOBAL */);\n        this._isVisible = false;\n        this._isReplaceVisible = false;\n        this._ignoreChangeEvent = false;\n        this._updateHistoryDelayer = new Delayer(500);\n        this._register(toDisposable(() => this._updateHistoryDelayer.cancel()));\n        this._register(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\n        this._buildDomNode();\n        this._updateButtons();\n        this._tryUpdateWidgetWidth();\n        this._findInput.inputBox.layout();\n        this._register(this._codeEditor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(81 /* readOnly */)) {\n                if (this._codeEditor.getOption(81 /* readOnly */)) {\n                    // Hide replace part if editor becomes read only\n                    this._state.change({ isReplaceRevealed: false }, false);\n                }\n                this._updateButtons();\n            }\n            if (e.hasChanged(131 /* layoutInfo */)) {\n                this._tryUpdateWidgetWidth();\n            }\n            if (e.hasChanged(2 /* accessibilitySupport */)) {\n                this.updateAccessibilitySupport();\n            }\n            if (e.hasChanged(35 /* find */)) {\n                const addExtraSpaceOnTop = this._codeEditor.getOption(35 /* find */).addExtraSpaceOnTop;\n                if (addExtraSpaceOnTop && !this._viewZone) {\n                    this._viewZone = new FindWidgetViewZone(0);\n                    this._showViewZone();\n                }\n                if (!addExtraSpaceOnTop && this._viewZone) {\n                    this._removeViewZone();\n                }\n            }\n        }));\n        this.updateAccessibilitySupport();\n        this._register(this._codeEditor.onDidChangeCursorSelection(() => {\n            if (this._isVisible) {\n                this._updateToggleSelectionFindButton();\n            }\n        }));\n        this._register(this._codeEditor.onDidFocusEditorWidget(() => __awaiter(this, void 0, void 0, function* () {\n            if (this._isVisible) {\n                let globalBufferTerm = yield this._controller.getGlobalBufferTerm();\n                if (globalBufferTerm && globalBufferTerm !== this._state.searchString) {\n                    this._state.change({ searchString: globalBufferTerm }, false);\n                    this._findInput.select();\n                }\n            }\n        })));\n        this._findInputFocused = CONTEXT_FIND_INPUT_FOCUSED.bindTo(contextKeyService);\n        this._findFocusTracker = this._register(dom.trackFocus(this._findInput.inputBox.inputElement));\n        this._register(this._findFocusTracker.onDidFocus(() => {\n            this._findInputFocused.set(true);\n            this._updateSearchScope();\n        }));\n        this._register(this._findFocusTracker.onDidBlur(() => {\n            this._findInputFocused.set(false);\n        }));\n        this._replaceInputFocused = CONTEXT_REPLACE_INPUT_FOCUSED.bindTo(contextKeyService);\n        this._replaceFocusTracker = this._register(dom.trackFocus(this._replaceInput.inputBox.inputElement));\n        this._register(this._replaceFocusTracker.onDidFocus(() => {\n            this._replaceInputFocused.set(true);\n            this._updateSearchScope();\n        }));\n        this._register(this._replaceFocusTracker.onDidBlur(() => {\n            this._replaceInputFocused.set(false);\n        }));\n        this._codeEditor.addOverlayWidget(this);\n        if (this._codeEditor.getOption(35 /* find */).addExtraSpaceOnTop) {\n            this._viewZone = new FindWidgetViewZone(0); // Put it before the first line then users can scroll beyond the first line.\n        }\n        this._applyTheme(themeService.getColorTheme());\n        this._register(themeService.onDidColorThemeChange(this._applyTheme.bind(this)));\n        this._register(this._codeEditor.onDidChangeModel(() => {\n            if (!this._isVisible) {\n                return;\n            }\n            this._viewZoneId = undefined;\n        }));\n        this._register(this._codeEditor.onDidScrollChange((e) => {\n            if (e.scrollTopChanged) {\n                this._layoutViewZone();\n                return;\n            }\n            // for other scroll changes, layout the viewzone in next tick to avoid ruining current rendering.\n            setTimeout(() => {\n                this._layoutViewZone();\n            }, 0);\n        }));\n    }\n    // ----- IOverlayWidget API\n    getId() {\n        return FindWidget.ID;\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    getPosition() {\n        if (this._isVisible) {\n            return {\n                preference: 0 /* TOP_RIGHT_CORNER */\n            };\n        }\n        return null;\n    }\n    // ----- React to state changes\n    _onStateChanged(e) {\n        if (e.searchString) {\n            try {\n                this._ignoreChangeEvent = true;\n                this._findInput.setValue(this._state.searchString);\n            }\n            finally {\n                this._ignoreChangeEvent = false;\n            }\n            this._updateButtons();\n        }\n        if (e.replaceString) {\n            this._replaceInput.inputBox.value = this._state.replaceString;\n        }\n        if (e.isRevealed) {\n            if (this._state.isRevealed) {\n                this._reveal();\n            }\n            else {\n                this._hide(true);\n            }\n        }\n        if (e.isReplaceRevealed) {\n            if (this._state.isReplaceRevealed) {\n                if (!this._codeEditor.getOption(81 /* readOnly */) && !this._isReplaceVisible) {\n                    this._isReplaceVisible = true;\n                    this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n                    this._updateButtons();\n                    this._replaceInput.inputBox.layout();\n                }\n            }\n            else {\n                if (this._isReplaceVisible) {\n                    this._isReplaceVisible = false;\n                    this._updateButtons();\n                }\n            }\n        }\n        if ((e.isRevealed || e.isReplaceRevealed) && (this._state.isRevealed || this._state.isReplaceRevealed)) {\n            if (this._tryUpdateHeight()) {\n                this._showViewZone();\n            }\n        }\n        if (e.isRegex) {\n            this._findInput.setRegex(this._state.isRegex);\n        }\n        if (e.wholeWord) {\n            this._findInput.setWholeWords(this._state.wholeWord);\n        }\n        if (e.matchCase) {\n            this._findInput.setCaseSensitive(this._state.matchCase);\n        }\n        if (e.preserveCase) {\n            this._replaceInput.setPreserveCase(this._state.preserveCase);\n        }\n        if (e.searchScope) {\n            if (this._state.searchScope) {\n                this._toggleSelectionFind.checked = true;\n            }\n            else {\n                this._toggleSelectionFind.checked = false;\n            }\n            this._updateToggleSelectionFindButton();\n        }\n        if (e.searchString || e.matchesCount || e.matchesPosition) {\n            let showRedOutline = (this._state.searchString.length > 0 && this._state.matchesCount === 0);\n            this._domNode.classList.toggle('no-results', showRedOutline);\n            this._updateMatchesCount();\n            this._updateButtons();\n        }\n        if (e.searchString || e.currentMatch) {\n            this._layoutViewZone();\n        }\n        if (e.updateHistory) {\n            this._delayedUpdateHistory();\n        }\n        if (e.loop) {\n            this._updateButtons();\n        }\n    }\n    _delayedUpdateHistory() {\n        this._updateHistoryDelayer.trigger(this._updateHistory.bind(this)).then(undefined, onUnexpectedError);\n    }\n    _updateHistory() {\n        if (this._state.searchString) {\n            this._findInput.inputBox.addToHistory();\n        }\n        if (this._state.replaceString) {\n            this._replaceInput.inputBox.addToHistory();\n        }\n    }\n    _updateMatchesCount() {\n        this._matchesCount.style.minWidth = MAX_MATCHES_COUNT_WIDTH + 'px';\n        if (this._state.matchesCount >= MATCHES_LIMIT) {\n            this._matchesCount.title = NLS_MATCHES_COUNT_LIMIT_TITLE;\n        }\n        else {\n            this._matchesCount.title = '';\n        }\n        // remove previous content\n        if (this._matchesCount.firstChild) {\n            this._matchesCount.removeChild(this._matchesCount.firstChild);\n        }\n        let label;\n        if (this._state.matchesCount > 0) {\n            let matchesCount = String(this._state.matchesCount);\n            if (this._state.matchesCount >= MATCHES_LIMIT) {\n                matchesCount += '+';\n            }\n            let matchesPosition = String(this._state.matchesPosition);\n            if (matchesPosition === '0') {\n                matchesPosition = '?';\n            }\n            label = strings.format(NLS_MATCHES_LOCATION, matchesPosition, matchesCount);\n        }\n        else {\n            label = NLS_NO_RESULTS;\n        }\n        this._matchesCount.appendChild(document.createTextNode(label));\n        alertFn(this._getAriaLabel(label, this._state.currentMatch, this._state.searchString));\n        MAX_MATCHES_COUNT_WIDTH = Math.max(MAX_MATCHES_COUNT_WIDTH, this._matchesCount.clientWidth);\n    }\n    // ----- actions\n    _getAriaLabel(label, currentMatch, searchString) {\n        if (label === NLS_NO_RESULTS) {\n            return searchString === ''\n                ? nls.localize('ariaSearchNoResultEmpty', \"{0} found\", label)\n                : nls.localize('ariaSearchNoResult', \"{0} found for '{1}'\", label, searchString);\n        }\n        if (currentMatch) {\n            const ariaLabel = nls.localize('ariaSearchNoResultWithLineNum', \"{0} found for '{1}', at {2}\", label, searchString, currentMatch.startLineNumber + ':' + currentMatch.startColumn);\n            const model = this._codeEditor.getModel();\n            if (model && (currentMatch.startLineNumber <= model.getLineCount()) && (currentMatch.startLineNumber >= 1)) {\n                const lineContent = model.getLineContent(currentMatch.startLineNumber);\n                return `${lineContent}, ${ariaLabel}`;\n            }\n            return ariaLabel;\n        }\n        return nls.localize('ariaSearchNoResultWithLineNumNoCurrentMatch', \"{0} found for '{1}'\", label, searchString);\n    }\n    /**\n     * If 'selection find' is ON we should not disable the button (its function is to cancel 'selection find').\n     * If 'selection find' is OFF we enable the button only if there is a selection.\n     */\n    _updateToggleSelectionFindButton() {\n        let selection = this._codeEditor.getSelection();\n        let isSelection = selection ? (selection.startLineNumber !== selection.endLineNumber || selection.startColumn !== selection.endColumn) : false;\n        let isChecked = this._toggleSelectionFind.checked;\n        if (this._isVisible && (isChecked || isSelection)) {\n            this._toggleSelectionFind.enable();\n        }\n        else {\n            this._toggleSelectionFind.disable();\n        }\n    }\n    _updateButtons() {\n        this._findInput.setEnabled(this._isVisible);\n        this._replaceInput.setEnabled(this._isVisible && this._isReplaceVisible);\n        this._updateToggleSelectionFindButton();\n        this._closeBtn.setEnabled(this._isVisible);\n        let findInputIsNonEmpty = (this._state.searchString.length > 0);\n        let matchesCount = this._state.matchesCount ? true : false;\n        this._prevBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateBack());\n        this._nextBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateForward());\n        this._replaceBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\n        this._replaceAllBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\n        this._domNode.classList.toggle('replaceToggled', this._isReplaceVisible);\n        this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);\n        let canReplace = !this._codeEditor.getOption(81 /* readOnly */);\n        this._toggleReplaceBtn.setEnabled(this._isVisible && canReplace);\n    }\n    _reveal() {\n        this._revealTimeouts.forEach(e => {\n            clearTimeout(e);\n        });\n        this._revealTimeouts = [];\n        if (!this._isVisible) {\n            this._isVisible = true;\n            const selection = this._codeEditor.getSelection();\n            switch (this._codeEditor.getOption(35 /* find */).autoFindInSelection) {\n                case 'always':\n                    this._toggleSelectionFind.checked = true;\n                    break;\n                case 'never':\n                    this._toggleSelectionFind.checked = false;\n                    break;\n                case 'multiline': {\n                    const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\n                    this._toggleSelectionFind.checked = isSelectionMultipleLine;\n                    break;\n                }\n                default:\n                    break;\n            }\n            this._tryUpdateWidgetWidth();\n            this._updateButtons();\n            this._revealTimeouts.push(setTimeout(() => {\n                this._domNode.classList.add('visible');\n                this._domNode.setAttribute('aria-hidden', 'false');\n            }, 0));\n            // validate query again as it's being dismissed when we hide the find widget.\n            this._revealTimeouts.push(setTimeout(() => {\n                this._findInput.validate();\n            }, 200));\n            this._codeEditor.layoutOverlayWidget(this);\n            let adjustEditorScrollTop = true;\n            if (this._codeEditor.getOption(35 /* find */).seedSearchStringFromSelection && selection) {\n                const domNode = this._codeEditor.getDomNode();\n                if (domNode) {\n                    const editorCoords = dom.getDomNodePagePosition(domNode);\n                    const startCoords = this._codeEditor.getScrolledVisiblePosition(selection.getStartPosition());\n                    const startLeft = editorCoords.left + (startCoords ? startCoords.left : 0);\n                    const startTop = startCoords ? startCoords.top : 0;\n                    if (this._viewZone && startTop < this._viewZone.heightInPx) {\n                        if (selection.endLineNumber > selection.startLineNumber) {\n                            adjustEditorScrollTop = false;\n                        }\n                        const leftOfFindWidget = dom.getTopLeftOffset(this._domNode).left;\n                        if (startLeft > leftOfFindWidget) {\n                            adjustEditorScrollTop = false;\n                        }\n                        const endCoords = this._codeEditor.getScrolledVisiblePosition(selection.getEndPosition());\n                        const endLeft = editorCoords.left + (endCoords ? endCoords.left : 0);\n                        if (endLeft > leftOfFindWidget) {\n                            adjustEditorScrollTop = false;\n                        }\n                    }\n                }\n            }\n            this._showViewZone(adjustEditorScrollTop);\n        }\n    }\n    _hide(focusTheEditor) {\n        this._revealTimeouts.forEach(e => {\n            clearTimeout(e);\n        });\n        this._revealTimeouts = [];\n        if (this._isVisible) {\n            this._isVisible = false;\n            this._updateButtons();\n            this._domNode.classList.remove('visible');\n            this._domNode.setAttribute('aria-hidden', 'true');\n            this._findInput.clearMessage();\n            if (focusTheEditor) {\n                this._codeEditor.focus();\n            }\n            this._codeEditor.layoutOverlayWidget(this);\n            this._removeViewZone();\n        }\n    }\n    _layoutViewZone(targetScrollTop) {\n        const addExtraSpaceOnTop = this._codeEditor.getOption(35 /* find */).addExtraSpaceOnTop;\n        if (!addExtraSpaceOnTop) {\n            this._removeViewZone();\n            return;\n        }\n        if (!this._isVisible) {\n            return;\n        }\n        const viewZone = this._viewZone;\n        if (this._viewZoneId !== undefined || !viewZone) {\n            return;\n        }\n        this._codeEditor.changeViewZones((accessor) => {\n            viewZone.heightInPx = this._getHeight();\n            this._viewZoneId = accessor.addZone(viewZone);\n            // scroll top adjust to make sure the editor doesn't scroll when adding viewzone at the beginning.\n            this._codeEditor.setScrollTop(targetScrollTop || this._codeEditor.getScrollTop() + viewZone.heightInPx);\n        });\n    }\n    _showViewZone(adjustScroll = true) {\n        if (!this._isVisible) {\n            return;\n        }\n        const addExtraSpaceOnTop = this._codeEditor.getOption(35 /* find */).addExtraSpaceOnTop;\n        if (!addExtraSpaceOnTop) {\n            return;\n        }\n        if (this._viewZone === undefined) {\n            this._viewZone = new FindWidgetViewZone(0);\n        }\n        const viewZone = this._viewZone;\n        this._codeEditor.changeViewZones((accessor) => {\n            if (this._viewZoneId !== undefined) {\n                // the view zone already exists, we need to update the height\n                const newHeight = this._getHeight();\n                if (newHeight === viewZone.heightInPx) {\n                    return;\n                }\n                let scrollAdjustment = newHeight - viewZone.heightInPx;\n                viewZone.heightInPx = newHeight;\n                accessor.layoutZone(this._viewZoneId);\n                if (adjustScroll) {\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\n                }\n                return;\n            }\n            else {\n                let scrollAdjustment = this._getHeight();\n                // if the editor has top padding, factor that into the zone height\n                scrollAdjustment -= this._codeEditor.getOption(75 /* padding */).top;\n                if (scrollAdjustment <= 0) {\n                    return;\n                }\n                viewZone.heightInPx = scrollAdjustment;\n                this._viewZoneId = accessor.addZone(viewZone);\n                if (adjustScroll) {\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\n                }\n            }\n        });\n    }\n    _removeViewZone() {\n        this._codeEditor.changeViewZones((accessor) => {\n            if (this._viewZoneId !== undefined) {\n                accessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n                if (this._viewZone) {\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() - this._viewZone.heightInPx);\n                    this._viewZone = undefined;\n                }\n            }\n        });\n    }\n    _applyTheme(theme) {\n        let inputStyles = {\n            inputActiveOptionBorder: theme.getColor(inputActiveOptionBorder),\n            inputActiveOptionBackground: theme.getColor(inputActiveOptionBackground),\n            inputActiveOptionForeground: theme.getColor(inputActiveOptionForeground),\n            inputBackground: theme.getColor(inputBackground),\n            inputForeground: theme.getColor(inputForeground),\n            inputBorder: theme.getColor(inputBorder),\n            inputValidationInfoBackground: theme.getColor(inputValidationInfoBackground),\n            inputValidationInfoForeground: theme.getColor(inputValidationInfoForeground),\n            inputValidationInfoBorder: theme.getColor(inputValidationInfoBorder),\n            inputValidationWarningBackground: theme.getColor(inputValidationWarningBackground),\n            inputValidationWarningForeground: theme.getColor(inputValidationWarningForeground),\n            inputValidationWarningBorder: theme.getColor(inputValidationWarningBorder),\n            inputValidationErrorBackground: theme.getColor(inputValidationErrorBackground),\n            inputValidationErrorForeground: theme.getColor(inputValidationErrorForeground),\n            inputValidationErrorBorder: theme.getColor(inputValidationErrorBorder),\n        };\n        this._findInput.style(inputStyles);\n        this._replaceInput.style(inputStyles);\n        this._toggleSelectionFind.style(inputStyles);\n    }\n    _tryUpdateWidgetWidth() {\n        if (!this._isVisible) {\n            return;\n        }\n        if (!dom.isInDOM(this._domNode)) {\n            // the widget is not in the DOM\n            return;\n        }\n        const layoutInfo = this._codeEditor.getLayoutInfo();\n        const editorContentWidth = layoutInfo.contentWidth;\n        if (editorContentWidth <= 0) {\n            // for example, diff view original editor\n            this._domNode.classList.add('hiddenEditor');\n            return;\n        }\n        else if (this._domNode.classList.contains('hiddenEditor')) {\n            this._domNode.classList.remove('hiddenEditor');\n        }\n        const editorWidth = layoutInfo.width;\n        const minimapWidth = layoutInfo.minimap.minimapWidth;\n        let collapsedFindWidget = false;\n        let reducedFindWidget = false;\n        let narrowFindWidget = false;\n        if (this._resized) {\n            let widgetWidth = dom.getTotalWidth(this._domNode);\n            if (widgetWidth > FIND_WIDGET_INITIAL_WIDTH) {\n                // as the widget is resized by users, we may need to change the max width of the widget as the editor width changes.\n                this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n                return;\n            }\n        }\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth >= editorWidth) {\n            reducedFindWidget = true;\n        }\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth) {\n            narrowFindWidget = true;\n        }\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth + 50) {\n            collapsedFindWidget = true;\n        }\n        this._domNode.classList.toggle('collapsed-find-widget', collapsedFindWidget);\n        this._domNode.classList.toggle('narrow-find-widget', narrowFindWidget);\n        this._domNode.classList.toggle('reduced-find-widget', reducedFindWidget);\n        if (!narrowFindWidget && !collapsedFindWidget) {\n            // the minimal left offset of findwidget is 15px.\n            this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;\n        }\n        if (this._resized) {\n            this._findInput.inputBox.layout();\n            let findInputWidth = this._findInput.inputBox.element.clientWidth;\n            if (findInputWidth > 0) {\n                this._replaceInput.width = findInputWidth;\n            }\n        }\n        else if (this._isReplaceVisible) {\n            this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n        }\n    }\n    _getHeight() {\n        let totalheight = 0;\n        // find input margin top\n        totalheight += 4;\n        // find input height\n        totalheight += this._findInput.inputBox.height + 2 /** input box border */;\n        if (this._isReplaceVisible) {\n            // replace input margin\n            totalheight += 4;\n            totalheight += this._replaceInput.inputBox.height + 2 /** input box border */;\n        }\n        // margin bottom\n        totalheight += 4;\n        return totalheight;\n    }\n    _tryUpdateHeight() {\n        const totalHeight = this._getHeight();\n        if (this._cachedHeight !== null && this._cachedHeight === totalHeight) {\n            return false;\n        }\n        this._cachedHeight = totalHeight;\n        this._domNode.style.height = `${totalHeight}px`;\n        return true;\n    }\n    // ----- Public\n    focusFindInput() {\n        this._findInput.select();\n        // Edge browser requires focus() in addition to select()\n        this._findInput.focus();\n    }\n    focusReplaceInput() {\n        this._replaceInput.select();\n        // Edge browser requires focus() in addition to select()\n        this._replaceInput.focus();\n    }\n    highlightFindOptions() {\n        this._findInput.highlightFindOptions();\n    }\n    _updateSearchScope() {\n        if (!this._codeEditor.hasModel()) {\n            return;\n        }\n        if (this._toggleSelectionFind.checked) {\n            let selections = this._codeEditor.getSelections();\n            selections.map(selection => {\n                if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n                    selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n                }\n                const currentMatch = this._state.currentMatch;\n                if (selection.startLineNumber !== selection.endLineNumber) {\n                    if (!Range.equalsRange(selection, currentMatch)) {\n                        return selection;\n                    }\n                }\n                return null;\n            }).filter(element => !!element);\n            if (selections.length) {\n                this._state.change({ searchScope: selections }, true);\n            }\n        }\n    }\n    _onFindInputMouseDown(e) {\n        // on linux, middle key does pasting.\n        if (e.middleButton) {\n            e.stopPropagation();\n        }\n    }\n    _onFindInputKeyDown(e) {\n        if (e.equals(ctrlKeyMod | 3 /* Enter */)) {\n            if (this._keybindingService.dispatchEvent(e, e.target)) {\n                e.preventDefault();\n                return;\n            }\n            else {\n                this._findInput.inputBox.insertAtCursor('\\n');\n                e.preventDefault();\n                return;\n            }\n        }\n        if (e.equals(2 /* Tab */)) {\n            if (this._isReplaceVisible) {\n                this._replaceInput.focus();\n            }\n            else {\n                this._findInput.focusOnCaseSensitive();\n            }\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(2048 /* CtrlCmd */ | 18 /* DownArrow */)) {\n            this._codeEditor.focus();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(16 /* UpArrow */)) {\n            return stopPropagationForMultiLineUpwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\n        }\n        if (e.equals(18 /* DownArrow */)) {\n            return stopPropagationForMultiLineDownwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\n        }\n    }\n    _onReplaceInputKeyDown(e) {\n        if (e.equals(ctrlKeyMod | 3 /* Enter */)) {\n            if (this._keybindingService.dispatchEvent(e, e.target)) {\n                e.preventDefault();\n                return;\n            }\n            else {\n                if (platform.isWindows && platform.isNative && !this._ctrlEnterReplaceAllWarningPrompted) {\n                    // this is the first time when users press Ctrl + Enter to replace all\n                    this._notificationService.info(nls.localize('ctrlEnter.keybindingChanged', 'Ctrl+Enter now inserts line break instead of replacing all. You can modify the keybinding for editor.action.replaceAll to override this behavior.'));\n                    this._ctrlEnterReplaceAllWarningPrompted = true;\n                    this._storageService.store(ctrlEnterReplaceAllWarningPromptedKey, true, 0 /* GLOBAL */, 0 /* USER */);\n                }\n                this._replaceInput.inputBox.insertAtCursor('\\n');\n                e.preventDefault();\n                return;\n            }\n        }\n        if (e.equals(2 /* Tab */)) {\n            this._findInput.focusOnCaseSensitive();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(1024 /* Shift */ | 2 /* Tab */)) {\n            this._findInput.focus();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(2048 /* CtrlCmd */ | 18 /* DownArrow */)) {\n            this._codeEditor.focus();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(16 /* UpArrow */)) {\n            return stopPropagationForMultiLineUpwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\n        }\n        if (e.equals(18 /* DownArrow */)) {\n            return stopPropagationForMultiLineDownwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\n        }\n    }\n    // ----- sash\n    getVerticalSashLeft(_sash) {\n        return 0;\n    }\n    // ----- initialization\n    _keybindingLabelFor(actionId) {\n        let kb = this._keybindingService.lookupKeybinding(actionId);\n        if (!kb) {\n            return '';\n        }\n        return ` (${kb.getLabel()})`;\n    }\n    _buildDomNode() {\n        const flexibleHeight = true;\n        const flexibleWidth = true;\n        // Find input\n        this._findInput = this._register(new ContextScopedFindInput(null, this._contextViewProvider, {\n            width: FIND_INPUT_AREA_WIDTH,\n            label: NLS_FIND_INPUT_LABEL,\n            placeholder: NLS_FIND_INPUT_PLACEHOLDER,\n            appendCaseSensitiveLabel: this._keybindingLabelFor(FIND_IDS.ToggleCaseSensitiveCommand),\n            appendWholeWordsLabel: this._keybindingLabelFor(FIND_IDS.ToggleWholeWordCommand),\n            appendRegexLabel: this._keybindingLabelFor(FIND_IDS.ToggleRegexCommand),\n            validation: (value) => {\n                if (value.length === 0 || !this._findInput.getRegex()) {\n                    return null;\n                }\n                try {\n                    // use `g` and `u` which are also used by the TextModel search\n                    new RegExp(value, 'gu');\n                    return null;\n                }\n                catch (e) {\n                    return { content: e.message };\n                }\n            },\n            flexibleHeight,\n            flexibleWidth,\n            flexibleMaxHeight: 118,\n            showHistoryHint: () => showHistoryKeybindingHint(this._keybindingService)\n        }, this._contextKeyService, true));\n        this._findInput.setRegex(!!this._state.isRegex);\n        this._findInput.setCaseSensitive(!!this._state.matchCase);\n        this._findInput.setWholeWords(!!this._state.wholeWord);\n        this._register(this._findInput.onKeyDown((e) => this._onFindInputKeyDown(e)));\n        this._register(this._findInput.inputBox.onDidChange(() => {\n            if (this._ignoreChangeEvent) {\n                return;\n            }\n            this._state.change({ searchString: this._findInput.getValue() }, true);\n        }));\n        this._register(this._findInput.onDidOptionChange(() => {\n            this._state.change({\n                isRegex: this._findInput.getRegex(),\n                wholeWord: this._findInput.getWholeWords(),\n                matchCase: this._findInput.getCaseSensitive()\n            }, true);\n        }));\n        this._register(this._findInput.onCaseSensitiveKeyDown((e) => {\n            if (e.equals(1024 /* Shift */ | 2 /* Tab */)) {\n                if (this._isReplaceVisible) {\n                    this._replaceInput.focus();\n                    e.preventDefault();\n                }\n            }\n        }));\n        this._register(this._findInput.onRegexKeyDown((e) => {\n            if (e.equals(2 /* Tab */)) {\n                if (this._isReplaceVisible) {\n                    this._replaceInput.focusOnPreserve();\n                    e.preventDefault();\n                }\n            }\n        }));\n        this._register(this._findInput.inputBox.onDidHeightChange((e) => {\n            if (this._tryUpdateHeight()) {\n                this._showViewZone();\n            }\n        }));\n        if (platform.isLinux) {\n            this._register(this._findInput.onMouseDown((e) => this._onFindInputMouseDown(e)));\n        }\n        this._matchesCount = document.createElement('div');\n        this._matchesCount.className = 'matchesCount';\n        this._updateMatchesCount();\n        // Previous button\n        this._prevBtn = this._register(new SimpleButton({\n            label: NLS_PREVIOUS_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.PreviousMatchFindAction),\n            icon: findPreviousMatchIcon,\n            onTrigger: () => {\n                this._codeEditor.getAction(FIND_IDS.PreviousMatchFindAction).run().then(undefined, onUnexpectedError);\n            }\n        }));\n        // Next button\n        this._nextBtn = this._register(new SimpleButton({\n            label: NLS_NEXT_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.NextMatchFindAction),\n            icon: findNextMatchIcon,\n            onTrigger: () => {\n                this._codeEditor.getAction(FIND_IDS.NextMatchFindAction).run().then(undefined, onUnexpectedError);\n            }\n        }));\n        let findPart = document.createElement('div');\n        findPart.className = 'find-part';\n        findPart.appendChild(this._findInput.domNode);\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'find-actions';\n        findPart.appendChild(actionsContainer);\n        actionsContainer.appendChild(this._matchesCount);\n        actionsContainer.appendChild(this._prevBtn.domNode);\n        actionsContainer.appendChild(this._nextBtn.domNode);\n        // Toggle selection button\n        this._toggleSelectionFind = this._register(new Checkbox({\n            icon: findSelectionIcon,\n            title: NLS_TOGGLE_SELECTION_FIND_TITLE + this._keybindingLabelFor(FIND_IDS.ToggleSearchScopeCommand),\n            isChecked: false\n        }));\n        this._register(this._toggleSelectionFind.onChange(() => {\n            if (this._toggleSelectionFind.checked) {\n                if (this._codeEditor.hasModel()) {\n                    let selections = this._codeEditor.getSelections();\n                    selections.map(selection => {\n                        if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n                            selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n                        }\n                        if (!selection.isEmpty()) {\n                            return selection;\n                        }\n                        return null;\n                    }).filter(element => !!element);\n                    if (selections.length) {\n                        this._state.change({ searchScope: selections }, true);\n                    }\n                }\n            }\n            else {\n                this._state.change({ searchScope: null }, true);\n            }\n        }));\n        actionsContainer.appendChild(this._toggleSelectionFind.domNode);\n        // Close button\n        this._closeBtn = this._register(new SimpleButton({\n            label: NLS_CLOSE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.CloseFindWidgetCommand),\n            icon: widgetClose,\n            onTrigger: () => {\n                this._state.change({ isRevealed: false, searchScope: null }, false);\n            },\n            onKeyDown: (e) => {\n                if (e.equals(2 /* Tab */)) {\n                    if (this._isReplaceVisible) {\n                        if (this._replaceBtn.isEnabled()) {\n                            this._replaceBtn.focus();\n                        }\n                        else {\n                            this._codeEditor.focus();\n                        }\n                        e.preventDefault();\n                    }\n                }\n            }\n        }));\n        actionsContainer.appendChild(this._closeBtn.domNode);\n        // Replace input\n        this._replaceInput = this._register(new ContextScopedReplaceInput(null, undefined, {\n            label: NLS_REPLACE_INPUT_LABEL,\n            placeholder: NLS_REPLACE_INPUT_PLACEHOLDER,\n            appendPreserveCaseLabel: this._keybindingLabelFor(FIND_IDS.TogglePreserveCaseCommand),\n            history: [],\n            flexibleHeight,\n            flexibleWidth,\n            flexibleMaxHeight: 118,\n            showHistoryHint: () => showHistoryKeybindingHint(this._keybindingService)\n        }, this._contextKeyService, true));\n        this._replaceInput.setPreserveCase(!!this._state.preserveCase);\n        this._register(this._replaceInput.onKeyDown((e) => this._onReplaceInputKeyDown(e)));\n        this._register(this._replaceInput.inputBox.onDidChange(() => {\n            this._state.change({ replaceString: this._replaceInput.inputBox.value }, false);\n        }));\n        this._register(this._replaceInput.inputBox.onDidHeightChange((e) => {\n            if (this._isReplaceVisible && this._tryUpdateHeight()) {\n                this._showViewZone();\n            }\n        }));\n        this._register(this._replaceInput.onDidOptionChange(() => {\n            this._state.change({\n                preserveCase: this._replaceInput.getPreserveCase()\n            }, true);\n        }));\n        this._register(this._replaceInput.onPreserveCaseKeyDown((e) => {\n            if (e.equals(2 /* Tab */)) {\n                if (this._prevBtn.isEnabled()) {\n                    this._prevBtn.focus();\n                }\n                else if (this._nextBtn.isEnabled()) {\n                    this._nextBtn.focus();\n                }\n                else if (this._toggleSelectionFind.enabled) {\n                    this._toggleSelectionFind.focus();\n                }\n                else if (this._closeBtn.isEnabled()) {\n                    this._closeBtn.focus();\n                }\n                e.preventDefault();\n            }\n        }));\n        // Replace one button\n        this._replaceBtn = this._register(new SimpleButton({\n            label: NLS_REPLACE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceOneAction),\n            icon: findReplaceIcon,\n            onTrigger: () => {\n                this._controller.replace();\n            },\n            onKeyDown: (e) => {\n                if (e.equals(1024 /* Shift */ | 2 /* Tab */)) {\n                    this._closeBtn.focus();\n                    e.preventDefault();\n                }\n            }\n        }));\n        // Replace all button\n        this._replaceAllBtn = this._register(new SimpleButton({\n            label: NLS_REPLACE_ALL_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceAllAction),\n            icon: findReplaceAllIcon,\n            onTrigger: () => {\n                this._controller.replaceAll();\n            }\n        }));\n        let replacePart = document.createElement('div');\n        replacePart.className = 'replace-part';\n        replacePart.appendChild(this._replaceInput.domNode);\n        const replaceActionsContainer = document.createElement('div');\n        replaceActionsContainer.className = 'replace-actions';\n        replacePart.appendChild(replaceActionsContainer);\n        replaceActionsContainer.appendChild(this._replaceBtn.domNode);\n        replaceActionsContainer.appendChild(this._replaceAllBtn.domNode);\n        // Toggle replace button\n        this._toggleReplaceBtn = this._register(new SimpleButton({\n            label: NLS_TOGGLE_REPLACE_MODE_BTN_LABEL,\n            className: 'codicon toggle left',\n            onTrigger: () => {\n                this._state.change({ isReplaceRevealed: !this._isReplaceVisible }, false);\n                if (this._isReplaceVisible) {\n                    this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n                    this._replaceInput.inputBox.layout();\n                }\n                this._showViewZone();\n            }\n        }));\n        this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);\n        // Widget\n        this._domNode = document.createElement('div');\n        this._domNode.className = 'editor-widget find-widget';\n        this._domNode.setAttribute('aria-hidden', 'true');\n        // We need to set this explicitly, otherwise on IE11, the width inheritence of flex doesn't work.\n        this._domNode.style.width = `${FIND_WIDGET_INITIAL_WIDTH}px`;\n        this._domNode.appendChild(this._toggleReplaceBtn.domNode);\n        this._domNode.appendChild(findPart);\n        this._domNode.appendChild(replacePart);\n        this._resizeSash = new Sash(this._domNode, this, { orientation: 0 /* VERTICAL */, size: 2 });\n        this._resized = false;\n        let originalWidth = FIND_WIDGET_INITIAL_WIDTH;\n        this._register(this._resizeSash.onDidStart(() => {\n            originalWidth = dom.getTotalWidth(this._domNode);\n        }));\n        this._register(this._resizeSash.onDidChange((evt) => {\n            this._resized = true;\n            let width = originalWidth + evt.startX - evt.currentX;\n            if (width < FIND_WIDGET_INITIAL_WIDTH) {\n                // narrow down the find widget should be handled by CSS.\n                return;\n            }\n            const maxWidth = parseFloat(dom.getComputedStyle(this._domNode).maxWidth) || 0;\n            if (width > maxWidth) {\n                return;\n            }\n            this._domNode.style.width = `${width}px`;\n            if (this._isReplaceVisible) {\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n            }\n            this._findInput.inputBox.layout();\n            this._tryUpdateHeight();\n        }));\n        this._register(this._resizeSash.onDidReset(() => {\n            // users double click on the sash\n            const currentWidth = dom.getTotalWidth(this._domNode);\n            if (currentWidth < FIND_WIDGET_INITIAL_WIDTH) {\n                // The editor is narrow and the width of the find widget is controlled fully by CSS.\n                return;\n            }\n            let width = FIND_WIDGET_INITIAL_WIDTH;\n            if (!this._resized || currentWidth === FIND_WIDGET_INITIAL_WIDTH) {\n                // 1. never resized before, double click should maximizes it\n                // 2. users resized it already but its width is the same as default\n                const layoutInfo = this._codeEditor.getLayoutInfo();\n                width = layoutInfo.width - 28 - layoutInfo.minimap.minimapWidth - 15;\n                this._resized = true;\n            }\n            else {\n                /**\n                 * no op, the find widget should be shrinked to its default size.\n                 */\n            }\n            this._domNode.style.width = `${width}px`;\n            if (this._isReplaceVisible) {\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n            }\n            this._findInput.inputBox.layout();\n        }));\n    }\n    updateAccessibilitySupport() {\n        const value = this._codeEditor.getOption(2 /* accessibilitySupport */);\n        this._findInput.setFocusInputOnOptionClick(value !== 2 /* Enabled */);\n    }\n}\nFindWidget.ID = 'editor.contrib.findWidget';\nexport class SimpleButton extends Widget {\n    constructor(opts) {\n        super();\n        this._opts = opts;\n        let className = 'button';\n        if (this._opts.className) {\n            className = className + ' ' + this._opts.className;\n        }\n        if (this._opts.icon) {\n            className = className + ' ' + ThemeIcon.asClassName(this._opts.icon);\n        }\n        this._domNode = document.createElement('div');\n        this._domNode.title = this._opts.label;\n        this._domNode.tabIndex = 0;\n        this._domNode.className = className;\n        this._domNode.setAttribute('role', 'button');\n        this._domNode.setAttribute('aria-label', this._opts.label);\n        this.onclick(this._domNode, (e) => {\n            this._opts.onTrigger();\n            e.preventDefault();\n        });\n        this.onkeydown(this._domNode, (e) => {\n            if (e.equals(10 /* Space */) || e.equals(3 /* Enter */)) {\n                this._opts.onTrigger();\n                e.preventDefault();\n                return;\n            }\n            if (this._opts.onKeyDown) {\n                this._opts.onKeyDown(e);\n            }\n        });\n    }\n    get domNode() {\n        return this._domNode;\n    }\n    isEnabled() {\n        return (this._domNode.tabIndex >= 0);\n    }\n    focus() {\n        this._domNode.focus();\n    }\n    setEnabled(enabled) {\n        this._domNode.classList.toggle('disabled', !enabled);\n        this._domNode.setAttribute('aria-disabled', String(!enabled));\n        this._domNode.tabIndex = enabled ? 0 : -1;\n    }\n    setExpanded(expanded) {\n        this._domNode.setAttribute('aria-expanded', String(!!expanded));\n        if (expanded) {\n            this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findCollapsedIcon));\n            this._domNode.classList.add(...ThemeIcon.asClassNameArray(findExpandedIcon));\n        }\n        else {\n            this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findExpandedIcon));\n            this._domNode.classList.add(...ThemeIcon.asClassNameArray(findCollapsedIcon));\n        }\n    }\n}\n// theming\nregisterThemingParticipant((theme, collector) => {\n    const addBackgroundColorRule = (selector, color) => {\n        if (color) {\n            collector.addRule(`.monaco-editor ${selector} { background-color: ${color}; }`);\n        }\n    };\n    addBackgroundColorRule('.findMatch', theme.getColor(editorFindMatchHighlight));\n    addBackgroundColorRule('.currentFindMatch', theme.getColor(editorFindMatch));\n    addBackgroundColorRule('.findScope', theme.getColor(editorFindRangeHighlight));\n    const widgetBackground = theme.getColor(editorWidgetBackground);\n    addBackgroundColorRule('.find-widget', widgetBackground);\n    const widgetShadowColor = theme.getColor(widgetShadow);\n    if (widgetShadowColor) {\n        collector.addRule(`.monaco-editor .find-widget { box-shadow: 0 0 8px 2px ${widgetShadowColor}; }`);\n    }\n    const findMatchHighlightBorder = theme.getColor(editorFindMatchHighlightBorder);\n    if (findMatchHighlightBorder) {\n        collector.addRule(`.monaco-editor .findMatch { border: 1px ${theme.type === 'hc' ? 'dotted' : 'solid'} ${findMatchHighlightBorder}; box-sizing: border-box; }`);\n    }\n    const findMatchBorder = theme.getColor(editorFindMatchBorder);\n    if (findMatchBorder) {\n        collector.addRule(`.monaco-editor .currentFindMatch { border: 2px solid ${findMatchBorder}; padding: 1px; box-sizing: border-box; }`);\n    }\n    const findRangeHighlightBorder = theme.getColor(editorFindRangeHighlightBorder);\n    if (findRangeHighlightBorder) {\n        collector.addRule(`.monaco-editor .findScope { border: 1px ${theme.type === 'hc' ? 'dashed' : 'solid'} ${findRangeHighlightBorder}; }`);\n    }\n    const hcBorder = theme.getColor(contrastBorder);\n    if (hcBorder) {\n        collector.addRule(`.monaco-editor .find-widget { border: 1px solid ${hcBorder}; }`);\n    }\n    const foreground = theme.getColor(editorWidgetForeground);\n    if (foreground) {\n        collector.addRule(`.monaco-editor .find-widget { color: ${foreground}; }`);\n    }\n    const error = theme.getColor(errorForeground);\n    if (error) {\n        collector.addRule(`.monaco-editor .find-widget.no-results .matchesCount { color: ${error}; }`);\n    }\n    const resizeBorderBackground = theme.getColor(editorWidgetResizeBorder);\n    if (resizeBorderBackground) {\n        collector.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${resizeBorderBackground}; }`);\n    }\n    else {\n        const border = theme.getColor(editorWidgetBorder);\n        if (border) {\n            collector.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${border}; }`);\n        }\n    }\n    // Action bars\n    const toolbarHoverBackgroundColor = theme.getColor(toolbarHoverBackground);\n    if (toolbarHoverBackgroundColor) {\n        collector.addRule(`\n\t\t.monaco-editor .find-widget .button:not(.disabled):hover,\n\t\t.monaco-editor .find-widget .codicon-find-selection:hover {\n\t\t\tbackground-color: ${toolbarHoverBackgroundColor} !important;\n\t\t}\n\t`);\n    }\n    // This rule is used to override the outline color for synthetic-focus find input.\n    const focusOutline = theme.getColor(focusBorder);\n    if (focusOutline) {\n        collector.addRule(`.monaco-editor .find-widget .monaco-inputbox.synthetic-focus { outline-color: ${focusOutline}; }`);\n    }\n});\n"]},"metadata":{},"sourceType":"module"}