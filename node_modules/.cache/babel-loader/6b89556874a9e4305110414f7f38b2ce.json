{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport * as arrays from '../../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution, registerModelCommand } from '../../../browser/editorExtensions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport * as modes from '../../../common/languages.js';\nimport { BracketSelectionRangeProvider } from './bracketSelections.js';\nimport { WordSelectionRangeProvider } from './wordSelections.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\n\nclass SelectionRanges {\n  constructor(index, ranges) {\n    this.index = index;\n    this.ranges = ranges;\n  }\n\n  mov(fwd) {\n    let index = this.index + (fwd ? 1 : -1);\n\n    if (index < 0 || index >= this.ranges.length) {\n      return this;\n    }\n\n    const res = new SelectionRanges(index, this.ranges);\n\n    if (res.ranges[index].equalsRange(this.ranges[this.index])) {\n      // next range equals this range, retry with next-next\n      return res.mov(fwd);\n    }\n\n    return res;\n  }\n\n}\n\nclass SmartSelectController {\n  constructor(_editor) {\n    this._editor = _editor;\n    this._ignoreSelection = false;\n  }\n\n  static get(editor) {\n    return editor.getContribution(SmartSelectController.ID);\n  }\n\n  dispose() {\n    var _a;\n\n    (_a = this._selectionListener) === null || _a === void 0 ? void 0 : _a.dispose();\n  }\n\n  run(forward) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this._editor.hasModel()) {\n        return;\n      }\n\n      const selections = this._editor.getSelections();\n\n      const model = this._editor.getModel();\n\n      if (!modes.SelectionRangeRegistry.has(model)) {\n        return;\n      }\n\n      if (!this._state) {\n        yield provideSelectionRanges(model, selections.map(s => s.getPosition()), this._editor.getOption(102\n        /* smartSelect */\n        ), CancellationToken.None).then(ranges => {\n          var _a;\n\n          if (!arrays.isNonEmptyArray(ranges) || ranges.length !== selections.length) {\n            // invalid result\n            return;\n          }\n\n          if (!this._editor.hasModel() || !arrays.equals(this._editor.getSelections(), selections, (a, b) => a.equalsSelection(b))) {\n            // invalid editor state\n            return;\n          }\n\n          for (let i = 0; i < ranges.length; i++) {\n            ranges[i] = ranges[i].filter(range => {\n              // filter ranges inside the selection\n              return range.containsPosition(selections[i].getStartPosition()) && range.containsPosition(selections[i].getEndPosition());\n            }); // prepend current selection\n\n            ranges[i].unshift(selections[i]);\n          }\n\n          this._state = ranges.map(ranges => new SelectionRanges(0, ranges)); // listen to caret move and forget about state\n\n          (_a = this._selectionListener) === null || _a === void 0 ? void 0 : _a.dispose();\n          this._selectionListener = this._editor.onDidChangeCursorPosition(() => {\n            var _a;\n\n            if (!this._ignoreSelection) {\n              (_a = this._selectionListener) === null || _a === void 0 ? void 0 : _a.dispose();\n              this._state = undefined;\n            }\n          });\n        });\n      }\n\n      if (!this._state) {\n        // no state\n        return;\n      }\n\n      this._state = this._state.map(state => state.mov(forward));\n\n      const newSelections = this._state.map(state => Selection.fromPositions(state.ranges[state.index].getStartPosition(), state.ranges[state.index].getEndPosition()));\n\n      this._ignoreSelection = true;\n\n      try {\n        this._editor.setSelections(newSelections);\n      } finally {\n        this._ignoreSelection = false;\n      }\n    });\n  }\n\n}\n\nSmartSelectController.ID = 'editor.contrib.smartSelectController';\n\nclass AbstractSmartSelect extends EditorAction {\n  constructor(forward, opts) {\n    super(opts);\n    this._forward = forward;\n  }\n\n  run(_accessor, editor) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let controller = SmartSelectController.get(editor);\n\n      if (controller) {\n        yield controller.run(this._forward);\n      }\n    });\n  }\n\n}\n\nclass GrowSelectionAction extends AbstractSmartSelect {\n  constructor() {\n    super(true, {\n      id: 'editor.action.smartSelect.expand',\n      label: nls.localize('smartSelect.expand', \"Expand Selection\"),\n      alias: 'Expand Selection',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 1024\n        /* Shift */\n        | 512\n        /* Alt */\n        | 17\n        /* RightArrow */\n        ,\n        mac: {\n          primary: 2048\n          /* CtrlCmd */\n          | 256\n          /* WinCtrl */\n          | 1024\n          /* Shift */\n          | 17\n          /* RightArrow */\n          ,\n          secondary: [256\n          /* WinCtrl */\n          | 1024\n          /* Shift */\n          | 17\n          /* RightArrow */\n          ]\n        },\n        weight: 100\n        /* EditorContrib */\n\n      },\n      menuOpts: {\n        menuId: MenuId.MenubarSelectionMenu,\n        group: '1_basic',\n        title: nls.localize({\n          key: 'miSmartSelectGrow',\n          comment: ['&& denotes a mnemonic']\n        }, \"&&Expand Selection\"),\n        order: 2\n      }\n    });\n  }\n\n} // renamed command id\n\n\nCommandsRegistry.registerCommandAlias('editor.action.smartSelect.grow', 'editor.action.smartSelect.expand');\n\nclass ShrinkSelectionAction extends AbstractSmartSelect {\n  constructor() {\n    super(false, {\n      id: 'editor.action.smartSelect.shrink',\n      label: nls.localize('smartSelect.shrink', \"Shrink Selection\"),\n      alias: 'Shrink Selection',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 1024\n        /* Shift */\n        | 512\n        /* Alt */\n        | 15\n        /* LeftArrow */\n        ,\n        mac: {\n          primary: 2048\n          /* CtrlCmd */\n          | 256\n          /* WinCtrl */\n          | 1024\n          /* Shift */\n          | 15\n          /* LeftArrow */\n          ,\n          secondary: [256\n          /* WinCtrl */\n          | 1024\n          /* Shift */\n          | 15\n          /* LeftArrow */\n          ]\n        },\n        weight: 100\n        /* EditorContrib */\n\n      },\n      menuOpts: {\n        menuId: MenuId.MenubarSelectionMenu,\n        group: '1_basic',\n        title: nls.localize({\n          key: 'miSmartSelectShrink',\n          comment: ['&& denotes a mnemonic']\n        }, \"&&Shrink Selection\"),\n        order: 3\n      }\n    });\n  }\n\n}\n\nregisterEditorContribution(SmartSelectController.ID, SmartSelectController);\nregisterEditorAction(GrowSelectionAction);\nregisterEditorAction(ShrinkSelectionAction); // word selection\n\nmodes.SelectionRangeRegistry.register('*', new WordSelectionRangeProvider());\nexport function provideSelectionRanges(model, positions, options, token) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const providers = modes.SelectionRangeRegistry.all(model);\n\n    if (providers.length === 1) {\n      // add word selection and bracket selection when no provider exists\n      providers.unshift(new BracketSelectionRangeProvider());\n    }\n\n    let work = [];\n    let allRawRanges = [];\n\n    for (const provider of providers) {\n      work.push(Promise.resolve(provider.provideSelectionRanges(model, positions, token)).then(allProviderRanges => {\n        if (arrays.isNonEmptyArray(allProviderRanges) && allProviderRanges.length === positions.length) {\n          for (let i = 0; i < positions.length; i++) {\n            if (!allRawRanges[i]) {\n              allRawRanges[i] = [];\n            }\n\n            for (const oneProviderRanges of allProviderRanges[i]) {\n              if (Range.isIRange(oneProviderRanges.range) && Range.containsPosition(oneProviderRanges.range, positions[i])) {\n                allRawRanges[i].push(Range.lift(oneProviderRanges.range));\n              }\n            }\n          }\n        }\n      }, onUnexpectedExternalError));\n    }\n\n    yield Promise.all(work);\n    return allRawRanges.map(oneRawRanges => {\n      if (oneRawRanges.length === 0) {\n        return [];\n      } // sort all by start/end position\n\n\n      oneRawRanges.sort((a, b) => {\n        if (Position.isBefore(a.getStartPosition(), b.getStartPosition())) {\n          return 1;\n        } else if (Position.isBefore(b.getStartPosition(), a.getStartPosition())) {\n          return -1;\n        } else if (Position.isBefore(a.getEndPosition(), b.getEndPosition())) {\n          return -1;\n        } else if (Position.isBefore(b.getEndPosition(), a.getEndPosition())) {\n          return 1;\n        } else {\n          return 0;\n        }\n      }); // remove ranges that don't contain the former range or that are equal to the\n      // former range\n\n      let oneRanges = [];\n      let last;\n\n      for (const range of oneRawRanges) {\n        if (!last || Range.containsRange(range, last) && !Range.equalsRange(range, last)) {\n          oneRanges.push(range);\n          last = range;\n        }\n      }\n\n      if (!options.selectLeadingAndTrailingWhitespace) {\n        return oneRanges;\n      } // add ranges that expand trivia at line starts and ends whenever a range\n      // wraps onto the a new line\n\n\n      let oneRangesWithTrivia = [oneRanges[0]];\n\n      for (let i = 1; i < oneRanges.length; i++) {\n        const prev = oneRanges[i - 1];\n        const cur = oneRanges[i];\n\n        if (cur.startLineNumber !== prev.startLineNumber || cur.endLineNumber !== prev.endLineNumber) {\n          // add line/block range without leading/failing whitespace\n          const rangeNoWhitespace = new Range(prev.startLineNumber, model.getLineFirstNonWhitespaceColumn(prev.startLineNumber), prev.endLineNumber, model.getLineLastNonWhitespaceColumn(prev.endLineNumber));\n\n          if (rangeNoWhitespace.containsRange(prev) && !rangeNoWhitespace.equalsRange(prev) && cur.containsRange(rangeNoWhitespace) && !cur.equalsRange(rangeNoWhitespace)) {\n            oneRangesWithTrivia.push(rangeNoWhitespace);\n          } // add line/block range\n\n\n          const rangeFull = new Range(prev.startLineNumber, 1, prev.endLineNumber, model.getLineMaxColumn(prev.endLineNumber));\n\n          if (rangeFull.containsRange(prev) && !rangeFull.equalsRange(rangeNoWhitespace) && cur.containsRange(rangeFull) && !cur.equalsRange(rangeFull)) {\n            oneRangesWithTrivia.push(rangeFull);\n          }\n        }\n\n        oneRangesWithTrivia.push(cur);\n      }\n\n      return oneRangesWithTrivia;\n    });\n  });\n}\nregisterModelCommand('_executeSelectionRangeProvider', function (model, ...args) {\n  const [positions] = args;\n  return provideSelectionRanges(model, positions, {\n    selectLeadingAndTrailingWhitespace: true\n  }, CancellationToken.None);\n});","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/contrib/smartSelect/browser/smartSelect.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","arrays","CancellationToken","onUnexpectedExternalError","EditorAction","registerEditorAction","registerEditorContribution","registerModelCommand","Position","Range","Selection","EditorContextKeys","modes","BracketSelectionRangeProvider","WordSelectionRangeProvider","nls","MenuId","CommandsRegistry","SelectionRanges","constructor","index","ranges","mov","fwd","length","res","equalsRange","SmartSelectController","_editor","_ignoreSelection","get","editor","getContribution","ID","dispose","_a","_selectionListener","run","forward","hasModel","selections","getSelections","model","getModel","SelectionRangeRegistry","has","_state","provideSelectionRanges","map","s","getPosition","getOption","None","isNonEmptyArray","equals","a","b","equalsSelection","i","filter","range","containsPosition","getStartPosition","getEndPosition","unshift","onDidChangeCursorPosition","undefined","state","newSelections","fromPositions","setSelections","AbstractSmartSelect","opts","_forward","_accessor","controller","GrowSelectionAction","id","label","localize","alias","precondition","kbOpts","kbExpr","editorTextFocus","primary","mac","secondary","weight","menuOpts","menuId","MenubarSelectionMenu","group","title","key","comment","order","registerCommandAlias","ShrinkSelectionAction","register","positions","options","token","providers","all","work","allRawRanges","provider","push","allProviderRanges","oneProviderRanges","isIRange","lift","oneRawRanges","sort","isBefore","oneRanges","last","containsRange","selectLeadingAndTrailingWhitespace","oneRangesWithTrivia","prev","cur","startLineNumber","endLineNumber","rangeNoWhitespace","getLineFirstNonWhitespaceColumn","getLineLastNonWhitespaceColumn","rangeFull","getLineMaxColumn","args"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as arrays from '../../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution, registerModelCommand } from '../../../browser/editorExtensions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport * as modes from '../../../common/languages.js';\nimport { BracketSelectionRangeProvider } from './bracketSelections.js';\nimport { WordSelectionRangeProvider } from './wordSelections.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nclass SelectionRanges {\n    constructor(index, ranges) {\n        this.index = index;\n        this.ranges = ranges;\n    }\n    mov(fwd) {\n        let index = this.index + (fwd ? 1 : -1);\n        if (index < 0 || index >= this.ranges.length) {\n            return this;\n        }\n        const res = new SelectionRanges(index, this.ranges);\n        if (res.ranges[index].equalsRange(this.ranges[this.index])) {\n            // next range equals this range, retry with next-next\n            return res.mov(fwd);\n        }\n        return res;\n    }\n}\nclass SmartSelectController {\n    constructor(_editor) {\n        this._editor = _editor;\n        this._ignoreSelection = false;\n    }\n    static get(editor) {\n        return editor.getContribution(SmartSelectController.ID);\n    }\n    dispose() {\n        var _a;\n        (_a = this._selectionListener) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    run(forward) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._editor.hasModel()) {\n                return;\n            }\n            const selections = this._editor.getSelections();\n            const model = this._editor.getModel();\n            if (!modes.SelectionRangeRegistry.has(model)) {\n                return;\n            }\n            if (!this._state) {\n                yield provideSelectionRanges(model, selections.map(s => s.getPosition()), this._editor.getOption(102 /* smartSelect */), CancellationToken.None).then(ranges => {\n                    var _a;\n                    if (!arrays.isNonEmptyArray(ranges) || ranges.length !== selections.length) {\n                        // invalid result\n                        return;\n                    }\n                    if (!this._editor.hasModel() || !arrays.equals(this._editor.getSelections(), selections, (a, b) => a.equalsSelection(b))) {\n                        // invalid editor state\n                        return;\n                    }\n                    for (let i = 0; i < ranges.length; i++) {\n                        ranges[i] = ranges[i].filter(range => {\n                            // filter ranges inside the selection\n                            return range.containsPosition(selections[i].getStartPosition()) && range.containsPosition(selections[i].getEndPosition());\n                        });\n                        // prepend current selection\n                        ranges[i].unshift(selections[i]);\n                    }\n                    this._state = ranges.map(ranges => new SelectionRanges(0, ranges));\n                    // listen to caret move and forget about state\n                    (_a = this._selectionListener) === null || _a === void 0 ? void 0 : _a.dispose();\n                    this._selectionListener = this._editor.onDidChangeCursorPosition(() => {\n                        var _a;\n                        if (!this._ignoreSelection) {\n                            (_a = this._selectionListener) === null || _a === void 0 ? void 0 : _a.dispose();\n                            this._state = undefined;\n                        }\n                    });\n                });\n            }\n            if (!this._state) {\n                // no state\n                return;\n            }\n            this._state = this._state.map(state => state.mov(forward));\n            const newSelections = this._state.map(state => Selection.fromPositions(state.ranges[state.index].getStartPosition(), state.ranges[state.index].getEndPosition()));\n            this._ignoreSelection = true;\n            try {\n                this._editor.setSelections(newSelections);\n            }\n            finally {\n                this._ignoreSelection = false;\n            }\n        });\n    }\n}\nSmartSelectController.ID = 'editor.contrib.smartSelectController';\nclass AbstractSmartSelect extends EditorAction {\n    constructor(forward, opts) {\n        super(opts);\n        this._forward = forward;\n    }\n    run(_accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let controller = SmartSelectController.get(editor);\n            if (controller) {\n                yield controller.run(this._forward);\n            }\n        });\n    }\n}\nclass GrowSelectionAction extends AbstractSmartSelect {\n    constructor() {\n        super(true, {\n            id: 'editor.action.smartSelect.expand',\n            label: nls.localize('smartSelect.expand', \"Expand Selection\"),\n            alias: 'Expand Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 1024 /* Shift */ | 512 /* Alt */ | 17 /* RightArrow */,\n                mac: {\n                    primary: 2048 /* CtrlCmd */ | 256 /* WinCtrl */ | 1024 /* Shift */ | 17 /* RightArrow */,\n                    secondary: [256 /* WinCtrl */ | 1024 /* Shift */ | 17 /* RightArrow */],\n                },\n                weight: 100 /* EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '1_basic',\n                title: nls.localize({ key: 'miSmartSelectGrow', comment: ['&& denotes a mnemonic'] }, \"&&Expand Selection\"),\n                order: 2\n            }\n        });\n    }\n}\n// renamed command id\nCommandsRegistry.registerCommandAlias('editor.action.smartSelect.grow', 'editor.action.smartSelect.expand');\nclass ShrinkSelectionAction extends AbstractSmartSelect {\n    constructor() {\n        super(false, {\n            id: 'editor.action.smartSelect.shrink',\n            label: nls.localize('smartSelect.shrink', \"Shrink Selection\"),\n            alias: 'Shrink Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 1024 /* Shift */ | 512 /* Alt */ | 15 /* LeftArrow */,\n                mac: {\n                    primary: 2048 /* CtrlCmd */ | 256 /* WinCtrl */ | 1024 /* Shift */ | 15 /* LeftArrow */,\n                    secondary: [256 /* WinCtrl */ | 1024 /* Shift */ | 15 /* LeftArrow */],\n                },\n                weight: 100 /* EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '1_basic',\n                title: nls.localize({ key: 'miSmartSelectShrink', comment: ['&& denotes a mnemonic'] }, \"&&Shrink Selection\"),\n                order: 3\n            }\n        });\n    }\n}\nregisterEditorContribution(SmartSelectController.ID, SmartSelectController);\nregisterEditorAction(GrowSelectionAction);\nregisterEditorAction(ShrinkSelectionAction);\n// word selection\nmodes.SelectionRangeRegistry.register('*', new WordSelectionRangeProvider());\nexport function provideSelectionRanges(model, positions, options, token) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const providers = modes.SelectionRangeRegistry.all(model);\n        if (providers.length === 1) {\n            // add word selection and bracket selection when no provider exists\n            providers.unshift(new BracketSelectionRangeProvider());\n        }\n        let work = [];\n        let allRawRanges = [];\n        for (const provider of providers) {\n            work.push(Promise.resolve(provider.provideSelectionRanges(model, positions, token)).then(allProviderRanges => {\n                if (arrays.isNonEmptyArray(allProviderRanges) && allProviderRanges.length === positions.length) {\n                    for (let i = 0; i < positions.length; i++) {\n                        if (!allRawRanges[i]) {\n                            allRawRanges[i] = [];\n                        }\n                        for (const oneProviderRanges of allProviderRanges[i]) {\n                            if (Range.isIRange(oneProviderRanges.range) && Range.containsPosition(oneProviderRanges.range, positions[i])) {\n                                allRawRanges[i].push(Range.lift(oneProviderRanges.range));\n                            }\n                        }\n                    }\n                }\n            }, onUnexpectedExternalError));\n        }\n        yield Promise.all(work);\n        return allRawRanges.map(oneRawRanges => {\n            if (oneRawRanges.length === 0) {\n                return [];\n            }\n            // sort all by start/end position\n            oneRawRanges.sort((a, b) => {\n                if (Position.isBefore(a.getStartPosition(), b.getStartPosition())) {\n                    return 1;\n                }\n                else if (Position.isBefore(b.getStartPosition(), a.getStartPosition())) {\n                    return -1;\n                }\n                else if (Position.isBefore(a.getEndPosition(), b.getEndPosition())) {\n                    return -1;\n                }\n                else if (Position.isBefore(b.getEndPosition(), a.getEndPosition())) {\n                    return 1;\n                }\n                else {\n                    return 0;\n                }\n            });\n            // remove ranges that don't contain the former range or that are equal to the\n            // former range\n            let oneRanges = [];\n            let last;\n            for (const range of oneRawRanges) {\n                if (!last || (Range.containsRange(range, last) && !Range.equalsRange(range, last))) {\n                    oneRanges.push(range);\n                    last = range;\n                }\n            }\n            if (!options.selectLeadingAndTrailingWhitespace) {\n                return oneRanges;\n            }\n            // add ranges that expand trivia at line starts and ends whenever a range\n            // wraps onto the a new line\n            let oneRangesWithTrivia = [oneRanges[0]];\n            for (let i = 1; i < oneRanges.length; i++) {\n                const prev = oneRanges[i - 1];\n                const cur = oneRanges[i];\n                if (cur.startLineNumber !== prev.startLineNumber || cur.endLineNumber !== prev.endLineNumber) {\n                    // add line/block range without leading/failing whitespace\n                    const rangeNoWhitespace = new Range(prev.startLineNumber, model.getLineFirstNonWhitespaceColumn(prev.startLineNumber), prev.endLineNumber, model.getLineLastNonWhitespaceColumn(prev.endLineNumber));\n                    if (rangeNoWhitespace.containsRange(prev) && !rangeNoWhitespace.equalsRange(prev) && cur.containsRange(rangeNoWhitespace) && !cur.equalsRange(rangeNoWhitespace)) {\n                        oneRangesWithTrivia.push(rangeNoWhitespace);\n                    }\n                    // add line/block range\n                    const rangeFull = new Range(prev.startLineNumber, 1, prev.endLineNumber, model.getLineMaxColumn(prev.endLineNumber));\n                    if (rangeFull.containsRange(prev) && !rangeFull.equalsRange(rangeNoWhitespace) && cur.containsRange(rangeFull) && !cur.equalsRange(rangeFull)) {\n                        oneRangesWithTrivia.push(rangeFull);\n                    }\n                }\n                oneRangesWithTrivia.push(cur);\n            }\n            return oneRangesWithTrivia;\n        });\n    });\n}\nregisterModelCommand('_executeSelectionRangeProvider', function (model, ...args) {\n    const [positions] = args;\n    return provideSelectionRanges(model, positions, { selectLeadingAndTrailingWhitespace: true }, CancellationToken.None);\n});\n"]},"metadata":{},"sourceType":"module"}