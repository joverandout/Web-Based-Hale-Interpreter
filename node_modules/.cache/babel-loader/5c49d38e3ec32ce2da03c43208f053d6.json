{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport * as aria from '../../../../base/browser/ui/aria/aria.js';\nimport { DomScrollableElement } from '../../../../base/browser/ui/scrollbar/scrollableElement.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { escapeRegExpCharacters } from '../../../../base/common/strings.js';\nimport { assertIsDefined } from '../../../../base/common/types.js';\nimport './parameterHints.css';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport { ILanguageService } from '../../../common/services/language.js';\nimport { ParameterHintsModel } from './parameterHintsModel.js';\nimport { Context } from './provideSignatureHelp.js';\nimport * as nls from '../../../../nls.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { editorHoverBackground, editorHoverBorder, editorHoverForeground, registerColor, textCodeBlockBackground, textLinkActiveForeground, textLinkForeground, listHighlightForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\nimport { ColorScheme } from '../../../../platform/theme/common/theme.js';\nimport { registerThemingParticipant, ThemeIcon } from '../../../../platform/theme/common/themeService.js';\nconst $ = dom.$;\nconst parameterHintsNextIcon = registerIcon('parameter-hints-next', Codicon.chevronDown, nls.localize('parameterHintsNextIcon', 'Icon for show next parameter hint.'));\nconst parameterHintsPreviousIcon = registerIcon('parameter-hints-previous', Codicon.chevronUp, nls.localize('parameterHintsPreviousIcon', 'Icon for show previous parameter hint.'));\nlet ParameterHintsWidget = class ParameterHintsWidget extends Disposable {\n  constructor(editor, contextKeyService, openerService, languageService) {\n    super();\n    this.editor = editor;\n    this.renderDisposeables = this._register(new DisposableStore());\n    this.visible = false;\n    this.announcedLabel = null; // Editor.IContentWidget.allowEditorOverflow\n\n    this.allowEditorOverflow = true;\n    this.markdownRenderer = this._register(new MarkdownRenderer({\n      editor\n    }, languageService, openerService));\n    this.model = this._register(new ParameterHintsModel(editor));\n    this.keyVisible = Context.Visible.bindTo(contextKeyService);\n    this.keyMultipleSignatures = Context.MultipleSignatures.bindTo(contextKeyService);\n\n    this._register(this.model.onChangedHints(newParameterHints => {\n      if (newParameterHints) {\n        this.show();\n        this.render(newParameterHints);\n      } else {\n        this.hide();\n      }\n    }));\n  }\n\n  createParameterHintDOMNodes() {\n    const element = $('.editor-widget.parameter-hints-widget');\n    const wrapper = dom.append(element, $('.phwrapper'));\n    wrapper.tabIndex = -1;\n    const controls = dom.append(wrapper, $('.controls'));\n    const previous = dom.append(controls, $('.button' + ThemeIcon.asCSSSelector(parameterHintsPreviousIcon)));\n    const overloads = dom.append(controls, $('.overloads'));\n    const next = dom.append(controls, $('.button' + ThemeIcon.asCSSSelector(parameterHintsNextIcon)));\n\n    this._register(dom.addDisposableListener(previous, 'click', e => {\n      dom.EventHelper.stop(e);\n      this.previous();\n    }));\n\n    this._register(dom.addDisposableListener(next, 'click', e => {\n      dom.EventHelper.stop(e);\n      this.next();\n    }));\n\n    const body = $('.body');\n    const scrollbar = new DomScrollableElement(body, {});\n\n    this._register(scrollbar);\n\n    wrapper.appendChild(scrollbar.getDomNode());\n    const signature = dom.append(body, $('.signature'));\n    const docs = dom.append(body, $('.docs'));\n    element.style.userSelect = 'text';\n    this.domNodes = {\n      element,\n      signature,\n      overloads,\n      docs,\n      scrollbar\n    };\n    this.editor.addContentWidget(this);\n    this.hide();\n\n    this._register(this.editor.onDidChangeCursorSelection(e => {\n      if (this.visible) {\n        this.editor.layoutContentWidget(this);\n      }\n    }));\n\n    const updateFont = () => {\n      if (!this.domNodes) {\n        return;\n      }\n\n      const fontInfo = this.editor.getOption(44\n      /* fontInfo */\n      );\n      this.domNodes.element.style.fontSize = `${fontInfo.fontSize}px`;\n      this.domNodes.element.style.lineHeight = `${fontInfo.lineHeight / fontInfo.fontSize}`;\n    };\n\n    updateFont();\n\n    this._register(Event.chain(this.editor.onDidChangeConfiguration.bind(this.editor)).filter(e => e.hasChanged(44\n    /* fontInfo */\n    )).on(updateFont, null));\n\n    this._register(this.editor.onDidLayoutChange(e => this.updateMaxHeight()));\n\n    this.updateMaxHeight();\n  }\n\n  show() {\n    if (this.visible) {\n      return;\n    }\n\n    if (!this.domNodes) {\n      this.createParameterHintDOMNodes();\n    }\n\n    this.keyVisible.set(true);\n    this.visible = true;\n    setTimeout(() => {\n      if (this.domNodes) {\n        this.domNodes.element.classList.add('visible');\n      }\n    }, 100);\n    this.editor.layoutContentWidget(this);\n  }\n\n  hide() {\n    this.renderDisposeables.clear();\n\n    if (!this.visible) {\n      return;\n    }\n\n    this.keyVisible.reset();\n    this.visible = false;\n    this.announcedLabel = null;\n\n    if (this.domNodes) {\n      this.domNodes.element.classList.remove('visible');\n    }\n\n    this.editor.layoutContentWidget(this);\n  }\n\n  getPosition() {\n    if (this.visible) {\n      return {\n        position: this.editor.getPosition(),\n        preference: [1\n        /* ABOVE */\n        , 2\n        /* BELOW */\n        ]\n      };\n    }\n\n    return null;\n  }\n\n  render(hints) {\n    var _a;\n\n    this.renderDisposeables.clear();\n\n    if (!this.domNodes) {\n      return;\n    }\n\n    const multiple = hints.signatures.length > 1;\n    this.domNodes.element.classList.toggle('multiple', multiple);\n    this.keyMultipleSignatures.set(multiple);\n    this.domNodes.signature.innerText = '';\n    this.domNodes.docs.innerText = '';\n    const signature = hints.signatures[hints.activeSignature];\n\n    if (!signature) {\n      return;\n    }\n\n    const code = dom.append(this.domNodes.signature, $('.code'));\n    const fontInfo = this.editor.getOption(44\n    /* fontInfo */\n    );\n    code.style.fontSize = `${fontInfo.fontSize}px`;\n    code.style.fontFamily = fontInfo.fontFamily;\n    const hasParameters = signature.parameters.length > 0;\n    const activeParameterIndex = (_a = signature.activeParameter) !== null && _a !== void 0 ? _a : hints.activeParameter;\n\n    if (!hasParameters) {\n      const label = dom.append(code, $('span'));\n      label.textContent = signature.label;\n    } else {\n      this.renderParameters(code, signature, activeParameterIndex);\n    }\n\n    const activeParameter = signature.parameters[activeParameterIndex];\n\n    if (activeParameter === null || activeParameter === void 0 ? void 0 : activeParameter.documentation) {\n      const documentation = $('span.documentation');\n\n      if (typeof activeParameter.documentation === 'string') {\n        documentation.textContent = activeParameter.documentation;\n      } else {\n        const renderedContents = this.renderMarkdownDocs(activeParameter.documentation);\n        documentation.appendChild(renderedContents.element);\n      }\n\n      dom.append(this.domNodes.docs, $('p', {}, documentation));\n    }\n\n    if (signature.documentation === undefined) {\n      /** no op */\n    } else if (typeof signature.documentation === 'string') {\n      dom.append(this.domNodes.docs, $('p', {}, signature.documentation));\n    } else {\n      const renderedContents = this.renderMarkdownDocs(signature.documentation);\n      dom.append(this.domNodes.docs, renderedContents.element);\n    }\n\n    const hasDocs = this.hasDocs(signature, activeParameter);\n    this.domNodes.signature.classList.toggle('has-docs', hasDocs);\n    this.domNodes.docs.classList.toggle('empty', !hasDocs);\n    this.domNodes.overloads.textContent = String(hints.activeSignature + 1).padStart(hints.signatures.length.toString().length, '0') + '/' + hints.signatures.length;\n\n    if (activeParameter) {\n      let labelToAnnounce = '';\n      const param = signature.parameters[activeParameterIndex];\n\n      if (Array.isArray(param.label)) {\n        labelToAnnounce = signature.label.substring(param.label[0], param.label[1]);\n      } else {\n        labelToAnnounce = param.label;\n      }\n\n      if (param.documentation) {\n        labelToAnnounce += typeof param.documentation === 'string' ? `, ${param.documentation}` : `, ${param.documentation.value}`;\n      }\n\n      if (signature.documentation) {\n        labelToAnnounce += typeof signature.documentation === 'string' ? `, ${signature.documentation}` : `, ${signature.documentation.value}`;\n      } // Select method gets called on every user type while parameter hints are visible.\n      // We do not want to spam the user with same announcements, so we only announce if the current parameter changed.\n\n\n      if (this.announcedLabel !== labelToAnnounce) {\n        aria.alert(nls.localize('hint', \"{0}, hint\", labelToAnnounce));\n        this.announcedLabel = labelToAnnounce;\n      }\n    }\n\n    this.editor.layoutContentWidget(this);\n    this.domNodes.scrollbar.scanDomNode();\n  }\n\n  renderMarkdownDocs(markdown) {\n    const renderedContents = this.renderDisposeables.add(this.markdownRenderer.render(markdown, {\n      asyncRenderCallback: () => {\n        var _a;\n\n        (_a = this.domNodes) === null || _a === void 0 ? void 0 : _a.scrollbar.scanDomNode();\n      }\n    }));\n    renderedContents.element.classList.add('markdown-docs');\n    return renderedContents;\n  }\n\n  hasDocs(signature, activeParameter) {\n    if (activeParameter && typeof activeParameter.documentation === 'string' && assertIsDefined(activeParameter.documentation).length > 0) {\n      return true;\n    }\n\n    if (activeParameter && typeof activeParameter.documentation === 'object' && assertIsDefined(activeParameter.documentation).value.length > 0) {\n      return true;\n    }\n\n    if (signature.documentation && typeof signature.documentation === 'string' && assertIsDefined(signature.documentation).length > 0) {\n      return true;\n    }\n\n    if (signature.documentation && typeof signature.documentation === 'object' && assertIsDefined(signature.documentation.value).length > 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  renderParameters(parent, signature, activeParameterIndex) {\n    const [start, end] = this.getParameterLabelOffsets(signature, activeParameterIndex);\n    const beforeSpan = document.createElement('span');\n    beforeSpan.textContent = signature.label.substring(0, start);\n    const paramSpan = document.createElement('span');\n    paramSpan.textContent = signature.label.substring(start, end);\n    paramSpan.className = 'parameter active';\n    const afterSpan = document.createElement('span');\n    afterSpan.textContent = signature.label.substring(end);\n    dom.append(parent, beforeSpan, paramSpan, afterSpan);\n  }\n\n  getParameterLabelOffsets(signature, paramIdx) {\n    const param = signature.parameters[paramIdx];\n\n    if (!param) {\n      return [0, 0];\n    } else if (Array.isArray(param.label)) {\n      return param.label;\n    } else if (!param.label.length) {\n      return [0, 0];\n    } else {\n      const regex = new RegExp(`(\\\\W|^)${escapeRegExpCharacters(param.label)}(?=\\\\W|$)`, 'g');\n      regex.test(signature.label);\n      const idx = regex.lastIndex - param.label.length;\n      return idx >= 0 ? [idx, regex.lastIndex] : [0, 0];\n    }\n  }\n\n  next() {\n    this.editor.focus();\n    this.model.next();\n  }\n\n  previous() {\n    this.editor.focus();\n    this.model.previous();\n  }\n\n  cancel() {\n    this.model.cancel();\n  }\n\n  getDomNode() {\n    if (!this.domNodes) {\n      this.createParameterHintDOMNodes();\n    }\n\n    return this.domNodes.element;\n  }\n\n  getId() {\n    return ParameterHintsWidget.ID;\n  }\n\n  trigger(context) {\n    this.model.trigger(context, 0);\n  }\n\n  updateMaxHeight() {\n    if (!this.domNodes) {\n      return;\n    }\n\n    const height = Math.max(this.editor.getLayoutInfo().height / 4, 250);\n    const maxHeight = `${height}px`;\n    this.domNodes.element.style.maxHeight = maxHeight;\n    const wrapper = this.domNodes.element.getElementsByClassName('phwrapper');\n\n    if (wrapper.length) {\n      wrapper[0].style.maxHeight = maxHeight;\n    }\n  }\n\n};\nParameterHintsWidget.ID = 'editor.widget.parameterHintsWidget';\nParameterHintsWidget = __decorate([__param(1, IContextKeyService), __param(2, IOpenerService), __param(3, ILanguageService)], ParameterHintsWidget);\nexport { ParameterHintsWidget };\nexport const editorHoverWidgetHighlightForeground = registerColor('editorHoverWidget.highlightForeground', {\n  dark: listHighlightForeground,\n  light: listHighlightForeground,\n  hc: listHighlightForeground\n}, nls.localize('editorHoverWidgetHighlightForeground', 'Foreground color of the active item in the parameter hint.'));\nregisterThemingParticipant((theme, collector) => {\n  const border = theme.getColor(editorHoverBorder);\n\n  if (border) {\n    const borderWidth = theme.type === ColorScheme.HIGH_CONTRAST ? 2 : 1;\n    collector.addRule(`.monaco-editor .parameter-hints-widget { border: ${borderWidth}px solid ${border}; }`);\n    collector.addRule(`.monaco-editor .parameter-hints-widget.multiple .body { border-left: 1px solid ${border.transparent(0.5)}; }`);\n    collector.addRule(`.monaco-editor .parameter-hints-widget .signature.has-docs { border-bottom: 1px solid ${border.transparent(0.5)}; }`);\n  }\n\n  const background = theme.getColor(editorHoverBackground);\n\n  if (background) {\n    collector.addRule(`.monaco-editor .parameter-hints-widget { background-color: ${background}; }`);\n  }\n\n  const link = theme.getColor(textLinkForeground);\n\n  if (link) {\n    collector.addRule(`.monaco-editor .parameter-hints-widget a { color: ${link}; }`);\n  }\n\n  const linkHover = theme.getColor(textLinkActiveForeground);\n\n  if (linkHover) {\n    collector.addRule(`.monaco-editor .parameter-hints-widget a:hover { color: ${linkHover}; }`);\n  }\n\n  const foreground = theme.getColor(editorHoverForeground);\n\n  if (foreground) {\n    collector.addRule(`.monaco-editor .parameter-hints-widget { color: ${foreground}; }`);\n  }\n\n  const codeBackground = theme.getColor(textCodeBlockBackground);\n\n  if (codeBackground) {\n    collector.addRule(`.monaco-editor .parameter-hints-widget code { background-color: ${codeBackground}; }`);\n  }\n\n  const parameterHighlightColor = theme.getColor(editorHoverWidgetHighlightForeground);\n\n  if (parameterHighlightColor) {\n    collector.addRule(`.monaco-editor .parameter-hints-widget .parameter.active { color: ${parameterHighlightColor}}`);\n  }\n});","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/contrib/parameterHints/browser/parameterHintsWidget.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","dom","aria","DomScrollableElement","Codicon","Event","Disposable","DisposableStore","escapeRegExpCharacters","assertIsDefined","MarkdownRenderer","ILanguageService","ParameterHintsModel","Context","nls","IContextKeyService","IOpenerService","editorHoverBackground","editorHoverBorder","editorHoverForeground","registerColor","textCodeBlockBackground","textLinkActiveForeground","textLinkForeground","listHighlightForeground","registerIcon","ColorScheme","registerThemingParticipant","ThemeIcon","$","parameterHintsNextIcon","chevronDown","localize","parameterHintsPreviousIcon","chevronUp","ParameterHintsWidget","constructor","editor","contextKeyService","openerService","languageService","renderDisposeables","_register","visible","announcedLabel","allowEditorOverflow","markdownRenderer","model","keyVisible","Visible","bindTo","keyMultipleSignatures","MultipleSignatures","onChangedHints","newParameterHints","show","render","hide","createParameterHintDOMNodes","element","wrapper","append","tabIndex","controls","previous","asCSSSelector","overloads","next","addDisposableListener","e","EventHelper","stop","body","scrollbar","appendChild","getDomNode","signature","docs","style","userSelect","domNodes","addContentWidget","onDidChangeCursorSelection","layoutContentWidget","updateFont","fontInfo","getOption","fontSize","lineHeight","chain","onDidChangeConfiguration","bind","filter","hasChanged","on","onDidLayoutChange","updateMaxHeight","set","setTimeout","classList","add","clear","reset","remove","getPosition","position","preference","hints","_a","multiple","signatures","toggle","innerText","activeSignature","code","fontFamily","hasParameters","parameters","activeParameterIndex","activeParameter","label","textContent","renderParameters","documentation","renderedContents","renderMarkdownDocs","undefined","hasDocs","String","padStart","toString","labelToAnnounce","param","Array","isArray","substring","value","alert","scanDomNode","markdown","asyncRenderCallback","parent","start","end","getParameterLabelOffsets","beforeSpan","document","createElement","paramSpan","className","afterSpan","paramIdx","regex","RegExp","test","idx","lastIndex","focus","cancel","getId","ID","trigger","context","height","Math","max","getLayoutInfo","maxHeight","getElementsByClassName","editorHoverWidgetHighlightForeground","dark","light","hc","theme","collector","border","getColor","borderWidth","type","HIGH_CONTRAST","addRule","transparent","background","link","linkHover","foreground","codeBackground","parameterHighlightColor"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport * as aria from '../../../../base/browser/ui/aria/aria.js';\nimport { DomScrollableElement } from '../../../../base/browser/ui/scrollbar/scrollableElement.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { escapeRegExpCharacters } from '../../../../base/common/strings.js';\nimport { assertIsDefined } from '../../../../base/common/types.js';\nimport './parameterHints.css';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport { ILanguageService } from '../../../common/services/language.js';\nimport { ParameterHintsModel } from './parameterHintsModel.js';\nimport { Context } from './provideSignatureHelp.js';\nimport * as nls from '../../../../nls.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { editorHoverBackground, editorHoverBorder, editorHoverForeground, registerColor, textCodeBlockBackground, textLinkActiveForeground, textLinkForeground, listHighlightForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\nimport { ColorScheme } from '../../../../platform/theme/common/theme.js';\nimport { registerThemingParticipant, ThemeIcon } from '../../../../platform/theme/common/themeService.js';\nconst $ = dom.$;\nconst parameterHintsNextIcon = registerIcon('parameter-hints-next', Codicon.chevronDown, nls.localize('parameterHintsNextIcon', 'Icon for show next parameter hint.'));\nconst parameterHintsPreviousIcon = registerIcon('parameter-hints-previous', Codicon.chevronUp, nls.localize('parameterHintsPreviousIcon', 'Icon for show previous parameter hint.'));\nlet ParameterHintsWidget = class ParameterHintsWidget extends Disposable {\n    constructor(editor, contextKeyService, openerService, languageService) {\n        super();\n        this.editor = editor;\n        this.renderDisposeables = this._register(new DisposableStore());\n        this.visible = false;\n        this.announcedLabel = null;\n        // Editor.IContentWidget.allowEditorOverflow\n        this.allowEditorOverflow = true;\n        this.markdownRenderer = this._register(new MarkdownRenderer({ editor }, languageService, openerService));\n        this.model = this._register(new ParameterHintsModel(editor));\n        this.keyVisible = Context.Visible.bindTo(contextKeyService);\n        this.keyMultipleSignatures = Context.MultipleSignatures.bindTo(contextKeyService);\n        this._register(this.model.onChangedHints(newParameterHints => {\n            if (newParameterHints) {\n                this.show();\n                this.render(newParameterHints);\n            }\n            else {\n                this.hide();\n            }\n        }));\n    }\n    createParameterHintDOMNodes() {\n        const element = $('.editor-widget.parameter-hints-widget');\n        const wrapper = dom.append(element, $('.phwrapper'));\n        wrapper.tabIndex = -1;\n        const controls = dom.append(wrapper, $('.controls'));\n        const previous = dom.append(controls, $('.button' + ThemeIcon.asCSSSelector(parameterHintsPreviousIcon)));\n        const overloads = dom.append(controls, $('.overloads'));\n        const next = dom.append(controls, $('.button' + ThemeIcon.asCSSSelector(parameterHintsNextIcon)));\n        this._register(dom.addDisposableListener(previous, 'click', e => {\n            dom.EventHelper.stop(e);\n            this.previous();\n        }));\n        this._register(dom.addDisposableListener(next, 'click', e => {\n            dom.EventHelper.stop(e);\n            this.next();\n        }));\n        const body = $('.body');\n        const scrollbar = new DomScrollableElement(body, {});\n        this._register(scrollbar);\n        wrapper.appendChild(scrollbar.getDomNode());\n        const signature = dom.append(body, $('.signature'));\n        const docs = dom.append(body, $('.docs'));\n        element.style.userSelect = 'text';\n        this.domNodes = {\n            element,\n            signature,\n            overloads,\n            docs,\n            scrollbar,\n        };\n        this.editor.addContentWidget(this);\n        this.hide();\n        this._register(this.editor.onDidChangeCursorSelection(e => {\n            if (this.visible) {\n                this.editor.layoutContentWidget(this);\n            }\n        }));\n        const updateFont = () => {\n            if (!this.domNodes) {\n                return;\n            }\n            const fontInfo = this.editor.getOption(44 /* fontInfo */);\n            this.domNodes.element.style.fontSize = `${fontInfo.fontSize}px`;\n            this.domNodes.element.style.lineHeight = `${fontInfo.lineHeight / fontInfo.fontSize}`;\n        };\n        updateFont();\n        this._register(Event.chain(this.editor.onDidChangeConfiguration.bind(this.editor))\n            .filter(e => e.hasChanged(44 /* fontInfo */))\n            .on(updateFont, null));\n        this._register(this.editor.onDidLayoutChange(e => this.updateMaxHeight()));\n        this.updateMaxHeight();\n    }\n    show() {\n        if (this.visible) {\n            return;\n        }\n        if (!this.domNodes) {\n            this.createParameterHintDOMNodes();\n        }\n        this.keyVisible.set(true);\n        this.visible = true;\n        setTimeout(() => {\n            if (this.domNodes) {\n                this.domNodes.element.classList.add('visible');\n            }\n        }, 100);\n        this.editor.layoutContentWidget(this);\n    }\n    hide() {\n        this.renderDisposeables.clear();\n        if (!this.visible) {\n            return;\n        }\n        this.keyVisible.reset();\n        this.visible = false;\n        this.announcedLabel = null;\n        if (this.domNodes) {\n            this.domNodes.element.classList.remove('visible');\n        }\n        this.editor.layoutContentWidget(this);\n    }\n    getPosition() {\n        if (this.visible) {\n            return {\n                position: this.editor.getPosition(),\n                preference: [1 /* ABOVE */, 2 /* BELOW */]\n            };\n        }\n        return null;\n    }\n    render(hints) {\n        var _a;\n        this.renderDisposeables.clear();\n        if (!this.domNodes) {\n            return;\n        }\n        const multiple = hints.signatures.length > 1;\n        this.domNodes.element.classList.toggle('multiple', multiple);\n        this.keyMultipleSignatures.set(multiple);\n        this.domNodes.signature.innerText = '';\n        this.domNodes.docs.innerText = '';\n        const signature = hints.signatures[hints.activeSignature];\n        if (!signature) {\n            return;\n        }\n        const code = dom.append(this.domNodes.signature, $('.code'));\n        const fontInfo = this.editor.getOption(44 /* fontInfo */);\n        code.style.fontSize = `${fontInfo.fontSize}px`;\n        code.style.fontFamily = fontInfo.fontFamily;\n        const hasParameters = signature.parameters.length > 0;\n        const activeParameterIndex = (_a = signature.activeParameter) !== null && _a !== void 0 ? _a : hints.activeParameter;\n        if (!hasParameters) {\n            const label = dom.append(code, $('span'));\n            label.textContent = signature.label;\n        }\n        else {\n            this.renderParameters(code, signature, activeParameterIndex);\n        }\n        const activeParameter = signature.parameters[activeParameterIndex];\n        if (activeParameter === null || activeParameter === void 0 ? void 0 : activeParameter.documentation) {\n            const documentation = $('span.documentation');\n            if (typeof activeParameter.documentation === 'string') {\n                documentation.textContent = activeParameter.documentation;\n            }\n            else {\n                const renderedContents = this.renderMarkdownDocs(activeParameter.documentation);\n                documentation.appendChild(renderedContents.element);\n            }\n            dom.append(this.domNodes.docs, $('p', {}, documentation));\n        }\n        if (signature.documentation === undefined) {\n            /** no op */\n        }\n        else if (typeof signature.documentation === 'string') {\n            dom.append(this.domNodes.docs, $('p', {}, signature.documentation));\n        }\n        else {\n            const renderedContents = this.renderMarkdownDocs(signature.documentation);\n            dom.append(this.domNodes.docs, renderedContents.element);\n        }\n        const hasDocs = this.hasDocs(signature, activeParameter);\n        this.domNodes.signature.classList.toggle('has-docs', hasDocs);\n        this.domNodes.docs.classList.toggle('empty', !hasDocs);\n        this.domNodes.overloads.textContent =\n            String(hints.activeSignature + 1).padStart(hints.signatures.length.toString().length, '0') + '/' + hints.signatures.length;\n        if (activeParameter) {\n            let labelToAnnounce = '';\n            const param = signature.parameters[activeParameterIndex];\n            if (Array.isArray(param.label)) {\n                labelToAnnounce = signature.label.substring(param.label[0], param.label[1]);\n            }\n            else {\n                labelToAnnounce = param.label;\n            }\n            if (param.documentation) {\n                labelToAnnounce += typeof param.documentation === 'string' ? `, ${param.documentation}` : `, ${param.documentation.value}`;\n            }\n            if (signature.documentation) {\n                labelToAnnounce += typeof signature.documentation === 'string' ? `, ${signature.documentation}` : `, ${signature.documentation.value}`;\n            }\n            // Select method gets called on every user type while parameter hints are visible.\n            // We do not want to spam the user with same announcements, so we only announce if the current parameter changed.\n            if (this.announcedLabel !== labelToAnnounce) {\n                aria.alert(nls.localize('hint', \"{0}, hint\", labelToAnnounce));\n                this.announcedLabel = labelToAnnounce;\n            }\n        }\n        this.editor.layoutContentWidget(this);\n        this.domNodes.scrollbar.scanDomNode();\n    }\n    renderMarkdownDocs(markdown) {\n        const renderedContents = this.renderDisposeables.add(this.markdownRenderer.render(markdown, {\n            asyncRenderCallback: () => {\n                var _a;\n                (_a = this.domNodes) === null || _a === void 0 ? void 0 : _a.scrollbar.scanDomNode();\n            }\n        }));\n        renderedContents.element.classList.add('markdown-docs');\n        return renderedContents;\n    }\n    hasDocs(signature, activeParameter) {\n        if (activeParameter && typeof activeParameter.documentation === 'string' && assertIsDefined(activeParameter.documentation).length > 0) {\n            return true;\n        }\n        if (activeParameter && typeof activeParameter.documentation === 'object' && assertIsDefined(activeParameter.documentation).value.length > 0) {\n            return true;\n        }\n        if (signature.documentation && typeof signature.documentation === 'string' && assertIsDefined(signature.documentation).length > 0) {\n            return true;\n        }\n        if (signature.documentation && typeof signature.documentation === 'object' && assertIsDefined(signature.documentation.value).length > 0) {\n            return true;\n        }\n        return false;\n    }\n    renderParameters(parent, signature, activeParameterIndex) {\n        const [start, end] = this.getParameterLabelOffsets(signature, activeParameterIndex);\n        const beforeSpan = document.createElement('span');\n        beforeSpan.textContent = signature.label.substring(0, start);\n        const paramSpan = document.createElement('span');\n        paramSpan.textContent = signature.label.substring(start, end);\n        paramSpan.className = 'parameter active';\n        const afterSpan = document.createElement('span');\n        afterSpan.textContent = signature.label.substring(end);\n        dom.append(parent, beforeSpan, paramSpan, afterSpan);\n    }\n    getParameterLabelOffsets(signature, paramIdx) {\n        const param = signature.parameters[paramIdx];\n        if (!param) {\n            return [0, 0];\n        }\n        else if (Array.isArray(param.label)) {\n            return param.label;\n        }\n        else if (!param.label.length) {\n            return [0, 0];\n        }\n        else {\n            const regex = new RegExp(`(\\\\W|^)${escapeRegExpCharacters(param.label)}(?=\\\\W|$)`, 'g');\n            regex.test(signature.label);\n            const idx = regex.lastIndex - param.label.length;\n            return idx >= 0\n                ? [idx, regex.lastIndex]\n                : [0, 0];\n        }\n    }\n    next() {\n        this.editor.focus();\n        this.model.next();\n    }\n    previous() {\n        this.editor.focus();\n        this.model.previous();\n    }\n    cancel() {\n        this.model.cancel();\n    }\n    getDomNode() {\n        if (!this.domNodes) {\n            this.createParameterHintDOMNodes();\n        }\n        return this.domNodes.element;\n    }\n    getId() {\n        return ParameterHintsWidget.ID;\n    }\n    trigger(context) {\n        this.model.trigger(context, 0);\n    }\n    updateMaxHeight() {\n        if (!this.domNodes) {\n            return;\n        }\n        const height = Math.max(this.editor.getLayoutInfo().height / 4, 250);\n        const maxHeight = `${height}px`;\n        this.domNodes.element.style.maxHeight = maxHeight;\n        const wrapper = this.domNodes.element.getElementsByClassName('phwrapper');\n        if (wrapper.length) {\n            wrapper[0].style.maxHeight = maxHeight;\n        }\n    }\n};\nParameterHintsWidget.ID = 'editor.widget.parameterHintsWidget';\nParameterHintsWidget = __decorate([\n    __param(1, IContextKeyService),\n    __param(2, IOpenerService),\n    __param(3, ILanguageService)\n], ParameterHintsWidget);\nexport { ParameterHintsWidget };\nexport const editorHoverWidgetHighlightForeground = registerColor('editorHoverWidget.highlightForeground', { dark: listHighlightForeground, light: listHighlightForeground, hc: listHighlightForeground }, nls.localize('editorHoverWidgetHighlightForeground', 'Foreground color of the active item in the parameter hint.'));\nregisterThemingParticipant((theme, collector) => {\n    const border = theme.getColor(editorHoverBorder);\n    if (border) {\n        const borderWidth = theme.type === ColorScheme.HIGH_CONTRAST ? 2 : 1;\n        collector.addRule(`.monaco-editor .parameter-hints-widget { border: ${borderWidth}px solid ${border}; }`);\n        collector.addRule(`.monaco-editor .parameter-hints-widget.multiple .body { border-left: 1px solid ${border.transparent(0.5)}; }`);\n        collector.addRule(`.monaco-editor .parameter-hints-widget .signature.has-docs { border-bottom: 1px solid ${border.transparent(0.5)}; }`);\n    }\n    const background = theme.getColor(editorHoverBackground);\n    if (background) {\n        collector.addRule(`.monaco-editor .parameter-hints-widget { background-color: ${background}; }`);\n    }\n    const link = theme.getColor(textLinkForeground);\n    if (link) {\n        collector.addRule(`.monaco-editor .parameter-hints-widget a { color: ${link}; }`);\n    }\n    const linkHover = theme.getColor(textLinkActiveForeground);\n    if (linkHover) {\n        collector.addRule(`.monaco-editor .parameter-hints-widget a:hover { color: ${linkHover}; }`);\n    }\n    const foreground = theme.getColor(editorHoverForeground);\n    if (foreground) {\n        collector.addRule(`.monaco-editor .parameter-hints-widget { color: ${foreground}; }`);\n    }\n    const codeBackground = theme.getColor(textCodeBlockBackground);\n    if (codeBackground) {\n        collector.addRule(`.monaco-editor .parameter-hints-widget code { background-color: ${codeBackground}; }`);\n    }\n    const parameterHighlightColor = theme.getColor(editorHoverWidgetHighlightForeground);\n    if (parameterHighlightColor) {\n        collector.addRule(`.monaco-editor .parameter-hints-widget .parameter.active { color: ${parameterHighlightColor}}`);\n    }\n});\n"]},"metadata":{},"sourceType":"module"}