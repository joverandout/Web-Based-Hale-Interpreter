{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ViewEventHandler } from '../../common/viewModel/viewEventHandler.js';\nexport class ViewPart extends ViewEventHandler {\n  constructor(context) {\n    super();\n    this._context = context;\n\n    this._context.addEventHandler(this);\n  }\n\n  dispose() {\n    this._context.removeEventHandler(this);\n\n    super.dispose();\n  }\n\n}\nexport class PartFingerprints {\n  static write(target, partId) {\n    target.setAttribute('data-mprt', String(partId));\n  }\n\n  static read(target) {\n    const r = target.getAttribute('data-mprt');\n\n    if (r === null) {\n      return 0\n      /* None */\n      ;\n    }\n\n    return parseInt(r, 10);\n  }\n\n  static collect(child, stopAt) {\n    const result = [];\n    let resultLen = 0;\n\n    while (child && child !== document.body) {\n      if (child === stopAt) {\n        break;\n      }\n\n      if (child.nodeType === child.ELEMENT_NODE) {\n        result[resultLen++] = this.read(child);\n      }\n\n      child = child.parentElement;\n    }\n\n    const r = new Uint8Array(resultLen);\n\n    for (let i = 0; i < resultLen; i++) {\n      r[i] = result[resultLen - i - 1];\n    }\n\n    return r;\n  }\n\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/browser/view/viewPart.js"],"names":["ViewEventHandler","ViewPart","constructor","context","_context","addEventHandler","dispose","removeEventHandler","PartFingerprints","write","target","partId","setAttribute","String","read","r","getAttribute","parseInt","collect","child","stopAt","result","resultLen","document","body","nodeType","ELEMENT_NODE","parentElement","Uint8Array","i"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,gBAAT,QAAiC,4CAAjC;AACA,OAAO,MAAMC,QAAN,SAAuBD,gBAAvB,CAAwC;AAC3CE,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB;AACA,SAAKC,QAAL,GAAgBD,OAAhB;;AACA,SAAKC,QAAL,CAAcC,eAAd,CAA8B,IAA9B;AACH;;AACDC,EAAAA,OAAO,GAAG;AACN,SAAKF,QAAL,CAAcG,kBAAd,CAAiC,IAAjC;;AACA,UAAMD,OAAN;AACH;;AAT0C;AAW/C,OAAO,MAAME,gBAAN,CAAuB;AACd,SAALC,KAAK,CAACC,MAAD,EAASC,MAAT,EAAiB;AACzBD,IAAAA,MAAM,CAACE,YAAP,CAAoB,WAApB,EAAiCC,MAAM,CAACF,MAAD,CAAvC;AACH;;AACU,SAAJG,IAAI,CAACJ,MAAD,EAAS;AAChB,UAAMK,CAAC,GAAGL,MAAM,CAACM,YAAP,CAAoB,WAApB,CAAV;;AACA,QAAID,CAAC,KAAK,IAAV,EAAgB;AACZ,aAAO;AAAE;AAAT;AACH;;AACD,WAAOE,QAAQ,CAACF,CAAD,EAAI,EAAJ,CAAf;AACH;;AACa,SAAPG,OAAO,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC1B,UAAMC,MAAM,GAAG,EAAf;AACA,QAAIC,SAAS,GAAG,CAAhB;;AACA,WAAOH,KAAK,IAAIA,KAAK,KAAKI,QAAQ,CAACC,IAAnC,EAAyC;AACrC,UAAIL,KAAK,KAAKC,MAAd,EAAsB;AAClB;AACH;;AACD,UAAID,KAAK,CAACM,QAAN,KAAmBN,KAAK,CAACO,YAA7B,EAA2C;AACvCL,QAAAA,MAAM,CAACC,SAAS,EAAV,CAAN,GAAsB,KAAKR,IAAL,CAAUK,KAAV,CAAtB;AACH;;AACDA,MAAAA,KAAK,GAAGA,KAAK,CAACQ,aAAd;AACH;;AACD,UAAMZ,CAAC,GAAG,IAAIa,UAAJ,CAAeN,SAAf,CAAV;;AACA,SAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,SAApB,EAA+BO,CAAC,EAAhC,EAAoC;AAChCd,MAAAA,CAAC,CAACc,CAAD,CAAD,GAAOR,MAAM,CAACC,SAAS,GAAGO,CAAZ,GAAgB,CAAjB,CAAb;AACH;;AACD,WAAOd,CAAP;AACH;;AA5ByB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ViewEventHandler } from '../../common/viewModel/viewEventHandler.js';\nexport class ViewPart extends ViewEventHandler {\n    constructor(context) {\n        super();\n        this._context = context;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        super.dispose();\n    }\n}\nexport class PartFingerprints {\n    static write(target, partId) {\n        target.setAttribute('data-mprt', String(partId));\n    }\n    static read(target) {\n        const r = target.getAttribute('data-mprt');\n        if (r === null) {\n            return 0 /* None */;\n        }\n        return parseInt(r, 10);\n    }\n    static collect(child, stopAt) {\n        const result = [];\n        let resultLen = 0;\n        while (child && child !== document.body) {\n            if (child === stopAt) {\n                break;\n            }\n            if (child.nodeType === child.ELEMENT_NODE) {\n                result[resultLen++] = this.read(child);\n            }\n            child = child.parentElement;\n        }\n        const r = new Uint8Array(resultLen);\n        for (let i = 0; i < resultLen; i++) {\n            r[i] = result[resultLen - i - 1];\n        }\n        return r;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}