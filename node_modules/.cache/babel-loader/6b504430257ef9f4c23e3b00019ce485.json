{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as browser from '../../../base/browser/browser.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { CharWidthRequest, readCharWidths } from './charWidthReader.js';\nimport { EditorFontLigatures } from '../../common/config/editorOptions.js';\nimport { FontInfo } from '../../common/config/fontInfo.js';\n\nclass FontMeasurementsImpl extends Disposable {\n  constructor() {\n    super();\n    this._onDidChange = this._register(new Emitter());\n    this.onDidChange = this._onDidChange.event;\n    this._cache = new FontMeasurementsCache();\n    this._evictUntrustedReadingsTimeout = -1;\n  }\n\n  dispose() {\n    if (this._evictUntrustedReadingsTimeout !== -1) {\n      window.clearTimeout(this._evictUntrustedReadingsTimeout);\n      this._evictUntrustedReadingsTimeout = -1;\n    }\n\n    super.dispose();\n  }\n  /**\n   * Clear all cached font information and trigger a change event.\n   */\n\n\n  clearAllFontInfos() {\n    this._cache = new FontMeasurementsCache();\n\n    this._onDidChange.fire();\n  }\n\n  _writeToCache(item, value) {\n    this._cache.put(item, value);\n\n    if (!value.isTrusted && this._evictUntrustedReadingsTimeout === -1) {\n      // Try reading again after some time\n      this._evictUntrustedReadingsTimeout = window.setTimeout(() => {\n        this._evictUntrustedReadingsTimeout = -1;\n\n        this._evictUntrustedReadings();\n      }, 5000);\n    }\n  }\n\n  _evictUntrustedReadings() {\n    const values = this._cache.getValues();\n\n    let somethingRemoved = false;\n\n    for (const item of values) {\n      if (!item.isTrusted) {\n        somethingRemoved = true;\n\n        this._cache.remove(item);\n      }\n    }\n\n    if (somethingRemoved) {\n      this._onDidChange.fire();\n    }\n  }\n  /**\n   * Read font information.\n   */\n\n\n  readFontInfo(bareFontInfo) {\n    if (!this._cache.has(bareFontInfo)) {\n      let readConfig = this._actualReadFontInfo(bareFontInfo);\n\n      if (readConfig.typicalHalfwidthCharacterWidth <= 2 || readConfig.typicalFullwidthCharacterWidth <= 2 || readConfig.spaceWidth <= 2 || readConfig.maxDigitWidth <= 2) {\n        // Hey, it's Bug 14341 ... we couldn't read\n        readConfig = new FontInfo({\n          pixelRatio: browser.PixelRatio.value,\n          fontFamily: readConfig.fontFamily,\n          fontWeight: readConfig.fontWeight,\n          fontSize: readConfig.fontSize,\n          fontFeatureSettings: readConfig.fontFeatureSettings,\n          lineHeight: readConfig.lineHeight,\n          letterSpacing: readConfig.letterSpacing,\n          isMonospace: readConfig.isMonospace,\n          typicalHalfwidthCharacterWidth: Math.max(readConfig.typicalHalfwidthCharacterWidth, 5),\n          typicalFullwidthCharacterWidth: Math.max(readConfig.typicalFullwidthCharacterWidth, 5),\n          canUseHalfwidthRightwardsArrow: readConfig.canUseHalfwidthRightwardsArrow,\n          spaceWidth: Math.max(readConfig.spaceWidth, 5),\n          middotWidth: Math.max(readConfig.middotWidth, 5),\n          wsmiddotWidth: Math.max(readConfig.wsmiddotWidth, 5),\n          maxDigitWidth: Math.max(readConfig.maxDigitWidth, 5)\n        }, false);\n      }\n\n      this._writeToCache(bareFontInfo, readConfig);\n    }\n\n    return this._cache.get(bareFontInfo);\n  }\n\n  _createRequest(chr, type, all, monospace) {\n    const result = new CharWidthRequest(chr, type);\n    all.push(result);\n\n    if (monospace) {\n      monospace.push(result);\n    }\n\n    return result;\n  }\n\n  _actualReadFontInfo(bareFontInfo) {\n    const all = [];\n    const monospace = [];\n\n    const typicalHalfwidthCharacter = this._createRequest('n', 0\n    /* Regular */\n    , all, monospace);\n\n    const typicalFullwidthCharacter = this._createRequest('\\uff4d', 0\n    /* Regular */\n    , all, null);\n\n    const space = this._createRequest(' ', 0\n    /* Regular */\n    , all, monospace);\n\n    const digit0 = this._createRequest('0', 0\n    /* Regular */\n    , all, monospace);\n\n    const digit1 = this._createRequest('1', 0\n    /* Regular */\n    , all, monospace);\n\n    const digit2 = this._createRequest('2', 0\n    /* Regular */\n    , all, monospace);\n\n    const digit3 = this._createRequest('3', 0\n    /* Regular */\n    , all, monospace);\n\n    const digit4 = this._createRequest('4', 0\n    /* Regular */\n    , all, monospace);\n\n    const digit5 = this._createRequest('5', 0\n    /* Regular */\n    , all, monospace);\n\n    const digit6 = this._createRequest('6', 0\n    /* Regular */\n    , all, monospace);\n\n    const digit7 = this._createRequest('7', 0\n    /* Regular */\n    , all, monospace);\n\n    const digit8 = this._createRequest('8', 0\n    /* Regular */\n    , all, monospace);\n\n    const digit9 = this._createRequest('9', 0\n    /* Regular */\n    , all, monospace); // monospace test: used for whitespace rendering\n\n\n    const rightwardsArrow = this._createRequest('→', 0\n    /* Regular */\n    , all, monospace);\n\n    const halfwidthRightwardsArrow = this._createRequest('￫', 0\n    /* Regular */\n    , all, null); // U+00B7 - MIDDLE DOT\n\n\n    const middot = this._createRequest('·', 0\n    /* Regular */\n    , all, monospace); // U+2E31 - WORD SEPARATOR MIDDLE DOT\n\n\n    const wsmiddotWidth = this._createRequest(String.fromCharCode(0x2E31), 0\n    /* Regular */\n    , all, null); // monospace test: some characters\n\n\n    const monospaceTestChars = '|/-_ilm%';\n\n    for (let i = 0, len = monospaceTestChars.length; i < len; i++) {\n      this._createRequest(monospaceTestChars.charAt(i), 0\n      /* Regular */\n      , all, monospace);\n\n      this._createRequest(monospaceTestChars.charAt(i), 1\n      /* Italic */\n      , all, monospace);\n\n      this._createRequest(monospaceTestChars.charAt(i), 2\n      /* Bold */\n      , all, monospace);\n    }\n\n    readCharWidths(bareFontInfo, all);\n    const maxDigitWidth = Math.max(digit0.width, digit1.width, digit2.width, digit3.width, digit4.width, digit5.width, digit6.width, digit7.width, digit8.width, digit9.width);\n    let isMonospace = bareFontInfo.fontFeatureSettings === EditorFontLigatures.OFF;\n    const referenceWidth = monospace[0].width;\n\n    for (let i = 1, len = monospace.length; isMonospace && i < len; i++) {\n      const diff = referenceWidth - monospace[i].width;\n\n      if (diff < -0.001 || diff > 0.001) {\n        isMonospace = false;\n        break;\n      }\n    }\n\n    let canUseHalfwidthRightwardsArrow = true;\n\n    if (isMonospace && halfwidthRightwardsArrow.width !== referenceWidth) {\n      // using a halfwidth rightwards arrow would break monospace...\n      canUseHalfwidthRightwardsArrow = false;\n    }\n\n    if (halfwidthRightwardsArrow.width > rightwardsArrow.width) {\n      // using a halfwidth rightwards arrow would paint a larger arrow than a regular rightwards arrow\n      canUseHalfwidthRightwardsArrow = false;\n    }\n\n    return new FontInfo({\n      pixelRatio: browser.PixelRatio.value,\n      fontFamily: bareFontInfo.fontFamily,\n      fontWeight: bareFontInfo.fontWeight,\n      fontSize: bareFontInfo.fontSize,\n      fontFeatureSettings: bareFontInfo.fontFeatureSettings,\n      lineHeight: bareFontInfo.lineHeight,\n      letterSpacing: bareFontInfo.letterSpacing,\n      isMonospace: isMonospace,\n      typicalHalfwidthCharacterWidth: typicalHalfwidthCharacter.width,\n      typicalFullwidthCharacterWidth: typicalFullwidthCharacter.width,\n      canUseHalfwidthRightwardsArrow: canUseHalfwidthRightwardsArrow,\n      spaceWidth: space.width,\n      middotWidth: middot.width,\n      wsmiddotWidth: wsmiddotWidth.width,\n      maxDigitWidth: maxDigitWidth\n    }, true);\n  }\n\n}\n\nclass FontMeasurementsCache {\n  constructor() {\n    this._keys = Object.create(null);\n    this._values = Object.create(null);\n  }\n\n  has(item) {\n    const itemId = item.getId();\n    return !!this._values[itemId];\n  }\n\n  get(item) {\n    const itemId = item.getId();\n    return this._values[itemId];\n  }\n\n  put(item, value) {\n    const itemId = item.getId();\n    this._keys[itemId] = item;\n    this._values[itemId] = value;\n  }\n\n  remove(item) {\n    const itemId = item.getId();\n    delete this._keys[itemId];\n    delete this._values[itemId];\n  }\n\n  getValues() {\n    return Object.keys(this._keys).map(id => this._values[id]);\n  }\n\n}\n\nexport const FontMeasurements = new FontMeasurementsImpl();","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/browser/config/fontMeasurements.js"],"names":["browser","Emitter","Disposable","CharWidthRequest","readCharWidths","EditorFontLigatures","FontInfo","FontMeasurementsImpl","constructor","_onDidChange","_register","onDidChange","event","_cache","FontMeasurementsCache","_evictUntrustedReadingsTimeout","dispose","window","clearTimeout","clearAllFontInfos","fire","_writeToCache","item","value","put","isTrusted","setTimeout","_evictUntrustedReadings","values","getValues","somethingRemoved","remove","readFontInfo","bareFontInfo","has","readConfig","_actualReadFontInfo","typicalHalfwidthCharacterWidth","typicalFullwidthCharacterWidth","spaceWidth","maxDigitWidth","pixelRatio","PixelRatio","fontFamily","fontWeight","fontSize","fontFeatureSettings","lineHeight","letterSpacing","isMonospace","Math","max","canUseHalfwidthRightwardsArrow","middotWidth","wsmiddotWidth","get","_createRequest","chr","type","all","monospace","result","push","typicalHalfwidthCharacter","typicalFullwidthCharacter","space","digit0","digit1","digit2","digit3","digit4","digit5","digit6","digit7","digit8","digit9","rightwardsArrow","halfwidthRightwardsArrow","middot","String","fromCharCode","monospaceTestChars","i","len","length","charAt","width","OFF","referenceWidth","diff","_keys","Object","create","_values","itemId","getId","keys","map","id","FontMeasurements"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as browser from '../../../base/browser/browser.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { CharWidthRequest, readCharWidths } from './charWidthReader.js';\nimport { EditorFontLigatures } from '../../common/config/editorOptions.js';\nimport { FontInfo } from '../../common/config/fontInfo.js';\nclass FontMeasurementsImpl extends Disposable {\n    constructor() {\n        super();\n        this._onDidChange = this._register(new Emitter());\n        this.onDidChange = this._onDidChange.event;\n        this._cache = new FontMeasurementsCache();\n        this._evictUntrustedReadingsTimeout = -1;\n    }\n    dispose() {\n        if (this._evictUntrustedReadingsTimeout !== -1) {\n            window.clearTimeout(this._evictUntrustedReadingsTimeout);\n            this._evictUntrustedReadingsTimeout = -1;\n        }\n        super.dispose();\n    }\n    /**\n     * Clear all cached font information and trigger a change event.\n     */\n    clearAllFontInfos() {\n        this._cache = new FontMeasurementsCache();\n        this._onDidChange.fire();\n    }\n    _writeToCache(item, value) {\n        this._cache.put(item, value);\n        if (!value.isTrusted && this._evictUntrustedReadingsTimeout === -1) {\n            // Try reading again after some time\n            this._evictUntrustedReadingsTimeout = window.setTimeout(() => {\n                this._evictUntrustedReadingsTimeout = -1;\n                this._evictUntrustedReadings();\n            }, 5000);\n        }\n    }\n    _evictUntrustedReadings() {\n        const values = this._cache.getValues();\n        let somethingRemoved = false;\n        for (const item of values) {\n            if (!item.isTrusted) {\n                somethingRemoved = true;\n                this._cache.remove(item);\n            }\n        }\n        if (somethingRemoved) {\n            this._onDidChange.fire();\n        }\n    }\n    /**\n     * Read font information.\n     */\n    readFontInfo(bareFontInfo) {\n        if (!this._cache.has(bareFontInfo)) {\n            let readConfig = this._actualReadFontInfo(bareFontInfo);\n            if (readConfig.typicalHalfwidthCharacterWidth <= 2 || readConfig.typicalFullwidthCharacterWidth <= 2 || readConfig.spaceWidth <= 2 || readConfig.maxDigitWidth <= 2) {\n                // Hey, it's Bug 14341 ... we couldn't read\n                readConfig = new FontInfo({\n                    pixelRatio: browser.PixelRatio.value,\n                    fontFamily: readConfig.fontFamily,\n                    fontWeight: readConfig.fontWeight,\n                    fontSize: readConfig.fontSize,\n                    fontFeatureSettings: readConfig.fontFeatureSettings,\n                    lineHeight: readConfig.lineHeight,\n                    letterSpacing: readConfig.letterSpacing,\n                    isMonospace: readConfig.isMonospace,\n                    typicalHalfwidthCharacterWidth: Math.max(readConfig.typicalHalfwidthCharacterWidth, 5),\n                    typicalFullwidthCharacterWidth: Math.max(readConfig.typicalFullwidthCharacterWidth, 5),\n                    canUseHalfwidthRightwardsArrow: readConfig.canUseHalfwidthRightwardsArrow,\n                    spaceWidth: Math.max(readConfig.spaceWidth, 5),\n                    middotWidth: Math.max(readConfig.middotWidth, 5),\n                    wsmiddotWidth: Math.max(readConfig.wsmiddotWidth, 5),\n                    maxDigitWidth: Math.max(readConfig.maxDigitWidth, 5),\n                }, false);\n            }\n            this._writeToCache(bareFontInfo, readConfig);\n        }\n        return this._cache.get(bareFontInfo);\n    }\n    _createRequest(chr, type, all, monospace) {\n        const result = new CharWidthRequest(chr, type);\n        all.push(result);\n        if (monospace) {\n            monospace.push(result);\n        }\n        return result;\n    }\n    _actualReadFontInfo(bareFontInfo) {\n        const all = [];\n        const monospace = [];\n        const typicalHalfwidthCharacter = this._createRequest('n', 0 /* Regular */, all, monospace);\n        const typicalFullwidthCharacter = this._createRequest('\\uff4d', 0 /* Regular */, all, null);\n        const space = this._createRequest(' ', 0 /* Regular */, all, monospace);\n        const digit0 = this._createRequest('0', 0 /* Regular */, all, monospace);\n        const digit1 = this._createRequest('1', 0 /* Regular */, all, monospace);\n        const digit2 = this._createRequest('2', 0 /* Regular */, all, monospace);\n        const digit3 = this._createRequest('3', 0 /* Regular */, all, monospace);\n        const digit4 = this._createRequest('4', 0 /* Regular */, all, monospace);\n        const digit5 = this._createRequest('5', 0 /* Regular */, all, monospace);\n        const digit6 = this._createRequest('6', 0 /* Regular */, all, monospace);\n        const digit7 = this._createRequest('7', 0 /* Regular */, all, monospace);\n        const digit8 = this._createRequest('8', 0 /* Regular */, all, monospace);\n        const digit9 = this._createRequest('9', 0 /* Regular */, all, monospace);\n        // monospace test: used for whitespace rendering\n        const rightwardsArrow = this._createRequest('→', 0 /* Regular */, all, monospace);\n        const halfwidthRightwardsArrow = this._createRequest('￫', 0 /* Regular */, all, null);\n        // U+00B7 - MIDDLE DOT\n        const middot = this._createRequest('·', 0 /* Regular */, all, monospace);\n        // U+2E31 - WORD SEPARATOR MIDDLE DOT\n        const wsmiddotWidth = this._createRequest(String.fromCharCode(0x2E31), 0 /* Regular */, all, null);\n        // monospace test: some characters\n        const monospaceTestChars = '|/-_ilm%';\n        for (let i = 0, len = monospaceTestChars.length; i < len; i++) {\n            this._createRequest(monospaceTestChars.charAt(i), 0 /* Regular */, all, monospace);\n            this._createRequest(monospaceTestChars.charAt(i), 1 /* Italic */, all, monospace);\n            this._createRequest(monospaceTestChars.charAt(i), 2 /* Bold */, all, monospace);\n        }\n        readCharWidths(bareFontInfo, all);\n        const maxDigitWidth = Math.max(digit0.width, digit1.width, digit2.width, digit3.width, digit4.width, digit5.width, digit6.width, digit7.width, digit8.width, digit9.width);\n        let isMonospace = (bareFontInfo.fontFeatureSettings === EditorFontLigatures.OFF);\n        const referenceWidth = monospace[0].width;\n        for (let i = 1, len = monospace.length; isMonospace && i < len; i++) {\n            const diff = referenceWidth - monospace[i].width;\n            if (diff < -0.001 || diff > 0.001) {\n                isMonospace = false;\n                break;\n            }\n        }\n        let canUseHalfwidthRightwardsArrow = true;\n        if (isMonospace && halfwidthRightwardsArrow.width !== referenceWidth) {\n            // using a halfwidth rightwards arrow would break monospace...\n            canUseHalfwidthRightwardsArrow = false;\n        }\n        if (halfwidthRightwardsArrow.width > rightwardsArrow.width) {\n            // using a halfwidth rightwards arrow would paint a larger arrow than a regular rightwards arrow\n            canUseHalfwidthRightwardsArrow = false;\n        }\n        return new FontInfo({\n            pixelRatio: browser.PixelRatio.value,\n            fontFamily: bareFontInfo.fontFamily,\n            fontWeight: bareFontInfo.fontWeight,\n            fontSize: bareFontInfo.fontSize,\n            fontFeatureSettings: bareFontInfo.fontFeatureSettings,\n            lineHeight: bareFontInfo.lineHeight,\n            letterSpacing: bareFontInfo.letterSpacing,\n            isMonospace: isMonospace,\n            typicalHalfwidthCharacterWidth: typicalHalfwidthCharacter.width,\n            typicalFullwidthCharacterWidth: typicalFullwidthCharacter.width,\n            canUseHalfwidthRightwardsArrow: canUseHalfwidthRightwardsArrow,\n            spaceWidth: space.width,\n            middotWidth: middot.width,\n            wsmiddotWidth: wsmiddotWidth.width,\n            maxDigitWidth: maxDigitWidth\n        }, true);\n    }\n}\nclass FontMeasurementsCache {\n    constructor() {\n        this._keys = Object.create(null);\n        this._values = Object.create(null);\n    }\n    has(item) {\n        const itemId = item.getId();\n        return !!this._values[itemId];\n    }\n    get(item) {\n        const itemId = item.getId();\n        return this._values[itemId];\n    }\n    put(item, value) {\n        const itemId = item.getId();\n        this._keys[itemId] = item;\n        this._values[itemId] = value;\n    }\n    remove(item) {\n        const itemId = item.getId();\n        delete this._keys[itemId];\n        delete this._values[itemId];\n    }\n    getValues() {\n        return Object.keys(this._keys).map(id => this._values[id]);\n    }\n}\nexport const FontMeasurements = new FontMeasurementsImpl();\n"]},"metadata":{},"sourceType":"module"}