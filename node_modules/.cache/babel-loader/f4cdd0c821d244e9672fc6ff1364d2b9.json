{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageService } from '../../../common/services/language.js';\nimport { HoverForeignElementAnchor } from '../../hover/browser/hoverTypes.js';\nimport { commitInlineSuggestionAction, GhostTextController, ShowNextInlineSuggestionAction, ShowPreviousInlineSuggestionAction } from './ghostTextController.js';\nimport * as nls from '../../../../nls.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nimport { IMenuService, MenuId, MenuItemAction } from '../../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nexport class InlineCompletionsHover {\n  constructor(owner, range, controller) {\n    this.owner = owner;\n    this.range = range;\n    this.controller = controller;\n  }\n\n  isValidForHoverAnchor(anchor) {\n    return anchor.type === 1\n    /* Range */\n    && this.range.startColumn <= anchor.range.startColumn && this.range.endColumn >= anchor.range.endColumn;\n  }\n\n  hasMultipleSuggestions() {\n    return this.controller.hasMultipleInlineCompletions();\n  }\n\n}\nlet InlineCompletionsHoverParticipant = class InlineCompletionsHoverParticipant {\n  constructor(_editor, _commandService, _menuService, _contextKeyService, _languageService, _openerService, accessibilityService) {\n    this._editor = _editor;\n    this._commandService = _commandService;\n    this._menuService = _menuService;\n    this._contextKeyService = _contextKeyService;\n    this._languageService = _languageService;\n    this._openerService = _openerService;\n    this.accessibilityService = accessibilityService;\n  }\n\n  suggestHoverAnchor(mouseEvent) {\n    const controller = GhostTextController.get(this._editor);\n\n    if (!controller) {\n      return null;\n    }\n\n    const target = mouseEvent.target;\n\n    if (target.type === 8\n    /* CONTENT_VIEW_ZONE */\n    ) {\n      // handle the case where the mouse is over the view zone\n      const viewZoneData = target.detail;\n\n      if (controller.shouldShowHoverAtViewZone(viewZoneData.viewZoneId)) {\n        return new HoverForeignElementAnchor(1000, this, Range.fromPositions(viewZoneData.positionBefore || viewZoneData.position, viewZoneData.positionBefore || viewZoneData.position));\n      }\n    }\n\n    if (target.type === 7\n    /* CONTENT_EMPTY */\n    ) {\n      // handle the case where the mouse is over the empty portion of a line following ghost text\n      if (controller.shouldShowHoverAt(target.range)) {\n        return new HoverForeignElementAnchor(1000, this, target.range);\n      }\n    }\n\n    if (target.type === 6\n    /* CONTENT_TEXT */\n    ) {\n      // handle the case where the mouse is directly over ghost text\n      const mightBeForeignElement = target.detail.mightBeForeignElement;\n\n      if (mightBeForeignElement && controller.shouldShowHoverAt(target.range)) {\n        return new HoverForeignElementAnchor(1000, this, target.range);\n      }\n    }\n\n    return null;\n  }\n\n  computeSync(anchor, lineDecorations) {\n    const controller = GhostTextController.get(this._editor);\n\n    if (controller && controller.shouldShowHoverAt(anchor.range)) {\n      return [new InlineCompletionsHover(this, anchor.range, controller)];\n    }\n\n    return [];\n  }\n\n  renderHoverParts(context, hoverParts) {\n    const disposableStore = new DisposableStore();\n    const part = hoverParts[0];\n\n    if (this.accessibilityService.isScreenReaderOptimized()) {\n      this.renderScreenReaderText(context, part, disposableStore);\n    }\n\n    const menu = disposableStore.add(this._menuService.createMenu(MenuId.InlineCompletionsActions, this._contextKeyService));\n    const previousAction = context.statusBar.addAction({\n      label: nls.localize('showNextInlineSuggestion', \"Next\"),\n      commandId: ShowNextInlineSuggestionAction.ID,\n      run: () => this._commandService.executeCommand(ShowNextInlineSuggestionAction.ID)\n    });\n    const nextAction = context.statusBar.addAction({\n      label: nls.localize('showPreviousInlineSuggestion', \"Previous\"),\n      commandId: ShowPreviousInlineSuggestionAction.ID,\n      run: () => this._commandService.executeCommand(ShowPreviousInlineSuggestionAction.ID)\n    });\n    context.statusBar.addAction({\n      label: nls.localize('acceptInlineSuggestion', \"Accept\"),\n      commandId: commitInlineSuggestionAction.id,\n      run: () => this._commandService.executeCommand(commitInlineSuggestionAction.id)\n    });\n    const actions = [previousAction, nextAction];\n\n    for (const action of actions) {\n      action.setEnabled(false);\n    }\n\n    part.hasMultipleSuggestions().then(hasMore => {\n      for (const action of actions) {\n        action.setEnabled(hasMore);\n      }\n    });\n\n    for (const [_, group] of menu.getActions()) {\n      for (const action of group) {\n        if (action instanceof MenuItemAction) {\n          context.statusBar.addAction({\n            label: action.label,\n            commandId: action.item.id,\n            run: () => this._commandService.executeCommand(action.item.id)\n          });\n        }\n      }\n    }\n\n    return disposableStore;\n  }\n\n  renderScreenReaderText(context, part, disposableStore) {\n    var _a, _b;\n\n    const $ = dom.$;\n    const markdownHoverElement = $('div.hover-row.markdown-hover');\n    const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n    const renderer = disposableStore.add(new MarkdownRenderer({\n      editor: this._editor\n    }, this._languageService, this._openerService));\n\n    const render = code => {\n      disposableStore.add(renderer.onDidRenderAsync(() => {\n        hoverContentsElement.className = 'hover-contents code-hover-contents';\n        context.onContentsChanged();\n      }));\n      const inlineSuggestionAvailable = nls.localize('inlineSuggestionFollows', \"Suggestion:\");\n      const renderedContents = disposableStore.add(renderer.render(new MarkdownString().appendText(inlineSuggestionAvailable).appendCodeblock('text', code)));\n      hoverContentsElement.replaceChildren(renderedContents.element);\n    };\n\n    const ghostText = (_b = (_a = part.controller.activeModel) === null || _a === void 0 ? void 0 : _a.inlineCompletionsModel) === null || _b === void 0 ? void 0 : _b.ghostText;\n\n    if (ghostText) {\n      const lineText = this._editor.getModel().getLineContent(ghostText.lineNumber);\n\n      render(ghostText.renderForScreenReader(lineText));\n    }\n\n    context.fragment.appendChild(markdownHoverElement);\n  }\n\n};\nInlineCompletionsHoverParticipant = __decorate([__param(1, ICommandService), __param(2, IMenuService), __param(3, IContextKeyService), __param(4, ILanguageService), __param(5, IOpenerService), __param(6, IAccessibilityService)], InlineCompletionsHoverParticipant);\nexport { InlineCompletionsHoverParticipant };","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsHoverParticipant.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","dom","MarkdownString","DisposableStore","MarkdownRenderer","Range","ILanguageService","HoverForeignElementAnchor","commitInlineSuggestionAction","GhostTextController","ShowNextInlineSuggestionAction","ShowPreviousInlineSuggestionAction","nls","IAccessibilityService","IMenuService","MenuId","MenuItemAction","ICommandService","IContextKeyService","IOpenerService","InlineCompletionsHover","constructor","owner","range","controller","isValidForHoverAnchor","anchor","type","startColumn","endColumn","hasMultipleSuggestions","hasMultipleInlineCompletions","InlineCompletionsHoverParticipant","_editor","_commandService","_menuService","_contextKeyService","_languageService","_openerService","accessibilityService","suggestHoverAnchor","mouseEvent","get","viewZoneData","detail","shouldShowHoverAtViewZone","viewZoneId","fromPositions","positionBefore","position","shouldShowHoverAt","mightBeForeignElement","computeSync","lineDecorations","renderHoverParts","context","hoverParts","disposableStore","part","isScreenReaderOptimized","renderScreenReaderText","menu","add","createMenu","InlineCompletionsActions","previousAction","statusBar","addAction","label","localize","commandId","ID","run","executeCommand","nextAction","id","actions","action","setEnabled","then","hasMore","_","group","getActions","item","_a","_b","$","markdownHoverElement","hoverContentsElement","append","renderer","editor","render","code","onDidRenderAsync","className","onContentsChanged","inlineSuggestionAvailable","renderedContents","appendText","appendCodeblock","replaceChildren","element","ghostText","activeModel","inlineCompletionsModel","lineText","getModel","getLineContent","lineNumber","renderForScreenReader","fragment","appendChild"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageService } from '../../../common/services/language.js';\nimport { HoverForeignElementAnchor } from '../../hover/browser/hoverTypes.js';\nimport { commitInlineSuggestionAction, GhostTextController, ShowNextInlineSuggestionAction, ShowPreviousInlineSuggestionAction } from './ghostTextController.js';\nimport * as nls from '../../../../nls.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nimport { IMenuService, MenuId, MenuItemAction } from '../../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nexport class InlineCompletionsHover {\n    constructor(owner, range, controller) {\n        this.owner = owner;\n        this.range = range;\n        this.controller = controller;\n    }\n    isValidForHoverAnchor(anchor) {\n        return (anchor.type === 1 /* Range */\n            && this.range.startColumn <= anchor.range.startColumn\n            && this.range.endColumn >= anchor.range.endColumn);\n    }\n    hasMultipleSuggestions() {\n        return this.controller.hasMultipleInlineCompletions();\n    }\n}\nlet InlineCompletionsHoverParticipant = class InlineCompletionsHoverParticipant {\n    constructor(_editor, _commandService, _menuService, _contextKeyService, _languageService, _openerService, accessibilityService) {\n        this._editor = _editor;\n        this._commandService = _commandService;\n        this._menuService = _menuService;\n        this._contextKeyService = _contextKeyService;\n        this._languageService = _languageService;\n        this._openerService = _openerService;\n        this.accessibilityService = accessibilityService;\n    }\n    suggestHoverAnchor(mouseEvent) {\n        const controller = GhostTextController.get(this._editor);\n        if (!controller) {\n            return null;\n        }\n        const target = mouseEvent.target;\n        if (target.type === 8 /* CONTENT_VIEW_ZONE */) {\n            // handle the case where the mouse is over the view zone\n            const viewZoneData = target.detail;\n            if (controller.shouldShowHoverAtViewZone(viewZoneData.viewZoneId)) {\n                return new HoverForeignElementAnchor(1000, this, Range.fromPositions(viewZoneData.positionBefore || viewZoneData.position, viewZoneData.positionBefore || viewZoneData.position));\n            }\n        }\n        if (target.type === 7 /* CONTENT_EMPTY */) {\n            // handle the case where the mouse is over the empty portion of a line following ghost text\n            if (controller.shouldShowHoverAt(target.range)) {\n                return new HoverForeignElementAnchor(1000, this, target.range);\n            }\n        }\n        if (target.type === 6 /* CONTENT_TEXT */) {\n            // handle the case where the mouse is directly over ghost text\n            const mightBeForeignElement = target.detail.mightBeForeignElement;\n            if (mightBeForeignElement && controller.shouldShowHoverAt(target.range)) {\n                return new HoverForeignElementAnchor(1000, this, target.range);\n            }\n        }\n        return null;\n    }\n    computeSync(anchor, lineDecorations) {\n        const controller = GhostTextController.get(this._editor);\n        if (controller && controller.shouldShowHoverAt(anchor.range)) {\n            return [new InlineCompletionsHover(this, anchor.range, controller)];\n        }\n        return [];\n    }\n    renderHoverParts(context, hoverParts) {\n        const disposableStore = new DisposableStore();\n        const part = hoverParts[0];\n        if (this.accessibilityService.isScreenReaderOptimized()) {\n            this.renderScreenReaderText(context, part, disposableStore);\n        }\n        const menu = disposableStore.add(this._menuService.createMenu(MenuId.InlineCompletionsActions, this._contextKeyService));\n        const previousAction = context.statusBar.addAction({\n            label: nls.localize('showNextInlineSuggestion', \"Next\"),\n            commandId: ShowNextInlineSuggestionAction.ID,\n            run: () => this._commandService.executeCommand(ShowNextInlineSuggestionAction.ID)\n        });\n        const nextAction = context.statusBar.addAction({\n            label: nls.localize('showPreviousInlineSuggestion', \"Previous\"),\n            commandId: ShowPreviousInlineSuggestionAction.ID,\n            run: () => this._commandService.executeCommand(ShowPreviousInlineSuggestionAction.ID)\n        });\n        context.statusBar.addAction({\n            label: nls.localize('acceptInlineSuggestion', \"Accept\"),\n            commandId: commitInlineSuggestionAction.id,\n            run: () => this._commandService.executeCommand(commitInlineSuggestionAction.id)\n        });\n        const actions = [previousAction, nextAction];\n        for (const action of actions) {\n            action.setEnabled(false);\n        }\n        part.hasMultipleSuggestions().then(hasMore => {\n            for (const action of actions) {\n                action.setEnabled(hasMore);\n            }\n        });\n        for (const [_, group] of menu.getActions()) {\n            for (const action of group) {\n                if (action instanceof MenuItemAction) {\n                    context.statusBar.addAction({\n                        label: action.label,\n                        commandId: action.item.id,\n                        run: () => this._commandService.executeCommand(action.item.id)\n                    });\n                }\n            }\n        }\n        return disposableStore;\n    }\n    renderScreenReaderText(context, part, disposableStore) {\n        var _a, _b;\n        const $ = dom.$;\n        const markdownHoverElement = $('div.hover-row.markdown-hover');\n        const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n        const renderer = disposableStore.add(new MarkdownRenderer({ editor: this._editor }, this._languageService, this._openerService));\n        const render = (code) => {\n            disposableStore.add(renderer.onDidRenderAsync(() => {\n                hoverContentsElement.className = 'hover-contents code-hover-contents';\n                context.onContentsChanged();\n            }));\n            const inlineSuggestionAvailable = nls.localize('inlineSuggestionFollows', \"Suggestion:\");\n            const renderedContents = disposableStore.add(renderer.render(new MarkdownString().appendText(inlineSuggestionAvailable).appendCodeblock('text', code)));\n            hoverContentsElement.replaceChildren(renderedContents.element);\n        };\n        const ghostText = (_b = (_a = part.controller.activeModel) === null || _a === void 0 ? void 0 : _a.inlineCompletionsModel) === null || _b === void 0 ? void 0 : _b.ghostText;\n        if (ghostText) {\n            const lineText = this._editor.getModel().getLineContent(ghostText.lineNumber);\n            render(ghostText.renderForScreenReader(lineText));\n        }\n        context.fragment.appendChild(markdownHoverElement);\n    }\n};\nInlineCompletionsHoverParticipant = __decorate([\n    __param(1, ICommandService),\n    __param(2, IMenuService),\n    __param(3, IContextKeyService),\n    __param(4, ILanguageService),\n    __param(5, IOpenerService),\n    __param(6, IAccessibilityService)\n], InlineCompletionsHoverParticipant);\nexport { InlineCompletionsHoverParticipant };\n"]},"metadata":{},"sourceType":"module"}