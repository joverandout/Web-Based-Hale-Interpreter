{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { renderLabelWithIcons } from '../../../../base/browser/ui/iconLabel/iconLabels.js';\nimport './codelensWidget.css';\nimport { Range } from '../../../common/core/range.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\n\nclass CodeLensViewZone {\n  constructor(afterLineNumber, heightInPx, onHeight) {\n    /**\n     * We want that this view zone, which reserves space for a code lens appears\n     * as close as possible to the next line, so we use a very large value here.\n     */\n    this.afterColumn = 1073741824\n    /* MAX_SAFE_SMALL_INTEGER */\n    ;\n    this.afterLineNumber = afterLineNumber;\n    this.heightInPx = heightInPx;\n    this._onHeight = onHeight;\n    this.suppressMouseDown = true;\n    this.domNode = document.createElement('div');\n  }\n\n  onComputedHeight(height) {\n    if (this._lastHeight === undefined) {\n      this._lastHeight = height;\n    } else if (this._lastHeight !== height) {\n      this._lastHeight = height;\n\n      this._onHeight();\n    }\n  }\n\n  isVisible() {\n    return this._lastHeight !== 0 && this.domNode.hasAttribute('monaco-visible-view-zone');\n  }\n\n}\n\nclass CodeLensContentWidget {\n  constructor(editor, className, line) {\n    // Editor.IContentWidget.allowEditorOverflow\n    this.allowEditorOverflow = false;\n    this.suppressMouseDown = true;\n    this._commands = new Map();\n    this._isEmpty = true;\n    this._editor = editor;\n    this._id = `codelens.widget-${CodeLensContentWidget._idPool++}`;\n    this.updatePosition(line);\n    this._domNode = document.createElement('span');\n    this._domNode.className = `codelens-decoration ${className}`;\n  }\n\n  withCommands(lenses, animate) {\n    this._commands.clear();\n\n    let children = [];\n    let hasSymbol = false;\n\n    for (let i = 0; i < lenses.length; i++) {\n      const lens = lenses[i];\n\n      if (!lens) {\n        continue;\n      }\n\n      hasSymbol = true;\n\n      if (lens.command) {\n        const title = renderLabelWithIcons(lens.command.title.trim());\n\n        if (lens.command.id) {\n          children.push(dom.$('a', {\n            id: String(i),\n            title: lens.command.tooltip\n          }, ...title));\n\n          this._commands.set(String(i), lens.command);\n        } else {\n          children.push(dom.$('span', {\n            title: lens.command.tooltip\n          }, ...title));\n        }\n\n        if (i + 1 < lenses.length) {\n          children.push(dom.$('span', undefined, '\\u00a0|\\u00a0'));\n        }\n      }\n    }\n\n    if (!hasSymbol) {\n      // symbols but no commands\n      dom.reset(this._domNode, dom.$('span', undefined, 'no commands'));\n    } else {\n      // symbols and commands\n      dom.reset(this._domNode, ...children);\n\n      if (this._isEmpty && animate) {\n        this._domNode.classList.add('fadein');\n      }\n\n      this._isEmpty = false;\n    }\n  }\n\n  getCommand(link) {\n    return link.parentElement === this._domNode ? this._commands.get(link.id) : undefined;\n  }\n\n  getId() {\n    return this._id;\n  }\n\n  getDomNode() {\n    return this._domNode;\n  }\n\n  updatePosition(line) {\n    const column = this._editor.getModel().getLineFirstNonWhitespaceColumn(line);\n\n    this._widgetPosition = {\n      position: {\n        lineNumber: line,\n        column: column\n      },\n      preference: [1\n      /* ABOVE */\n      ]\n    };\n  }\n\n  getPosition() {\n    return this._widgetPosition || null;\n  }\n\n}\n\nCodeLensContentWidget._idPool = 0;\nexport class CodeLensHelper {\n  constructor() {\n    this._removeDecorations = [];\n    this._addDecorations = [];\n    this._addDecorationsCallbacks = [];\n  }\n\n  addDecoration(decoration, callback) {\n    this._addDecorations.push(decoration);\n\n    this._addDecorationsCallbacks.push(callback);\n  }\n\n  removeDecoration(decorationId) {\n    this._removeDecorations.push(decorationId);\n  }\n\n  commit(changeAccessor) {\n    let resultingDecorations = changeAccessor.deltaDecorations(this._removeDecorations, this._addDecorations);\n\n    for (let i = 0, len = resultingDecorations.length; i < len; i++) {\n      this._addDecorationsCallbacks[i](resultingDecorations[i]);\n    }\n  }\n\n}\nexport class CodeLensWidget {\n  constructor(data, editor, className, helper, viewZoneChangeAccessor, heightInPx, updateCallback) {\n    this._isDisposed = false;\n    this._editor = editor;\n    this._className = className;\n    this._data = data; // create combined range, track all ranges with decorations,\n    // check if there is already something to render\n\n    this._decorationIds = [];\n    let range;\n    let lenses = [];\n\n    this._data.forEach((codeLensData, i) => {\n      if (codeLensData.symbol.command) {\n        lenses.push(codeLensData.symbol);\n      }\n\n      helper.addDecoration({\n        range: codeLensData.symbol.range,\n        options: ModelDecorationOptions.EMPTY\n      }, id => this._decorationIds[i] = id); // the range contains all lenses on this line\n\n      if (!range) {\n        range = Range.lift(codeLensData.symbol.range);\n      } else {\n        range = Range.plusRange(range, codeLensData.symbol.range);\n      }\n    });\n\n    this._viewZone = new CodeLensViewZone(range.startLineNumber - 1, heightInPx, updateCallback);\n    this._viewZoneId = viewZoneChangeAccessor.addZone(this._viewZone);\n\n    if (lenses.length > 0) {\n      this._createContentWidgetIfNecessary();\n\n      this._contentWidget.withCommands(lenses, false);\n    }\n  }\n\n  _createContentWidgetIfNecessary() {\n    if (!this._contentWidget) {\n      this._contentWidget = new CodeLensContentWidget(this._editor, this._className, this._viewZone.afterLineNumber + 1);\n\n      this._editor.addContentWidget(this._contentWidget);\n    } else {\n      this._editor.layoutContentWidget(this._contentWidget);\n    }\n  }\n\n  dispose(helper, viewZoneChangeAccessor) {\n    this._decorationIds.forEach(helper.removeDecoration, helper);\n\n    this._decorationIds = [];\n\n    if (viewZoneChangeAccessor) {\n      viewZoneChangeAccessor.removeZone(this._viewZoneId);\n    }\n\n    if (this._contentWidget) {\n      this._editor.removeContentWidget(this._contentWidget);\n\n      this._contentWidget = undefined;\n    }\n\n    this._isDisposed = true;\n  }\n\n  isDisposed() {\n    return this._isDisposed;\n  }\n\n  isValid() {\n    return this._decorationIds.some((id, i) => {\n      const range = this._editor.getModel().getDecorationRange(id);\n\n      const symbol = this._data[i].symbol;\n      return !!(range && Range.isEmpty(symbol.range) === range.isEmpty());\n    });\n  }\n\n  updateCodeLensSymbols(data, helper) {\n    this._decorationIds.forEach(helper.removeDecoration, helper);\n\n    this._decorationIds = [];\n    this._data = data;\n\n    this._data.forEach((codeLensData, i) => {\n      helper.addDecoration({\n        range: codeLensData.symbol.range,\n        options: ModelDecorationOptions.EMPTY\n      }, id => this._decorationIds[i] = id);\n    });\n  }\n\n  updateHeight(height, viewZoneChangeAccessor) {\n    this._viewZone.heightInPx = height;\n    viewZoneChangeAccessor.layoutZone(this._viewZoneId);\n\n    if (this._contentWidget) {\n      this._editor.layoutContentWidget(this._contentWidget);\n    }\n  }\n\n  computeIfNecessary(model) {\n    if (!this._viewZone.isVisible()) {\n      return null;\n    } // Read editor current state\n\n\n    for (let i = 0; i < this._decorationIds.length; i++) {\n      const range = model.getDecorationRange(this._decorationIds[i]);\n\n      if (range) {\n        this._data[i].symbol.range = range;\n      }\n    }\n\n    return this._data;\n  }\n\n  updateCommands(symbols) {\n    this._createContentWidgetIfNecessary();\n\n    this._contentWidget.withCommands(symbols, true);\n\n    for (let i = 0; i < this._data.length; i++) {\n      const resolved = symbols[i];\n\n      if (resolved) {\n        const {\n          symbol\n        } = this._data[i];\n        symbol.command = resolved.command || symbol.command;\n      }\n    }\n  }\n\n  getCommand(link) {\n    var _a;\n\n    return (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.getCommand(link);\n  }\n\n  getLineNumber() {\n    const range = this._editor.getModel().getDecorationRange(this._decorationIds[0]);\n\n    if (range) {\n      return range.startLineNumber;\n    }\n\n    return -1;\n  }\n\n  update(viewZoneChangeAccessor) {\n    if (this.isValid()) {\n      const range = this._editor.getModel().getDecorationRange(this._decorationIds[0]);\n\n      if (range) {\n        this._viewZone.afterLineNumber = range.startLineNumber - 1;\n        viewZoneChangeAccessor.layoutZone(this._viewZoneId);\n\n        if (this._contentWidget) {\n          this._contentWidget.updatePosition(range.startLineNumber);\n\n          this._editor.layoutContentWidget(this._contentWidget);\n        }\n      }\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/contrib/codelens/browser/codelensWidget.js"],"names":["dom","renderLabelWithIcons","Range","ModelDecorationOptions","CodeLensViewZone","constructor","afterLineNumber","heightInPx","onHeight","afterColumn","_onHeight","suppressMouseDown","domNode","document","createElement","onComputedHeight","height","_lastHeight","undefined","isVisible","hasAttribute","CodeLensContentWidget","editor","className","line","allowEditorOverflow","_commands","Map","_isEmpty","_editor","_id","_idPool","updatePosition","_domNode","withCommands","lenses","animate","clear","children","hasSymbol","i","length","lens","command","title","trim","id","push","$","String","tooltip","set","reset","classList","add","getCommand","link","parentElement","get","getId","getDomNode","column","getModel","getLineFirstNonWhitespaceColumn","_widgetPosition","position","lineNumber","preference","getPosition","CodeLensHelper","_removeDecorations","_addDecorations","_addDecorationsCallbacks","addDecoration","decoration","callback","removeDecoration","decorationId","commit","changeAccessor","resultingDecorations","deltaDecorations","len","CodeLensWidget","data","helper","viewZoneChangeAccessor","updateCallback","_isDisposed","_className","_data","_decorationIds","range","forEach","codeLensData","symbol","options","EMPTY","lift","plusRange","_viewZone","startLineNumber","_viewZoneId","addZone","_createContentWidgetIfNecessary","_contentWidget","addContentWidget","layoutContentWidget","dispose","removeZone","removeContentWidget","isDisposed","isValid","some","getDecorationRange","isEmpty","updateCodeLensSymbols","updateHeight","layoutZone","computeIfNecessary","model","updateCommands","symbols","resolved","_a","getLineNumber","update"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { renderLabelWithIcons } from '../../../../base/browser/ui/iconLabel/iconLabels.js';\nimport './codelensWidget.css';\nimport { Range } from '../../../common/core/range.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nclass CodeLensViewZone {\n    constructor(afterLineNumber, heightInPx, onHeight) {\n        /**\n         * We want that this view zone, which reserves space for a code lens appears\n         * as close as possible to the next line, so we use a very large value here.\n         */\n        this.afterColumn = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\n        this.afterLineNumber = afterLineNumber;\n        this.heightInPx = heightInPx;\n        this._onHeight = onHeight;\n        this.suppressMouseDown = true;\n        this.domNode = document.createElement('div');\n    }\n    onComputedHeight(height) {\n        if (this._lastHeight === undefined) {\n            this._lastHeight = height;\n        }\n        else if (this._lastHeight !== height) {\n            this._lastHeight = height;\n            this._onHeight();\n        }\n    }\n    isVisible() {\n        return this._lastHeight !== 0\n            && this.domNode.hasAttribute('monaco-visible-view-zone');\n    }\n}\nclass CodeLensContentWidget {\n    constructor(editor, className, line) {\n        // Editor.IContentWidget.allowEditorOverflow\n        this.allowEditorOverflow = false;\n        this.suppressMouseDown = true;\n        this._commands = new Map();\n        this._isEmpty = true;\n        this._editor = editor;\n        this._id = `codelens.widget-${(CodeLensContentWidget._idPool++)}`;\n        this.updatePosition(line);\n        this._domNode = document.createElement('span');\n        this._domNode.className = `codelens-decoration ${className}`;\n    }\n    withCommands(lenses, animate) {\n        this._commands.clear();\n        let children = [];\n        let hasSymbol = false;\n        for (let i = 0; i < lenses.length; i++) {\n            const lens = lenses[i];\n            if (!lens) {\n                continue;\n            }\n            hasSymbol = true;\n            if (lens.command) {\n                const title = renderLabelWithIcons(lens.command.title.trim());\n                if (lens.command.id) {\n                    children.push(dom.$('a', { id: String(i), title: lens.command.tooltip }, ...title));\n                    this._commands.set(String(i), lens.command);\n                }\n                else {\n                    children.push(dom.$('span', { title: lens.command.tooltip }, ...title));\n                }\n                if (i + 1 < lenses.length) {\n                    children.push(dom.$('span', undefined, '\\u00a0|\\u00a0'));\n                }\n            }\n        }\n        if (!hasSymbol) {\n            // symbols but no commands\n            dom.reset(this._domNode, dom.$('span', undefined, 'no commands'));\n        }\n        else {\n            // symbols and commands\n            dom.reset(this._domNode, ...children);\n            if (this._isEmpty && animate) {\n                this._domNode.classList.add('fadein');\n            }\n            this._isEmpty = false;\n        }\n    }\n    getCommand(link) {\n        return link.parentElement === this._domNode\n            ? this._commands.get(link.id)\n            : undefined;\n    }\n    getId() {\n        return this._id;\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    updatePosition(line) {\n        const column = this._editor.getModel().getLineFirstNonWhitespaceColumn(line);\n        this._widgetPosition = {\n            position: { lineNumber: line, column: column },\n            preference: [1 /* ABOVE */]\n        };\n    }\n    getPosition() {\n        return this._widgetPosition || null;\n    }\n}\nCodeLensContentWidget._idPool = 0;\nexport class CodeLensHelper {\n    constructor() {\n        this._removeDecorations = [];\n        this._addDecorations = [];\n        this._addDecorationsCallbacks = [];\n    }\n    addDecoration(decoration, callback) {\n        this._addDecorations.push(decoration);\n        this._addDecorationsCallbacks.push(callback);\n    }\n    removeDecoration(decorationId) {\n        this._removeDecorations.push(decorationId);\n    }\n    commit(changeAccessor) {\n        let resultingDecorations = changeAccessor.deltaDecorations(this._removeDecorations, this._addDecorations);\n        for (let i = 0, len = resultingDecorations.length; i < len; i++) {\n            this._addDecorationsCallbacks[i](resultingDecorations[i]);\n        }\n    }\n}\nexport class CodeLensWidget {\n    constructor(data, editor, className, helper, viewZoneChangeAccessor, heightInPx, updateCallback) {\n        this._isDisposed = false;\n        this._editor = editor;\n        this._className = className;\n        this._data = data;\n        // create combined range, track all ranges with decorations,\n        // check if there is already something to render\n        this._decorationIds = [];\n        let range;\n        let lenses = [];\n        this._data.forEach((codeLensData, i) => {\n            if (codeLensData.symbol.command) {\n                lenses.push(codeLensData.symbol);\n            }\n            helper.addDecoration({\n                range: codeLensData.symbol.range,\n                options: ModelDecorationOptions.EMPTY\n            }, id => this._decorationIds[i] = id);\n            // the range contains all lenses on this line\n            if (!range) {\n                range = Range.lift(codeLensData.symbol.range);\n            }\n            else {\n                range = Range.plusRange(range, codeLensData.symbol.range);\n            }\n        });\n        this._viewZone = new CodeLensViewZone(range.startLineNumber - 1, heightInPx, updateCallback);\n        this._viewZoneId = viewZoneChangeAccessor.addZone(this._viewZone);\n        if (lenses.length > 0) {\n            this._createContentWidgetIfNecessary();\n            this._contentWidget.withCommands(lenses, false);\n        }\n    }\n    _createContentWidgetIfNecessary() {\n        if (!this._contentWidget) {\n            this._contentWidget = new CodeLensContentWidget(this._editor, this._className, this._viewZone.afterLineNumber + 1);\n            this._editor.addContentWidget(this._contentWidget);\n        }\n        else {\n            this._editor.layoutContentWidget(this._contentWidget);\n        }\n    }\n    dispose(helper, viewZoneChangeAccessor) {\n        this._decorationIds.forEach(helper.removeDecoration, helper);\n        this._decorationIds = [];\n        if (viewZoneChangeAccessor) {\n            viewZoneChangeAccessor.removeZone(this._viewZoneId);\n        }\n        if (this._contentWidget) {\n            this._editor.removeContentWidget(this._contentWidget);\n            this._contentWidget = undefined;\n        }\n        this._isDisposed = true;\n    }\n    isDisposed() {\n        return this._isDisposed;\n    }\n    isValid() {\n        return this._decorationIds.some((id, i) => {\n            const range = this._editor.getModel().getDecorationRange(id);\n            const symbol = this._data[i].symbol;\n            return !!(range && Range.isEmpty(symbol.range) === range.isEmpty());\n        });\n    }\n    updateCodeLensSymbols(data, helper) {\n        this._decorationIds.forEach(helper.removeDecoration, helper);\n        this._decorationIds = [];\n        this._data = data;\n        this._data.forEach((codeLensData, i) => {\n            helper.addDecoration({\n                range: codeLensData.symbol.range,\n                options: ModelDecorationOptions.EMPTY\n            }, id => this._decorationIds[i] = id);\n        });\n    }\n    updateHeight(height, viewZoneChangeAccessor) {\n        this._viewZone.heightInPx = height;\n        viewZoneChangeAccessor.layoutZone(this._viewZoneId);\n        if (this._contentWidget) {\n            this._editor.layoutContentWidget(this._contentWidget);\n        }\n    }\n    computeIfNecessary(model) {\n        if (!this._viewZone.isVisible()) {\n            return null;\n        }\n        // Read editor current state\n        for (let i = 0; i < this._decorationIds.length; i++) {\n            const range = model.getDecorationRange(this._decorationIds[i]);\n            if (range) {\n                this._data[i].symbol.range = range;\n            }\n        }\n        return this._data;\n    }\n    updateCommands(symbols) {\n        this._createContentWidgetIfNecessary();\n        this._contentWidget.withCommands(symbols, true);\n        for (let i = 0; i < this._data.length; i++) {\n            const resolved = symbols[i];\n            if (resolved) {\n                const { symbol } = this._data[i];\n                symbol.command = resolved.command || symbol.command;\n            }\n        }\n    }\n    getCommand(link) {\n        var _a;\n        return (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.getCommand(link);\n    }\n    getLineNumber() {\n        const range = this._editor.getModel().getDecorationRange(this._decorationIds[0]);\n        if (range) {\n            return range.startLineNumber;\n        }\n        return -1;\n    }\n    update(viewZoneChangeAccessor) {\n        if (this.isValid()) {\n            const range = this._editor.getModel().getDecorationRange(this._decorationIds[0]);\n            if (range) {\n                this._viewZone.afterLineNumber = range.startLineNumber - 1;\n                viewZoneChangeAccessor.layoutZone(this._viewZoneId);\n                if (this._contentWidget) {\n                    this._contentWidget.updatePosition(range.startLineNumber);\n                    this._editor.layoutContentWidget(this._contentWidget);\n                }\n            }\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}