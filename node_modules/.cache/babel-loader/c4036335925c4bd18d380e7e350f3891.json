{"ast":null,"code":"/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n// src/basic-languages/coffee/coffee.ts\nvar conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#%\\^\\&\\*\\(\\)\\=\\$\\-\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n  comments: {\n    blockComment: [\"###\", \"###\"],\n    lineComment: \"#\"\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }],\n  surroundingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*#region\\\\b\"),\n      end: new RegExp(\"^\\\\s*#endregion\\\\b\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  ignoreCase: true,\n  tokenPostfix: \".coffee\",\n  brackets: [{\n    open: \"{\",\n    close: \"}\",\n    token: \"delimiter.curly\"\n  }, {\n    open: \"[\",\n    close: \"]\",\n    token: \"delimiter.square\"\n  }, {\n    open: \"(\",\n    close: \")\",\n    token: \"delimiter.parenthesis\"\n  }],\n  regEx: /\\/(?!\\/\\/)(?:[^\\/\\\\]|\\\\.)*\\/[igm]*/,\n  keywords: [\"and\", \"or\", \"is\", \"isnt\", \"not\", \"on\", \"yes\", \"@\", \"no\", \"off\", \"true\", \"false\", \"null\", \"this\", \"new\", \"delete\", \"typeof\", \"in\", \"instanceof\", \"return\", \"throw\", \"break\", \"continue\", \"debugger\", \"if\", \"else\", \"switch\", \"for\", \"while\", \"do\", \"try\", \"catch\", \"finally\", \"class\", \"extends\", \"super\", \"undefined\", \"then\", \"unless\", \"until\", \"loop\", \"of\", \"by\", \"when\"],\n  symbols: /[=><!~?&%|+\\-*\\/\\^\\.,\\:]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  tokenizer: {\n    root: [[/\\@[a-zA-Z_]\\w*/, \"variable.predefined\"], [/[a-zA-Z_]\\w*/, {\n      cases: {\n        this: \"variable.predefined\",\n        \"@keywords\": {\n          token: \"keyword.$0\"\n        },\n        \"@default\": \"\"\n      }\n    }], [/[ \\t\\r\\n]+/, \"\"], [/###/, \"comment\", \"@comment\"], [/#.*$/, \"comment\"], [\"///\", {\n      token: \"regexp\",\n      next: \"@hereregexp\"\n    }], [/^(\\s*)(@regEx)/, [\"\", \"regexp\"]], [/(\\()(\\s*)(@regEx)/, [\"@brackets\", \"\", \"regexp\"]], [/(\\,)(\\s*)(@regEx)/, [\"delimiter\", \"\", \"regexp\"]], [/(\\=)(\\s*)(@regEx)/, [\"delimiter\", \"\", \"regexp\"]], [/(\\:)(\\s*)(@regEx)/, [\"delimiter\", \"\", \"regexp\"]], [/(\\[)(\\s*)(@regEx)/, [\"@brackets\", \"\", \"regexp\"]], [/(\\!)(\\s*)(@regEx)/, [\"delimiter\", \"\", \"regexp\"]], [/(\\&)(\\s*)(@regEx)/, [\"delimiter\", \"\", \"regexp\"]], [/(\\|)(\\s*)(@regEx)/, [\"delimiter\", \"\", \"regexp\"]], [/(\\?)(\\s*)(@regEx)/, [\"delimiter\", \"\", \"regexp\"]], [/(\\{)(\\s*)(@regEx)/, [\"@brackets\", \"\", \"regexp\"]], [/(\\;)(\\s*)(@regEx)/, [\"\", \"\", \"regexp\"]], [/}/, {\n      cases: {\n        \"$S2==interpolatedstring\": {\n          token: \"string\",\n          next: \"@pop\"\n        },\n        \"@default\": \"@brackets\"\n      }\n    }], [/[{}()\\[\\]]/, \"@brackets\"], [/@symbols/, \"delimiter\"], [/\\d+[eE]([\\-+]?\\d+)?/, \"number.float\"], [/\\d+\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"], [/0[xX][0-9a-fA-F]+/, \"number.hex\"], [/0[0-7]+(?!\\d)/, \"number.octal\"], [/\\d+/, \"number\"], [/[,.]/, \"delimiter\"], [/\"\"\"/, \"string\", '@herestring.\"\"\"'], [/'''/, \"string\", \"@herestring.'''\"], [/\"/, {\n      cases: {\n        \"@eos\": \"string\",\n        \"@default\": {\n          token: \"string\",\n          next: '@string.\"'\n        }\n      }\n    }], [/'/, {\n      cases: {\n        \"@eos\": \"string\",\n        \"@default\": {\n          token: \"string\",\n          next: \"@string.'\"\n        }\n      }\n    }]],\n    string: [[/[^\"'\\#\\\\]+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\./, \"string.escape.invalid\"], [/\\./, \"string.escape.invalid\"], [/#{/, {\n      cases: {\n        '$S2==\"': {\n          token: \"string\",\n          next: \"root.interpolatedstring\"\n        },\n        \"@default\": \"string\"\n      }\n    }], [/[\"']/, {\n      cases: {\n        \"$#==$S2\": {\n          token: \"string\",\n          next: \"@pop\"\n        },\n        \"@default\": \"string\"\n      }\n    }], [/#/, \"string\"]],\n    herestring: [[/(\"\"\"|''')/, {\n      cases: {\n        \"$1==$S2\": {\n          token: \"string\",\n          next: \"@pop\"\n        },\n        \"@default\": \"string\"\n      }\n    }], [/[^#\\\\'\"]+/, \"string\"], [/['\"]+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\./, \"string.escape.invalid\"], [/#{/, {\n      token: \"string.quote\",\n      next: \"root.interpolatedstring\"\n    }], [/#/, \"string\"]],\n    comment: [[/[^#]+/, \"comment\"], [/###/, \"comment\", \"@pop\"], [/#/, \"comment\"]],\n    hereregexp: [[/[^\\\\\\/#]+/, \"regexp\"], [/\\\\./, \"regexp\"], [/#.*$/, \"comment\"], [\"///[igm]*\", {\n      token: \"regexp\",\n      next: \"@pop\"\n    }], [/\\//, \"regexp\"]]\n  }\n};\nexport { conf, language };","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/basic-languages/coffee/coffee.js"],"names":["conf","wordPattern","comments","blockComment","lineComment","brackets","autoClosingPairs","open","close","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","ignoreCase","tokenPostfix","token","regEx","keywords","symbols","escapes","tokenizer","root","cases","this","next","string","herestring","comment","hereregexp"],"mappings":"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","sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/coffee/coffee.ts\nvar conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#%\\^\\&\\*\\(\\)\\=\\$\\-\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n  comments: {\n    blockComment: [\"###\", \"###\"],\n    lineComment: \"#\"\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*#region\\\\b\"),\n      end: new RegExp(\"^\\\\s*#endregion\\\\b\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  ignoreCase: true,\n  tokenPostfix: \".coffee\",\n  brackets: [\n    { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\n    { open: \"[\", close: \"]\", token: \"delimiter.square\" },\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" }\n  ],\n  regEx: /\\/(?!\\/\\/)(?:[^\\/\\\\]|\\\\.)*\\/[igm]*/,\n  keywords: [\n    \"and\",\n    \"or\",\n    \"is\",\n    \"isnt\",\n    \"not\",\n    \"on\",\n    \"yes\",\n    \"@\",\n    \"no\",\n    \"off\",\n    \"true\",\n    \"false\",\n    \"null\",\n    \"this\",\n    \"new\",\n    \"delete\",\n    \"typeof\",\n    \"in\",\n    \"instanceof\",\n    \"return\",\n    \"throw\",\n    \"break\",\n    \"continue\",\n    \"debugger\",\n    \"if\",\n    \"else\",\n    \"switch\",\n    \"for\",\n    \"while\",\n    \"do\",\n    \"try\",\n    \"catch\",\n    \"finally\",\n    \"class\",\n    \"extends\",\n    \"super\",\n    \"undefined\",\n    \"then\",\n    \"unless\",\n    \"until\",\n    \"loop\",\n    \"of\",\n    \"by\",\n    \"when\"\n  ],\n  symbols: /[=><!~?&%|+\\-*\\/\\^\\.,\\:]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  tokenizer: {\n    root: [\n      [/\\@[a-zA-Z_]\\w*/, \"variable.predefined\"],\n      [\n        /[a-zA-Z_]\\w*/,\n        {\n          cases: {\n            this: \"variable.predefined\",\n            \"@keywords\": { token: \"keyword.$0\" },\n            \"@default\": \"\"\n          }\n        }\n      ],\n      [/[ \\t\\r\\n]+/, \"\"],\n      [/###/, \"comment\", \"@comment\"],\n      [/#.*$/, \"comment\"],\n      [\"///\", { token: \"regexp\", next: \"@hereregexp\" }],\n      [/^(\\s*)(@regEx)/, [\"\", \"regexp\"]],\n      [/(\\()(\\s*)(@regEx)/, [\"@brackets\", \"\", \"regexp\"]],\n      [/(\\,)(\\s*)(@regEx)/, [\"delimiter\", \"\", \"regexp\"]],\n      [/(\\=)(\\s*)(@regEx)/, [\"delimiter\", \"\", \"regexp\"]],\n      [/(\\:)(\\s*)(@regEx)/, [\"delimiter\", \"\", \"regexp\"]],\n      [/(\\[)(\\s*)(@regEx)/, [\"@brackets\", \"\", \"regexp\"]],\n      [/(\\!)(\\s*)(@regEx)/, [\"delimiter\", \"\", \"regexp\"]],\n      [/(\\&)(\\s*)(@regEx)/, [\"delimiter\", \"\", \"regexp\"]],\n      [/(\\|)(\\s*)(@regEx)/, [\"delimiter\", \"\", \"regexp\"]],\n      [/(\\?)(\\s*)(@regEx)/, [\"delimiter\", \"\", \"regexp\"]],\n      [/(\\{)(\\s*)(@regEx)/, [\"@brackets\", \"\", \"regexp\"]],\n      [/(\\;)(\\s*)(@regEx)/, [\"\", \"\", \"regexp\"]],\n      [\n        /}/,\n        {\n          cases: {\n            \"$S2==interpolatedstring\": {\n              token: \"string\",\n              next: \"@pop\"\n            },\n            \"@default\": \"@brackets\"\n          }\n        }\n      ],\n      [/[{}()\\[\\]]/, \"@brackets\"],\n      [/@symbols/, \"delimiter\"],\n      [/\\d+[eE]([\\-+]?\\d+)?/, \"number.float\"],\n      [/\\d+\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"],\n      [/0[xX][0-9a-fA-F]+/, \"number.hex\"],\n      [/0[0-7]+(?!\\d)/, \"number.octal\"],\n      [/\\d+/, \"number\"],\n      [/[,.]/, \"delimiter\"],\n      [/\"\"\"/, \"string\", '@herestring.\"\"\"'],\n      [/'''/, \"string\", \"@herestring.'''\"],\n      [\n        /\"/,\n        {\n          cases: {\n            \"@eos\": \"string\",\n            \"@default\": { token: \"string\", next: '@string.\"' }\n          }\n        }\n      ],\n      [\n        /'/,\n        {\n          cases: {\n            \"@eos\": \"string\",\n            \"@default\": { token: \"string\", next: \"@string.'\" }\n          }\n        }\n      ]\n    ],\n    string: [\n      [/[^\"'\\#\\\\]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\./, \"string.escape.invalid\"],\n      [/\\./, \"string.escape.invalid\"],\n      [\n        /#{/,\n        {\n          cases: {\n            '$S2==\"': {\n              token: \"string\",\n              next: \"root.interpolatedstring\"\n            },\n            \"@default\": \"string\"\n          }\n        }\n      ],\n      [\n        /[\"']/,\n        {\n          cases: {\n            \"$#==$S2\": { token: \"string\", next: \"@pop\" },\n            \"@default\": \"string\"\n          }\n        }\n      ],\n      [/#/, \"string\"]\n    ],\n    herestring: [\n      [\n        /(\"\"\"|''')/,\n        {\n          cases: {\n            \"$1==$S2\": { token: \"string\", next: \"@pop\" },\n            \"@default\": \"string\"\n          }\n        }\n      ],\n      [/[^#\\\\'\"]+/, \"string\"],\n      [/['\"]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\./, \"string.escape.invalid\"],\n      [/#{/, { token: \"string.quote\", next: \"root.interpolatedstring\" }],\n      [/#/, \"string\"]\n    ],\n    comment: [\n      [/[^#]+/, \"comment\"],\n      [/###/, \"comment\", \"@pop\"],\n      [/#/, \"comment\"]\n    ],\n    hereregexp: [\n      [/[^\\\\\\/#]+/, \"regexp\"],\n      [/\\\\./, \"regexp\"],\n      [/#.*$/, \"comment\"],\n      [\"///[igm]*\", { token: \"regexp\", next: \"@pop\" }],\n      [/\\//, \"regexp\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"]},"metadata":{},"sourceType":"module"}