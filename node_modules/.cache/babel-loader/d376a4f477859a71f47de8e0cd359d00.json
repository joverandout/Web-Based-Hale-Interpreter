{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a;\n\nimport { EditorOptions } from './common/config/editorOptions.js';\nimport { createMonacoBaseAPI } from './common/services/editorBaseApi.js';\nimport { createMonacoEditorAPI } from './standalone/browser/standaloneEditor.js';\nimport { createMonacoLanguagesAPI } from './standalone/browser/standaloneLanguages.js';\nimport { globals } from '../base/common/platform.js';\nimport { FormattingConflicts } from './contrib/format/browser/format.js'; // Set defaults for standalone editor\n\nEditorOptions.wrappingIndent.defaultValue = 0\n/* None */\n;\nEditorOptions.glyphMargin.defaultValue = false;\nEditorOptions.autoIndent.defaultValue = 3\n/* Advanced */\n;\nEditorOptions.overviewRulerLanes.defaultValue = 2; // We need to register a formatter selector which simply picks the first available formatter.\n// See https://github.com/microsoft/monaco-editor/issues/2327\n\nFormattingConflicts.setFormatterSelector((formatter, document, mode) => Promise.resolve(formatter[0]));\nconst api = createMonacoBaseAPI();\napi.editor = createMonacoEditorAPI();\napi.languages = createMonacoLanguagesAPI();\nexport const CancellationTokenSource = api.CancellationTokenSource;\nexport const Emitter = api.Emitter;\nexport const KeyCode = api.KeyCode;\nexport const KeyMod = api.KeyMod;\nexport const Position = api.Position;\nexport const Range = api.Range;\nexport const Selection = api.Selection;\nexport const SelectionDirection = api.SelectionDirection;\nexport const MarkerSeverity = api.MarkerSeverity;\nexport const MarkerTag = api.MarkerTag;\nexport const Uri = api.Uri;\nexport const Token = api.Token;\nexport const editor = api.editor;\nexport const languages = api.languages;\n\nif (((_a = globals.MonacoEnvironment) === null || _a === void 0 ? void 0 : _a.globalAPI) || typeof define === 'function' && define.amd) {\n  self.monaco = api;\n}\n\nif (typeof self.require !== 'undefined' && typeof self.require.config === 'function') {\n  self.require.config({\n    ignoreDuplicateModules: ['vscode-languageserver-types', 'vscode-languageserver-types/main', 'vscode-languageserver-textdocument', 'vscode-languageserver-textdocument/main', 'vscode-nls', 'vscode-nls/vscode-nls', 'jsonc-parser', 'jsonc-parser/main', 'vscode-uri', 'vscode-uri/index', 'vs/basic-languages/typescript/typescript']\n  });\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/editor.api.js"],"names":["_a","EditorOptions","createMonacoBaseAPI","createMonacoEditorAPI","createMonacoLanguagesAPI","globals","FormattingConflicts","wrappingIndent","defaultValue","glyphMargin","autoIndent","overviewRulerLanes","setFormatterSelector","formatter","document","mode","Promise","resolve","api","editor","languages","CancellationTokenSource","Emitter","KeyCode","KeyMod","Position","Range","Selection","SelectionDirection","MarkerSeverity","MarkerTag","Uri","Token","MonacoEnvironment","globalAPI","define","amd","self","monaco","require","config","ignoreDuplicateModules"],"mappings":"AAAA;AACA;AACA;AACA;AACA,IAAIA,EAAJ;;AACA,SAASC,aAAT,QAA8B,kCAA9B;AACA,SAASC,mBAAT,QAAoC,oCAApC;AACA,SAASC,qBAAT,QAAsC,0CAAtC;AACA,SAASC,wBAAT,QAAyC,6CAAzC;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,mBAAT,QAAoC,oCAApC,C,CACA;;AACAL,aAAa,CAACM,cAAd,CAA6BC,YAA7B,GAA4C;AAAE;AAA9C;AACAP,aAAa,CAACQ,WAAd,CAA0BD,YAA1B,GAAyC,KAAzC;AACAP,aAAa,CAACS,UAAd,CAAyBF,YAAzB,GAAwC;AAAE;AAA1C;AACAP,aAAa,CAACU,kBAAd,CAAiCH,YAAjC,GAAgD,CAAhD,C,CACA;AACA;;AACAF,mBAAmB,CAACM,oBAApB,CAAyC,CAACC,SAAD,EAAYC,QAAZ,EAAsBC,IAAtB,KAA+BC,OAAO,CAACC,OAAR,CAAgBJ,SAAS,CAAC,CAAD,CAAzB,CAAxE;AACA,MAAMK,GAAG,GAAGhB,mBAAmB,EAA/B;AACAgB,GAAG,CAACC,MAAJ,GAAahB,qBAAqB,EAAlC;AACAe,GAAG,CAACE,SAAJ,GAAgBhB,wBAAwB,EAAxC;AACA,OAAO,MAAMiB,uBAAuB,GAAGH,GAAG,CAACG,uBAApC;AACP,OAAO,MAAMC,OAAO,GAAGJ,GAAG,CAACI,OAApB;AACP,OAAO,MAAMC,OAAO,GAAGL,GAAG,CAACK,OAApB;AACP,OAAO,MAAMC,MAAM,GAAGN,GAAG,CAACM,MAAnB;AACP,OAAO,MAAMC,QAAQ,GAAGP,GAAG,CAACO,QAArB;AACP,OAAO,MAAMC,KAAK,GAAGR,GAAG,CAACQ,KAAlB;AACP,OAAO,MAAMC,SAAS,GAAGT,GAAG,CAACS,SAAtB;AACP,OAAO,MAAMC,kBAAkB,GAAGV,GAAG,CAACU,kBAA/B;AACP,OAAO,MAAMC,cAAc,GAAGX,GAAG,CAACW,cAA3B;AACP,OAAO,MAAMC,SAAS,GAAGZ,GAAG,CAACY,SAAtB;AACP,OAAO,MAAMC,GAAG,GAAGb,GAAG,CAACa,GAAhB;AACP,OAAO,MAAMC,KAAK,GAAGd,GAAG,CAACc,KAAlB;AACP,OAAO,MAAMb,MAAM,GAAGD,GAAG,CAACC,MAAnB;AACP,OAAO,MAAMC,SAAS,GAAGF,GAAG,CAACE,SAAtB;;AACP,IAAI,CAAC,CAACpB,EAAE,GAAGK,OAAO,CAAC4B,iBAAd,MAAqC,IAArC,IAA6CjC,EAAE,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,EAAE,CAACkC,SAA1E,KAAyF,OAAOC,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAApI,EAA0I;AACtIC,EAAAA,IAAI,CAACC,MAAL,GAAcpB,GAAd;AACH;;AACD,IAAI,OAAOmB,IAAI,CAACE,OAAZ,KAAwB,WAAxB,IAAuC,OAAOF,IAAI,CAACE,OAAL,CAAaC,MAApB,KAA+B,UAA1E,EAAsF;AAClFH,EAAAA,IAAI,CAACE,OAAL,CAAaC,MAAb,CAAoB;AAChBC,IAAAA,sBAAsB,EAAE,CACpB,6BADoB,EAEpB,kCAFoB,EAGpB,oCAHoB,EAIpB,yCAJoB,EAKpB,YALoB,EAMpB,uBANoB,EAOpB,cAPoB,EAQpB,mBARoB,EASpB,YAToB,EAUpB,kBAVoB,EAWpB,0CAXoB;AADR,GAApB;AAeH","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a;\nimport { EditorOptions } from './common/config/editorOptions.js';\nimport { createMonacoBaseAPI } from './common/services/editorBaseApi.js';\nimport { createMonacoEditorAPI } from './standalone/browser/standaloneEditor.js';\nimport { createMonacoLanguagesAPI } from './standalone/browser/standaloneLanguages.js';\nimport { globals } from '../base/common/platform.js';\nimport { FormattingConflicts } from './contrib/format/browser/format.js';\n// Set defaults for standalone editor\nEditorOptions.wrappingIndent.defaultValue = 0 /* None */;\nEditorOptions.glyphMargin.defaultValue = false;\nEditorOptions.autoIndent.defaultValue = 3 /* Advanced */;\nEditorOptions.overviewRulerLanes.defaultValue = 2;\n// We need to register a formatter selector which simply picks the first available formatter.\n// See https://github.com/microsoft/monaco-editor/issues/2327\nFormattingConflicts.setFormatterSelector((formatter, document, mode) => Promise.resolve(formatter[0]));\nconst api = createMonacoBaseAPI();\napi.editor = createMonacoEditorAPI();\napi.languages = createMonacoLanguagesAPI();\nexport const CancellationTokenSource = api.CancellationTokenSource;\nexport const Emitter = api.Emitter;\nexport const KeyCode = api.KeyCode;\nexport const KeyMod = api.KeyMod;\nexport const Position = api.Position;\nexport const Range = api.Range;\nexport const Selection = api.Selection;\nexport const SelectionDirection = api.SelectionDirection;\nexport const MarkerSeverity = api.MarkerSeverity;\nexport const MarkerTag = api.MarkerTag;\nexport const Uri = api.Uri;\nexport const Token = api.Token;\nexport const editor = api.editor;\nexport const languages = api.languages;\nif (((_a = globals.MonacoEnvironment) === null || _a === void 0 ? void 0 : _a.globalAPI) || (typeof define === 'function' && define.amd)) {\n    self.monaco = api;\n}\nif (typeof self.require !== 'undefined' && typeof self.require.config === 'function') {\n    self.require.config({\n        ignoreDuplicateModules: [\n            'vscode-languageserver-types',\n            'vscode-languageserver-types/main',\n            'vscode-languageserver-textdocument',\n            'vscode-languageserver-textdocument/main',\n            'vscode-nls',\n            'vscode-nls/vscode-nls',\n            'jsonc-parser',\n            'jsonc-parser/main',\n            'vscode-uri',\n            'vscode-uri/index',\n            'vs/basic-languages/typescript/typescript'\n        ]\n    });\n}\n"]},"metadata":{},"sourceType":"module"}