{"ast":null,"code":"var _jsxFileName = \"/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Dashboard/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useNavigate } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MonacoEditor extends React.Component {\n  componentDidMount() {\n    const {\n      path,\n      value,\n      language,\n      onValueChange,\n      ...options\n    } = this.props;\n    const model = monaco.editor.createModel(value, language, path);\n    this._editor = monaco.editor.create(this._node, options);\n\n    this._editor.setModel(model);\n\n    this._subscription = model.onDidChangeContent(() => {\n      this.props.onValueChange(model.getValue());\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      path,\n      value,\n      language,\n      onValueChange,\n      ...options\n    } = this.props;\n\n    this._editor.updateOptions(options);\n\n    const model = this._editor.getModel();\n\n    if (value !== model.getValue()) {\n      model.pushEditOperations([], [{\n        range: model.getFullModelRange(),\n        text: value\n      }]);\n    }\n  }\n\n  componentWillUnmount() {\n    this._editor && this._editor.dispose();\n    this._subscription && this._subscription.dispose();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: c => this._node = c\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nfunction Dashboard() {\n  _s();\n\n  editorRef = /*#__PURE__*/React.createRef();\n  const [FunctionOutput, setFunctionOutput] = useState(0);\n  const [PrintOutputs, setPrintOutput] = useState(0);\n  const [name, setName] = useState('');\n  const [theme, setTheme] = useState(\"light\"); //const [ maincode, setMainCode ] = React.useState(\"\");\n  // const MyEditorControl = (props) => {\n  //   const [ code, setCode ] = React.useState(\"Type your code...\");\n  //   const onChange = (value, event) => {\n  //       setCode(value);\n  //       setMainCode(code);\n  //       setCode(value);\n  //    }\n  //   return <MonacoEditor height=\"600\" width=\"100%\" defaultValue={code} onChange={onChange} />\n  // }\n\n  let navigate = useNavigate();\n\n  const routeChange = () => {\n    let path = `../info`;\n    navigate(path);\n  };\n\n  function toggleTheme() {\n    setTheme(theme === \"light\" ? \"vs-dark\" : \"light\");\n  }\n\n  function buttonpress() {\n    const currentCode = this.editorRef.current.editor.getModel().getValue(); // Simple POST request with a JSON body using fetch\n\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: currentCode\n      })\n    };\n    fetch('/write', requestOptions).then(res => res.json()).then(data => {\n      setFunctionOutput(data.time);\n      setPrintOutput(data.prints);\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Dashboard\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        class: \"navbar navbar-dark bg-dark pt-3 pb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          class: \"form-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Hale - A web based interpreter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-lg btn-light\",\n            type: \"button\",\n            children: \"Light Mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-lg btn-secondary\",\n            type: \"button\",\n            children: \"Dark Mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: routeChange,\n            class: \"btn btn-lg btn-info\",\n            type: \"button\",\n            children: \"Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: buttonpress,\n            class: \"btn btn-lg btn-success float-right\",\n            type: \"button\",\n            children: \"Run\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          class: \"form-inline float-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"\\u200E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-lg btn-primary\",\n            type: \"button\",\n            children: \"Profie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-lg btn-danger\",\n            type: \"button\",\n            children: \"Sign Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"mycontainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"mynewleft\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"mymonacocontainer\",\n            children: /*#__PURE__*/_jsxDEV(MonacoEditor, {\n              ref: this.editorRef,\n              height: \"500px\",\n              language: \"json\" // editorDidMount={this.editorDidMount.bind(this)}\n              // onChange={this.onChange.bind(this)}\n              ,\n              value: this.state.code\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"mynewright\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"myfakeMenu\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"fakeButtons fakeClose\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"fakeButtons fakeMinimize\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"fakeButtons fakeZoom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"myfakeScreen\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: PrintOutputs\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"f0X5l6STDZ7NtpViPXFc/ytCJPs=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Dashboard/Dashboard.js"],"names":["React","useRef","useState","useEffect","Button","useNavigate","MonacoEditor","Component","componentDidMount","path","value","language","onValueChange","options","props","model","monaco","editor","createModel","_editor","create","_node","setModel","_subscription","onDidChangeContent","getValue","componentDidUpdate","prevProps","updateOptions","getModel","pushEditOperations","range","getFullModelRange","text","componentWillUnmount","dispose","render","c","Dashboard","editorRef","createRef","FunctionOutput","setFunctionOutput","PrintOutputs","setPrintOutput","name","setName","theme","setTheme","navigate","routeChange","toggleTheme","buttonpress","currentCode","current","requestOptions","method","headers","body","JSON","stringify","title","fetch","then","res","json","data","time","prints","state","code"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useNavigate } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Dashboard.css';\n\nclass MonacoEditor extends React.Component {\n  componentDidMount() {\n    const { path, value, language, onValueChange, ...options } = this.props;\n    const model = monaco.editor.createModel(value, language, path);\n  \n    this._editor = monaco.editor.create(this._node, options);\n    this._editor.setModel(model);\n    this._subscription = model.onDidChangeContent(() => {\n      this.props.onValueChange(model.getValue());\n    });\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { path, value, language, onValueChange, ...options } = this.props;\n  \n    this._editor.updateOptions(options);\n  \n    const model = this._editor.getModel();\n  \n    if (value !== model.getValue()) {\n      model.pushEditOperations(\n        [],\n        [\n          {\n            range: model.getFullModelRange(),\n            text: value,\n          },\n        ]\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    this._editor && this._editor.dispose();\n    this._subscription && this._subscription.dispose();\n  }\n\n  render() {\n    return <div ref={c => this._node = c} />\n  }\n}\n\nfunction Dashboard() {\n  editorRef = React.createRef();\n\n\n  const [FunctionOutput, setFunctionOutput] = useState(0);\n  const [PrintOutputs, setPrintOutput] = useState(0);\n  const [name, setName] = useState('');\n\n  const [theme, setTheme] = useState(\"light\");\n  //const [ maincode, setMainCode ] = React.useState(\"\");\n\n  // const MyEditorControl = (props) => {\n  //   const [ code, setCode ] = React.useState(\"Type your code...\");\n\n  //   const onChange = (value, event) => {\n  //       setCode(value);\n  //       setMainCode(code);\n  //       setCode(value);\n  //    }\n \n  //   return <MonacoEditor height=\"600\" width=\"100%\" defaultValue={code} onChange={onChange} />\n  // }\n\n  let navigate = useNavigate(); \n  const routeChange = () =>{ \n    let path = `../info`; \n    navigate(path);\n  }\n\n  function toggleTheme() {\n    setTheme(theme === \"light\" ? \"vs-dark\" : \"light\");\n  }\n\n  function buttonpress(){\n    const currentCode = this.editorRef.current.editor.getModel().getValue();\n\n    // Simple POST request with a JSON body using fetch\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ title: currentCode })\n    }\n  \n    fetch('/write', requestOptions)\n    .then(res => res.json()).then(data => {\n      setFunctionOutput(data.time);\n      setPrintOutput(data.prints);\n    });\n  };\n\n\n  \n\n  return (\n    <div className=\"Dashboard\">\n\n      <header className=\"App-header\">\n        <nav class=\"navbar navbar-dark bg-dark pt-3 pb-3\">\n        <form class=\"form-inline\">\n          <h1>Hale - A web based interpreter</h1>\n          <button class=\"btn btn-lg btn-light\" type=\"button\">Light Mode</button>\n          <button class=\"btn btn-lg btn-secondary\" type=\"button\">Dark Mode</button>\n          <button onClick={routeChange} class=\"btn btn-lg btn-info\" type=\"button\">Info</button>\n          <button onClick={buttonpress} class=\"btn btn-lg btn-success float-right\" type=\"button\">Run</button>\n        </form>\n        <form class=\"form-inline float-right\">\n          <h1>‎</h1>\n          <button class=\"btn btn-lg btn-primary\" type=\"button\">Profie</button>\n          <button class=\"btn btn-lg btn-danger\" type=\"button\">Sign Out</button>\n        </form>\n      </nav>\n\n    <div class=\"mycontainer\">\n        <div class=\"mynewleft\">\n          <div class=\"mymonacocontainer\">\n          <MonacoEditor\n            ref={this.editorRef}\n            height=\"500px\"\n            language=\"json\"\n            // editorDidMount={this.editorDidMount.bind(this)}\n            // onChange={this.onChange.bind(this)}\n            value={this.state.code}\n          />\n         \n          </div>\n        </div>\n        <div class=\"mynewright\">\n        {/* <div class=\"mymids\">\n          <p>{FunctionOutput}.</p>\n        </div>\n        <div class=\"mymids\">\n        <p>{PrintOutputs}</p>\n        </div> */}\n\n        <div class=\"myfakeMenu\">\n          <div class=\"fakeButtons fakeClose\"></div>\n          <div class=\"fakeButtons fakeMinimize\"></div>\n          <div class=\"fakeButtons fakeZoom\"></div>\n        </div>\n        <div class=\"myfakeScreen\">\n        <p>{PrintOutputs}</p>\n        </div>\n        </div>\n    </div>\n      </header>\n    </div>\n  );\n}\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}