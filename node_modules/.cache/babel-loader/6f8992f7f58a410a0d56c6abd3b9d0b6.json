{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { DisposableStore, isDisposable } from '../../../../base/common/lifecycle.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { Range } from '../../../common/core/range.js';\nimport { LinkProviderRegistry } from '../../../common/languages.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nexport class Link {\n  constructor(link, provider) {\n    this._link = link;\n    this._provider = provider;\n  }\n\n  toJSON() {\n    return {\n      range: this.range,\n      url: this.url,\n      tooltip: this.tooltip\n    };\n  }\n\n  get range() {\n    return this._link.range;\n  }\n\n  get url() {\n    return this._link.url;\n  }\n\n  get tooltip() {\n    return this._link.tooltip;\n  }\n\n  resolve(token) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this._link.url) {\n        return this._link.url;\n      }\n\n      if (typeof this._provider.resolveLink === 'function') {\n        return Promise.resolve(this._provider.resolveLink(this._link, token)).then(value => {\n          this._link = value || this._link;\n\n          if (this._link.url) {\n            // recurse\n            return this.resolve(token);\n          }\n\n          return Promise.reject(new Error('missing'));\n        });\n      }\n\n      return Promise.reject(new Error('missing'));\n    });\n  }\n\n}\nexport class LinksList {\n  constructor(tuples) {\n    this._disposables = new DisposableStore();\n    let links = [];\n\n    for (const [list, provider] of tuples) {\n      // merge all links\n      const newLinks = list.links.map(link => new Link(link, provider));\n      links = LinksList._union(links, newLinks); // register disposables\n\n      if (isDisposable(list)) {\n        this._disposables.add(list);\n      }\n    }\n\n    this.links = links;\n  }\n\n  dispose() {\n    this._disposables.dispose();\n\n    this.links.length = 0;\n  }\n\n  static _union(oldLinks, newLinks) {\n    // reunite oldLinks with newLinks and remove duplicates\n    let result = [];\n    let oldIndex;\n    let oldLen;\n    let newIndex;\n    let newLen;\n\n    for (oldIndex = 0, newIndex = 0, oldLen = oldLinks.length, newLen = newLinks.length; oldIndex < oldLen && newIndex < newLen;) {\n      const oldLink = oldLinks[oldIndex];\n      const newLink = newLinks[newIndex];\n\n      if (Range.areIntersectingOrTouching(oldLink.range, newLink.range)) {\n        // Remove the oldLink\n        oldIndex++;\n        continue;\n      }\n\n      const comparisonResult = Range.compareRangesUsingStarts(oldLink.range, newLink.range);\n\n      if (comparisonResult < 0) {\n        // oldLink is before\n        result.push(oldLink);\n        oldIndex++;\n      } else {\n        // newLink is before\n        result.push(newLink);\n        newIndex++;\n      }\n    }\n\n    for (; oldIndex < oldLen; oldIndex++) {\n      result.push(oldLinks[oldIndex]);\n    }\n\n    for (; newIndex < newLen; newIndex++) {\n      result.push(newLinks[newIndex]);\n    }\n\n    return result;\n  }\n\n}\nexport function getLinks(model, token) {\n  const lists = []; // ask all providers for links in parallel\n\n  const promises = LinkProviderRegistry.ordered(model).reverse().map((provider, i) => {\n    return Promise.resolve(provider.provideLinks(model, token)).then(result => {\n      if (result) {\n        lists[i] = [result, provider];\n      }\n    }, onUnexpectedExternalError);\n  });\n  return Promise.all(promises).then(() => {\n    const result = new LinksList(coalesce(lists));\n\n    if (!token.isCancellationRequested) {\n      return result;\n    }\n\n    result.dispose();\n    return new LinksList([]);\n  });\n}\nCommandsRegistry.registerCommand('_executeLinkProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\n  let [uri, resolveCount] = args;\n  assertType(uri instanceof URI);\n\n  if (typeof resolveCount !== 'number') {\n    resolveCount = 0;\n  }\n\n  const model = accessor.get(IModelService).getModel(uri);\n\n  if (!model) {\n    return [];\n  }\n\n  const list = yield getLinks(model, CancellationToken.None);\n\n  if (!list) {\n    return [];\n  } // resolve links\n\n\n  for (let i = 0; i < Math.min(resolveCount, list.links.length); i++) {\n    yield list.links[i].resolve(CancellationToken.None);\n  }\n\n  const result = list.links.slice(0);\n  list.dispose();\n  return result;\n}));","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/contrib/links/browser/getLinks.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","coalesce","CancellationToken","onUnexpectedExternalError","DisposableStore","isDisposable","assertType","URI","Range","LinkProviderRegistry","IModelService","CommandsRegistry","Link","constructor","link","provider","_link","_provider","toJSON","range","url","tooltip","token","resolveLink","Error","LinksList","tuples","_disposables","links","list","newLinks","map","_union","add","dispose","length","oldLinks","oldIndex","oldLen","newIndex","newLen","oldLink","newLink","areIntersectingOrTouching","comparisonResult","compareRangesUsingStarts","push","getLinks","model","lists","promises","ordered","reverse","i","provideLinks","all","isCancellationRequested","registerCommand","accessor","args","uri","resolveCount","get","getModel","None","Math","min","slice"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { DisposableStore, isDisposable } from '../../../../base/common/lifecycle.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { Range } from '../../../common/core/range.js';\nimport { LinkProviderRegistry } from '../../../common/languages.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nexport class Link {\n    constructor(link, provider) {\n        this._link = link;\n        this._provider = provider;\n    }\n    toJSON() {\n        return {\n            range: this.range,\n            url: this.url,\n            tooltip: this.tooltip\n        };\n    }\n    get range() {\n        return this._link.range;\n    }\n    get url() {\n        return this._link.url;\n    }\n    get tooltip() {\n        return this._link.tooltip;\n    }\n    resolve(token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._link.url) {\n                return this._link.url;\n            }\n            if (typeof this._provider.resolveLink === 'function') {\n                return Promise.resolve(this._provider.resolveLink(this._link, token)).then(value => {\n                    this._link = value || this._link;\n                    if (this._link.url) {\n                        // recurse\n                        return this.resolve(token);\n                    }\n                    return Promise.reject(new Error('missing'));\n                });\n            }\n            return Promise.reject(new Error('missing'));\n        });\n    }\n}\nexport class LinksList {\n    constructor(tuples) {\n        this._disposables = new DisposableStore();\n        let links = [];\n        for (const [list, provider] of tuples) {\n            // merge all links\n            const newLinks = list.links.map(link => new Link(link, provider));\n            links = LinksList._union(links, newLinks);\n            // register disposables\n            if (isDisposable(list)) {\n                this._disposables.add(list);\n            }\n        }\n        this.links = links;\n    }\n    dispose() {\n        this._disposables.dispose();\n        this.links.length = 0;\n    }\n    static _union(oldLinks, newLinks) {\n        // reunite oldLinks with newLinks and remove duplicates\n        let result = [];\n        let oldIndex;\n        let oldLen;\n        let newIndex;\n        let newLen;\n        for (oldIndex = 0, newIndex = 0, oldLen = oldLinks.length, newLen = newLinks.length; oldIndex < oldLen && newIndex < newLen;) {\n            const oldLink = oldLinks[oldIndex];\n            const newLink = newLinks[newIndex];\n            if (Range.areIntersectingOrTouching(oldLink.range, newLink.range)) {\n                // Remove the oldLink\n                oldIndex++;\n                continue;\n            }\n            const comparisonResult = Range.compareRangesUsingStarts(oldLink.range, newLink.range);\n            if (comparisonResult < 0) {\n                // oldLink is before\n                result.push(oldLink);\n                oldIndex++;\n            }\n            else {\n                // newLink is before\n                result.push(newLink);\n                newIndex++;\n            }\n        }\n        for (; oldIndex < oldLen; oldIndex++) {\n            result.push(oldLinks[oldIndex]);\n        }\n        for (; newIndex < newLen; newIndex++) {\n            result.push(newLinks[newIndex]);\n        }\n        return result;\n    }\n}\nexport function getLinks(model, token) {\n    const lists = [];\n    // ask all providers for links in parallel\n    const promises = LinkProviderRegistry.ordered(model).reverse().map((provider, i) => {\n        return Promise.resolve(provider.provideLinks(model, token)).then(result => {\n            if (result) {\n                lists[i] = [result, provider];\n            }\n        }, onUnexpectedExternalError);\n    });\n    return Promise.all(promises).then(() => {\n        const result = new LinksList(coalesce(lists));\n        if (!token.isCancellationRequested) {\n            return result;\n        }\n        result.dispose();\n        return new LinksList([]);\n    });\n}\nCommandsRegistry.registerCommand('_executeLinkProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\n    let [uri, resolveCount] = args;\n    assertType(uri instanceof URI);\n    if (typeof resolveCount !== 'number') {\n        resolveCount = 0;\n    }\n    const model = accessor.get(IModelService).getModel(uri);\n    if (!model) {\n        return [];\n    }\n    const list = yield getLinks(model, CancellationToken.None);\n    if (!list) {\n        return [];\n    }\n    // resolve links\n    for (let i = 0; i < Math.min(resolveCount, list.links.length); i++) {\n        yield list.links[i].resolve(CancellationToken.None);\n    }\n    const result = list.links.slice(0);\n    list.dispose();\n    return result;\n}));\n"]},"metadata":{},"sourceType":"module"}