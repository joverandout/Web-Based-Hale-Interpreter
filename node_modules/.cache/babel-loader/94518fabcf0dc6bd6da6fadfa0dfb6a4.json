{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport { createCancelablePromise, timeout } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { EditorState } from '../../editorState/browser/editorState.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { IEditorWorkerService } from '../../../common/services/editorWorker.js';\nimport { editorBracketMatchBorder } from '../../../common/core/editorColorRegistry.js';\nimport * as nls from '../../../../nls.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { InPlaceReplaceCommand } from './inPlaceReplaceCommand.js';\nlet InPlaceReplaceController = class InPlaceReplaceController {\n  constructor(editor, editorWorkerService) {\n    this.decorationIds = [];\n    this.editor = editor;\n    this.editorWorkerService = editorWorkerService;\n  }\n\n  static get(editor) {\n    return editor.getContribution(InPlaceReplaceController.ID);\n  }\n\n  dispose() {}\n\n  run(source, up) {\n    // cancel any pending request\n    if (this.currentRequest) {\n      this.currentRequest.cancel();\n    }\n\n    const editorSelection = this.editor.getSelection();\n    const model = this.editor.getModel();\n\n    if (!model || !editorSelection) {\n      return undefined;\n    }\n\n    let selection = editorSelection;\n\n    if (selection.startLineNumber !== selection.endLineNumber) {\n      // Can't accept multiline selection\n      return undefined;\n    }\n\n    const state = new EditorState(this.editor, 1\n    /* Value */\n    | 4\n    /* Position */\n    );\n    const modelURI = model.uri;\n\n    if (!this.editorWorkerService.canNavigateValueSet(modelURI)) {\n      return Promise.resolve(undefined);\n    }\n\n    this.currentRequest = createCancelablePromise(token => this.editorWorkerService.navigateValueSet(modelURI, selection, up));\n    return this.currentRequest.then(result => {\n      if (!result || !result.range || !result.value) {\n        // No proper result\n        return;\n      }\n\n      if (!state.validate(this.editor)) {\n        // state has changed\n        return;\n      } // Selection\n\n\n      let editRange = Range.lift(result.range);\n      let highlightRange = result.range;\n      let diff = result.value.length - (selection.endColumn - selection.startColumn); // highlight\n\n      highlightRange = {\n        startLineNumber: highlightRange.startLineNumber,\n        startColumn: highlightRange.startColumn,\n        endLineNumber: highlightRange.endLineNumber,\n        endColumn: highlightRange.startColumn + result.value.length\n      };\n\n      if (diff > 1) {\n        selection = new Selection(selection.startLineNumber, selection.startColumn, selection.endLineNumber, selection.endColumn + diff - 1);\n      } // Insert new text\n\n\n      const command = new InPlaceReplaceCommand(editRange, selection, result.value);\n      this.editor.pushUndoStop();\n      this.editor.executeCommand(source, command);\n      this.editor.pushUndoStop(); // add decoration\n\n      this.decorationIds = this.editor.deltaDecorations(this.decorationIds, [{\n        range: highlightRange,\n        options: InPlaceReplaceController.DECORATION\n      }]); // remove decoration after delay\n\n      if (this.decorationRemover) {\n        this.decorationRemover.cancel();\n      }\n\n      this.decorationRemover = timeout(350);\n      this.decorationRemover.then(() => this.decorationIds = this.editor.deltaDecorations(this.decorationIds, [])).catch(onUnexpectedError);\n    }).catch(onUnexpectedError);\n  }\n\n};\nInPlaceReplaceController.ID = 'editor.contrib.inPlaceReplaceController';\nInPlaceReplaceController.DECORATION = ModelDecorationOptions.register({\n  description: 'in-place-replace',\n  className: 'valueSetReplacement'\n});\nInPlaceReplaceController = __decorate([__param(1, IEditorWorkerService)], InPlaceReplaceController);\n\nclass InPlaceReplaceUp extends EditorAction {\n  constructor() {\n    super({\n      id: 'editor.action.inPlaceReplace.up',\n      label: nls.localize('InPlaceReplaceAction.previous.label', \"Replace with Previous Value\"),\n      alias: 'Replace with Previous Value',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 2048\n        /* CtrlCmd */\n        | 1024\n        /* Shift */\n        | 82\n        /* Comma */\n        ,\n        weight: 100\n        /* EditorContrib */\n\n      }\n    });\n  }\n\n  run(accessor, editor) {\n    const controller = InPlaceReplaceController.get(editor);\n\n    if (!controller) {\n      return Promise.resolve(undefined);\n    }\n\n    return controller.run(this.id, true);\n  }\n\n}\n\nclass InPlaceReplaceDown extends EditorAction {\n  constructor() {\n    super({\n      id: 'editor.action.inPlaceReplace.down',\n      label: nls.localize('InPlaceReplaceAction.next.label', \"Replace with Next Value\"),\n      alias: 'Replace with Next Value',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 2048\n        /* CtrlCmd */\n        | 1024\n        /* Shift */\n        | 84\n        /* Period */\n        ,\n        weight: 100\n        /* EditorContrib */\n\n      }\n    });\n  }\n\n  run(accessor, editor) {\n    const controller = InPlaceReplaceController.get(editor);\n\n    if (!controller) {\n      return Promise.resolve(undefined);\n    }\n\n    return controller.run(this.id, false);\n  }\n\n}\n\nregisterEditorContribution(InPlaceReplaceController.ID, InPlaceReplaceController);\nregisterEditorAction(InPlaceReplaceUp);\nregisterEditorAction(InPlaceReplaceDown);\nregisterThemingParticipant((theme, collector) => {\n  const border = theme.getColor(editorBracketMatchBorder);\n\n  if (border) {\n    collector.addRule(`.monaco-editor.vs .valueSetReplacement { outline: solid 2px ${border}; }`);\n  }\n});","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/contrib/inPlaceReplace/browser/inPlaceReplace.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","createCancelablePromise","timeout","onUnexpectedError","EditorState","EditorAction","registerEditorAction","registerEditorContribution","Range","Selection","EditorContextKeys","ModelDecorationOptions","IEditorWorkerService","editorBracketMatchBorder","nls","registerThemingParticipant","InPlaceReplaceCommand","InPlaceReplaceController","constructor","editor","editorWorkerService","decorationIds","get","getContribution","ID","dispose","run","source","up","currentRequest","cancel","editorSelection","getSelection","model","getModel","undefined","selection","startLineNumber","endLineNumber","state","modelURI","uri","canNavigateValueSet","Promise","resolve","token","navigateValueSet","then","result","range","value","validate","editRange","lift","highlightRange","diff","endColumn","startColumn","command","pushUndoStop","executeCommand","deltaDecorations","options","DECORATION","decorationRemover","catch","register","description","className","InPlaceReplaceUp","id","label","localize","alias","precondition","writable","kbOpts","kbExpr","editorTextFocus","primary","weight","accessor","controller","InPlaceReplaceDown","theme","collector","border","getColor","addRule"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { createCancelablePromise, timeout } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { EditorState } from '../../editorState/browser/editorState.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { IEditorWorkerService } from '../../../common/services/editorWorker.js';\nimport { editorBracketMatchBorder } from '../../../common/core/editorColorRegistry.js';\nimport * as nls from '../../../../nls.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { InPlaceReplaceCommand } from './inPlaceReplaceCommand.js';\nlet InPlaceReplaceController = class InPlaceReplaceController {\n    constructor(editor, editorWorkerService) {\n        this.decorationIds = [];\n        this.editor = editor;\n        this.editorWorkerService = editorWorkerService;\n    }\n    static get(editor) {\n        return editor.getContribution(InPlaceReplaceController.ID);\n    }\n    dispose() {\n    }\n    run(source, up) {\n        // cancel any pending request\n        if (this.currentRequest) {\n            this.currentRequest.cancel();\n        }\n        const editorSelection = this.editor.getSelection();\n        const model = this.editor.getModel();\n        if (!model || !editorSelection) {\n            return undefined;\n        }\n        let selection = editorSelection;\n        if (selection.startLineNumber !== selection.endLineNumber) {\n            // Can't accept multiline selection\n            return undefined;\n        }\n        const state = new EditorState(this.editor, 1 /* Value */ | 4 /* Position */);\n        const modelURI = model.uri;\n        if (!this.editorWorkerService.canNavigateValueSet(modelURI)) {\n            return Promise.resolve(undefined);\n        }\n        this.currentRequest = createCancelablePromise(token => this.editorWorkerService.navigateValueSet(modelURI, selection, up));\n        return this.currentRequest.then(result => {\n            if (!result || !result.range || !result.value) {\n                // No proper result\n                return;\n            }\n            if (!state.validate(this.editor)) {\n                // state has changed\n                return;\n            }\n            // Selection\n            let editRange = Range.lift(result.range);\n            let highlightRange = result.range;\n            let diff = result.value.length - (selection.endColumn - selection.startColumn);\n            // highlight\n            highlightRange = {\n                startLineNumber: highlightRange.startLineNumber,\n                startColumn: highlightRange.startColumn,\n                endLineNumber: highlightRange.endLineNumber,\n                endColumn: highlightRange.startColumn + result.value.length\n            };\n            if (diff > 1) {\n                selection = new Selection(selection.startLineNumber, selection.startColumn, selection.endLineNumber, selection.endColumn + diff - 1);\n            }\n            // Insert new text\n            const command = new InPlaceReplaceCommand(editRange, selection, result.value);\n            this.editor.pushUndoStop();\n            this.editor.executeCommand(source, command);\n            this.editor.pushUndoStop();\n            // add decoration\n            this.decorationIds = this.editor.deltaDecorations(this.decorationIds, [{\n                    range: highlightRange,\n                    options: InPlaceReplaceController.DECORATION\n                }]);\n            // remove decoration after delay\n            if (this.decorationRemover) {\n                this.decorationRemover.cancel();\n            }\n            this.decorationRemover = timeout(350);\n            this.decorationRemover.then(() => this.decorationIds = this.editor.deltaDecorations(this.decorationIds, [])).catch(onUnexpectedError);\n        }).catch(onUnexpectedError);\n    }\n};\nInPlaceReplaceController.ID = 'editor.contrib.inPlaceReplaceController';\nInPlaceReplaceController.DECORATION = ModelDecorationOptions.register({\n    description: 'in-place-replace',\n    className: 'valueSetReplacement'\n});\nInPlaceReplaceController = __decorate([\n    __param(1, IEditorWorkerService)\n], InPlaceReplaceController);\nclass InPlaceReplaceUp extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inPlaceReplace.up',\n            label: nls.localize('InPlaceReplaceAction.previous.label', \"Replace with Previous Value\"),\n            alias: 'Replace with Previous Value',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 82 /* Comma */,\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = InPlaceReplaceController.get(editor);\n        if (!controller) {\n            return Promise.resolve(undefined);\n        }\n        return controller.run(this.id, true);\n    }\n}\nclass InPlaceReplaceDown extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inPlaceReplace.down',\n            label: nls.localize('InPlaceReplaceAction.next.label', \"Replace with Next Value\"),\n            alias: 'Replace with Next Value',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 84 /* Period */,\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = InPlaceReplaceController.get(editor);\n        if (!controller) {\n            return Promise.resolve(undefined);\n        }\n        return controller.run(this.id, false);\n    }\n}\nregisterEditorContribution(InPlaceReplaceController.ID, InPlaceReplaceController);\nregisterEditorAction(InPlaceReplaceUp);\nregisterEditorAction(InPlaceReplaceDown);\nregisterThemingParticipant((theme, collector) => {\n    const border = theme.getColor(editorBracketMatchBorder);\n    if (border) {\n        collector.addRule(`.monaco-editor.vs .valueSetReplacement { outline: solid 2px ${border}; }`);\n    }\n});\n"]},"metadata":{},"sourceType":"module"}