{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar _a;\n\nimport * as strings from '../../../base/common/strings.js';\nimport { LineTokens } from '../../common/tokens/lineTokens.js';\nimport { TokenizationRegistry } from '../../common/languages.js';\nimport { RenderLineInput, renderViewLine2 as renderViewLine } from '../../common/viewLayout/viewLineRenderer.js';\nimport { ViewLineRenderingData } from '../../common/viewModel/viewModel.js';\nimport { MonarchTokenizer } from '../common/monarch/monarchLexer.js';\nconst ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('standaloneColorizer', {\n  createHTML: value => value\n});\nexport class Colorizer {\n  static colorizeElement(themeService, languageService, domNode, options) {\n    options = options || {};\n    const theme = options.theme || 'vs';\n    const mimeType = options.mimeType || domNode.getAttribute('lang') || domNode.getAttribute('data-lang');\n\n    if (!mimeType) {\n      console.error('Mode not detected');\n      return Promise.resolve();\n    }\n\n    const languageId = languageService.getLanguageIdByMimeType(mimeType) || mimeType;\n    themeService.setTheme(theme);\n    const text = domNode.firstChild ? domNode.firstChild.nodeValue : '';\n    domNode.className += ' ' + theme;\n\n    const render = str => {\n      var _a;\n\n      const trustedhtml = (_a = ttPolicy === null || ttPolicy === void 0 ? void 0 : ttPolicy.createHTML(str)) !== null && _a !== void 0 ? _a : str;\n      domNode.innerHTML = trustedhtml;\n    };\n\n    return this.colorize(languageService, text || '', languageId, options).then(render, err => console.error(err));\n  }\n\n  static colorize(languageService, text, languageId, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const languageIdCodec = languageService.languageIdCodec;\n      let tabSize = 4;\n\n      if (options && typeof options.tabSize === 'number') {\n        tabSize = options.tabSize;\n      }\n\n      if (strings.startsWithUTF8BOM(text)) {\n        text = text.substr(1);\n      }\n\n      const lines = strings.splitLines(text);\n\n      if (!languageService.isRegisteredLanguageId(languageId)) {\n        return _fakeColorize(lines, tabSize, languageIdCodec);\n      }\n\n      const tokenizationSupport = yield TokenizationRegistry.getOrCreate(languageId);\n\n      if (tokenizationSupport) {\n        return _colorize(lines, tabSize, tokenizationSupport, languageIdCodec);\n      }\n\n      return _fakeColorize(lines, tabSize, languageIdCodec);\n    });\n  }\n\n  static colorizeLine(line, mightContainNonBasicASCII, mightContainRTL, tokens, tabSize = 4) {\n    const isBasicASCII = ViewLineRenderingData.isBasicASCII(line, mightContainNonBasicASCII);\n    const containsRTL = ViewLineRenderingData.containsRTL(line, isBasicASCII, mightContainRTL);\n    const renderResult = renderViewLine(new RenderLineInput(false, true, line, false, isBasicASCII, containsRTL, 0, tokens, [], tabSize, 0, 0, 0, 0, -1, 'none', false, false, null));\n    return renderResult.html;\n  }\n\n  static colorizeModelLine(model, lineNumber, tabSize = 4) {\n    const content = model.getLineContent(lineNumber);\n    model.forceTokenization(lineNumber);\n    const tokens = model.getLineTokens(lineNumber);\n    const inflatedTokens = tokens.inflate();\n    return this.colorizeLine(content, model.mightContainNonBasicASCII(), model.mightContainRTL(), inflatedTokens, tabSize);\n  }\n\n}\n\nfunction _colorize(lines, tabSize, tokenizationSupport, languageIdCodec) {\n  return new Promise((c, e) => {\n    const execute = () => {\n      const result = _actualColorize(lines, tabSize, tokenizationSupport, languageIdCodec);\n\n      if (tokenizationSupport instanceof MonarchTokenizer) {\n        const status = tokenizationSupport.getLoadStatus();\n\n        if (status.loaded === false) {\n          status.promise.then(execute, e);\n          return;\n        }\n      }\n\n      c(result);\n    };\n\n    execute();\n  });\n}\n\nfunction _fakeColorize(lines, tabSize, languageIdCodec) {\n  let html = [];\n  const defaultMetadata = (0\n  /* None */\n  << 10\n  /* FONT_STYLE_OFFSET */\n  | 1\n  /* DefaultForeground */\n  << 14\n  /* FOREGROUND_OFFSET */\n  | 2\n  /* DefaultBackground */\n  << 23\n  /* BACKGROUND_OFFSET */\n  ) >>> 0;\n  const tokens = new Uint32Array(2);\n  tokens[0] = 0;\n  tokens[1] = defaultMetadata;\n\n  for (let i = 0, length = lines.length; i < length; i++) {\n    const line = lines[i];\n    tokens[0] = line.length;\n    const lineTokens = new LineTokens(tokens, line, languageIdCodec);\n    const isBasicASCII = ViewLineRenderingData.isBasicASCII(line,\n    /* check for basic ASCII */\n    true);\n    const containsRTL = ViewLineRenderingData.containsRTL(line, isBasicASCII,\n    /* check for RTL */\n    true);\n    const renderResult = renderViewLine(new RenderLineInput(false, true, line, false, isBasicASCII, containsRTL, 0, lineTokens, [], tabSize, 0, 0, 0, 0, -1, 'none', false, false, null));\n    html = html.concat(renderResult.html);\n    html.push('<br/>');\n  }\n\n  return html.join('');\n}\n\nfunction _actualColorize(lines, tabSize, tokenizationSupport, languageIdCodec) {\n  let html = [];\n  let state = tokenizationSupport.getInitialState();\n\n  for (let i = 0, length = lines.length; i < length; i++) {\n    const line = lines[i];\n    const tokenizeResult = tokenizationSupport.tokenizeEncoded(line, true, state);\n    LineTokens.convertToEndOffset(tokenizeResult.tokens, line.length);\n    const lineTokens = new LineTokens(tokenizeResult.tokens, line, languageIdCodec);\n    const isBasicASCII = ViewLineRenderingData.isBasicASCII(line,\n    /* check for basic ASCII */\n    true);\n    const containsRTL = ViewLineRenderingData.containsRTL(line, isBasicASCII,\n    /* check for RTL */\n    true);\n    const renderResult = renderViewLine(new RenderLineInput(false, true, line, false, isBasicASCII, containsRTL, 0, lineTokens.inflate(), [], tabSize, 0, 0, 0, 0, -1, 'none', false, false, null));\n    html = html.concat(renderResult.html);\n    html.push('<br/>');\n    state = tokenizeResult.endState;\n  }\n\n  return html.join('');\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/standalone/browser/colorizer.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","_a","strings","LineTokens","TokenizationRegistry","RenderLineInput","renderViewLine2","renderViewLine","ViewLineRenderingData","MonarchTokenizer","ttPolicy","window","trustedTypes","createPolicy","createHTML","Colorizer","colorizeElement","themeService","languageService","domNode","options","theme","mimeType","getAttribute","console","error","languageId","getLanguageIdByMimeType","setTheme","text","firstChild","nodeValue","className","render","str","trustedhtml","innerHTML","colorize","err","languageIdCodec","tabSize","startsWithUTF8BOM","substr","lines","splitLines","isRegisteredLanguageId","_fakeColorize","tokenizationSupport","getOrCreate","_colorize","colorizeLine","line","mightContainNonBasicASCII","mightContainRTL","tokens","isBasicASCII","containsRTL","renderResult","html","colorizeModelLine","model","lineNumber","content","getLineContent","forceTokenization","getLineTokens","inflatedTokens","inflate","c","execute","_actualColorize","status","getLoadStatus","loaded","promise","defaultMetadata","Uint32Array","i","length","lineTokens","concat","push","join","state","getInitialState","tokenizeResult","tokenizeEncoded","convertToEndOffset","endState"],"mappings":"AAAA;AACA;AACA;AACA;AACA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA4B,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AACrF,WAASC,KAAT,CAAeC,KAAf,EAAsB;AAAE,WAAOA,KAAK,YAAYH,CAAjB,GAAqBG,KAArB,GAA6B,IAAIH,CAAJ,CAAM,UAAUI,OAAV,EAAmB;AAAEA,MAAAA,OAAO,CAACD,KAAD,CAAP;AAAiB,KAA5C,CAApC;AAAoF;;AAC5G,SAAO,KAAKH,CAAC,KAAKA,CAAC,GAAGK,OAAT,CAAN,EAAyB,UAAUD,OAAV,EAAmBE,MAAnB,EAA2B;AACvD,aAASC,SAAT,CAAmBJ,KAAnB,EAA0B;AAAE,UAAI;AAAEK,QAAAA,IAAI,CAACP,SAAS,CAACQ,IAAV,CAAeN,KAAf,CAAD,CAAJ;AAA8B,OAApC,CAAqC,OAAOO,CAAP,EAAU;AAAEJ,QAAAA,MAAM,CAACI,CAAD,CAAN;AAAY;AAAE;;AAC3F,aAASC,QAAT,CAAkBR,KAAlB,EAAyB;AAAE,UAAI;AAAEK,QAAAA,IAAI,CAACP,SAAS,CAAC,OAAD,CAAT,CAAmBE,KAAnB,CAAD,CAAJ;AAAkC,OAAxC,CAAyC,OAAOO,CAAP,EAAU;AAAEJ,QAAAA,MAAM,CAACI,CAAD,CAAN;AAAY;AAAE;;AAC9F,aAASF,IAAT,CAAcI,MAAd,EAAsB;AAAEA,MAAAA,MAAM,CAACC,IAAP,GAAcT,OAAO,CAACQ,MAAM,CAACT,KAAR,CAArB,GAAsCD,KAAK,CAACU,MAAM,CAACT,KAAR,CAAL,CAAoBW,IAApB,CAAyBP,SAAzB,EAAoCI,QAApC,CAAtC;AAAsF;;AAC9GH,IAAAA,IAAI,CAAC,CAACP,SAAS,GAAGA,SAAS,CAACc,KAAV,CAAgBjB,OAAhB,EAAyBC,UAAU,IAAI,EAAvC,CAAb,EAAyDU,IAAzD,EAAD,CAAJ;AACH,GALM,CAAP;AAMH,CARD;;AASA,IAAIO,EAAJ;;AACA,OAAO,KAAKC,OAAZ,MAAyB,iCAAzB;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA,SAASC,oBAAT,QAAqC,2BAArC;AACA,SAASC,eAAT,EAA0BC,eAAe,IAAIC,cAA7C,QAAmE,6CAAnE;AACA,SAASC,qBAAT,QAAsC,qCAAtC;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AACA,MAAMC,QAAQ,GAAG,CAACT,EAAE,GAAGU,MAAM,CAACC,YAAb,MAA+B,IAA/B,IAAuCX,EAAE,KAAK,KAAK,CAAnD,GAAuD,KAAK,CAA5D,GAAgEA,EAAE,CAACY,YAAH,CAAgB,qBAAhB,EAAuC;AAAEC,EAAAA,UAAU,EAAE1B,KAAK,IAAIA;AAAvB,CAAvC,CAAjF;AACA,OAAO,MAAM2B,SAAN,CAAgB;AACG,SAAfC,eAAe,CAACC,YAAD,EAAeC,eAAf,EAAgCC,OAAhC,EAAyCC,OAAzC,EAAkD;AACpEA,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,UAAMC,KAAK,GAAGD,OAAO,CAACC,KAAR,IAAiB,IAA/B;AACA,UAAMC,QAAQ,GAAGF,OAAO,CAACE,QAAR,IAAoBH,OAAO,CAACI,YAAR,CAAqB,MAArB,CAApB,IAAoDJ,OAAO,CAACI,YAAR,CAAqB,WAArB,CAArE;;AACA,QAAI,CAACD,QAAL,EAAe;AACXE,MAAAA,OAAO,CAACC,KAAR,CAAc,mBAAd;AACA,aAAOnC,OAAO,CAACD,OAAR,EAAP;AACH;;AACD,UAAMqC,UAAU,GAAGR,eAAe,CAACS,uBAAhB,CAAwCL,QAAxC,KAAqDA,QAAxE;AACAL,IAAAA,YAAY,CAACW,QAAb,CAAsBP,KAAtB;AACA,UAAMQ,IAAI,GAAGV,OAAO,CAACW,UAAR,GAAqBX,OAAO,CAACW,UAAR,CAAmBC,SAAxC,GAAoD,EAAjE;AACAZ,IAAAA,OAAO,CAACa,SAAR,IAAqB,MAAMX,KAA3B;;AACA,UAAMY,MAAM,GAAIC,GAAD,IAAS;AACpB,UAAIjC,EAAJ;;AACA,YAAMkC,WAAW,GAAG,CAAClC,EAAE,GAAGS,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACI,UAAT,CAAoBoB,GAApB,CAA1D,MAAwF,IAAxF,IAAgGjC,EAAE,KAAK,KAAK,CAA5G,GAAgHA,EAAhH,GAAqHiC,GAAzI;AACAf,MAAAA,OAAO,CAACiB,SAAR,GAAoBD,WAApB;AACH,KAJD;;AAKA,WAAO,KAAKE,QAAL,CAAcnB,eAAd,EAA+BW,IAAI,IAAI,EAAvC,EAA2CH,UAA3C,EAAuDN,OAAvD,EAAgErB,IAAhE,CAAqEkC,MAArE,EAA8EK,GAAD,IAASd,OAAO,CAACC,KAAR,CAAca,GAAd,CAAtF,CAAP;AACH;;AACc,SAARD,QAAQ,CAACnB,eAAD,EAAkBW,IAAlB,EAAwBH,UAAxB,EAAoCN,OAApC,EAA6C;AACxD,WAAOtC,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAChD,YAAMyD,eAAe,GAAGrB,eAAe,CAACqB,eAAxC;AACA,UAAIC,OAAO,GAAG,CAAd;;AACA,UAAIpB,OAAO,IAAI,OAAOA,OAAO,CAACoB,OAAf,KAA2B,QAA1C,EAAoD;AAChDA,QAAAA,OAAO,GAAGpB,OAAO,CAACoB,OAAlB;AACH;;AACD,UAAItC,OAAO,CAACuC,iBAAR,CAA0BZ,IAA1B,CAAJ,EAAqC;AACjCA,QAAAA,IAAI,GAAGA,IAAI,CAACa,MAAL,CAAY,CAAZ,CAAP;AACH;;AACD,YAAMC,KAAK,GAAGzC,OAAO,CAAC0C,UAAR,CAAmBf,IAAnB,CAAd;;AACA,UAAI,CAACX,eAAe,CAAC2B,sBAAhB,CAAuCnB,UAAvC,CAAL,EAAyD;AACrD,eAAOoB,aAAa,CAACH,KAAD,EAAQH,OAAR,EAAiBD,eAAjB,CAApB;AACH;;AACD,YAAMQ,mBAAmB,GAAG,MAAM3C,oBAAoB,CAAC4C,WAArB,CAAiCtB,UAAjC,CAAlC;;AACA,UAAIqB,mBAAJ,EAAyB;AACrB,eAAOE,SAAS,CAACN,KAAD,EAAQH,OAAR,EAAiBO,mBAAjB,EAAsCR,eAAtC,CAAhB;AACH;;AACD,aAAOO,aAAa,CAACH,KAAD,EAAQH,OAAR,EAAiBD,eAAjB,CAApB;AACH,KAlBe,CAAhB;AAmBH;;AACkB,SAAZW,YAAY,CAACC,IAAD,EAAOC,yBAAP,EAAkCC,eAAlC,EAAmDC,MAAnD,EAA2Dd,OAAO,GAAG,CAArE,EAAwE;AACvF,UAAMe,YAAY,GAAG/C,qBAAqB,CAAC+C,YAAtB,CAAmCJ,IAAnC,EAAyCC,yBAAzC,CAArB;AACA,UAAMI,WAAW,GAAGhD,qBAAqB,CAACgD,WAAtB,CAAkCL,IAAlC,EAAwCI,YAAxC,EAAsDF,eAAtD,CAApB;AACA,UAAMI,YAAY,GAAGlD,cAAc,CAAC,IAAIF,eAAJ,CAAoB,KAApB,EAA2B,IAA3B,EAAiC8C,IAAjC,EAAuC,KAAvC,EAA8CI,YAA9C,EAA4DC,WAA5D,EAAyE,CAAzE,EAA4EF,MAA5E,EAAoF,EAApF,EAAwFd,OAAxF,EAAiG,CAAjG,EAAoG,CAApG,EAAuG,CAAvG,EAA0G,CAA1G,EAA6G,CAAC,CAA9G,EAAiH,MAAjH,EAAyH,KAAzH,EAAgI,KAAhI,EAAuI,IAAvI,CAAD,CAAnC;AACA,WAAOiB,YAAY,CAACC,IAApB;AACH;;AACuB,SAAjBC,iBAAiB,CAACC,KAAD,EAAQC,UAAR,EAAoBrB,OAAO,GAAG,CAA9B,EAAiC;AACrD,UAAMsB,OAAO,GAAGF,KAAK,CAACG,cAAN,CAAqBF,UAArB,CAAhB;AACAD,IAAAA,KAAK,CAACI,iBAAN,CAAwBH,UAAxB;AACA,UAAMP,MAAM,GAAGM,KAAK,CAACK,aAAN,CAAoBJ,UAApB,CAAf;AACA,UAAMK,cAAc,GAAGZ,MAAM,CAACa,OAAP,EAAvB;AACA,WAAO,KAAKjB,YAAL,CAAkBY,OAAlB,EAA2BF,KAAK,CAACR,yBAAN,EAA3B,EAA8DQ,KAAK,CAACP,eAAN,EAA9D,EAAuFa,cAAvF,EAAuG1B,OAAvG,CAAP;AACH;;AArDkB;;AAuDvB,SAASS,SAAT,CAAmBN,KAAnB,EAA0BH,OAA1B,EAAmCO,mBAAnC,EAAwDR,eAAxD,EAAyE;AACrE,SAAO,IAAIjD,OAAJ,CAAY,CAAC8E,CAAD,EAAIzE,CAAJ,KAAU;AACzB,UAAM0E,OAAO,GAAG,MAAM;AAClB,YAAMxE,MAAM,GAAGyE,eAAe,CAAC3B,KAAD,EAAQH,OAAR,EAAiBO,mBAAjB,EAAsCR,eAAtC,CAA9B;;AACA,UAAIQ,mBAAmB,YAAYtC,gBAAnC,EAAqD;AACjD,cAAM8D,MAAM,GAAGxB,mBAAmB,CAACyB,aAApB,EAAf;;AACA,YAAID,MAAM,CAACE,MAAP,KAAkB,KAAtB,EAA6B;AACzBF,UAAAA,MAAM,CAACG,OAAP,CAAe3E,IAAf,CAAoBsE,OAApB,EAA6B1E,CAA7B;AACA;AACH;AACJ;;AACDyE,MAAAA,CAAC,CAACvE,MAAD,CAAD;AACH,KAVD;;AAWAwE,IAAAA,OAAO;AACV,GAbM,CAAP;AAcH;;AACD,SAASvB,aAAT,CAAuBH,KAAvB,EAA8BH,OAA9B,EAAuCD,eAAvC,EAAwD;AACpD,MAAImB,IAAI,GAAG,EAAX;AACA,QAAMiB,eAAe,GAAG,CAAE;AAAE;AAAF,KAAgB;AAAG;AAApB,IAClB;AAAE;AAAF,KAA6B;AAAG;AADd,IAElB;AAAE;AAAF,KAA6B;AAAG;AAFf,QAE6C,CAFrE;AAGA,QAAMrB,MAAM,GAAG,IAAIsB,WAAJ,CAAgB,CAAhB,CAAf;AACAtB,EAAAA,MAAM,CAAC,CAAD,CAAN,GAAY,CAAZ;AACAA,EAAAA,MAAM,CAAC,CAAD,CAAN,GAAYqB,eAAZ;;AACA,OAAK,IAAIE,CAAC,GAAG,CAAR,EAAWC,MAAM,GAAGnC,KAAK,CAACmC,MAA/B,EAAuCD,CAAC,GAAGC,MAA3C,EAAmDD,CAAC,EAApD,EAAwD;AACpD,UAAM1B,IAAI,GAAGR,KAAK,CAACkC,CAAD,CAAlB;AACAvB,IAAAA,MAAM,CAAC,CAAD,CAAN,GAAYH,IAAI,CAAC2B,MAAjB;AACA,UAAMC,UAAU,GAAG,IAAI5E,UAAJ,CAAemD,MAAf,EAAuBH,IAAvB,EAA6BZ,eAA7B,CAAnB;AACA,UAAMgB,YAAY,GAAG/C,qBAAqB,CAAC+C,YAAtB,CAAmCJ,IAAnC;AAAyC;AAA4B,QAArE,CAArB;AACA,UAAMK,WAAW,GAAGhD,qBAAqB,CAACgD,WAAtB,CAAkCL,IAAlC,EAAwCI,YAAxC;AAAsD;AAAoB,QAA1E,CAApB;AACA,UAAME,YAAY,GAAGlD,cAAc,CAAC,IAAIF,eAAJ,CAAoB,KAApB,EAA2B,IAA3B,EAAiC8C,IAAjC,EAAuC,KAAvC,EAA8CI,YAA9C,EAA4DC,WAA5D,EAAyE,CAAzE,EAA4EuB,UAA5E,EAAwF,EAAxF,EAA4FvC,OAA5F,EAAqG,CAArG,EAAwG,CAAxG,EAA2G,CAA3G,EAA8G,CAA9G,EAAiH,CAAC,CAAlH,EAAqH,MAArH,EAA6H,KAA7H,EAAoI,KAApI,EAA2I,IAA3I,CAAD,CAAnC;AACAkB,IAAAA,IAAI,GAAGA,IAAI,CAACsB,MAAL,CAAYvB,YAAY,CAACC,IAAzB,CAAP;AACAA,IAAAA,IAAI,CAACuB,IAAL,CAAU,OAAV;AACH;;AACD,SAAOvB,IAAI,CAACwB,IAAL,CAAU,EAAV,CAAP;AACH;;AACD,SAASZ,eAAT,CAAyB3B,KAAzB,EAAgCH,OAAhC,EAAyCO,mBAAzC,EAA8DR,eAA9D,EAA+E;AAC3E,MAAImB,IAAI,GAAG,EAAX;AACA,MAAIyB,KAAK,GAAGpC,mBAAmB,CAACqC,eAApB,EAAZ;;AACA,OAAK,IAAIP,CAAC,GAAG,CAAR,EAAWC,MAAM,GAAGnC,KAAK,CAACmC,MAA/B,EAAuCD,CAAC,GAAGC,MAA3C,EAAmDD,CAAC,EAApD,EAAwD;AACpD,UAAM1B,IAAI,GAAGR,KAAK,CAACkC,CAAD,CAAlB;AACA,UAAMQ,cAAc,GAAGtC,mBAAmB,CAACuC,eAApB,CAAoCnC,IAApC,EAA0C,IAA1C,EAAgDgC,KAAhD,CAAvB;AACAhF,IAAAA,UAAU,CAACoF,kBAAX,CAA8BF,cAAc,CAAC/B,MAA7C,EAAqDH,IAAI,CAAC2B,MAA1D;AACA,UAAMC,UAAU,GAAG,IAAI5E,UAAJ,CAAekF,cAAc,CAAC/B,MAA9B,EAAsCH,IAAtC,EAA4CZ,eAA5C,CAAnB;AACA,UAAMgB,YAAY,GAAG/C,qBAAqB,CAAC+C,YAAtB,CAAmCJ,IAAnC;AAAyC;AAA4B,QAArE,CAArB;AACA,UAAMK,WAAW,GAAGhD,qBAAqB,CAACgD,WAAtB,CAAkCL,IAAlC,EAAwCI,YAAxC;AAAsD;AAAoB,QAA1E,CAApB;AACA,UAAME,YAAY,GAAGlD,cAAc,CAAC,IAAIF,eAAJ,CAAoB,KAApB,EAA2B,IAA3B,EAAiC8C,IAAjC,EAAuC,KAAvC,EAA8CI,YAA9C,EAA4DC,WAA5D,EAAyE,CAAzE,EAA4EuB,UAAU,CAACZ,OAAX,EAA5E,EAAkG,EAAlG,EAAsG3B,OAAtG,EAA+G,CAA/G,EAAkH,CAAlH,EAAqH,CAArH,EAAwH,CAAxH,EAA2H,CAAC,CAA5H,EAA+H,MAA/H,EAAuI,KAAvI,EAA8I,KAA9I,EAAqJ,IAArJ,CAAD,CAAnC;AACAkB,IAAAA,IAAI,GAAGA,IAAI,CAACsB,MAAL,CAAYvB,YAAY,CAACC,IAAzB,CAAP;AACAA,IAAAA,IAAI,CAACuB,IAAL,CAAU,OAAV;AACAE,IAAAA,KAAK,GAAGE,cAAc,CAACG,QAAvB;AACH;;AACD,SAAO9B,IAAI,CAACwB,IAAL,CAAU,EAAV,CAAP;AACH","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar _a;\nimport * as strings from '../../../base/common/strings.js';\nimport { LineTokens } from '../../common/tokens/lineTokens.js';\nimport { TokenizationRegistry } from '../../common/languages.js';\nimport { RenderLineInput, renderViewLine2 as renderViewLine } from '../../common/viewLayout/viewLineRenderer.js';\nimport { ViewLineRenderingData } from '../../common/viewModel/viewModel.js';\nimport { MonarchTokenizer } from '../common/monarch/monarchLexer.js';\nconst ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('standaloneColorizer', { createHTML: value => value });\nexport class Colorizer {\n    static colorizeElement(themeService, languageService, domNode, options) {\n        options = options || {};\n        const theme = options.theme || 'vs';\n        const mimeType = options.mimeType || domNode.getAttribute('lang') || domNode.getAttribute('data-lang');\n        if (!mimeType) {\n            console.error('Mode not detected');\n            return Promise.resolve();\n        }\n        const languageId = languageService.getLanguageIdByMimeType(mimeType) || mimeType;\n        themeService.setTheme(theme);\n        const text = domNode.firstChild ? domNode.firstChild.nodeValue : '';\n        domNode.className += ' ' + theme;\n        const render = (str) => {\n            var _a;\n            const trustedhtml = (_a = ttPolicy === null || ttPolicy === void 0 ? void 0 : ttPolicy.createHTML(str)) !== null && _a !== void 0 ? _a : str;\n            domNode.innerHTML = trustedhtml;\n        };\n        return this.colorize(languageService, text || '', languageId, options).then(render, (err) => console.error(err));\n    }\n    static colorize(languageService, text, languageId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const languageIdCodec = languageService.languageIdCodec;\n            let tabSize = 4;\n            if (options && typeof options.tabSize === 'number') {\n                tabSize = options.tabSize;\n            }\n            if (strings.startsWithUTF8BOM(text)) {\n                text = text.substr(1);\n            }\n            const lines = strings.splitLines(text);\n            if (!languageService.isRegisteredLanguageId(languageId)) {\n                return _fakeColorize(lines, tabSize, languageIdCodec);\n            }\n            const tokenizationSupport = yield TokenizationRegistry.getOrCreate(languageId);\n            if (tokenizationSupport) {\n                return _colorize(lines, tabSize, tokenizationSupport, languageIdCodec);\n            }\n            return _fakeColorize(lines, tabSize, languageIdCodec);\n        });\n    }\n    static colorizeLine(line, mightContainNonBasicASCII, mightContainRTL, tokens, tabSize = 4) {\n        const isBasicASCII = ViewLineRenderingData.isBasicASCII(line, mightContainNonBasicASCII);\n        const containsRTL = ViewLineRenderingData.containsRTL(line, isBasicASCII, mightContainRTL);\n        const renderResult = renderViewLine(new RenderLineInput(false, true, line, false, isBasicASCII, containsRTL, 0, tokens, [], tabSize, 0, 0, 0, 0, -1, 'none', false, false, null));\n        return renderResult.html;\n    }\n    static colorizeModelLine(model, lineNumber, tabSize = 4) {\n        const content = model.getLineContent(lineNumber);\n        model.forceTokenization(lineNumber);\n        const tokens = model.getLineTokens(lineNumber);\n        const inflatedTokens = tokens.inflate();\n        return this.colorizeLine(content, model.mightContainNonBasicASCII(), model.mightContainRTL(), inflatedTokens, tabSize);\n    }\n}\nfunction _colorize(lines, tabSize, tokenizationSupport, languageIdCodec) {\n    return new Promise((c, e) => {\n        const execute = () => {\n            const result = _actualColorize(lines, tabSize, tokenizationSupport, languageIdCodec);\n            if (tokenizationSupport instanceof MonarchTokenizer) {\n                const status = tokenizationSupport.getLoadStatus();\n                if (status.loaded === false) {\n                    status.promise.then(execute, e);\n                    return;\n                }\n            }\n            c(result);\n        };\n        execute();\n    });\n}\nfunction _fakeColorize(lines, tabSize, languageIdCodec) {\n    let html = [];\n    const defaultMetadata = ((0 /* None */ << 10 /* FONT_STYLE_OFFSET */)\n        | (1 /* DefaultForeground */ << 14 /* FOREGROUND_OFFSET */)\n        | (2 /* DefaultBackground */ << 23 /* BACKGROUND_OFFSET */)) >>> 0;\n    const tokens = new Uint32Array(2);\n    tokens[0] = 0;\n    tokens[1] = defaultMetadata;\n    for (let i = 0, length = lines.length; i < length; i++) {\n        const line = lines[i];\n        tokens[0] = line.length;\n        const lineTokens = new LineTokens(tokens, line, languageIdCodec);\n        const isBasicASCII = ViewLineRenderingData.isBasicASCII(line, /* check for basic ASCII */ true);\n        const containsRTL = ViewLineRenderingData.containsRTL(line, isBasicASCII, /* check for RTL */ true);\n        const renderResult = renderViewLine(new RenderLineInput(false, true, line, false, isBasicASCII, containsRTL, 0, lineTokens, [], tabSize, 0, 0, 0, 0, -1, 'none', false, false, null));\n        html = html.concat(renderResult.html);\n        html.push('<br/>');\n    }\n    return html.join('');\n}\nfunction _actualColorize(lines, tabSize, tokenizationSupport, languageIdCodec) {\n    let html = [];\n    let state = tokenizationSupport.getInitialState();\n    for (let i = 0, length = lines.length; i < length; i++) {\n        const line = lines[i];\n        const tokenizeResult = tokenizationSupport.tokenizeEncoded(line, true, state);\n        LineTokens.convertToEndOffset(tokenizeResult.tokens, line.length);\n        const lineTokens = new LineTokens(tokenizeResult.tokens, line, languageIdCodec);\n        const isBasicASCII = ViewLineRenderingData.isBasicASCII(line, /* check for basic ASCII */ true);\n        const containsRTL = ViewLineRenderingData.containsRTL(line, isBasicASCII, /* check for RTL */ true);\n        const renderResult = renderViewLine(new RenderLineInput(false, true, line, false, isBasicASCII, containsRTL, 0, lineTokens.inflate(), [], tabSize, 0, 0, 0, 0, -1, 'none', false, false, null));\n        html = html.concat(renderResult.html);\n        html.push('<br/>');\n        state = tokenizeResult.endState;\n    }\n    return html.join('');\n}\n"]},"metadata":{},"sourceType":"module"}