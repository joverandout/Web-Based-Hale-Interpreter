{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { asArray } from '../../../../base/common/arrays.js';\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { isEmptyMarkdownString, MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { HoverProviderRegistry } from '../../../common/languages.js';\nimport { ILanguageService } from '../../../common/services/language.js';\nimport { getHover } from './getHover.js';\nimport * as nls from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nconst $ = dom.$;\nexport class MarkdownHover {\n  constructor(owner, range, contents, ordinal) {\n    this.owner = owner;\n    this.range = range;\n    this.contents = contents;\n    this.ordinal = ordinal;\n  }\n\n  isValidForHoverAnchor(anchor) {\n    return anchor.type === 1\n    /* Range */\n    && this.range.startColumn <= anchor.range.startColumn && this.range.endColumn >= anchor.range.endColumn;\n  }\n\n}\nlet MarkdownHoverParticipant = class MarkdownHoverParticipant {\n  constructor(_editor, _languageService, _openerService, _configurationService) {\n    this._editor = _editor;\n    this._languageService = _languageService;\n    this._openerService = _openerService;\n    this._configurationService = _configurationService;\n  }\n\n  createLoadingMessage(anchor) {\n    return new MarkdownHover(this, anchor.range, [new MarkdownString().appendText(nls.localize('modesContentHover.loading', \"Loading...\"))], 2000);\n  }\n\n  computeSync(anchor, lineDecorations) {\n    if (!this._editor.hasModel() || anchor.type !== 1\n    /* Range */\n    ) {\n      return [];\n    }\n\n    const model = this._editor.getModel();\n\n    const lineNumber = anchor.range.startLineNumber;\n    const maxColumn = model.getLineMaxColumn(lineNumber);\n    const result = [];\n    let index = 1000;\n    const lineLength = model.getLineLength(lineNumber);\n    const languageId = model.getLanguageIdAtPosition(anchor.range.startLineNumber, anchor.range.startColumn);\n\n    const maxTokenizationLineLength = this._configurationService.getValue('editor.maxTokenizationLineLength', {\n      overrideIdentifier: languageId\n    });\n\n    if (typeof maxTokenizationLineLength === 'number' && lineLength >= maxTokenizationLineLength) {\n      result.push(new MarkdownHover(this, anchor.range, [{\n        value: nls.localize('too many characters', \"Tokenization is skipped for long lines for performance reasons. This can be configured via `editor.maxTokenizationLineLength`.\")\n      }], index++));\n    }\n\n    for (const d of lineDecorations) {\n      const startColumn = d.range.startLineNumber === lineNumber ? d.range.startColumn : 1;\n      const endColumn = d.range.endLineNumber === lineNumber ? d.range.endColumn : maxColumn;\n      const hoverMessage = d.options.hoverMessage;\n\n      if (!hoverMessage || isEmptyMarkdownString(hoverMessage)) {\n        continue;\n      }\n\n      const range = new Range(anchor.range.startLineNumber, startColumn, anchor.range.startLineNumber, endColumn);\n      result.push(new MarkdownHover(this, range, asArray(hoverMessage), index++));\n    }\n\n    return result;\n  }\n\n  computeAsync(anchor, lineDecorations, token) {\n    if (!this._editor.hasModel() || anchor.type !== 1\n    /* Range */\n    ) {\n      return AsyncIterableObject.EMPTY;\n    }\n\n    const model = this._editor.getModel();\n\n    if (!HoverProviderRegistry.has(model)) {\n      return AsyncIterableObject.EMPTY;\n    }\n\n    const position = new Position(anchor.range.startLineNumber, anchor.range.startColumn);\n    return getHover(model, position, token).filter(item => !isEmptyMarkdownString(item.hover.contents)).map(item => {\n      const rng = item.hover.range ? Range.lift(item.hover.range) : anchor.range;\n      return new MarkdownHover(this, rng, item.hover.contents, item.ordinal);\n    });\n  }\n\n  renderHoverParts(context, hoverParts) {\n    return renderMarkdownHovers(context, hoverParts, this._editor, this._languageService, this._openerService);\n  }\n\n};\nMarkdownHoverParticipant = __decorate([__param(1, ILanguageService), __param(2, IOpenerService), __param(3, IConfigurationService)], MarkdownHoverParticipant);\nexport { MarkdownHoverParticipant };\nexport function renderMarkdownHovers(context, hoverParts, editor, languageService, openerService) {\n  // Sort hover parts to keep them stable since they might come in async, out-of-order\n  hoverParts.sort((a, b) => a.ordinal - b.ordinal);\n  const disposables = new DisposableStore();\n\n  for (const hoverPart of hoverParts) {\n    for (const contents of hoverPart.contents) {\n      if (isEmptyMarkdownString(contents)) {\n        continue;\n      }\n\n      const markdownHoverElement = $('div.hover-row.markdown-hover');\n      const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n      const renderer = disposables.add(new MarkdownRenderer({\n        editor\n      }, languageService, openerService));\n      disposables.add(renderer.onDidRenderAsync(() => {\n        hoverContentsElement.className = 'hover-contents code-hover-contents';\n        context.onContentsChanged();\n      }));\n      const renderedContents = disposables.add(renderer.render(contents));\n      hoverContentsElement.appendChild(renderedContents.element);\n      context.fragment.appendChild(markdownHoverElement);\n    }\n  }\n\n  return disposables;\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/markdownHoverParticipant.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","dom","asArray","AsyncIterableObject","isEmptyMarkdownString","MarkdownString","DisposableStore","MarkdownRenderer","Position","Range","HoverProviderRegistry","ILanguageService","getHover","nls","IConfigurationService","IOpenerService","$","MarkdownHover","constructor","owner","range","contents","ordinal","isValidForHoverAnchor","anchor","type","startColumn","endColumn","MarkdownHoverParticipant","_editor","_languageService","_openerService","_configurationService","createLoadingMessage","appendText","localize","computeSync","lineDecorations","hasModel","model","getModel","lineNumber","startLineNumber","maxColumn","getLineMaxColumn","result","index","lineLength","getLineLength","languageId","getLanguageIdAtPosition","maxTokenizationLineLength","getValue","overrideIdentifier","push","value","endLineNumber","hoverMessage","options","computeAsync","token","EMPTY","has","position","filter","item","hover","map","rng","lift","renderHoverParts","context","hoverParts","renderMarkdownHovers","editor","languageService","openerService","sort","a","b","disposables","hoverPart","markdownHoverElement","hoverContentsElement","append","renderer","add","onDidRenderAsync","className","onContentsChanged","renderedContents","render","appendChild","element","fragment"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { asArray } from '../../../../base/common/arrays.js';\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { isEmptyMarkdownString, MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { HoverProviderRegistry } from '../../../common/languages.js';\nimport { ILanguageService } from '../../../common/services/language.js';\nimport { getHover } from './getHover.js';\nimport * as nls from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nconst $ = dom.$;\nexport class MarkdownHover {\n    constructor(owner, range, contents, ordinal) {\n        this.owner = owner;\n        this.range = range;\n        this.contents = contents;\n        this.ordinal = ordinal;\n    }\n    isValidForHoverAnchor(anchor) {\n        return (anchor.type === 1 /* Range */\n            && this.range.startColumn <= anchor.range.startColumn\n            && this.range.endColumn >= anchor.range.endColumn);\n    }\n}\nlet MarkdownHoverParticipant = class MarkdownHoverParticipant {\n    constructor(_editor, _languageService, _openerService, _configurationService) {\n        this._editor = _editor;\n        this._languageService = _languageService;\n        this._openerService = _openerService;\n        this._configurationService = _configurationService;\n    }\n    createLoadingMessage(anchor) {\n        return new MarkdownHover(this, anchor.range, [new MarkdownString().appendText(nls.localize('modesContentHover.loading', \"Loading...\"))], 2000);\n    }\n    computeSync(anchor, lineDecorations) {\n        if (!this._editor.hasModel() || anchor.type !== 1 /* Range */) {\n            return [];\n        }\n        const model = this._editor.getModel();\n        const lineNumber = anchor.range.startLineNumber;\n        const maxColumn = model.getLineMaxColumn(lineNumber);\n        const result = [];\n        let index = 1000;\n        const lineLength = model.getLineLength(lineNumber);\n        const languageId = model.getLanguageIdAtPosition(anchor.range.startLineNumber, anchor.range.startColumn);\n        const maxTokenizationLineLength = this._configurationService.getValue('editor.maxTokenizationLineLength', {\n            overrideIdentifier: languageId\n        });\n        if (typeof maxTokenizationLineLength === 'number' && lineLength >= maxTokenizationLineLength) {\n            result.push(new MarkdownHover(this, anchor.range, [{\n                    value: nls.localize('too many characters', \"Tokenization is skipped for long lines for performance reasons. This can be configured via `editor.maxTokenizationLineLength`.\")\n                }], index++));\n        }\n        for (const d of lineDecorations) {\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n            const hoverMessage = d.options.hoverMessage;\n            if (!hoverMessage || isEmptyMarkdownString(hoverMessage)) {\n                continue;\n            }\n            const range = new Range(anchor.range.startLineNumber, startColumn, anchor.range.startLineNumber, endColumn);\n            result.push(new MarkdownHover(this, range, asArray(hoverMessage), index++));\n        }\n        return result;\n    }\n    computeAsync(anchor, lineDecorations, token) {\n        if (!this._editor.hasModel() || anchor.type !== 1 /* Range */) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const model = this._editor.getModel();\n        if (!HoverProviderRegistry.has(model)) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const position = new Position(anchor.range.startLineNumber, anchor.range.startColumn);\n        return getHover(model, position, token)\n            .filter(item => !isEmptyMarkdownString(item.hover.contents))\n            .map(item => {\n            const rng = item.hover.range ? Range.lift(item.hover.range) : anchor.range;\n            return new MarkdownHover(this, rng, item.hover.contents, item.ordinal);\n        });\n    }\n    renderHoverParts(context, hoverParts) {\n        return renderMarkdownHovers(context, hoverParts, this._editor, this._languageService, this._openerService);\n    }\n};\nMarkdownHoverParticipant = __decorate([\n    __param(1, ILanguageService),\n    __param(2, IOpenerService),\n    __param(3, IConfigurationService)\n], MarkdownHoverParticipant);\nexport { MarkdownHoverParticipant };\nexport function renderMarkdownHovers(context, hoverParts, editor, languageService, openerService) {\n    // Sort hover parts to keep them stable since they might come in async, out-of-order\n    hoverParts.sort((a, b) => a.ordinal - b.ordinal);\n    const disposables = new DisposableStore();\n    for (const hoverPart of hoverParts) {\n        for (const contents of hoverPart.contents) {\n            if (isEmptyMarkdownString(contents)) {\n                continue;\n            }\n            const markdownHoverElement = $('div.hover-row.markdown-hover');\n            const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n            const renderer = disposables.add(new MarkdownRenderer({ editor }, languageService, openerService));\n            disposables.add(renderer.onDidRenderAsync(() => {\n                hoverContentsElement.className = 'hover-contents code-hover-contents';\n                context.onContentsChanged();\n            }));\n            const renderedContents = disposables.add(renderer.render(contents));\n            hoverContentsElement.appendChild(renderedContents.element);\n            context.fragment.appendChild(markdownHoverElement);\n        }\n    }\n    return disposables;\n}\n"]},"metadata":{},"sourceType":"module"}