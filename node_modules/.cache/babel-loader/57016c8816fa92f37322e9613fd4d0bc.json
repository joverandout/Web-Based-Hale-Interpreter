{"ast":null,"code":"/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n// src/basic-languages/powerquery/powerquery.ts\nvar conf = {\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [[\"[\", \"]\"], [\"(\", \")\"], [\"{\", \"}\"]],\n  autoClosingPairs: [{\n    open: '\"',\n    close: '\"',\n    notIn: [\"string\", \"comment\", \"identifier\"]\n  }, {\n    open: \"[\",\n    close: \"]\",\n    notIn: [\"string\", \"comment\", \"identifier\"]\n  }, {\n    open: \"(\",\n    close: \")\",\n    notIn: [\"string\", \"comment\", \"identifier\"]\n  }, {\n    open: \"{\",\n    close: \"}\",\n    notIn: [\"string\", \"comment\", \"identifier\"]\n  }]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".pq\",\n  ignoreCase: false,\n  brackets: [{\n    open: \"[\",\n    close: \"]\",\n    token: \"delimiter.square\"\n  }, {\n    open: \"{\",\n    close: \"}\",\n    token: \"delimiter.brackets\"\n  }, {\n    open: \"(\",\n    close: \")\",\n    token: \"delimiter.parenthesis\"\n  }],\n  operatorKeywords: [\"and\", \"not\", \"or\"],\n  keywords: [\"as\", \"each\", \"else\", \"error\", \"false\", \"if\", \"in\", \"is\", \"let\", \"meta\", \"otherwise\", \"section\", \"shared\", \"then\", \"true\", \"try\", \"type\"],\n  constructors: [\"#binary\", \"#date\", \"#datetime\", \"#datetimezone\", \"#duration\", \"#table\", \"#time\"],\n  constants: [\"#infinity\", \"#nan\", \"#sections\", \"#shared\"],\n  typeKeywords: [\"action\", \"any\", \"anynonnull\", \"none\", \"null\", \"logical\", \"number\", \"time\", \"date\", \"datetime\", \"datetimezone\", \"duration\", \"text\", \"binary\", \"list\", \"record\", \"table\", \"function\"],\n  builtinFunctions: [\"Access.Database\", \"Action.Return\", \"Action.Sequence\", \"Action.Try\", \"ActiveDirectory.Domains\", \"AdoDotNet.DataSource\", \"AdoDotNet.Query\", \"AdobeAnalytics.Cubes\", \"AnalysisServices.Database\", \"AnalysisServices.Databases\", \"AzureStorage.BlobContents\", \"AzureStorage.Blobs\", \"AzureStorage.Tables\", \"Binary.Buffer\", \"Binary.Combine\", \"Binary.Compress\", \"Binary.Decompress\", \"Binary.End\", \"Binary.From\", \"Binary.FromList\", \"Binary.FromText\", \"Binary.InferContentType\", \"Binary.Length\", \"Binary.ToList\", \"Binary.ToText\", \"BinaryFormat.7BitEncodedSignedInteger\", \"BinaryFormat.7BitEncodedUnsignedInteger\", \"BinaryFormat.Binary\", \"BinaryFormat.Byte\", \"BinaryFormat.ByteOrder\", \"BinaryFormat.Choice\", \"BinaryFormat.Decimal\", \"BinaryFormat.Double\", \"BinaryFormat.Group\", \"BinaryFormat.Length\", \"BinaryFormat.List\", \"BinaryFormat.Null\", \"BinaryFormat.Record\", \"BinaryFormat.SignedInteger16\", \"BinaryFormat.SignedInteger32\", \"BinaryFormat.SignedInteger64\", \"BinaryFormat.Single\", \"BinaryFormat.Text\", \"BinaryFormat.Transform\", \"BinaryFormat.UnsignedInteger16\", \"BinaryFormat.UnsignedInteger32\", \"BinaryFormat.UnsignedInteger64\", \"Byte.From\", \"Character.FromNumber\", \"Character.ToNumber\", \"Combiner.CombineTextByDelimiter\", \"Combiner.CombineTextByEachDelimiter\", \"Combiner.CombineTextByLengths\", \"Combiner.CombineTextByPositions\", \"Combiner.CombineTextByRanges\", \"Comparer.Equals\", \"Comparer.FromCulture\", \"Comparer.Ordinal\", \"Comparer.OrdinalIgnoreCase\", \"Csv.Document\", \"Cube.AddAndExpandDimensionColumn\", \"Cube.AddMeasureColumn\", \"Cube.ApplyParameter\", \"Cube.AttributeMemberId\", \"Cube.AttributeMemberProperty\", \"Cube.CollapseAndRemoveColumns\", \"Cube.Dimensions\", \"Cube.DisplayFolders\", \"Cube.Measures\", \"Cube.Parameters\", \"Cube.Properties\", \"Cube.PropertyKey\", \"Cube.ReplaceDimensions\", \"Cube.Transform\", \"Currency.From\", \"DB2.Database\", \"Date.AddDays\", \"Date.AddMonths\", \"Date.AddQuarters\", \"Date.AddWeeks\", \"Date.AddYears\", \"Date.Day\", \"Date.DayOfWeek\", \"Date.DayOfWeekName\", \"Date.DayOfYear\", \"Date.DaysInMonth\", \"Date.EndOfDay\", \"Date.EndOfMonth\", \"Date.EndOfQuarter\", \"Date.EndOfWeek\", \"Date.EndOfYear\", \"Date.From\", \"Date.FromText\", \"Date.IsInCurrentDay\", \"Date.IsInCurrentMonth\", \"Date.IsInCurrentQuarter\", \"Date.IsInCurrentWeek\", \"Date.IsInCurrentYear\", \"Date.IsInNextDay\", \"Date.IsInNextMonth\", \"Date.IsInNextNDays\", \"Date.IsInNextNMonths\", \"Date.IsInNextNQuarters\", \"Date.IsInNextNWeeks\", \"Date.IsInNextNYears\", \"Date.IsInNextQuarter\", \"Date.IsInNextWeek\", \"Date.IsInNextYear\", \"Date.IsInPreviousDay\", \"Date.IsInPreviousMonth\", \"Date.IsInPreviousNDays\", \"Date.IsInPreviousNMonths\", \"Date.IsInPreviousNQuarters\", \"Date.IsInPreviousNWeeks\", \"Date.IsInPreviousNYears\", \"Date.IsInPreviousQuarter\", \"Date.IsInPreviousWeek\", \"Date.IsInPreviousYear\", \"Date.IsInYearToDate\", \"Date.IsLeapYear\", \"Date.Month\", \"Date.MonthName\", \"Date.QuarterOfYear\", \"Date.StartOfDay\", \"Date.StartOfMonth\", \"Date.StartOfQuarter\", \"Date.StartOfWeek\", \"Date.StartOfYear\", \"Date.ToRecord\", \"Date.ToText\", \"Date.WeekOfMonth\", \"Date.WeekOfYear\", \"Date.Year\", \"DateTime.AddZone\", \"DateTime.Date\", \"DateTime.FixedLocalNow\", \"DateTime.From\", \"DateTime.FromFileTime\", \"DateTime.FromText\", \"DateTime.IsInCurrentHour\", \"DateTime.IsInCurrentMinute\", \"DateTime.IsInCurrentSecond\", \"DateTime.IsInNextHour\", \"DateTime.IsInNextMinute\", \"DateTime.IsInNextNHours\", \"DateTime.IsInNextNMinutes\", \"DateTime.IsInNextNSeconds\", \"DateTime.IsInNextSecond\", \"DateTime.IsInPreviousHour\", \"DateTime.IsInPreviousMinute\", \"DateTime.IsInPreviousNHours\", \"DateTime.IsInPreviousNMinutes\", \"DateTime.IsInPreviousNSeconds\", \"DateTime.IsInPreviousSecond\", \"DateTime.LocalNow\", \"DateTime.Time\", \"DateTime.ToRecord\", \"DateTime.ToText\", \"DateTimeZone.FixedLocalNow\", \"DateTimeZone.FixedUtcNow\", \"DateTimeZone.From\", \"DateTimeZone.FromFileTime\", \"DateTimeZone.FromText\", \"DateTimeZone.LocalNow\", \"DateTimeZone.RemoveZone\", \"DateTimeZone.SwitchZone\", \"DateTimeZone.ToLocal\", \"DateTimeZone.ToRecord\", \"DateTimeZone.ToText\", \"DateTimeZone.ToUtc\", \"DateTimeZone.UtcNow\", \"DateTimeZone.ZoneHours\", \"DateTimeZone.ZoneMinutes\", \"Decimal.From\", \"Diagnostics.ActivityId\", \"Diagnostics.Trace\", \"DirectQueryCapabilities.From\", \"Double.From\", \"Duration.Days\", \"Duration.From\", \"Duration.FromText\", \"Duration.Hours\", \"Duration.Minutes\", \"Duration.Seconds\", \"Duration.ToRecord\", \"Duration.ToText\", \"Duration.TotalDays\", \"Duration.TotalHours\", \"Duration.TotalMinutes\", \"Duration.TotalSeconds\", \"Embedded.Value\", \"Error.Record\", \"Excel.CurrentWorkbook\", \"Excel.Workbook\", \"Exchange.Contents\", \"Expression.Constant\", \"Expression.Evaluate\", \"Expression.Identifier\", \"Facebook.Graph\", \"File.Contents\", \"Folder.Contents\", \"Folder.Files\", \"Function.From\", \"Function.Invoke\", \"Function.InvokeAfter\", \"Function.IsDataSource\", \"GoogleAnalytics.Accounts\", \"Guid.From\", \"HdInsight.Containers\", \"HdInsight.Contents\", \"HdInsight.Files\", \"Hdfs.Contents\", \"Hdfs.Files\", \"Informix.Database\", \"Int16.From\", \"Int32.From\", \"Int64.From\", \"Int8.From\", \"ItemExpression.From\", \"Json.Document\", \"Json.FromValue\", \"Lines.FromBinary\", \"Lines.FromText\", \"Lines.ToBinary\", \"Lines.ToText\", \"List.Accumulate\", \"List.AllTrue\", \"List.Alternate\", \"List.AnyTrue\", \"List.Average\", \"List.Buffer\", \"List.Combine\", \"List.Contains\", \"List.ContainsAll\", \"List.ContainsAny\", \"List.Count\", \"List.Covariance\", \"List.DateTimeZones\", \"List.DateTimes\", \"List.Dates\", \"List.Difference\", \"List.Distinct\", \"List.Durations\", \"List.FindText\", \"List.First\", \"List.FirstN\", \"List.Generate\", \"List.InsertRange\", \"List.Intersect\", \"List.IsDistinct\", \"List.IsEmpty\", \"List.Last\", \"List.LastN\", \"List.MatchesAll\", \"List.MatchesAny\", \"List.Max\", \"List.MaxN\", \"List.Median\", \"List.Min\", \"List.MinN\", \"List.Mode\", \"List.Modes\", \"List.NonNullCount\", \"List.Numbers\", \"List.PositionOf\", \"List.PositionOfAny\", \"List.Positions\", \"List.Product\", \"List.Random\", \"List.Range\", \"List.RemoveFirstN\", \"List.RemoveItems\", \"List.RemoveLastN\", \"List.RemoveMatchingItems\", \"List.RemoveNulls\", \"List.RemoveRange\", \"List.Repeat\", \"List.ReplaceMatchingItems\", \"List.ReplaceRange\", \"List.ReplaceValue\", \"List.Reverse\", \"List.Select\", \"List.Single\", \"List.SingleOrDefault\", \"List.Skip\", \"List.Sort\", \"List.StandardDeviation\", \"List.Sum\", \"List.Times\", \"List.Transform\", \"List.TransformMany\", \"List.Union\", \"List.Zip\", \"Logical.From\", \"Logical.FromText\", \"Logical.ToText\", \"MQ.Queue\", \"MySQL.Database\", \"Number.Abs\", \"Number.Acos\", \"Number.Asin\", \"Number.Atan\", \"Number.Atan2\", \"Number.BitwiseAnd\", \"Number.BitwiseNot\", \"Number.BitwiseOr\", \"Number.BitwiseShiftLeft\", \"Number.BitwiseShiftRight\", \"Number.BitwiseXor\", \"Number.Combinations\", \"Number.Cos\", \"Number.Cosh\", \"Number.Exp\", \"Number.Factorial\", \"Number.From\", \"Number.FromText\", \"Number.IntegerDivide\", \"Number.IsEven\", \"Number.IsNaN\", \"Number.IsOdd\", \"Number.Ln\", \"Number.Log\", \"Number.Log10\", \"Number.Mod\", \"Number.Permutations\", \"Number.Power\", \"Number.Random\", \"Number.RandomBetween\", \"Number.Round\", \"Number.RoundAwayFromZero\", \"Number.RoundDown\", \"Number.RoundTowardZero\", \"Number.RoundUp\", \"Number.Sign\", \"Number.Sin\", \"Number.Sinh\", \"Number.Sqrt\", \"Number.Tan\", \"Number.Tanh\", \"Number.ToText\", \"OData.Feed\", \"Odbc.DataSource\", \"Odbc.Query\", \"OleDb.DataSource\", \"OleDb.Query\", \"Oracle.Database\", \"Percentage.From\", \"PostgreSQL.Database\", \"RData.FromBinary\", \"Record.AddField\", \"Record.Combine\", \"Record.Field\", \"Record.FieldCount\", \"Record.FieldNames\", \"Record.FieldOrDefault\", \"Record.FieldValues\", \"Record.FromList\", \"Record.FromTable\", \"Record.HasFields\", \"Record.RemoveFields\", \"Record.RenameFields\", \"Record.ReorderFields\", \"Record.SelectFields\", \"Record.ToList\", \"Record.ToTable\", \"Record.TransformFields\", \"Replacer.ReplaceText\", \"Replacer.ReplaceValue\", \"RowExpression.Column\", \"RowExpression.From\", \"Salesforce.Data\", \"Salesforce.Reports\", \"SapBusinessWarehouse.Cubes\", \"SapHana.Database\", \"SharePoint.Contents\", \"SharePoint.Files\", \"SharePoint.Tables\", \"Single.From\", \"Soda.Feed\", \"Splitter.SplitByNothing\", \"Splitter.SplitTextByAnyDelimiter\", \"Splitter.SplitTextByDelimiter\", \"Splitter.SplitTextByEachDelimiter\", \"Splitter.SplitTextByLengths\", \"Splitter.SplitTextByPositions\", \"Splitter.SplitTextByRanges\", \"Splitter.SplitTextByRepeatedLengths\", \"Splitter.SplitTextByWhitespace\", \"Sql.Database\", \"Sql.Databases\", \"SqlExpression.SchemaFrom\", \"SqlExpression.ToExpression\", \"Sybase.Database\", \"Table.AddColumn\", \"Table.AddIndexColumn\", \"Table.AddJoinColumn\", \"Table.AddKey\", \"Table.AggregateTableColumn\", \"Table.AlternateRows\", \"Table.Buffer\", \"Table.Column\", \"Table.ColumnCount\", \"Table.ColumnNames\", \"Table.ColumnsOfType\", \"Table.Combine\", \"Table.CombineColumns\", \"Table.Contains\", \"Table.ContainsAll\", \"Table.ContainsAny\", \"Table.DemoteHeaders\", \"Table.Distinct\", \"Table.DuplicateColumn\", \"Table.ExpandListColumn\", \"Table.ExpandRecordColumn\", \"Table.ExpandTableColumn\", \"Table.FillDown\", \"Table.FillUp\", \"Table.FilterWithDataTable\", \"Table.FindText\", \"Table.First\", \"Table.FirstN\", \"Table.FirstValue\", \"Table.FromColumns\", \"Table.FromList\", \"Table.FromPartitions\", \"Table.FromRecords\", \"Table.FromRows\", \"Table.FromValue\", \"Table.Group\", \"Table.HasColumns\", \"Table.InsertRows\", \"Table.IsDistinct\", \"Table.IsEmpty\", \"Table.Join\", \"Table.Keys\", \"Table.Last\", \"Table.LastN\", \"Table.MatchesAllRows\", \"Table.MatchesAnyRows\", \"Table.Max\", \"Table.MaxN\", \"Table.Min\", \"Table.MinN\", \"Table.NestedJoin\", \"Table.Partition\", \"Table.PartitionValues\", \"Table.Pivot\", \"Table.PositionOf\", \"Table.PositionOfAny\", \"Table.PrefixColumns\", \"Table.Profile\", \"Table.PromoteHeaders\", \"Table.Range\", \"Table.RemoveColumns\", \"Table.RemoveFirstN\", \"Table.RemoveLastN\", \"Table.RemoveMatchingRows\", \"Table.RemoveRows\", \"Table.RemoveRowsWithErrors\", \"Table.RenameColumns\", \"Table.ReorderColumns\", \"Table.Repeat\", \"Table.ReplaceErrorValues\", \"Table.ReplaceKeys\", \"Table.ReplaceMatchingRows\", \"Table.ReplaceRelationshipIdentity\", \"Table.ReplaceRows\", \"Table.ReplaceValue\", \"Table.ReverseRows\", \"Table.RowCount\", \"Table.Schema\", \"Table.SelectColumns\", \"Table.SelectRows\", \"Table.SelectRowsWithErrors\", \"Table.SingleRow\", \"Table.Skip\", \"Table.Sort\", \"Table.SplitColumn\", \"Table.ToColumns\", \"Table.ToList\", \"Table.ToRecords\", \"Table.ToRows\", \"Table.TransformColumnNames\", \"Table.TransformColumnTypes\", \"Table.TransformColumns\", \"Table.TransformRows\", \"Table.Transpose\", \"Table.Unpivot\", \"Table.UnpivotOtherColumns\", \"Table.View\", \"Table.ViewFunction\", \"TableAction.DeleteRows\", \"TableAction.InsertRows\", \"TableAction.UpdateRows\", \"Tables.GetRelationships\", \"Teradata.Database\", \"Text.AfterDelimiter\", \"Text.At\", \"Text.BeforeDelimiter\", \"Text.BetweenDelimiters\", \"Text.Clean\", \"Text.Combine\", \"Text.Contains\", \"Text.End\", \"Text.EndsWith\", \"Text.Format\", \"Text.From\", \"Text.FromBinary\", \"Text.Insert\", \"Text.Length\", \"Text.Lower\", \"Text.Middle\", \"Text.NewGuid\", \"Text.PadEnd\", \"Text.PadStart\", \"Text.PositionOf\", \"Text.PositionOfAny\", \"Text.Proper\", \"Text.Range\", \"Text.Remove\", \"Text.RemoveRange\", \"Text.Repeat\", \"Text.Replace\", \"Text.ReplaceRange\", \"Text.Select\", \"Text.Split\", \"Text.SplitAny\", \"Text.Start\", \"Text.StartsWith\", \"Text.ToBinary\", \"Text.ToList\", \"Text.Trim\", \"Text.TrimEnd\", \"Text.TrimStart\", \"Text.Upper\", \"Time.EndOfHour\", \"Time.From\", \"Time.FromText\", \"Time.Hour\", \"Time.Minute\", \"Time.Second\", \"Time.StartOfHour\", \"Time.ToRecord\", \"Time.ToText\", \"Type.AddTableKey\", \"Type.ClosedRecord\", \"Type.Facets\", \"Type.ForFunction\", \"Type.ForRecord\", \"Type.FunctionParameters\", \"Type.FunctionRequiredParameters\", \"Type.FunctionReturn\", \"Type.Is\", \"Type.IsNullable\", \"Type.IsOpenRecord\", \"Type.ListItem\", \"Type.NonNullable\", \"Type.OpenRecord\", \"Type.RecordFields\", \"Type.ReplaceFacets\", \"Type.ReplaceTableKeys\", \"Type.TableColumn\", \"Type.TableKeys\", \"Type.TableRow\", \"Type.TableSchema\", \"Type.Union\", \"Uri.BuildQueryString\", \"Uri.Combine\", \"Uri.EscapeDataString\", \"Uri.Parts\", \"Value.Add\", \"Value.As\", \"Value.Compare\", \"Value.Divide\", \"Value.Equals\", \"Value.Firewall\", \"Value.FromText\", \"Value.Is\", \"Value.Metadata\", \"Value.Multiply\", \"Value.NativeQuery\", \"Value.NullableEquals\", \"Value.RemoveMetadata\", \"Value.ReplaceMetadata\", \"Value.ReplaceType\", \"Value.Subtract\", \"Value.Type\", \"ValueAction.NativeStatement\", \"ValueAction.Replace\", \"Variable.Value\", \"Web.Contents\", \"Web.Page\", \"WebAction.Request\", \"Xml.Document\", \"Xml.Tables\"],\n  builtinConstants: [\"BinaryEncoding.Base64\", \"BinaryEncoding.Hex\", \"BinaryOccurrence.Optional\", \"BinaryOccurrence.Repeating\", \"BinaryOccurrence.Required\", \"ByteOrder.BigEndian\", \"ByteOrder.LittleEndian\", \"Compression.Deflate\", \"Compression.GZip\", \"CsvStyle.QuoteAfterDelimiter\", \"CsvStyle.QuoteAlways\", \"Culture.Current\", \"Day.Friday\", \"Day.Monday\", \"Day.Saturday\", \"Day.Sunday\", \"Day.Thursday\", \"Day.Tuesday\", \"Day.Wednesday\", \"ExtraValues.Error\", \"ExtraValues.Ignore\", \"ExtraValues.List\", \"GroupKind.Global\", \"GroupKind.Local\", \"JoinAlgorithm.Dynamic\", \"JoinAlgorithm.LeftHash\", \"JoinAlgorithm.LeftIndex\", \"JoinAlgorithm.PairwiseHash\", \"JoinAlgorithm.RightHash\", \"JoinAlgorithm.RightIndex\", \"JoinAlgorithm.SortMerge\", \"JoinKind.FullOuter\", \"JoinKind.Inner\", \"JoinKind.LeftAnti\", \"JoinKind.LeftOuter\", \"JoinKind.RightAnti\", \"JoinKind.RightOuter\", \"JoinSide.Left\", \"JoinSide.Right\", \"MissingField.Error\", \"MissingField.Ignore\", \"MissingField.UseNull\", \"Number.E\", \"Number.Epsilon\", \"Number.NaN\", \"Number.NegativeInfinity\", \"Number.PI\", \"Number.PositiveInfinity\", \"Occurrence.All\", \"Occurrence.First\", \"Occurrence.Last\", \"Occurrence.Optional\", \"Occurrence.Repeating\", \"Occurrence.Required\", \"Order.Ascending\", \"Order.Descending\", \"Precision.Decimal\", \"Precision.Double\", \"QuoteStyle.Csv\", \"QuoteStyle.None\", \"RelativePosition.FromEnd\", \"RelativePosition.FromStart\", \"RoundingMode.AwayFromZero\", \"RoundingMode.Down\", \"RoundingMode.ToEven\", \"RoundingMode.TowardZero\", \"RoundingMode.Up\", \"SapHanaDistribution.All\", \"SapHanaDistribution.Connection\", \"SapHanaDistribution.Off\", \"SapHanaDistribution.Statement\", \"SapHanaRangeOperator.Equals\", \"SapHanaRangeOperator.GreaterThan\", \"SapHanaRangeOperator.GreaterThanOrEquals\", \"SapHanaRangeOperator.LessThan\", \"SapHanaRangeOperator.LessThanOrEquals\", \"SapHanaRangeOperator.NotEquals\", \"TextEncoding.Ascii\", \"TextEncoding.BigEndianUnicode\", \"TextEncoding.Unicode\", \"TextEncoding.Utf16\", \"TextEncoding.Utf8\", \"TextEncoding.Windows\", \"TraceLevel.Critical\", \"TraceLevel.Error\", \"TraceLevel.Information\", \"TraceLevel.Verbose\", \"TraceLevel.Warning\", \"WebMethod.Delete\", \"WebMethod.Get\", \"WebMethod.Head\", \"WebMethod.Patch\", \"WebMethod.Post\", \"WebMethod.Put\"],\n  builtinTypes: [\"Action.Type\", \"Any.Type\", \"Binary.Type\", \"BinaryEncoding.Type\", \"BinaryOccurrence.Type\", \"Byte.Type\", \"ByteOrder.Type\", \"Character.Type\", \"Compression.Type\", \"CsvStyle.Type\", \"Currency.Type\", \"Date.Type\", \"DateTime.Type\", \"DateTimeZone.Type\", \"Day.Type\", \"Decimal.Type\", \"Double.Type\", \"Duration.Type\", \"ExtraValues.Type\", \"Function.Type\", \"GroupKind.Type\", \"Guid.Type\", \"Int16.Type\", \"Int32.Type\", \"Int64.Type\", \"Int8.Type\", \"JoinAlgorithm.Type\", \"JoinKind.Type\", \"JoinSide.Type\", \"List.Type\", \"Logical.Type\", \"MissingField.Type\", \"None.Type\", \"Null.Type\", \"Number.Type\", \"Occurrence.Type\", \"Order.Type\", \"Password.Type\", \"Percentage.Type\", \"Precision.Type\", \"QuoteStyle.Type\", \"Record.Type\", \"RelativePosition.Type\", \"RoundingMode.Type\", \"SapHanaDistribution.Type\", \"SapHanaRangeOperator.Type\", \"Single.Type\", \"Table.Type\", \"Text.Type\", \"TextEncoding.Type\", \"Time.Type\", \"TraceLevel.Type\", \"Type.Type\", \"Uri.Type\", \"WebMethod.Type\"],\n  tokenizer: {\n    root: [[/#\"[\\w \\.]+\"/, \"identifier.quote\"], [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"], [/0[xX][0-9a-fA-F]+/, \"number.hex\"], [/\\d+([eE][\\-+]?\\d+)?/, \"number\"], [/(#?[a-z]+)\\b/, {\n      cases: {\n        \"@typeKeywords\": \"type\",\n        \"@keywords\": \"keyword\",\n        \"@constants\": \"constant\",\n        \"@constructors\": \"constructor\",\n        \"@operatorKeywords\": \"operators\",\n        \"@default\": \"identifier\"\n      }\n    }], [/\\b([A-Z][a-zA-Z0-9]+\\.Type)\\b/, {\n      cases: {\n        \"@builtinTypes\": \"type\",\n        \"@default\": \"identifier\"\n      }\n    }], [/\\b([A-Z][a-zA-Z0-9]+\\.[A-Z][a-zA-Z0-9]+)\\b/, {\n      cases: {\n        \"@builtinFunctions\": \"keyword.function\",\n        \"@builtinConstants\": \"constant\",\n        \"@default\": \"identifier\"\n      }\n    }], [/\\b([a-zA-Z_][\\w\\.]*)\\b/, \"identifier\"], {\n      include: \"@whitespace\"\n    }, {\n      include: \"@comments\"\n    }, {\n      include: \"@strings\"\n    }, [/[{}()\\[\\]]/, \"@brackets\"], [/([=\\+<>\\-\\*&@\\?\\/!])|([<>]=)|(<>)|(=>)|(\\.\\.\\.)|(\\.\\.)/, \"operators\"], [/[,;]/, \"delimiter\"]],\n    whitespace: [[/\\s+/, \"white\"]],\n    comments: [[\"\\\\/\\\\*\", \"comment\", \"@comment\"], [\"\\\\/\\\\/+.*\", \"comment\"]],\n    comment: [[\"\\\\*\\\\/\", \"comment\", \"@pop\"], [\".\", \"comment\"]],\n    strings: [['\"', \"string\", \"@string\"]],\n    string: [['\"\"', \"string.escape\"], ['\"', \"string\", \"@pop\"], [\".\", \"string\"]]\n  }\n};\nexport { conf, language };","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/basic-languages/powerquery/powerquery.js"],"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","language","defaultToken","tokenPostfix","ignoreCase","token","operatorKeywords","keywords","constructors","constants","typeKeywords","builtinFunctions","builtinConstants","builtinTypes","tokenizer","root","cases","include","whitespace","comment","strings","string"],"mappings":"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","sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/powerquery/powerquery.ts\nvar conf = {\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [\n    [\"[\", \"]\"],\n    [\"(\", \")\"],\n    [\"{\", \"}\"]\n  ],\n  autoClosingPairs: [\n    { open: '\"', close: '\"', notIn: [\"string\", \"comment\", \"identifier\"] },\n    { open: \"[\", close: \"]\", notIn: [\"string\", \"comment\", \"identifier\"] },\n    { open: \"(\", close: \")\", notIn: [\"string\", \"comment\", \"identifier\"] },\n    { open: \"{\", close: \"}\", notIn: [\"string\", \"comment\", \"identifier\"] }\n  ]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".pq\",\n  ignoreCase: false,\n  brackets: [\n    { open: \"[\", close: \"]\", token: \"delimiter.square\" },\n    { open: \"{\", close: \"}\", token: \"delimiter.brackets\" },\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" }\n  ],\n  operatorKeywords: [\"and\", \"not\", \"or\"],\n  keywords: [\n    \"as\",\n    \"each\",\n    \"else\",\n    \"error\",\n    \"false\",\n    \"if\",\n    \"in\",\n    \"is\",\n    \"let\",\n    \"meta\",\n    \"otherwise\",\n    \"section\",\n    \"shared\",\n    \"then\",\n    \"true\",\n    \"try\",\n    \"type\"\n  ],\n  constructors: [\"#binary\", \"#date\", \"#datetime\", \"#datetimezone\", \"#duration\", \"#table\", \"#time\"],\n  constants: [\"#infinity\", \"#nan\", \"#sections\", \"#shared\"],\n  typeKeywords: [\n    \"action\",\n    \"any\",\n    \"anynonnull\",\n    \"none\",\n    \"null\",\n    \"logical\",\n    \"number\",\n    \"time\",\n    \"date\",\n    \"datetime\",\n    \"datetimezone\",\n    \"duration\",\n    \"text\",\n    \"binary\",\n    \"list\",\n    \"record\",\n    \"table\",\n    \"function\"\n  ],\n  builtinFunctions: [\n    \"Access.Database\",\n    \"Action.Return\",\n    \"Action.Sequence\",\n    \"Action.Try\",\n    \"ActiveDirectory.Domains\",\n    \"AdoDotNet.DataSource\",\n    \"AdoDotNet.Query\",\n    \"AdobeAnalytics.Cubes\",\n    \"AnalysisServices.Database\",\n    \"AnalysisServices.Databases\",\n    \"AzureStorage.BlobContents\",\n    \"AzureStorage.Blobs\",\n    \"AzureStorage.Tables\",\n    \"Binary.Buffer\",\n    \"Binary.Combine\",\n    \"Binary.Compress\",\n    \"Binary.Decompress\",\n    \"Binary.End\",\n    \"Binary.From\",\n    \"Binary.FromList\",\n    \"Binary.FromText\",\n    \"Binary.InferContentType\",\n    \"Binary.Length\",\n    \"Binary.ToList\",\n    \"Binary.ToText\",\n    \"BinaryFormat.7BitEncodedSignedInteger\",\n    \"BinaryFormat.7BitEncodedUnsignedInteger\",\n    \"BinaryFormat.Binary\",\n    \"BinaryFormat.Byte\",\n    \"BinaryFormat.ByteOrder\",\n    \"BinaryFormat.Choice\",\n    \"BinaryFormat.Decimal\",\n    \"BinaryFormat.Double\",\n    \"BinaryFormat.Group\",\n    \"BinaryFormat.Length\",\n    \"BinaryFormat.List\",\n    \"BinaryFormat.Null\",\n    \"BinaryFormat.Record\",\n    \"BinaryFormat.SignedInteger16\",\n    \"BinaryFormat.SignedInteger32\",\n    \"BinaryFormat.SignedInteger64\",\n    \"BinaryFormat.Single\",\n    \"BinaryFormat.Text\",\n    \"BinaryFormat.Transform\",\n    \"BinaryFormat.UnsignedInteger16\",\n    \"BinaryFormat.UnsignedInteger32\",\n    \"BinaryFormat.UnsignedInteger64\",\n    \"Byte.From\",\n    \"Character.FromNumber\",\n    \"Character.ToNumber\",\n    \"Combiner.CombineTextByDelimiter\",\n    \"Combiner.CombineTextByEachDelimiter\",\n    \"Combiner.CombineTextByLengths\",\n    \"Combiner.CombineTextByPositions\",\n    \"Combiner.CombineTextByRanges\",\n    \"Comparer.Equals\",\n    \"Comparer.FromCulture\",\n    \"Comparer.Ordinal\",\n    \"Comparer.OrdinalIgnoreCase\",\n    \"Csv.Document\",\n    \"Cube.AddAndExpandDimensionColumn\",\n    \"Cube.AddMeasureColumn\",\n    \"Cube.ApplyParameter\",\n    \"Cube.AttributeMemberId\",\n    \"Cube.AttributeMemberProperty\",\n    \"Cube.CollapseAndRemoveColumns\",\n    \"Cube.Dimensions\",\n    \"Cube.DisplayFolders\",\n    \"Cube.Measures\",\n    \"Cube.Parameters\",\n    \"Cube.Properties\",\n    \"Cube.PropertyKey\",\n    \"Cube.ReplaceDimensions\",\n    \"Cube.Transform\",\n    \"Currency.From\",\n    \"DB2.Database\",\n    \"Date.AddDays\",\n    \"Date.AddMonths\",\n    \"Date.AddQuarters\",\n    \"Date.AddWeeks\",\n    \"Date.AddYears\",\n    \"Date.Day\",\n    \"Date.DayOfWeek\",\n    \"Date.DayOfWeekName\",\n    \"Date.DayOfYear\",\n    \"Date.DaysInMonth\",\n    \"Date.EndOfDay\",\n    \"Date.EndOfMonth\",\n    \"Date.EndOfQuarter\",\n    \"Date.EndOfWeek\",\n    \"Date.EndOfYear\",\n    \"Date.From\",\n    \"Date.FromText\",\n    \"Date.IsInCurrentDay\",\n    \"Date.IsInCurrentMonth\",\n    \"Date.IsInCurrentQuarter\",\n    \"Date.IsInCurrentWeek\",\n    \"Date.IsInCurrentYear\",\n    \"Date.IsInNextDay\",\n    \"Date.IsInNextMonth\",\n    \"Date.IsInNextNDays\",\n    \"Date.IsInNextNMonths\",\n    \"Date.IsInNextNQuarters\",\n    \"Date.IsInNextNWeeks\",\n    \"Date.IsInNextNYears\",\n    \"Date.IsInNextQuarter\",\n    \"Date.IsInNextWeek\",\n    \"Date.IsInNextYear\",\n    \"Date.IsInPreviousDay\",\n    \"Date.IsInPreviousMonth\",\n    \"Date.IsInPreviousNDays\",\n    \"Date.IsInPreviousNMonths\",\n    \"Date.IsInPreviousNQuarters\",\n    \"Date.IsInPreviousNWeeks\",\n    \"Date.IsInPreviousNYears\",\n    \"Date.IsInPreviousQuarter\",\n    \"Date.IsInPreviousWeek\",\n    \"Date.IsInPreviousYear\",\n    \"Date.IsInYearToDate\",\n    \"Date.IsLeapYear\",\n    \"Date.Month\",\n    \"Date.MonthName\",\n    \"Date.QuarterOfYear\",\n    \"Date.StartOfDay\",\n    \"Date.StartOfMonth\",\n    \"Date.StartOfQuarter\",\n    \"Date.StartOfWeek\",\n    \"Date.StartOfYear\",\n    \"Date.ToRecord\",\n    \"Date.ToText\",\n    \"Date.WeekOfMonth\",\n    \"Date.WeekOfYear\",\n    \"Date.Year\",\n    \"DateTime.AddZone\",\n    \"DateTime.Date\",\n    \"DateTime.FixedLocalNow\",\n    \"DateTime.From\",\n    \"DateTime.FromFileTime\",\n    \"DateTime.FromText\",\n    \"DateTime.IsInCurrentHour\",\n    \"DateTime.IsInCurrentMinute\",\n    \"DateTime.IsInCurrentSecond\",\n    \"DateTime.IsInNextHour\",\n    \"DateTime.IsInNextMinute\",\n    \"DateTime.IsInNextNHours\",\n    \"DateTime.IsInNextNMinutes\",\n    \"DateTime.IsInNextNSeconds\",\n    \"DateTime.IsInNextSecond\",\n    \"DateTime.IsInPreviousHour\",\n    \"DateTime.IsInPreviousMinute\",\n    \"DateTime.IsInPreviousNHours\",\n    \"DateTime.IsInPreviousNMinutes\",\n    \"DateTime.IsInPreviousNSeconds\",\n    \"DateTime.IsInPreviousSecond\",\n    \"DateTime.LocalNow\",\n    \"DateTime.Time\",\n    \"DateTime.ToRecord\",\n    \"DateTime.ToText\",\n    \"DateTimeZone.FixedLocalNow\",\n    \"DateTimeZone.FixedUtcNow\",\n    \"DateTimeZone.From\",\n    \"DateTimeZone.FromFileTime\",\n    \"DateTimeZone.FromText\",\n    \"DateTimeZone.LocalNow\",\n    \"DateTimeZone.RemoveZone\",\n    \"DateTimeZone.SwitchZone\",\n    \"DateTimeZone.ToLocal\",\n    \"DateTimeZone.ToRecord\",\n    \"DateTimeZone.ToText\",\n    \"DateTimeZone.ToUtc\",\n    \"DateTimeZone.UtcNow\",\n    \"DateTimeZone.ZoneHours\",\n    \"DateTimeZone.ZoneMinutes\",\n    \"Decimal.From\",\n    \"Diagnostics.ActivityId\",\n    \"Diagnostics.Trace\",\n    \"DirectQueryCapabilities.From\",\n    \"Double.From\",\n    \"Duration.Days\",\n    \"Duration.From\",\n    \"Duration.FromText\",\n    \"Duration.Hours\",\n    \"Duration.Minutes\",\n    \"Duration.Seconds\",\n    \"Duration.ToRecord\",\n    \"Duration.ToText\",\n    \"Duration.TotalDays\",\n    \"Duration.TotalHours\",\n    \"Duration.TotalMinutes\",\n    \"Duration.TotalSeconds\",\n    \"Embedded.Value\",\n    \"Error.Record\",\n    \"Excel.CurrentWorkbook\",\n    \"Excel.Workbook\",\n    \"Exchange.Contents\",\n    \"Expression.Constant\",\n    \"Expression.Evaluate\",\n    \"Expression.Identifier\",\n    \"Facebook.Graph\",\n    \"File.Contents\",\n    \"Folder.Contents\",\n    \"Folder.Files\",\n    \"Function.From\",\n    \"Function.Invoke\",\n    \"Function.InvokeAfter\",\n    \"Function.IsDataSource\",\n    \"GoogleAnalytics.Accounts\",\n    \"Guid.From\",\n    \"HdInsight.Containers\",\n    \"HdInsight.Contents\",\n    \"HdInsight.Files\",\n    \"Hdfs.Contents\",\n    \"Hdfs.Files\",\n    \"Informix.Database\",\n    \"Int16.From\",\n    \"Int32.From\",\n    \"Int64.From\",\n    \"Int8.From\",\n    \"ItemExpression.From\",\n    \"Json.Document\",\n    \"Json.FromValue\",\n    \"Lines.FromBinary\",\n    \"Lines.FromText\",\n    \"Lines.ToBinary\",\n    \"Lines.ToText\",\n    \"List.Accumulate\",\n    \"List.AllTrue\",\n    \"List.Alternate\",\n    \"List.AnyTrue\",\n    \"List.Average\",\n    \"List.Buffer\",\n    \"List.Combine\",\n    \"List.Contains\",\n    \"List.ContainsAll\",\n    \"List.ContainsAny\",\n    \"List.Count\",\n    \"List.Covariance\",\n    \"List.DateTimeZones\",\n    \"List.DateTimes\",\n    \"List.Dates\",\n    \"List.Difference\",\n    \"List.Distinct\",\n    \"List.Durations\",\n    \"List.FindText\",\n    \"List.First\",\n    \"List.FirstN\",\n    \"List.Generate\",\n    \"List.InsertRange\",\n    \"List.Intersect\",\n    \"List.IsDistinct\",\n    \"List.IsEmpty\",\n    \"List.Last\",\n    \"List.LastN\",\n    \"List.MatchesAll\",\n    \"List.MatchesAny\",\n    \"List.Max\",\n    \"List.MaxN\",\n    \"List.Median\",\n    \"List.Min\",\n    \"List.MinN\",\n    \"List.Mode\",\n    \"List.Modes\",\n    \"List.NonNullCount\",\n    \"List.Numbers\",\n    \"List.PositionOf\",\n    \"List.PositionOfAny\",\n    \"List.Positions\",\n    \"List.Product\",\n    \"List.Random\",\n    \"List.Range\",\n    \"List.RemoveFirstN\",\n    \"List.RemoveItems\",\n    \"List.RemoveLastN\",\n    \"List.RemoveMatchingItems\",\n    \"List.RemoveNulls\",\n    \"List.RemoveRange\",\n    \"List.Repeat\",\n    \"List.ReplaceMatchingItems\",\n    \"List.ReplaceRange\",\n    \"List.ReplaceValue\",\n    \"List.Reverse\",\n    \"List.Select\",\n    \"List.Single\",\n    \"List.SingleOrDefault\",\n    \"List.Skip\",\n    \"List.Sort\",\n    \"List.StandardDeviation\",\n    \"List.Sum\",\n    \"List.Times\",\n    \"List.Transform\",\n    \"List.TransformMany\",\n    \"List.Union\",\n    \"List.Zip\",\n    \"Logical.From\",\n    \"Logical.FromText\",\n    \"Logical.ToText\",\n    \"MQ.Queue\",\n    \"MySQL.Database\",\n    \"Number.Abs\",\n    \"Number.Acos\",\n    \"Number.Asin\",\n    \"Number.Atan\",\n    \"Number.Atan2\",\n    \"Number.BitwiseAnd\",\n    \"Number.BitwiseNot\",\n    \"Number.BitwiseOr\",\n    \"Number.BitwiseShiftLeft\",\n    \"Number.BitwiseShiftRight\",\n    \"Number.BitwiseXor\",\n    \"Number.Combinations\",\n    \"Number.Cos\",\n    \"Number.Cosh\",\n    \"Number.Exp\",\n    \"Number.Factorial\",\n    \"Number.From\",\n    \"Number.FromText\",\n    \"Number.IntegerDivide\",\n    \"Number.IsEven\",\n    \"Number.IsNaN\",\n    \"Number.IsOdd\",\n    \"Number.Ln\",\n    \"Number.Log\",\n    \"Number.Log10\",\n    \"Number.Mod\",\n    \"Number.Permutations\",\n    \"Number.Power\",\n    \"Number.Random\",\n    \"Number.RandomBetween\",\n    \"Number.Round\",\n    \"Number.RoundAwayFromZero\",\n    \"Number.RoundDown\",\n    \"Number.RoundTowardZero\",\n    \"Number.RoundUp\",\n    \"Number.Sign\",\n    \"Number.Sin\",\n    \"Number.Sinh\",\n    \"Number.Sqrt\",\n    \"Number.Tan\",\n    \"Number.Tanh\",\n    \"Number.ToText\",\n    \"OData.Feed\",\n    \"Odbc.DataSource\",\n    \"Odbc.Query\",\n    \"OleDb.DataSource\",\n    \"OleDb.Query\",\n    \"Oracle.Database\",\n    \"Percentage.From\",\n    \"PostgreSQL.Database\",\n    \"RData.FromBinary\",\n    \"Record.AddField\",\n    \"Record.Combine\",\n    \"Record.Field\",\n    \"Record.FieldCount\",\n    \"Record.FieldNames\",\n    \"Record.FieldOrDefault\",\n    \"Record.FieldValues\",\n    \"Record.FromList\",\n    \"Record.FromTable\",\n    \"Record.HasFields\",\n    \"Record.RemoveFields\",\n    \"Record.RenameFields\",\n    \"Record.ReorderFields\",\n    \"Record.SelectFields\",\n    \"Record.ToList\",\n    \"Record.ToTable\",\n    \"Record.TransformFields\",\n    \"Replacer.ReplaceText\",\n    \"Replacer.ReplaceValue\",\n    \"RowExpression.Column\",\n    \"RowExpression.From\",\n    \"Salesforce.Data\",\n    \"Salesforce.Reports\",\n    \"SapBusinessWarehouse.Cubes\",\n    \"SapHana.Database\",\n    \"SharePoint.Contents\",\n    \"SharePoint.Files\",\n    \"SharePoint.Tables\",\n    \"Single.From\",\n    \"Soda.Feed\",\n    \"Splitter.SplitByNothing\",\n    \"Splitter.SplitTextByAnyDelimiter\",\n    \"Splitter.SplitTextByDelimiter\",\n    \"Splitter.SplitTextByEachDelimiter\",\n    \"Splitter.SplitTextByLengths\",\n    \"Splitter.SplitTextByPositions\",\n    \"Splitter.SplitTextByRanges\",\n    \"Splitter.SplitTextByRepeatedLengths\",\n    \"Splitter.SplitTextByWhitespace\",\n    \"Sql.Database\",\n    \"Sql.Databases\",\n    \"SqlExpression.SchemaFrom\",\n    \"SqlExpression.ToExpression\",\n    \"Sybase.Database\",\n    \"Table.AddColumn\",\n    \"Table.AddIndexColumn\",\n    \"Table.AddJoinColumn\",\n    \"Table.AddKey\",\n    \"Table.AggregateTableColumn\",\n    \"Table.AlternateRows\",\n    \"Table.Buffer\",\n    \"Table.Column\",\n    \"Table.ColumnCount\",\n    \"Table.ColumnNames\",\n    \"Table.ColumnsOfType\",\n    \"Table.Combine\",\n    \"Table.CombineColumns\",\n    \"Table.Contains\",\n    \"Table.ContainsAll\",\n    \"Table.ContainsAny\",\n    \"Table.DemoteHeaders\",\n    \"Table.Distinct\",\n    \"Table.DuplicateColumn\",\n    \"Table.ExpandListColumn\",\n    \"Table.ExpandRecordColumn\",\n    \"Table.ExpandTableColumn\",\n    \"Table.FillDown\",\n    \"Table.FillUp\",\n    \"Table.FilterWithDataTable\",\n    \"Table.FindText\",\n    \"Table.First\",\n    \"Table.FirstN\",\n    \"Table.FirstValue\",\n    \"Table.FromColumns\",\n    \"Table.FromList\",\n    \"Table.FromPartitions\",\n    \"Table.FromRecords\",\n    \"Table.FromRows\",\n    \"Table.FromValue\",\n    \"Table.Group\",\n    \"Table.HasColumns\",\n    \"Table.InsertRows\",\n    \"Table.IsDistinct\",\n    \"Table.IsEmpty\",\n    \"Table.Join\",\n    \"Table.Keys\",\n    \"Table.Last\",\n    \"Table.LastN\",\n    \"Table.MatchesAllRows\",\n    \"Table.MatchesAnyRows\",\n    \"Table.Max\",\n    \"Table.MaxN\",\n    \"Table.Min\",\n    \"Table.MinN\",\n    \"Table.NestedJoin\",\n    \"Table.Partition\",\n    \"Table.PartitionValues\",\n    \"Table.Pivot\",\n    \"Table.PositionOf\",\n    \"Table.PositionOfAny\",\n    \"Table.PrefixColumns\",\n    \"Table.Profile\",\n    \"Table.PromoteHeaders\",\n    \"Table.Range\",\n    \"Table.RemoveColumns\",\n    \"Table.RemoveFirstN\",\n    \"Table.RemoveLastN\",\n    \"Table.RemoveMatchingRows\",\n    \"Table.RemoveRows\",\n    \"Table.RemoveRowsWithErrors\",\n    \"Table.RenameColumns\",\n    \"Table.ReorderColumns\",\n    \"Table.Repeat\",\n    \"Table.ReplaceErrorValues\",\n    \"Table.ReplaceKeys\",\n    \"Table.ReplaceMatchingRows\",\n    \"Table.ReplaceRelationshipIdentity\",\n    \"Table.ReplaceRows\",\n    \"Table.ReplaceValue\",\n    \"Table.ReverseRows\",\n    \"Table.RowCount\",\n    \"Table.Schema\",\n    \"Table.SelectColumns\",\n    \"Table.SelectRows\",\n    \"Table.SelectRowsWithErrors\",\n    \"Table.SingleRow\",\n    \"Table.Skip\",\n    \"Table.Sort\",\n    \"Table.SplitColumn\",\n    \"Table.ToColumns\",\n    \"Table.ToList\",\n    \"Table.ToRecords\",\n    \"Table.ToRows\",\n    \"Table.TransformColumnNames\",\n    \"Table.TransformColumnTypes\",\n    \"Table.TransformColumns\",\n    \"Table.TransformRows\",\n    \"Table.Transpose\",\n    \"Table.Unpivot\",\n    \"Table.UnpivotOtherColumns\",\n    \"Table.View\",\n    \"Table.ViewFunction\",\n    \"TableAction.DeleteRows\",\n    \"TableAction.InsertRows\",\n    \"TableAction.UpdateRows\",\n    \"Tables.GetRelationships\",\n    \"Teradata.Database\",\n    \"Text.AfterDelimiter\",\n    \"Text.At\",\n    \"Text.BeforeDelimiter\",\n    \"Text.BetweenDelimiters\",\n    \"Text.Clean\",\n    \"Text.Combine\",\n    \"Text.Contains\",\n    \"Text.End\",\n    \"Text.EndsWith\",\n    \"Text.Format\",\n    \"Text.From\",\n    \"Text.FromBinary\",\n    \"Text.Insert\",\n    \"Text.Length\",\n    \"Text.Lower\",\n    \"Text.Middle\",\n    \"Text.NewGuid\",\n    \"Text.PadEnd\",\n    \"Text.PadStart\",\n    \"Text.PositionOf\",\n    \"Text.PositionOfAny\",\n    \"Text.Proper\",\n    \"Text.Range\",\n    \"Text.Remove\",\n    \"Text.RemoveRange\",\n    \"Text.Repeat\",\n    \"Text.Replace\",\n    \"Text.ReplaceRange\",\n    \"Text.Select\",\n    \"Text.Split\",\n    \"Text.SplitAny\",\n    \"Text.Start\",\n    \"Text.StartsWith\",\n    \"Text.ToBinary\",\n    \"Text.ToList\",\n    \"Text.Trim\",\n    \"Text.TrimEnd\",\n    \"Text.TrimStart\",\n    \"Text.Upper\",\n    \"Time.EndOfHour\",\n    \"Time.From\",\n    \"Time.FromText\",\n    \"Time.Hour\",\n    \"Time.Minute\",\n    \"Time.Second\",\n    \"Time.StartOfHour\",\n    \"Time.ToRecord\",\n    \"Time.ToText\",\n    \"Type.AddTableKey\",\n    \"Type.ClosedRecord\",\n    \"Type.Facets\",\n    \"Type.ForFunction\",\n    \"Type.ForRecord\",\n    \"Type.FunctionParameters\",\n    \"Type.FunctionRequiredParameters\",\n    \"Type.FunctionReturn\",\n    \"Type.Is\",\n    \"Type.IsNullable\",\n    \"Type.IsOpenRecord\",\n    \"Type.ListItem\",\n    \"Type.NonNullable\",\n    \"Type.OpenRecord\",\n    \"Type.RecordFields\",\n    \"Type.ReplaceFacets\",\n    \"Type.ReplaceTableKeys\",\n    \"Type.TableColumn\",\n    \"Type.TableKeys\",\n    \"Type.TableRow\",\n    \"Type.TableSchema\",\n    \"Type.Union\",\n    \"Uri.BuildQueryString\",\n    \"Uri.Combine\",\n    \"Uri.EscapeDataString\",\n    \"Uri.Parts\",\n    \"Value.Add\",\n    \"Value.As\",\n    \"Value.Compare\",\n    \"Value.Divide\",\n    \"Value.Equals\",\n    \"Value.Firewall\",\n    \"Value.FromText\",\n    \"Value.Is\",\n    \"Value.Metadata\",\n    \"Value.Multiply\",\n    \"Value.NativeQuery\",\n    \"Value.NullableEquals\",\n    \"Value.RemoveMetadata\",\n    \"Value.ReplaceMetadata\",\n    \"Value.ReplaceType\",\n    \"Value.Subtract\",\n    \"Value.Type\",\n    \"ValueAction.NativeStatement\",\n    \"ValueAction.Replace\",\n    \"Variable.Value\",\n    \"Web.Contents\",\n    \"Web.Page\",\n    \"WebAction.Request\",\n    \"Xml.Document\",\n    \"Xml.Tables\"\n  ],\n  builtinConstants: [\n    \"BinaryEncoding.Base64\",\n    \"BinaryEncoding.Hex\",\n    \"BinaryOccurrence.Optional\",\n    \"BinaryOccurrence.Repeating\",\n    \"BinaryOccurrence.Required\",\n    \"ByteOrder.BigEndian\",\n    \"ByteOrder.LittleEndian\",\n    \"Compression.Deflate\",\n    \"Compression.GZip\",\n    \"CsvStyle.QuoteAfterDelimiter\",\n    \"CsvStyle.QuoteAlways\",\n    \"Culture.Current\",\n    \"Day.Friday\",\n    \"Day.Monday\",\n    \"Day.Saturday\",\n    \"Day.Sunday\",\n    \"Day.Thursday\",\n    \"Day.Tuesday\",\n    \"Day.Wednesday\",\n    \"ExtraValues.Error\",\n    \"ExtraValues.Ignore\",\n    \"ExtraValues.List\",\n    \"GroupKind.Global\",\n    \"GroupKind.Local\",\n    \"JoinAlgorithm.Dynamic\",\n    \"JoinAlgorithm.LeftHash\",\n    \"JoinAlgorithm.LeftIndex\",\n    \"JoinAlgorithm.PairwiseHash\",\n    \"JoinAlgorithm.RightHash\",\n    \"JoinAlgorithm.RightIndex\",\n    \"JoinAlgorithm.SortMerge\",\n    \"JoinKind.FullOuter\",\n    \"JoinKind.Inner\",\n    \"JoinKind.LeftAnti\",\n    \"JoinKind.LeftOuter\",\n    \"JoinKind.RightAnti\",\n    \"JoinKind.RightOuter\",\n    \"JoinSide.Left\",\n    \"JoinSide.Right\",\n    \"MissingField.Error\",\n    \"MissingField.Ignore\",\n    \"MissingField.UseNull\",\n    \"Number.E\",\n    \"Number.Epsilon\",\n    \"Number.NaN\",\n    \"Number.NegativeInfinity\",\n    \"Number.PI\",\n    \"Number.PositiveInfinity\",\n    \"Occurrence.All\",\n    \"Occurrence.First\",\n    \"Occurrence.Last\",\n    \"Occurrence.Optional\",\n    \"Occurrence.Repeating\",\n    \"Occurrence.Required\",\n    \"Order.Ascending\",\n    \"Order.Descending\",\n    \"Precision.Decimal\",\n    \"Precision.Double\",\n    \"QuoteStyle.Csv\",\n    \"QuoteStyle.None\",\n    \"RelativePosition.FromEnd\",\n    \"RelativePosition.FromStart\",\n    \"RoundingMode.AwayFromZero\",\n    \"RoundingMode.Down\",\n    \"RoundingMode.ToEven\",\n    \"RoundingMode.TowardZero\",\n    \"RoundingMode.Up\",\n    \"SapHanaDistribution.All\",\n    \"SapHanaDistribution.Connection\",\n    \"SapHanaDistribution.Off\",\n    \"SapHanaDistribution.Statement\",\n    \"SapHanaRangeOperator.Equals\",\n    \"SapHanaRangeOperator.GreaterThan\",\n    \"SapHanaRangeOperator.GreaterThanOrEquals\",\n    \"SapHanaRangeOperator.LessThan\",\n    \"SapHanaRangeOperator.LessThanOrEquals\",\n    \"SapHanaRangeOperator.NotEquals\",\n    \"TextEncoding.Ascii\",\n    \"TextEncoding.BigEndianUnicode\",\n    \"TextEncoding.Unicode\",\n    \"TextEncoding.Utf16\",\n    \"TextEncoding.Utf8\",\n    \"TextEncoding.Windows\",\n    \"TraceLevel.Critical\",\n    \"TraceLevel.Error\",\n    \"TraceLevel.Information\",\n    \"TraceLevel.Verbose\",\n    \"TraceLevel.Warning\",\n    \"WebMethod.Delete\",\n    \"WebMethod.Get\",\n    \"WebMethod.Head\",\n    \"WebMethod.Patch\",\n    \"WebMethod.Post\",\n    \"WebMethod.Put\"\n  ],\n  builtinTypes: [\n    \"Action.Type\",\n    \"Any.Type\",\n    \"Binary.Type\",\n    \"BinaryEncoding.Type\",\n    \"BinaryOccurrence.Type\",\n    \"Byte.Type\",\n    \"ByteOrder.Type\",\n    \"Character.Type\",\n    \"Compression.Type\",\n    \"CsvStyle.Type\",\n    \"Currency.Type\",\n    \"Date.Type\",\n    \"DateTime.Type\",\n    \"DateTimeZone.Type\",\n    \"Day.Type\",\n    \"Decimal.Type\",\n    \"Double.Type\",\n    \"Duration.Type\",\n    \"ExtraValues.Type\",\n    \"Function.Type\",\n    \"GroupKind.Type\",\n    \"Guid.Type\",\n    \"Int16.Type\",\n    \"Int32.Type\",\n    \"Int64.Type\",\n    \"Int8.Type\",\n    \"JoinAlgorithm.Type\",\n    \"JoinKind.Type\",\n    \"JoinSide.Type\",\n    \"List.Type\",\n    \"Logical.Type\",\n    \"MissingField.Type\",\n    \"None.Type\",\n    \"Null.Type\",\n    \"Number.Type\",\n    \"Occurrence.Type\",\n    \"Order.Type\",\n    \"Password.Type\",\n    \"Percentage.Type\",\n    \"Precision.Type\",\n    \"QuoteStyle.Type\",\n    \"Record.Type\",\n    \"RelativePosition.Type\",\n    \"RoundingMode.Type\",\n    \"SapHanaDistribution.Type\",\n    \"SapHanaRangeOperator.Type\",\n    \"Single.Type\",\n    \"Table.Type\",\n    \"Text.Type\",\n    \"TextEncoding.Type\",\n    \"Time.Type\",\n    \"TraceLevel.Type\",\n    \"Type.Type\",\n    \"Uri.Type\",\n    \"WebMethod.Type\"\n  ],\n  tokenizer: {\n    root: [\n      [/#\"[\\w \\.]+\"/, \"identifier.quote\"],\n      [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"],\n      [/0[xX][0-9a-fA-F]+/, \"number.hex\"],\n      [/\\d+([eE][\\-+]?\\d+)?/, \"number\"],\n      [\n        /(#?[a-z]+)\\b/,\n        {\n          cases: {\n            \"@typeKeywords\": \"type\",\n            \"@keywords\": \"keyword\",\n            \"@constants\": \"constant\",\n            \"@constructors\": \"constructor\",\n            \"@operatorKeywords\": \"operators\",\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      [\n        /\\b([A-Z][a-zA-Z0-9]+\\.Type)\\b/,\n        {\n          cases: {\n            \"@builtinTypes\": \"type\",\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      [\n        /\\b([A-Z][a-zA-Z0-9]+\\.[A-Z][a-zA-Z0-9]+)\\b/,\n        {\n          cases: {\n            \"@builtinFunctions\": \"keyword.function\",\n            \"@builtinConstants\": \"constant\",\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      [/\\b([a-zA-Z_][\\w\\.]*)\\b/, \"identifier\"],\n      { include: \"@whitespace\" },\n      { include: \"@comments\" },\n      { include: \"@strings\" },\n      [/[{}()\\[\\]]/, \"@brackets\"],\n      [/([=\\+<>\\-\\*&@\\?\\/!])|([<>]=)|(<>)|(=>)|(\\.\\.\\.)|(\\.\\.)/, \"operators\"],\n      [/[,;]/, \"delimiter\"]\n    ],\n    whitespace: [[/\\s+/, \"white\"]],\n    comments: [\n      [\"\\\\/\\\\*\", \"comment\", \"@comment\"],\n      [\"\\\\/\\\\/+.*\", \"comment\"]\n    ],\n    comment: [\n      [\"\\\\*\\\\/\", \"comment\", \"@pop\"],\n      [\".\", \"comment\"]\n    ],\n    strings: [['\"', \"string\", \"@string\"]],\n    string: [\n      ['\"\"', \"string.escape\"],\n      ['\"', \"string\", \"@pop\"],\n      [\".\", \"string\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"]},"metadata":{},"sourceType":"module"}