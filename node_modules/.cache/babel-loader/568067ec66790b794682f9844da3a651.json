{"ast":null,"code":"/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\n\nvar __reExport = (target, module, copyDefault, desc) => {\n  if (module && typeof module === \"object\" || typeof module === \"function\") {\n    for (let key of __getOwnPropNames(module)) if (!__hasOwnProp.call(target, key) && (copyDefault || key !== \"default\")) __defProp(target, key, {\n      get: () => module[key],\n      enumerable: !(desc = __getOwnPropDesc(module, key)) || desc.enumerable\n    });\n  }\n\n  return target;\n}; // src/fillers/monaco-editor-core.ts\n\n\nvar monaco_editor_core_exports = {};\n\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\n\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\"; // src/basic-languages/xml/xml.ts\n\nvar conf = {\n  comments: {\n    blockComment: [\"<!--\", \"-->\"]\n  },\n  brackets: [[\"<\", \">\"]],\n  autoClosingPairs: [{\n    open: \"<\",\n    close: \">\"\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }],\n  surroundingPairs: [{\n    open: \"<\",\n    close: \">\"\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }],\n  onEnterRules: [{\n    beforeText: new RegExp(`<([_:\\\\w][_:\\\\w-.\\\\d]*)([^/>]*(?!/)>)[^<]*$`, \"i\"),\n    afterText: /^<\\/([_:\\w][_:\\w-.\\d]*)\\s*>$/i,\n    action: {\n      indentAction: monaco_editor_core_exports.languages.IndentAction.IndentOutdent\n    }\n  }, {\n    beforeText: new RegExp(`<(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$`, \"i\"),\n    action: {\n      indentAction: monaco_editor_core_exports.languages.IndentAction.Indent\n    }\n  }]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".xml\",\n  ignoreCase: true,\n  qualifiedName: /(?:[\\w\\.\\-]+:)?[\\w\\.\\-]+/,\n  tokenizer: {\n    root: [[/[^<&]+/, \"\"], {\n      include: \"@whitespace\"\n    }, [/(<)(@qualifiedName)/, [{\n      token: \"delimiter\"\n    }, {\n      token: \"tag\",\n      next: \"@tag\"\n    }]], [/(<\\/)(@qualifiedName)(\\s*)(>)/, [{\n      token: \"delimiter\"\n    }, {\n      token: \"tag\"\n    }, \"\", {\n      token: \"delimiter\"\n    }]], [/(<\\?)(@qualifiedName)/, [{\n      token: \"delimiter\"\n    }, {\n      token: \"metatag\",\n      next: \"@tag\"\n    }]], [/(<\\!)(@qualifiedName)/, [{\n      token: \"delimiter\"\n    }, {\n      token: \"metatag\",\n      next: \"@tag\"\n    }]], [/<\\!\\[CDATA\\[/, {\n      token: \"delimiter.cdata\",\n      next: \"@cdata\"\n    }], [/&\\w+;/, \"string.escape\"]],\n    cdata: [[/[^\\]]+/, \"\"], [/\\]\\]>/, {\n      token: \"delimiter.cdata\",\n      next: \"@pop\"\n    }], [/\\]/, \"\"]],\n    tag: [[/[ \\t\\r\\n]+/, \"\"], [/(@qualifiedName)(\\s*=\\s*)(\"[^\"]*\"|'[^']*')/, [\"attribute.name\", \"\", \"attribute.value\"]], [/(@qualifiedName)(\\s*=\\s*)(\"[^\">?\\/]*|'[^'>?\\/]*)(?=[\\?\\/]\\>)/, [\"attribute.name\", \"\", \"attribute.value\"]], [/(@qualifiedName)(\\s*=\\s*)(\"[^\">]*|'[^'>]*)/, [\"attribute.name\", \"\", \"attribute.value\"]], [/@qualifiedName/, \"attribute.name\"], [/\\?>/, {\n      token: \"delimiter\",\n      next: \"@pop\"\n    }], [/(\\/)(>)/, [{\n      token: \"tag\"\n    }, {\n      token: \"delimiter\",\n      next: \"@pop\"\n    }]], [/>/, {\n      token: \"delimiter\",\n      next: \"@pop\"\n    }]],\n    whitespace: [[/[ \\t\\r\\n]+/, \"\"], [/<!--/, {\n      token: \"comment\",\n      next: \"@comment\"\n    }]],\n    comment: [[/[^<\\-]+/, \"comment.content\"], [/-->/, {\n      token: \"comment\",\n      next: \"@pop\"\n    }], [/<!--/, \"comment.content.invalid\"], [/[<\\-]/, \"comment.content\"]]\n  }\n};\nexport { conf, language };","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/basic-languages/xml/xml.js"],"names":["__defProp","Object","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","__reExport","target","module","copyDefault","desc","key","call","get","enumerable","monaco_editor_core_exports","monaco_editor_core_star","conf","comments","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","onEnterRules","beforeText","RegExp","afterText","action","indentAction","languages","IndentAction","IndentOutdent","Indent","language","defaultToken","tokenPostfix","ignoreCase","qualifiedName","tokenizer","root","include","token","next","cdata","tag","whitespace","comment"],"mappings":"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","sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __reExport = (target, module, copyDefault, desc) => {\n  if (module && typeof module === \"object\" || typeof module === \"function\") {\n    for (let key of __getOwnPropNames(module))\n      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== \"default\"))\n        __defProp(target, key, { get: () => module[key], enumerable: !(desc = __getOwnPropDesc(module, key)) || desc.enumerable });\n  }\n  return target;\n};\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\";\n\n// src/basic-languages/xml/xml.ts\nvar conf = {\n  comments: {\n    blockComment: [\"<!--\", \"-->\"]\n  },\n  brackets: [[\"<\", \">\"]],\n  autoClosingPairs: [\n    { open: \"<\", close: \">\" },\n    { open: \"'\", close: \"'\" },\n    { open: '\"', close: '\"' }\n  ],\n  surroundingPairs: [\n    { open: \"<\", close: \">\" },\n    { open: \"'\", close: \"'\" },\n    { open: '\"', close: '\"' }\n  ],\n  onEnterRules: [\n    {\n      beforeText: new RegExp(`<([_:\\\\w][_:\\\\w-.\\\\d]*)([^/>]*(?!/)>)[^<]*$`, \"i\"),\n      afterText: /^<\\/([_:\\w][_:\\w-.\\d]*)\\s*>$/i,\n      action: {\n        indentAction: monaco_editor_core_exports.languages.IndentAction.IndentOutdent\n      }\n    },\n    {\n      beforeText: new RegExp(`<(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$`, \"i\"),\n      action: { indentAction: monaco_editor_core_exports.languages.IndentAction.Indent }\n    }\n  ]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".xml\",\n  ignoreCase: true,\n  qualifiedName: /(?:[\\w\\.\\-]+:)?[\\w\\.\\-]+/,\n  tokenizer: {\n    root: [\n      [/[^<&]+/, \"\"],\n      { include: \"@whitespace\" },\n      [/(<)(@qualifiedName)/, [{ token: \"delimiter\" }, { token: \"tag\", next: \"@tag\" }]],\n      [\n        /(<\\/)(@qualifiedName)(\\s*)(>)/,\n        [{ token: \"delimiter\" }, { token: \"tag\" }, \"\", { token: \"delimiter\" }]\n      ],\n      [/(<\\?)(@qualifiedName)/, [{ token: \"delimiter\" }, { token: \"metatag\", next: \"@tag\" }]],\n      [/(<\\!)(@qualifiedName)/, [{ token: \"delimiter\" }, { token: \"metatag\", next: \"@tag\" }]],\n      [/<\\!\\[CDATA\\[/, { token: \"delimiter.cdata\", next: \"@cdata\" }],\n      [/&\\w+;/, \"string.escape\"]\n    ],\n    cdata: [\n      [/[^\\]]+/, \"\"],\n      [/\\]\\]>/, { token: \"delimiter.cdata\", next: \"@pop\" }],\n      [/\\]/, \"\"]\n    ],\n    tag: [\n      [/[ \\t\\r\\n]+/, \"\"],\n      [/(@qualifiedName)(\\s*=\\s*)(\"[^\"]*\"|'[^']*')/, [\"attribute.name\", \"\", \"attribute.value\"]],\n      [\n        /(@qualifiedName)(\\s*=\\s*)(\"[^\">?\\/]*|'[^'>?\\/]*)(?=[\\?\\/]\\>)/,\n        [\"attribute.name\", \"\", \"attribute.value\"]\n      ],\n      [/(@qualifiedName)(\\s*=\\s*)(\"[^\">]*|'[^'>]*)/, [\"attribute.name\", \"\", \"attribute.value\"]],\n      [/@qualifiedName/, \"attribute.name\"],\n      [/\\?>/, { token: \"delimiter\", next: \"@pop\" }],\n      [/(\\/)(>)/, [{ token: \"tag\" }, { token: \"delimiter\", next: \"@pop\" }]],\n      [/>/, { token: \"delimiter\", next: \"@pop\" }]\n    ],\n    whitespace: [\n      [/[ \\t\\r\\n]+/, \"\"],\n      [/<!--/, { token: \"comment\", next: \"@comment\" }]\n    ],\n    comment: [\n      [/[^<\\-]+/, \"comment.content\"],\n      [/-->/, { token: \"comment\", next: \"@pop\" }],\n      [/<!--/, \"comment.content.invalid\"],\n      [/[<\\-]/, \"comment.content\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"]},"metadata":{},"sourceType":"module"}