{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../browser/keyboardEvent.js';\nimport { StandardMouseEvent } from '../../../browser/mouseEvent.js';\nimport { InputBox } from '../../../browser/ui/inputbox/inputBox.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nimport Severity from '../../../common/severity.js';\nimport './media/quickInput.css';\nconst $ = dom.$;\nexport class QuickInputBox extends Disposable {\n  constructor(parent) {\n    super();\n    this.parent = parent;\n\n    this.onKeyDown = handler => {\n      return dom.addDisposableListener(this.inputBox.inputElement, dom.EventType.KEY_DOWN, e => {\n        handler(new StandardKeyboardEvent(e));\n      });\n    };\n\n    this.onMouseDown = handler => {\n      return dom.addDisposableListener(this.inputBox.inputElement, dom.EventType.MOUSE_DOWN, e => {\n        handler(new StandardMouseEvent(e));\n      });\n    };\n\n    this.onDidChange = handler => {\n      return this.inputBox.onDidChange(handler);\n    };\n\n    this.container = dom.append(this.parent, $('.quick-input-box'));\n    this.inputBox = this._register(new InputBox(this.container, undefined));\n  }\n\n  get value() {\n    return this.inputBox.value;\n  }\n\n  set value(value) {\n    this.inputBox.value = value;\n  }\n\n  select(range = null) {\n    this.inputBox.select(range);\n  }\n\n  isSelectionAtEnd() {\n    return this.inputBox.isSelectionAtEnd();\n  }\n\n  get placeholder() {\n    return this.inputBox.inputElement.getAttribute('placeholder') || '';\n  }\n\n  set placeholder(placeholder) {\n    this.inputBox.setPlaceHolder(placeholder);\n  }\n\n  get ariaLabel() {\n    return this.inputBox.getAriaLabel();\n  }\n\n  set ariaLabel(ariaLabel) {\n    this.inputBox.setAriaLabel(ariaLabel);\n  }\n\n  get password() {\n    return this.inputBox.inputElement.type === 'password';\n  }\n\n  set password(password) {\n    this.inputBox.inputElement.type = password ? 'password' : 'text';\n  }\n\n  setAttribute(name, value) {\n    this.inputBox.inputElement.setAttribute(name, value);\n  }\n\n  removeAttribute(name) {\n    this.inputBox.inputElement.removeAttribute(name);\n  }\n\n  showDecoration(decoration) {\n    if (decoration === Severity.Ignore) {\n      this.inputBox.hideMessage();\n    } else {\n      this.inputBox.showMessage({\n        type: decoration === Severity.Info ? 1\n        /* INFO */\n        : decoration === Severity.Warning ? 2\n        /* WARNING */\n        : 3\n        /* ERROR */\n        ,\n        content: ''\n      });\n    }\n  }\n\n  stylesForType(decoration) {\n    return this.inputBox.stylesForType(decoration === Severity.Info ? 1\n    /* INFO */\n    : decoration === Severity.Warning ? 2\n    /* WARNING */\n    : 3\n    /* ERROR */\n    );\n  }\n\n  setFocus() {\n    this.inputBox.focus();\n  }\n\n  layout() {\n    this.inputBox.layout();\n  }\n\n  style(styles) {\n    this.inputBox.style(styles);\n  }\n\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/base/parts/quickinput/browser/quickInputBox.js"],"names":["dom","StandardKeyboardEvent","StandardMouseEvent","InputBox","Disposable","Severity","$","QuickInputBox","constructor","parent","onKeyDown","handler","addDisposableListener","inputBox","inputElement","EventType","KEY_DOWN","e","onMouseDown","MOUSE_DOWN","onDidChange","container","append","_register","undefined","value","select","range","isSelectionAtEnd","placeholder","getAttribute","setPlaceHolder","ariaLabel","getAriaLabel","setAriaLabel","password","type","setAttribute","name","removeAttribute","showDecoration","decoration","Ignore","hideMessage","showMessage","Info","Warning","content","stylesForType","setFocus","focus","layout","style","styles"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../browser/keyboardEvent.js';\nimport { StandardMouseEvent } from '../../../browser/mouseEvent.js';\nimport { InputBox } from '../../../browser/ui/inputbox/inputBox.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nimport Severity from '../../../common/severity.js';\nimport './media/quickInput.css';\nconst $ = dom.$;\nexport class QuickInputBox extends Disposable {\n    constructor(parent) {\n        super();\n        this.parent = parent;\n        this.onKeyDown = (handler) => {\n            return dom.addDisposableListener(this.inputBox.inputElement, dom.EventType.KEY_DOWN, (e) => {\n                handler(new StandardKeyboardEvent(e));\n            });\n        };\n        this.onMouseDown = (handler) => {\n            return dom.addDisposableListener(this.inputBox.inputElement, dom.EventType.MOUSE_DOWN, (e) => {\n                handler(new StandardMouseEvent(e));\n            });\n        };\n        this.onDidChange = (handler) => {\n            return this.inputBox.onDidChange(handler);\n        };\n        this.container = dom.append(this.parent, $('.quick-input-box'));\n        this.inputBox = this._register(new InputBox(this.container, undefined));\n    }\n    get value() {\n        return this.inputBox.value;\n    }\n    set value(value) {\n        this.inputBox.value = value;\n    }\n    select(range = null) {\n        this.inputBox.select(range);\n    }\n    isSelectionAtEnd() {\n        return this.inputBox.isSelectionAtEnd();\n    }\n    get placeholder() {\n        return this.inputBox.inputElement.getAttribute('placeholder') || '';\n    }\n    set placeholder(placeholder) {\n        this.inputBox.setPlaceHolder(placeholder);\n    }\n    get ariaLabel() {\n        return this.inputBox.getAriaLabel();\n    }\n    set ariaLabel(ariaLabel) {\n        this.inputBox.setAriaLabel(ariaLabel);\n    }\n    get password() {\n        return this.inputBox.inputElement.type === 'password';\n    }\n    set password(password) {\n        this.inputBox.inputElement.type = password ? 'password' : 'text';\n    }\n    setAttribute(name, value) {\n        this.inputBox.inputElement.setAttribute(name, value);\n    }\n    removeAttribute(name) {\n        this.inputBox.inputElement.removeAttribute(name);\n    }\n    showDecoration(decoration) {\n        if (decoration === Severity.Ignore) {\n            this.inputBox.hideMessage();\n        }\n        else {\n            this.inputBox.showMessage({ type: decoration === Severity.Info ? 1 /* INFO */ : decoration === Severity.Warning ? 2 /* WARNING */ : 3 /* ERROR */, content: '' });\n        }\n    }\n    stylesForType(decoration) {\n        return this.inputBox.stylesForType(decoration === Severity.Info ? 1 /* INFO */ : decoration === Severity.Warning ? 2 /* WARNING */ : 3 /* ERROR */);\n    }\n    setFocus() {\n        this.inputBox.focus();\n    }\n    layout() {\n        this.inputBox.layout();\n    }\n    style(styles) {\n        this.inputBox.style(styles);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}