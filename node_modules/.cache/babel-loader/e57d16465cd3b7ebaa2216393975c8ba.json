{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, append } from '../../dom.js';\nimport { Color } from '../../../common/color.js';\nimport { mixin } from '../../../common/objects.js';\nimport { format } from '../../../common/strings.js';\nimport './countBadge.css';\nconst defaultOpts = {\n  badgeBackground: Color.fromHex('#4D4D4D'),\n  badgeForeground: Color.fromHex('#FFFFFF')\n};\nexport class CountBadge {\n  constructor(container, options) {\n    this.count = 0;\n    this.options = options || Object.create(null);\n    mixin(this.options, defaultOpts, false);\n    this.badgeBackground = this.options.badgeBackground;\n    this.badgeForeground = this.options.badgeForeground;\n    this.badgeBorder = this.options.badgeBorder;\n    this.element = append(container, $('.monaco-count-badge'));\n    this.countFormat = this.options.countFormat || '{0}';\n    this.titleFormat = this.options.titleFormat || '';\n    this.setCount(this.options.count || 0);\n  }\n\n  setCount(count) {\n    this.count = count;\n    this.render();\n  }\n\n  setTitleFormat(titleFormat) {\n    this.titleFormat = titleFormat;\n    this.render();\n  }\n\n  render() {\n    this.element.textContent = format(this.countFormat, this.count);\n    this.element.title = format(this.titleFormat, this.count);\n    this.applyStyles();\n  }\n\n  style(styles) {\n    this.badgeBackground = styles.badgeBackground;\n    this.badgeForeground = styles.badgeForeground;\n    this.badgeBorder = styles.badgeBorder;\n    this.applyStyles();\n  }\n\n  applyStyles() {\n    if (this.element) {\n      const background = this.badgeBackground ? this.badgeBackground.toString() : '';\n      const foreground = this.badgeForeground ? this.badgeForeground.toString() : '';\n      const border = this.badgeBorder ? this.badgeBorder.toString() : '';\n      this.element.style.backgroundColor = background;\n      this.element.style.color = foreground;\n      this.element.style.borderWidth = border ? '1px' : '';\n      this.element.style.borderStyle = border ? 'solid' : '';\n      this.element.style.borderColor = border;\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/base/browser/ui/countBadge/countBadge.js"],"names":["$","append","Color","mixin","format","defaultOpts","badgeBackground","fromHex","badgeForeground","CountBadge","constructor","container","options","count","Object","create","badgeBorder","element","countFormat","titleFormat","setCount","render","setTitleFormat","textContent","title","applyStyles","style","styles","background","toString","foreground","border","backgroundColor","color","borderWidth","borderStyle","borderColor"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, append } from '../../dom.js';\nimport { Color } from '../../../common/color.js';\nimport { mixin } from '../../../common/objects.js';\nimport { format } from '../../../common/strings.js';\nimport './countBadge.css';\nconst defaultOpts = {\n    badgeBackground: Color.fromHex('#4D4D4D'),\n    badgeForeground: Color.fromHex('#FFFFFF')\n};\nexport class CountBadge {\n    constructor(container, options) {\n        this.count = 0;\n        this.options = options || Object.create(null);\n        mixin(this.options, defaultOpts, false);\n        this.badgeBackground = this.options.badgeBackground;\n        this.badgeForeground = this.options.badgeForeground;\n        this.badgeBorder = this.options.badgeBorder;\n        this.element = append(container, $('.monaco-count-badge'));\n        this.countFormat = this.options.countFormat || '{0}';\n        this.titleFormat = this.options.titleFormat || '';\n        this.setCount(this.options.count || 0);\n    }\n    setCount(count) {\n        this.count = count;\n        this.render();\n    }\n    setTitleFormat(titleFormat) {\n        this.titleFormat = titleFormat;\n        this.render();\n    }\n    render() {\n        this.element.textContent = format(this.countFormat, this.count);\n        this.element.title = format(this.titleFormat, this.count);\n        this.applyStyles();\n    }\n    style(styles) {\n        this.badgeBackground = styles.badgeBackground;\n        this.badgeForeground = styles.badgeForeground;\n        this.badgeBorder = styles.badgeBorder;\n        this.applyStyles();\n    }\n    applyStyles() {\n        if (this.element) {\n            const background = this.badgeBackground ? this.badgeBackground.toString() : '';\n            const foreground = this.badgeForeground ? this.badgeForeground.toString() : '';\n            const border = this.badgeBorder ? this.badgeBorder.toString() : '';\n            this.element.style.backgroundColor = background;\n            this.element.style.color = foreground;\n            this.element.style.borderWidth = border ? '1px' : '';\n            this.element.style.borderStyle = border ? 'solid' : '';\n            this.element.style.borderColor = border;\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}