{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ColorDecorationInjectedTextMarker } from './colorDetector.js';\nimport { ModesHoverController } from '../../hover/browser/hover.js';\nexport class ColorContribution extends Disposable {\n  constructor(_editor) {\n    super();\n    this._editor = _editor;\n\n    this._register(_editor.onMouseDown(e => this.onMouseDown(e)));\n  }\n\n  dispose() {\n    super.dispose();\n  }\n\n  onMouseDown(mouseEvent) {\n    const target = mouseEvent.target;\n\n    if (target.type !== 6\n    /* CONTENT_TEXT */\n    ) {\n      return;\n    }\n\n    if (!target.detail.injectedText) {\n      return;\n    }\n\n    if (target.detail.injectedText.options.attachedData !== ColorDecorationInjectedTextMarker) {\n      return;\n    }\n\n    if (!target.range) {\n      return;\n    }\n\n    const hoverController = this._editor.getContribution(ModesHoverController.ID);\n\n    if (!hoverController) {\n      return;\n    }\n\n    if (!hoverController.isColorPickerVisible()) {\n      const range = new Range(target.range.startLineNumber, target.range.startColumn + 1, target.range.endLineNumber, target.range.endColumn + 1);\n      hoverController.showContentHover(range, 1\n      /* Immediate */\n      , false);\n    }\n  }\n\n}\nColorContribution.ID = 'editor.contrib.colorContribution'; // ms\n\nregisterEditorContribution(ColorContribution.ID, ColorContribution);","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/contrib/colorPicker/browser/colorContributions.js"],"names":["Disposable","registerEditorContribution","Range","ColorDecorationInjectedTextMarker","ModesHoverController","ColorContribution","constructor","_editor","_register","onMouseDown","e","dispose","mouseEvent","target","type","detail","injectedText","options","attachedData","range","hoverController","getContribution","ID","isColorPickerVisible","startLineNumber","startColumn","endLineNumber","endColumn","showContentHover"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,UAAT,QAA2B,sCAA3B;AACA,SAASC,0BAAT,QAA2C,sCAA3C;AACA,SAASC,KAAT,QAAsB,+BAAtB;AACA,SAASC,iCAAT,QAAkD,oBAAlD;AACA,SAASC,oBAAT,QAAqC,8BAArC;AACA,OAAO,MAAMC,iBAAN,SAAgCL,UAAhC,CAA2C;AAC9CM,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB;AACA,SAAKA,OAAL,GAAeA,OAAf;;AACA,SAAKC,SAAL,CAAeD,OAAO,CAACE,WAAR,CAAqBC,CAAD,IAAO,KAAKD,WAAL,CAAiBC,CAAjB,CAA3B,CAAf;AACH;;AACDC,EAAAA,OAAO,GAAG;AACN,UAAMA,OAAN;AACH;;AACDF,EAAAA,WAAW,CAACG,UAAD,EAAa;AACpB,UAAMC,MAAM,GAAGD,UAAU,CAACC,MAA1B;;AACA,QAAIA,MAAM,CAACC,IAAP,KAAgB;AAAE;AAAtB,MAA0C;AACtC;AACH;;AACD,QAAI,CAACD,MAAM,CAACE,MAAP,CAAcC,YAAnB,EAAiC;AAC7B;AACH;;AACD,QAAIH,MAAM,CAACE,MAAP,CAAcC,YAAd,CAA2BC,OAA3B,CAAmCC,YAAnC,KAAoDf,iCAAxD,EAA2F;AACvF;AACH;;AACD,QAAI,CAACU,MAAM,CAACM,KAAZ,EAAmB;AACf;AACH;;AACD,UAAMC,eAAe,GAAG,KAAKb,OAAL,CAAac,eAAb,CAA6BjB,oBAAoB,CAACkB,EAAlD,CAAxB;;AACA,QAAI,CAACF,eAAL,EAAsB;AAClB;AACH;;AACD,QAAI,CAACA,eAAe,CAACG,oBAAhB,EAAL,EAA6C;AACzC,YAAMJ,KAAK,GAAG,IAAIjB,KAAJ,CAAUW,MAAM,CAACM,KAAP,CAAaK,eAAvB,EAAwCX,MAAM,CAACM,KAAP,CAAaM,WAAb,GAA2B,CAAnE,EAAsEZ,MAAM,CAACM,KAAP,CAAaO,aAAnF,EAAkGb,MAAM,CAACM,KAAP,CAAaQ,SAAb,GAAyB,CAA3H,CAAd;AACAP,MAAAA,eAAe,CAACQ,gBAAhB,CAAiCT,KAAjC,EAAwC;AAAE;AAA1C,QAA2D,KAA3D;AACH;AACJ;;AA/B6C;AAiClDd,iBAAiB,CAACiB,EAAlB,GAAuB,kCAAvB,C,CAA2D;;AAC3DrB,0BAA0B,CAACI,iBAAiB,CAACiB,EAAnB,EAAuBjB,iBAAvB,CAA1B","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ColorDecorationInjectedTextMarker } from './colorDetector.js';\nimport { ModesHoverController } from '../../hover/browser/hover.js';\nexport class ColorContribution extends Disposable {\n    constructor(_editor) {\n        super();\n        this._editor = _editor;\n        this._register(_editor.onMouseDown((e) => this.onMouseDown(e)));\n    }\n    dispose() {\n        super.dispose();\n    }\n    onMouseDown(mouseEvent) {\n        const target = mouseEvent.target;\n        if (target.type !== 6 /* CONTENT_TEXT */) {\n            return;\n        }\n        if (!target.detail.injectedText) {\n            return;\n        }\n        if (target.detail.injectedText.options.attachedData !== ColorDecorationInjectedTextMarker) {\n            return;\n        }\n        if (!target.range) {\n            return;\n        }\n        const hoverController = this._editor.getContribution(ModesHoverController.ID);\n        if (!hoverController) {\n            return;\n        }\n        if (!hoverController.isColorPickerVisible()) {\n            const range = new Range(target.range.startLineNumber, target.range.startColumn + 1, target.range.endLineNumber, target.range.endColumn + 1);\n            hoverController.showContentHover(range, 1 /* Immediate */, false);\n        }\n    }\n}\nColorContribution.ID = 'editor.contrib.colorContribution'; // ms\nregisterEditorContribution(ColorContribution.ID, ColorContribution);\n"]},"metadata":{},"sourceType":"module"}