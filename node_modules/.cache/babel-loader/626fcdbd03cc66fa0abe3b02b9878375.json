{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { illegalArgument } from '../../../../base/common/errors.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ColorProviderRegistry } from '../../../common/languages.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nexport function getColors(model, token) {\n  const colors = [];\n  const providers = ColorProviderRegistry.ordered(model).reverse();\n  const promises = providers.map(provider => Promise.resolve(provider.provideDocumentColors(model, token)).then(result => {\n    if (Array.isArray(result)) {\n      for (let colorInfo of result) {\n        colors.push({\n          colorInfo,\n          provider\n        });\n      }\n    }\n  }));\n  return Promise.all(promises).then(() => colors);\n}\nexport function getColorPresentations(model, colorInfo, provider, token) {\n  return Promise.resolve(provider.provideColorPresentations(model, colorInfo, token));\n}\nCommandsRegistry.registerCommand('_executeDocumentColorProvider', function (accessor, ...args) {\n  const [resource] = args;\n\n  if (!(resource instanceof URI)) {\n    throw illegalArgument();\n  }\n\n  const model = accessor.get(IModelService).getModel(resource);\n\n  if (!model) {\n    throw illegalArgument();\n  }\n\n  const rawCIs = [];\n  const providers = ColorProviderRegistry.ordered(model).reverse();\n  const promises = providers.map(provider => Promise.resolve(provider.provideDocumentColors(model, CancellationToken.None)).then(result => {\n    if (Array.isArray(result)) {\n      for (let ci of result) {\n        rawCIs.push({\n          range: ci.range,\n          color: [ci.color.red, ci.color.green, ci.color.blue, ci.color.alpha]\n        });\n      }\n    }\n  }));\n  return Promise.all(promises).then(() => rawCIs);\n});\nCommandsRegistry.registerCommand('_executeColorPresentationProvider', function (accessor, ...args) {\n  const [color, context] = args;\n  const {\n    uri,\n    range\n  } = context;\n\n  if (!(uri instanceof URI) || !Array.isArray(color) || color.length !== 4 || !Range.isIRange(range)) {\n    throw illegalArgument();\n  }\n\n  const [red, green, blue, alpha] = color;\n  const model = accessor.get(IModelService).getModel(uri);\n\n  if (!model) {\n    throw illegalArgument();\n  }\n\n  const colorInfo = {\n    range,\n    color: {\n      red,\n      green,\n      blue,\n      alpha\n    }\n  };\n  const presentations = [];\n  const providers = ColorProviderRegistry.ordered(model).reverse();\n  const promises = providers.map(provider => Promise.resolve(provider.provideColorPresentations(model, colorInfo, CancellationToken.None)).then(result => {\n    if (Array.isArray(result)) {\n      presentations.push(...result);\n    }\n  }));\n  return Promise.all(promises).then(() => presentations);\n});","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/contrib/colorPicker/browser/color.js"],"names":["CancellationToken","illegalArgument","URI","Range","ColorProviderRegistry","IModelService","CommandsRegistry","getColors","model","token","colors","providers","ordered","reverse","promises","map","provider","Promise","resolve","provideDocumentColors","then","result","Array","isArray","colorInfo","push","all","getColorPresentations","provideColorPresentations","registerCommand","accessor","args","resource","get","getModel","rawCIs","None","ci","range","color","red","green","blue","alpha","context","uri","length","isIRange","presentations"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { illegalArgument } from '../../../../base/common/errors.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ColorProviderRegistry } from '../../../common/languages.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nexport function getColors(model, token) {\n    const colors = [];\n    const providers = ColorProviderRegistry.ordered(model).reverse();\n    const promises = providers.map(provider => Promise.resolve(provider.provideDocumentColors(model, token)).then(result => {\n        if (Array.isArray(result)) {\n            for (let colorInfo of result) {\n                colors.push({ colorInfo, provider });\n            }\n        }\n    }));\n    return Promise.all(promises).then(() => colors);\n}\nexport function getColorPresentations(model, colorInfo, provider, token) {\n    return Promise.resolve(provider.provideColorPresentations(model, colorInfo, token));\n}\nCommandsRegistry.registerCommand('_executeDocumentColorProvider', function (accessor, ...args) {\n    const [resource] = args;\n    if (!(resource instanceof URI)) {\n        throw illegalArgument();\n    }\n    const model = accessor.get(IModelService).getModel(resource);\n    if (!model) {\n        throw illegalArgument();\n    }\n    const rawCIs = [];\n    const providers = ColorProviderRegistry.ordered(model).reverse();\n    const promises = providers.map(provider => Promise.resolve(provider.provideDocumentColors(model, CancellationToken.None)).then(result => {\n        if (Array.isArray(result)) {\n            for (let ci of result) {\n                rawCIs.push({ range: ci.range, color: [ci.color.red, ci.color.green, ci.color.blue, ci.color.alpha] });\n            }\n        }\n    }));\n    return Promise.all(promises).then(() => rawCIs);\n});\nCommandsRegistry.registerCommand('_executeColorPresentationProvider', function (accessor, ...args) {\n    const [color, context] = args;\n    const { uri, range } = context;\n    if (!(uri instanceof URI) || !Array.isArray(color) || color.length !== 4 || !Range.isIRange(range)) {\n        throw illegalArgument();\n    }\n    const [red, green, blue, alpha] = color;\n    const model = accessor.get(IModelService).getModel(uri);\n    if (!model) {\n        throw illegalArgument();\n    }\n    const colorInfo = {\n        range,\n        color: { red, green, blue, alpha }\n    };\n    const presentations = [];\n    const providers = ColorProviderRegistry.ordered(model).reverse();\n    const promises = providers.map(provider => Promise.resolve(provider.provideColorPresentations(model, colorInfo, CancellationToken.None)).then(result => {\n        if (Array.isArray(result)) {\n            presentations.push(...result);\n        }\n    }));\n    return Promise.all(promises).then(() => presentations);\n});\n"]},"metadata":{},"sourceType":"module"}