{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { CursorMoveCommands } from '../../../common/cursor/cursorMoveCommands.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport * as nls from '../../../../nls.js';\nexport class ExpandLineSelectionAction extends EditorAction {\n  constructor() {\n    super({\n      id: 'expandLineSelection',\n      label: nls.localize('expandLineSelection', \"Expand Line Selection\"),\n      alias: 'Expand Line Selection',\n      precondition: undefined,\n      kbOpts: {\n        weight: 0\n        /* EditorCore */\n        ,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2048\n        /* CtrlCmd */\n        | 42\n        /* KeyL */\n\n      }\n    });\n  }\n\n  run(_accessor, editor, args) {\n    args = args || {};\n\n    if (!editor.hasModel()) {\n      return;\n    }\n\n    const viewModel = editor._getViewModel();\n\n    viewModel.model.pushStackElement();\n    viewModel.setCursorStates(args.source, 3\n    /* Explicit */\n    , CursorMoveCommands.expandLineSelection(viewModel, viewModel.getCursorStates()));\n    viewModel.revealPrimaryCursor(args.source, true);\n  }\n\n}\nregisterEditorAction(ExpandLineSelectionAction);","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/contrib/lineSelection/browser/lineSelection.js"],"names":["EditorAction","registerEditorAction","CursorMoveCommands","EditorContextKeys","nls","ExpandLineSelectionAction","constructor","id","label","localize","alias","precondition","undefined","kbOpts","weight","kbExpr","textInputFocus","primary","run","_accessor","editor","args","hasModel","viewModel","_getViewModel","model","pushStackElement","setCursorStates","source","expandLineSelection","getCursorStates","revealPrimaryCursor"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,YAAT,EAAuBC,oBAAvB,QAAmD,sCAAnD;AACA,SAASC,kBAAT,QAAmC,8CAAnC;AACA,SAASC,iBAAT,QAAkC,sCAAlC;AACA,OAAO,KAAKC,GAAZ,MAAqB,oBAArB;AACA,OAAO,MAAMC,yBAAN,SAAwCL,YAAxC,CAAqD;AACxDM,EAAAA,WAAW,GAAG;AACV,UAAM;AACFC,MAAAA,EAAE,EAAE,qBADF;AAEFC,MAAAA,KAAK,EAAEJ,GAAG,CAACK,QAAJ,CAAa,qBAAb,EAAoC,uBAApC,CAFL;AAGFC,MAAAA,KAAK,EAAE,uBAHL;AAIFC,MAAAA,YAAY,EAAEC,SAJZ;AAKFC,MAAAA,MAAM,EAAE;AACJC,QAAAA,MAAM,EAAE;AAAE;AADN;AAEJC,QAAAA,MAAM,EAAEZ,iBAAiB,CAACa,cAFtB;AAGJC,QAAAA,OAAO,EAAE;AAAK;AAAL,UAAqB;AAAG;;AAH7B;AALN,KAAN;AAWH;;AACDC,EAAAA,GAAG,CAACC,SAAD,EAAYC,MAAZ,EAAoBC,IAApB,EAA0B;AACzBA,IAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;;AACA,QAAI,CAACD,MAAM,CAACE,QAAP,EAAL,EAAwB;AACpB;AACH;;AACD,UAAMC,SAAS,GAAGH,MAAM,CAACI,aAAP,EAAlB;;AACAD,IAAAA,SAAS,CAACE,KAAV,CAAgBC,gBAAhB;AACAH,IAAAA,SAAS,CAACI,eAAV,CAA0BN,IAAI,CAACO,MAA/B,EAAuC;AAAE;AAAzC,MAAyD1B,kBAAkB,CAAC2B,mBAAnB,CAAuCN,SAAvC,EAAkDA,SAAS,CAACO,eAAV,EAAlD,CAAzD;AACAP,IAAAA,SAAS,CAACQ,mBAAV,CAA8BV,IAAI,CAACO,MAAnC,EAA2C,IAA3C;AACH;;AAvBuD;AAyB5D3B,oBAAoB,CAACI,yBAAD,CAApB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { CursorMoveCommands } from '../../../common/cursor/cursorMoveCommands.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport * as nls from '../../../../nls.js';\nexport class ExpandLineSelectionAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'expandLineSelection',\n            label: nls.localize('expandLineSelection', \"Expand Line Selection\"),\n            alias: 'Expand Line Selection',\n            precondition: undefined,\n            kbOpts: {\n                weight: 0 /* EditorCore */,\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 2048 /* CtrlCmd */ | 42 /* KeyL */\n            },\n        });\n    }\n    run(_accessor, editor, args) {\n        args = args || {};\n        if (!editor.hasModel()) {\n            return;\n        }\n        const viewModel = editor._getViewModel();\n        viewModel.model.pushStackElement();\n        viewModel.setCursorStates(args.source, 3 /* Explicit */, CursorMoveCommands.expandLineSelection(viewModel, viewModel.getCursorStates()));\n        viewModel.revealPrimaryCursor(args.source, true);\n    }\n}\nregisterEditorAction(ExpandLineSelectionAction);\n"]},"metadata":{},"sourceType":"module"}