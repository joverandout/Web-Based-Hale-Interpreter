{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { MoveCaretCommand } from './moveCaretCommand.js';\nimport * as nls from '../../../../nls.js';\n\nclass MoveCaretAction extends EditorAction {\n  constructor(left, opts) {\n    super(opts);\n    this.left = left;\n  }\n\n  run(accessor, editor) {\n    if (!editor.hasModel()) {\n      return;\n    }\n\n    const commands = [];\n    const selections = editor.getSelections();\n\n    for (const selection of selections) {\n      commands.push(new MoveCaretCommand(selection, this.left));\n    }\n\n    editor.pushUndoStop();\n    editor.executeCommands(this.id, commands);\n    editor.pushUndoStop();\n  }\n\n}\n\nclass MoveCaretLeftAction extends MoveCaretAction {\n  constructor() {\n    super(true, {\n      id: 'editor.action.moveCarretLeftAction',\n      label: nls.localize('caret.moveLeft', \"Move Selected Text Left\"),\n      alias: 'Move Selected Text Left',\n      precondition: EditorContextKeys.writable\n    });\n  }\n\n}\n\nclass MoveCaretRightAction extends MoveCaretAction {\n  constructor() {\n    super(false, {\n      id: 'editor.action.moveCarretRightAction',\n      label: nls.localize('caret.moveRight', \"Move Selected Text Right\"),\n      alias: 'Move Selected Text Right',\n      precondition: EditorContextKeys.writable\n    });\n  }\n\n}\n\nregisterEditorAction(MoveCaretLeftAction);\nregisterEditorAction(MoveCaretRightAction);","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/contrib/caretOperations/browser/caretOperations.js"],"names":["EditorAction","registerEditorAction","EditorContextKeys","MoveCaretCommand","nls","MoveCaretAction","constructor","left","opts","run","accessor","editor","hasModel","commands","selections","getSelections","selection","push","pushUndoStop","executeCommands","id","MoveCaretLeftAction","label","localize","alias","precondition","writable","MoveCaretRightAction"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,YAAT,EAAuBC,oBAAvB,QAAmD,sCAAnD;AACA,SAASC,iBAAT,QAAkC,sCAAlC;AACA,SAASC,gBAAT,QAAiC,uBAAjC;AACA,OAAO,KAAKC,GAAZ,MAAqB,oBAArB;;AACA,MAAMC,eAAN,SAA8BL,YAA9B,CAA2C;AACvCM,EAAAA,WAAW,CAACC,IAAD,EAAOC,IAAP,EAAa;AACpB,UAAMA,IAAN;AACA,SAAKD,IAAL,GAAYA,IAAZ;AACH;;AACDE,EAAAA,GAAG,CAACC,QAAD,EAAWC,MAAX,EAAmB;AAClB,QAAI,CAACA,MAAM,CAACC,QAAP,EAAL,EAAwB;AACpB;AACH;;AACD,UAAMC,QAAQ,GAAG,EAAjB;AACA,UAAMC,UAAU,GAAGH,MAAM,CAACI,aAAP,EAAnB;;AACA,SAAK,MAAMC,SAAX,IAAwBF,UAAxB,EAAoC;AAChCD,MAAAA,QAAQ,CAACI,IAAT,CAAc,IAAId,gBAAJ,CAAqBa,SAArB,EAAgC,KAAKT,IAArC,CAAd;AACH;;AACDI,IAAAA,MAAM,CAACO,YAAP;AACAP,IAAAA,MAAM,CAACQ,eAAP,CAAuB,KAAKC,EAA5B,EAAgCP,QAAhC;AACAF,IAAAA,MAAM,CAACO,YAAP;AACH;;AAjBsC;;AAmB3C,MAAMG,mBAAN,SAAkChB,eAAlC,CAAkD;AAC9CC,EAAAA,WAAW,GAAG;AACV,UAAM,IAAN,EAAY;AACRc,MAAAA,EAAE,EAAE,oCADI;AAERE,MAAAA,KAAK,EAAElB,GAAG,CAACmB,QAAJ,CAAa,gBAAb,EAA+B,yBAA/B,CAFC;AAGRC,MAAAA,KAAK,EAAE,yBAHC;AAIRC,MAAAA,YAAY,EAAEvB,iBAAiB,CAACwB;AAJxB,KAAZ;AAMH;;AAR6C;;AAUlD,MAAMC,oBAAN,SAAmCtB,eAAnC,CAAmD;AAC/CC,EAAAA,WAAW,GAAG;AACV,UAAM,KAAN,EAAa;AACTc,MAAAA,EAAE,EAAE,qCADK;AAETE,MAAAA,KAAK,EAAElB,GAAG,CAACmB,QAAJ,CAAa,iBAAb,EAAgC,0BAAhC,CAFE;AAGTC,MAAAA,KAAK,EAAE,0BAHE;AAITC,MAAAA,YAAY,EAAEvB,iBAAiB,CAACwB;AAJvB,KAAb;AAMH;;AAR8C;;AAUnDzB,oBAAoB,CAACoB,mBAAD,CAApB;AACApB,oBAAoB,CAAC0B,oBAAD,CAApB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { MoveCaretCommand } from './moveCaretCommand.js';\nimport * as nls from '../../../../nls.js';\nclass MoveCaretAction extends EditorAction {\n    constructor(left, opts) {\n        super(opts);\n        this.left = left;\n    }\n    run(accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const commands = [];\n        const selections = editor.getSelections();\n        for (const selection of selections) {\n            commands.push(new MoveCaretCommand(selection, this.left));\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nclass MoveCaretLeftAction extends MoveCaretAction {\n    constructor() {\n        super(true, {\n            id: 'editor.action.moveCarretLeftAction',\n            label: nls.localize('caret.moveLeft', \"Move Selected Text Left\"),\n            alias: 'Move Selected Text Left',\n            precondition: EditorContextKeys.writable\n        });\n    }\n}\nclass MoveCaretRightAction extends MoveCaretAction {\n    constructor() {\n        super(false, {\n            id: 'editor.action.moveCarretRightAction',\n            label: nls.localize('caret.moveRight', \"Move Selected Text Right\"),\n            alias: 'Move Selected Text Right',\n            precondition: EditorContextKeys.writable\n        });\n    }\n}\nregisterEditorAction(MoveCaretLeftAction);\nregisterEditorAction(MoveCaretRightAction);\n"]},"metadata":{},"sourceType":"module"}