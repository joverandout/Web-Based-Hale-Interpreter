{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport { createCancelablePromise } from '../../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../../base/common/errors.js';\nimport { MarkdownString } from '../../../../../base/common/htmlContent.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { withNullAsUndefined } from '../../../../../base/common/types.js';\nimport './goToDefinitionAtPosition.css';\nimport { EditorState } from '../../../editorState/browser/editorState.js';\nimport { registerEditorContribution } from '../../../../browser/editorExtensions.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { DefinitionProviderRegistry } from '../../../../common/languages.js';\nimport { ILanguageService } from '../../../../common/services/language.js';\nimport { ITextModelService } from '../../../../common/services/resolverService.js';\nimport { ClickLinkGesture } from './clickLinkGesture.js';\nimport { PeekContext } from '../../../peekView/browser/peekView.js';\nimport * as nls from '../../../../../nls.js';\nimport { IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { editorActiveLinkForeground } from '../../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../../platform/theme/common/themeService.js';\nimport { DefinitionAction } from '../goToCommands.js';\nimport { getDefinitionsAtPosition } from '../goToSymbol.js';\nlet GotoDefinitionAtPositionEditorContribution = class GotoDefinitionAtPositionEditorContribution {\n  constructor(editor, textModelResolverService, languageService) {\n    this.textModelResolverService = textModelResolverService;\n    this.languageService = languageService;\n    this.toUnhook = new DisposableStore();\n    this.toUnhookForKeyboard = new DisposableStore();\n    this.linkDecorations = [];\n    this.currentWordAtPosition = null;\n    this.previousPromise = null;\n    this.editor = editor;\n    let linkGesture = new ClickLinkGesture(editor);\n    this.toUnhook.add(linkGesture);\n    this.toUnhook.add(linkGesture.onMouseMoveOrRelevantKeyDown(([mouseEvent, keyboardEvent]) => {\n      this.startFindDefinitionFromMouse(mouseEvent, withNullAsUndefined(keyboardEvent));\n    }));\n    this.toUnhook.add(linkGesture.onExecute(mouseEvent => {\n      if (this.isEnabled(mouseEvent)) {\n        this.gotoDefinition(mouseEvent.target.position, mouseEvent.hasSideBySideModifier).then(() => {\n          this.removeLinkDecorations();\n        }, error => {\n          this.removeLinkDecorations();\n          onUnexpectedError(error);\n        });\n      }\n    }));\n    this.toUnhook.add(linkGesture.onCancel(() => {\n      this.removeLinkDecorations();\n      this.currentWordAtPosition = null;\n    }));\n  }\n\n  static get(editor) {\n    return editor.getContribution(GotoDefinitionAtPositionEditorContribution.ID);\n  }\n\n  startFindDefinitionFromCursor(position) {\n    // For issue: https://github.com/microsoft/vscode/issues/46257\n    // equivalent to mouse move with meta/ctrl key\n    // First find the definition and add decorations\n    // to the editor to be shown with the content hover widget\n    return this.startFindDefinition(position).then(() => {\n      // Add listeners for editor cursor move and key down events\n      // Dismiss the \"extended\" editor decorations when the user hides\n      // the hover widget. There is no event for the widget itself so these\n      // serve as a best effort. After removing the link decorations, the hover\n      // widget is clean and will only show declarations per next request.\n      this.toUnhookForKeyboard.add(this.editor.onDidChangeCursorPosition(() => {\n        this.currentWordAtPosition = null;\n        this.removeLinkDecorations();\n        this.toUnhookForKeyboard.clear();\n      }));\n      this.toUnhookForKeyboard.add(this.editor.onKeyDown(e => {\n        if (e) {\n          this.currentWordAtPosition = null;\n          this.removeLinkDecorations();\n          this.toUnhookForKeyboard.clear();\n        }\n      }));\n    });\n  }\n\n  startFindDefinitionFromMouse(mouseEvent, withKey) {\n    // check if we are active and on a content widget\n    if (mouseEvent.target.type === 9\n    /* CONTENT_WIDGET */\n    && this.linkDecorations.length > 0) {\n      return;\n    }\n\n    if (!this.editor.hasModel() || !this.isEnabled(mouseEvent, withKey)) {\n      this.currentWordAtPosition = null;\n      this.removeLinkDecorations();\n      return;\n    }\n\n    const position = mouseEvent.target.position;\n    this.startFindDefinition(position);\n  }\n\n  startFindDefinition(position) {\n    var _a; // Dispose listeners for updating decorations when using keyboard to show definition hover\n\n\n    this.toUnhookForKeyboard.clear(); // Find word at mouse position\n\n    const word = position ? (_a = this.editor.getModel()) === null || _a === void 0 ? void 0 : _a.getWordAtPosition(position) : null;\n\n    if (!word) {\n      this.currentWordAtPosition = null;\n      this.removeLinkDecorations();\n      return Promise.resolve(0);\n    } // Return early if word at position is still the same\n\n\n    if (this.currentWordAtPosition && this.currentWordAtPosition.startColumn === word.startColumn && this.currentWordAtPosition.endColumn === word.endColumn && this.currentWordAtPosition.word === word.word) {\n      return Promise.resolve(0);\n    }\n\n    this.currentWordAtPosition = word; // Find definition and decorate word if found\n\n    let state = new EditorState(this.editor, 4\n    /* Position */\n    | 1\n    /* Value */\n    | 2\n    /* Selection */\n    | 8\n    /* Scroll */\n    );\n\n    if (this.previousPromise) {\n      this.previousPromise.cancel();\n      this.previousPromise = null;\n    }\n\n    this.previousPromise = createCancelablePromise(token => this.findDefinition(position, token));\n    return this.previousPromise.then(results => {\n      if (!results || !results.length || !state.validate(this.editor)) {\n        this.removeLinkDecorations();\n        return;\n      } // Multiple results\n\n\n      if (results.length > 1) {\n        this.addDecoration(new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn), new MarkdownString().appendText(nls.localize('multipleResults', \"Click to show {0} definitions.\", results.length)));\n      } // Single result\n      else {\n        let result = results[0];\n\n        if (!result.uri) {\n          return;\n        }\n\n        this.textModelResolverService.createModelReference(result.uri).then(ref => {\n          if (!ref.object || !ref.object.textEditorModel) {\n            ref.dispose();\n            return;\n          }\n\n          const {\n            object: {\n              textEditorModel\n            }\n          } = ref;\n          const {\n            startLineNumber\n          } = result.range;\n\n          if (startLineNumber < 1 || startLineNumber > textEditorModel.getLineCount()) {\n            // invalid range\n            ref.dispose();\n            return;\n          }\n\n          const previewValue = this.getPreviewValue(textEditorModel, startLineNumber, result);\n          let wordRange;\n\n          if (result.originSelectionRange) {\n            wordRange = Range.lift(result.originSelectionRange);\n          } else {\n            wordRange = new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn);\n          }\n\n          const languageId = this.languageService.guessLanguageIdByFilepathOrFirstLine(textEditorModel.uri);\n          this.addDecoration(wordRange, new MarkdownString().appendCodeblock(languageId ? languageId : '', previewValue));\n          ref.dispose();\n        });\n      }\n    }).then(undefined, onUnexpectedError);\n  }\n\n  getPreviewValue(textEditorModel, startLineNumber, result) {\n    let rangeToUse = result.targetSelectionRange ? result.range : this.getPreviewRangeBasedOnBrackets(textEditorModel, startLineNumber);\n    const numberOfLinesInRange = rangeToUse.endLineNumber - rangeToUse.startLineNumber;\n\n    if (numberOfLinesInRange >= GotoDefinitionAtPositionEditorContribution.MAX_SOURCE_PREVIEW_LINES) {\n      rangeToUse = this.getPreviewRangeBasedOnIndentation(textEditorModel, startLineNumber);\n    }\n\n    const previewValue = this.stripIndentationFromPreviewRange(textEditorModel, startLineNumber, rangeToUse);\n    return previewValue;\n  }\n\n  stripIndentationFromPreviewRange(textEditorModel, startLineNumber, previewRange) {\n    const startIndent = textEditorModel.getLineFirstNonWhitespaceColumn(startLineNumber);\n    let minIndent = startIndent;\n\n    for (let endLineNumber = startLineNumber + 1; endLineNumber < previewRange.endLineNumber; endLineNumber++) {\n      const endIndent = textEditorModel.getLineFirstNonWhitespaceColumn(endLineNumber);\n      minIndent = Math.min(minIndent, endIndent);\n    }\n\n    const previewValue = textEditorModel.getValueInRange(previewRange).replace(new RegExp(`^\\\\s{${minIndent - 1}}`, 'gm'), '').trim();\n    return previewValue;\n  }\n\n  getPreviewRangeBasedOnIndentation(textEditorModel, startLineNumber) {\n    const startIndent = textEditorModel.getLineFirstNonWhitespaceColumn(startLineNumber);\n    const maxLineNumber = Math.min(textEditorModel.getLineCount(), startLineNumber + GotoDefinitionAtPositionEditorContribution.MAX_SOURCE_PREVIEW_LINES);\n    let endLineNumber = startLineNumber + 1;\n\n    for (; endLineNumber < maxLineNumber; endLineNumber++) {\n      let endIndent = textEditorModel.getLineFirstNonWhitespaceColumn(endLineNumber);\n\n      if (startIndent === endIndent) {\n        break;\n      }\n    }\n\n    return new Range(startLineNumber, 1, endLineNumber + 1, 1);\n  }\n\n  getPreviewRangeBasedOnBrackets(textEditorModel, startLineNumber) {\n    const maxLineNumber = Math.min(textEditorModel.getLineCount(), startLineNumber + GotoDefinitionAtPositionEditorContribution.MAX_SOURCE_PREVIEW_LINES);\n    const brackets = [];\n    let ignoreFirstEmpty = true;\n    let currentBracket = textEditorModel.bracketPairs.findNextBracket(new Position(startLineNumber, 1));\n\n    while (currentBracket !== null) {\n      if (brackets.length === 0) {\n        brackets.push(currentBracket);\n      } else {\n        const lastBracket = brackets[brackets.length - 1];\n\n        if (lastBracket.open[0] === currentBracket.open[0] && lastBracket.isOpen && !currentBracket.isOpen) {\n          brackets.pop();\n        } else {\n          brackets.push(currentBracket);\n        }\n\n        if (brackets.length === 0) {\n          if (ignoreFirstEmpty) {\n            ignoreFirstEmpty = false;\n          } else {\n            return new Range(startLineNumber, 1, currentBracket.range.endLineNumber + 1, 1);\n          }\n        }\n      }\n\n      const maxColumn = textEditorModel.getLineMaxColumn(startLineNumber);\n      let nextLineNumber = currentBracket.range.endLineNumber;\n      let nextColumn = currentBracket.range.endColumn;\n\n      if (maxColumn === currentBracket.range.endColumn) {\n        nextLineNumber++;\n        nextColumn = 1;\n      }\n\n      if (nextLineNumber > maxLineNumber) {\n        return new Range(startLineNumber, 1, maxLineNumber + 1, 1);\n      }\n\n      currentBracket = textEditorModel.bracketPairs.findNextBracket(new Position(nextLineNumber, nextColumn));\n    }\n\n    return new Range(startLineNumber, 1, maxLineNumber + 1, 1);\n  }\n\n  addDecoration(range, hoverMessage) {\n    const newDecorations = {\n      range: range,\n      options: {\n        description: 'goto-definition-link',\n        inlineClassName: 'goto-definition-link',\n        hoverMessage\n      }\n    };\n    this.linkDecorations = this.editor.deltaDecorations(this.linkDecorations, [newDecorations]);\n  }\n\n  removeLinkDecorations() {\n    if (this.linkDecorations.length > 0) {\n      this.linkDecorations = this.editor.deltaDecorations(this.linkDecorations, []);\n    }\n  }\n\n  isEnabled(mouseEvent, withKey) {\n    return this.editor.hasModel() && mouseEvent.isNoneOrSingleMouseDown && mouseEvent.target.type === 6\n    /* CONTENT_TEXT */\n    && (mouseEvent.hasTriggerModifier || (withKey ? withKey.keyCodeIsTriggerKey : false)) && DefinitionProviderRegistry.has(this.editor.getModel());\n  }\n\n  findDefinition(position, token) {\n    const model = this.editor.getModel();\n\n    if (!model) {\n      return Promise.resolve(null);\n    }\n\n    return getDefinitionsAtPosition(model, position, token);\n  }\n\n  gotoDefinition(position, openToSide) {\n    this.editor.setPosition(position);\n    return this.editor.invokeWithinContext(accessor => {\n      const canPeek = !openToSide && this.editor.getOption(78\n      /* definitionLinkOpensInPeek */\n      ) && !this.isInPeekEditor(accessor);\n      const action = new DefinitionAction({\n        openToSide,\n        openInPeek: canPeek,\n        muteMessage: true\n      }, {\n        alias: '',\n        label: '',\n        id: '',\n        precondition: undefined\n      });\n      return action.run(accessor, this.editor);\n    });\n  }\n\n  isInPeekEditor(accessor) {\n    const contextKeyService = accessor.get(IContextKeyService);\n    return PeekContext.inPeekEditor.getValue(contextKeyService);\n  }\n\n  dispose() {\n    this.toUnhook.dispose();\n  }\n\n};\nGotoDefinitionAtPositionEditorContribution.ID = 'editor.contrib.gotodefinitionatposition';\nGotoDefinitionAtPositionEditorContribution.MAX_SOURCE_PREVIEW_LINES = 8;\nGotoDefinitionAtPositionEditorContribution = __decorate([__param(1, ITextModelService), __param(2, ILanguageService)], GotoDefinitionAtPositionEditorContribution);\nexport { GotoDefinitionAtPositionEditorContribution };\nregisterEditorContribution(GotoDefinitionAtPositionEditorContribution.ID, GotoDefinitionAtPositionEditorContribution);\nregisterThemingParticipant((theme, collector) => {\n  const activeLinkForeground = theme.getColor(editorActiveLinkForeground);\n\n  if (activeLinkForeground) {\n    collector.addRule(`.monaco-editor .goto-definition-link { color: ${activeLinkForeground} !important; }`);\n  }\n});","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/contrib/gotoSymbol/browser/link/goToDefinitionAtPosition.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","createCancelablePromise","onUnexpectedError","MarkdownString","DisposableStore","withNullAsUndefined","EditorState","registerEditorContribution","Position","Range","DefinitionProviderRegistry","ILanguageService","ITextModelService","ClickLinkGesture","PeekContext","nls","IContextKeyService","editorActiveLinkForeground","registerThemingParticipant","DefinitionAction","getDefinitionsAtPosition","GotoDefinitionAtPositionEditorContribution","constructor","editor","textModelResolverService","languageService","toUnhook","toUnhookForKeyboard","linkDecorations","currentWordAtPosition","previousPromise","linkGesture","add","onMouseMoveOrRelevantKeyDown","mouseEvent","keyboardEvent","startFindDefinitionFromMouse","onExecute","isEnabled","gotoDefinition","position","hasSideBySideModifier","then","removeLinkDecorations","error","onCancel","get","getContribution","ID","startFindDefinitionFromCursor","startFindDefinition","onDidChangeCursorPosition","clear","onKeyDown","e","withKey","type","hasModel","_a","word","getModel","getWordAtPosition","Promise","resolve","startColumn","endColumn","state","cancel","token","findDefinition","results","validate","addDecoration","lineNumber","appendText","localize","result","uri","createModelReference","ref","object","textEditorModel","dispose","startLineNumber","range","getLineCount","previewValue","getPreviewValue","wordRange","originSelectionRange","lift","languageId","guessLanguageIdByFilepathOrFirstLine","appendCodeblock","undefined","rangeToUse","targetSelectionRange","getPreviewRangeBasedOnBrackets","numberOfLinesInRange","endLineNumber","MAX_SOURCE_PREVIEW_LINES","getPreviewRangeBasedOnIndentation","stripIndentationFromPreviewRange","previewRange","startIndent","getLineFirstNonWhitespaceColumn","minIndent","endIndent","Math","min","getValueInRange","replace","RegExp","trim","maxLineNumber","brackets","ignoreFirstEmpty","currentBracket","bracketPairs","findNextBracket","push","lastBracket","open","isOpen","pop","maxColumn","getLineMaxColumn","nextLineNumber","nextColumn","hoverMessage","newDecorations","options","description","inlineClassName","deltaDecorations","isNoneOrSingleMouseDown","hasTriggerModifier","keyCodeIsTriggerKey","has","model","openToSide","setPosition","invokeWithinContext","accessor","canPeek","getOption","isInPeekEditor","action","openInPeek","muteMessage","alias","label","id","precondition","run","contextKeyService","inPeekEditor","getValue","theme","collector","activeLinkForeground","getColor","addRule"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { createCancelablePromise } from '../../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../../base/common/errors.js';\nimport { MarkdownString } from '../../../../../base/common/htmlContent.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { withNullAsUndefined } from '../../../../../base/common/types.js';\nimport './goToDefinitionAtPosition.css';\nimport { EditorState } from '../../../editorState/browser/editorState.js';\nimport { registerEditorContribution } from '../../../../browser/editorExtensions.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { DefinitionProviderRegistry } from '../../../../common/languages.js';\nimport { ILanguageService } from '../../../../common/services/language.js';\nimport { ITextModelService } from '../../../../common/services/resolverService.js';\nimport { ClickLinkGesture } from './clickLinkGesture.js';\nimport { PeekContext } from '../../../peekView/browser/peekView.js';\nimport * as nls from '../../../../../nls.js';\nimport { IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { editorActiveLinkForeground } from '../../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../../platform/theme/common/themeService.js';\nimport { DefinitionAction } from '../goToCommands.js';\nimport { getDefinitionsAtPosition } from '../goToSymbol.js';\nlet GotoDefinitionAtPositionEditorContribution = class GotoDefinitionAtPositionEditorContribution {\n    constructor(editor, textModelResolverService, languageService) {\n        this.textModelResolverService = textModelResolverService;\n        this.languageService = languageService;\n        this.toUnhook = new DisposableStore();\n        this.toUnhookForKeyboard = new DisposableStore();\n        this.linkDecorations = [];\n        this.currentWordAtPosition = null;\n        this.previousPromise = null;\n        this.editor = editor;\n        let linkGesture = new ClickLinkGesture(editor);\n        this.toUnhook.add(linkGesture);\n        this.toUnhook.add(linkGesture.onMouseMoveOrRelevantKeyDown(([mouseEvent, keyboardEvent]) => {\n            this.startFindDefinitionFromMouse(mouseEvent, withNullAsUndefined(keyboardEvent));\n        }));\n        this.toUnhook.add(linkGesture.onExecute((mouseEvent) => {\n            if (this.isEnabled(mouseEvent)) {\n                this.gotoDefinition(mouseEvent.target.position, mouseEvent.hasSideBySideModifier).then(() => {\n                    this.removeLinkDecorations();\n                }, (error) => {\n                    this.removeLinkDecorations();\n                    onUnexpectedError(error);\n                });\n            }\n        }));\n        this.toUnhook.add(linkGesture.onCancel(() => {\n            this.removeLinkDecorations();\n            this.currentWordAtPosition = null;\n        }));\n    }\n    static get(editor) {\n        return editor.getContribution(GotoDefinitionAtPositionEditorContribution.ID);\n    }\n    startFindDefinitionFromCursor(position) {\n        // For issue: https://github.com/microsoft/vscode/issues/46257\n        // equivalent to mouse move with meta/ctrl key\n        // First find the definition and add decorations\n        // to the editor to be shown with the content hover widget\n        return this.startFindDefinition(position).then(() => {\n            // Add listeners for editor cursor move and key down events\n            // Dismiss the \"extended\" editor decorations when the user hides\n            // the hover widget. There is no event for the widget itself so these\n            // serve as a best effort. After removing the link decorations, the hover\n            // widget is clean and will only show declarations per next request.\n            this.toUnhookForKeyboard.add(this.editor.onDidChangeCursorPosition(() => {\n                this.currentWordAtPosition = null;\n                this.removeLinkDecorations();\n                this.toUnhookForKeyboard.clear();\n            }));\n            this.toUnhookForKeyboard.add(this.editor.onKeyDown((e) => {\n                if (e) {\n                    this.currentWordAtPosition = null;\n                    this.removeLinkDecorations();\n                    this.toUnhookForKeyboard.clear();\n                }\n            }));\n        });\n    }\n    startFindDefinitionFromMouse(mouseEvent, withKey) {\n        // check if we are active and on a content widget\n        if (mouseEvent.target.type === 9 /* CONTENT_WIDGET */ && this.linkDecorations.length > 0) {\n            return;\n        }\n        if (!this.editor.hasModel() || !this.isEnabled(mouseEvent, withKey)) {\n            this.currentWordAtPosition = null;\n            this.removeLinkDecorations();\n            return;\n        }\n        const position = mouseEvent.target.position;\n        this.startFindDefinition(position);\n    }\n    startFindDefinition(position) {\n        var _a;\n        // Dispose listeners for updating decorations when using keyboard to show definition hover\n        this.toUnhookForKeyboard.clear();\n        // Find word at mouse position\n        const word = position ? (_a = this.editor.getModel()) === null || _a === void 0 ? void 0 : _a.getWordAtPosition(position) : null;\n        if (!word) {\n            this.currentWordAtPosition = null;\n            this.removeLinkDecorations();\n            return Promise.resolve(0);\n        }\n        // Return early if word at position is still the same\n        if (this.currentWordAtPosition && this.currentWordAtPosition.startColumn === word.startColumn && this.currentWordAtPosition.endColumn === word.endColumn && this.currentWordAtPosition.word === word.word) {\n            return Promise.resolve(0);\n        }\n        this.currentWordAtPosition = word;\n        // Find definition and decorate word if found\n        let state = new EditorState(this.editor, 4 /* Position */ | 1 /* Value */ | 2 /* Selection */ | 8 /* Scroll */);\n        if (this.previousPromise) {\n            this.previousPromise.cancel();\n            this.previousPromise = null;\n        }\n        this.previousPromise = createCancelablePromise(token => this.findDefinition(position, token));\n        return this.previousPromise.then(results => {\n            if (!results || !results.length || !state.validate(this.editor)) {\n                this.removeLinkDecorations();\n                return;\n            }\n            // Multiple results\n            if (results.length > 1) {\n                this.addDecoration(new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn), new MarkdownString().appendText(nls.localize('multipleResults', \"Click to show {0} definitions.\", results.length)));\n            }\n            // Single result\n            else {\n                let result = results[0];\n                if (!result.uri) {\n                    return;\n                }\n                this.textModelResolverService.createModelReference(result.uri).then(ref => {\n                    if (!ref.object || !ref.object.textEditorModel) {\n                        ref.dispose();\n                        return;\n                    }\n                    const { object: { textEditorModel } } = ref;\n                    const { startLineNumber } = result.range;\n                    if (startLineNumber < 1 || startLineNumber > textEditorModel.getLineCount()) {\n                        // invalid range\n                        ref.dispose();\n                        return;\n                    }\n                    const previewValue = this.getPreviewValue(textEditorModel, startLineNumber, result);\n                    let wordRange;\n                    if (result.originSelectionRange) {\n                        wordRange = Range.lift(result.originSelectionRange);\n                    }\n                    else {\n                        wordRange = new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn);\n                    }\n                    const languageId = this.languageService.guessLanguageIdByFilepathOrFirstLine(textEditorModel.uri);\n                    this.addDecoration(wordRange, new MarkdownString().appendCodeblock(languageId ? languageId : '', previewValue));\n                    ref.dispose();\n                });\n            }\n        }).then(undefined, onUnexpectedError);\n    }\n    getPreviewValue(textEditorModel, startLineNumber, result) {\n        let rangeToUse = result.targetSelectionRange ? result.range : this.getPreviewRangeBasedOnBrackets(textEditorModel, startLineNumber);\n        const numberOfLinesInRange = rangeToUse.endLineNumber - rangeToUse.startLineNumber;\n        if (numberOfLinesInRange >= GotoDefinitionAtPositionEditorContribution.MAX_SOURCE_PREVIEW_LINES) {\n            rangeToUse = this.getPreviewRangeBasedOnIndentation(textEditorModel, startLineNumber);\n        }\n        const previewValue = this.stripIndentationFromPreviewRange(textEditorModel, startLineNumber, rangeToUse);\n        return previewValue;\n    }\n    stripIndentationFromPreviewRange(textEditorModel, startLineNumber, previewRange) {\n        const startIndent = textEditorModel.getLineFirstNonWhitespaceColumn(startLineNumber);\n        let minIndent = startIndent;\n        for (let endLineNumber = startLineNumber + 1; endLineNumber < previewRange.endLineNumber; endLineNumber++) {\n            const endIndent = textEditorModel.getLineFirstNonWhitespaceColumn(endLineNumber);\n            minIndent = Math.min(minIndent, endIndent);\n        }\n        const previewValue = textEditorModel.getValueInRange(previewRange).replace(new RegExp(`^\\\\s{${minIndent - 1}}`, 'gm'), '').trim();\n        return previewValue;\n    }\n    getPreviewRangeBasedOnIndentation(textEditorModel, startLineNumber) {\n        const startIndent = textEditorModel.getLineFirstNonWhitespaceColumn(startLineNumber);\n        const maxLineNumber = Math.min(textEditorModel.getLineCount(), startLineNumber + GotoDefinitionAtPositionEditorContribution.MAX_SOURCE_PREVIEW_LINES);\n        let endLineNumber = startLineNumber + 1;\n        for (; endLineNumber < maxLineNumber; endLineNumber++) {\n            let endIndent = textEditorModel.getLineFirstNonWhitespaceColumn(endLineNumber);\n            if (startIndent === endIndent) {\n                break;\n            }\n        }\n        return new Range(startLineNumber, 1, endLineNumber + 1, 1);\n    }\n    getPreviewRangeBasedOnBrackets(textEditorModel, startLineNumber) {\n        const maxLineNumber = Math.min(textEditorModel.getLineCount(), startLineNumber + GotoDefinitionAtPositionEditorContribution.MAX_SOURCE_PREVIEW_LINES);\n        const brackets = [];\n        let ignoreFirstEmpty = true;\n        let currentBracket = textEditorModel.bracketPairs.findNextBracket(new Position(startLineNumber, 1));\n        while (currentBracket !== null) {\n            if (brackets.length === 0) {\n                brackets.push(currentBracket);\n            }\n            else {\n                const lastBracket = brackets[brackets.length - 1];\n                if (lastBracket.open[0] === currentBracket.open[0] && lastBracket.isOpen && !currentBracket.isOpen) {\n                    brackets.pop();\n                }\n                else {\n                    brackets.push(currentBracket);\n                }\n                if (brackets.length === 0) {\n                    if (ignoreFirstEmpty) {\n                        ignoreFirstEmpty = false;\n                    }\n                    else {\n                        return new Range(startLineNumber, 1, currentBracket.range.endLineNumber + 1, 1);\n                    }\n                }\n            }\n            const maxColumn = textEditorModel.getLineMaxColumn(startLineNumber);\n            let nextLineNumber = currentBracket.range.endLineNumber;\n            let nextColumn = currentBracket.range.endColumn;\n            if (maxColumn === currentBracket.range.endColumn) {\n                nextLineNumber++;\n                nextColumn = 1;\n            }\n            if (nextLineNumber > maxLineNumber) {\n                return new Range(startLineNumber, 1, maxLineNumber + 1, 1);\n            }\n            currentBracket = textEditorModel.bracketPairs.findNextBracket(new Position(nextLineNumber, nextColumn));\n        }\n        return new Range(startLineNumber, 1, maxLineNumber + 1, 1);\n    }\n    addDecoration(range, hoverMessage) {\n        const newDecorations = {\n            range: range,\n            options: {\n                description: 'goto-definition-link',\n                inlineClassName: 'goto-definition-link',\n                hoverMessage\n            }\n        };\n        this.linkDecorations = this.editor.deltaDecorations(this.linkDecorations, [newDecorations]);\n    }\n    removeLinkDecorations() {\n        if (this.linkDecorations.length > 0) {\n            this.linkDecorations = this.editor.deltaDecorations(this.linkDecorations, []);\n        }\n    }\n    isEnabled(mouseEvent, withKey) {\n        return this.editor.hasModel() &&\n            mouseEvent.isNoneOrSingleMouseDown &&\n            (mouseEvent.target.type === 6 /* CONTENT_TEXT */) &&\n            (mouseEvent.hasTriggerModifier || (withKey ? withKey.keyCodeIsTriggerKey : false)) &&\n            DefinitionProviderRegistry.has(this.editor.getModel());\n    }\n    findDefinition(position, token) {\n        const model = this.editor.getModel();\n        if (!model) {\n            return Promise.resolve(null);\n        }\n        return getDefinitionsAtPosition(model, position, token);\n    }\n    gotoDefinition(position, openToSide) {\n        this.editor.setPosition(position);\n        return this.editor.invokeWithinContext((accessor) => {\n            const canPeek = !openToSide && this.editor.getOption(78 /* definitionLinkOpensInPeek */) && !this.isInPeekEditor(accessor);\n            const action = new DefinitionAction({ openToSide, openInPeek: canPeek, muteMessage: true }, { alias: '', label: '', id: '', precondition: undefined });\n            return action.run(accessor, this.editor);\n        });\n    }\n    isInPeekEditor(accessor) {\n        const contextKeyService = accessor.get(IContextKeyService);\n        return PeekContext.inPeekEditor.getValue(contextKeyService);\n    }\n    dispose() {\n        this.toUnhook.dispose();\n    }\n};\nGotoDefinitionAtPositionEditorContribution.ID = 'editor.contrib.gotodefinitionatposition';\nGotoDefinitionAtPositionEditorContribution.MAX_SOURCE_PREVIEW_LINES = 8;\nGotoDefinitionAtPositionEditorContribution = __decorate([\n    __param(1, ITextModelService),\n    __param(2, ILanguageService)\n], GotoDefinitionAtPositionEditorContribution);\nexport { GotoDefinitionAtPositionEditorContribution };\nregisterEditorContribution(GotoDefinitionAtPositionEditorContribution.ID, GotoDefinitionAtPositionEditorContribution);\nregisterThemingParticipant((theme, collector) => {\n    const activeLinkForeground = theme.getColor(editorActiveLinkForeground);\n    if (activeLinkForeground) {\n        collector.addRule(`.monaco-editor .goto-definition-link { color: ${activeLinkForeground} !important; }`);\n    }\n});\n"]},"metadata":{},"sourceType":"module"}