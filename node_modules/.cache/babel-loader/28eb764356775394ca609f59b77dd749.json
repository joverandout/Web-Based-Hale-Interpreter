{"ast":null,"code":"/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n// src/basic-languages/kotlin/kotlin.ts\nvar conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }],\n  surroundingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: \"<\",\n    close: \">\"\n  }],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\n      end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".kt\",\n  keywords: [\"as\", \"as?\", \"break\", \"class\", \"continue\", \"do\", \"else\", \"false\", \"for\", \"fun\", \"if\", \"in\", \"!in\", \"interface\", \"is\", \"!is\", \"null\", \"object\", \"package\", \"return\", \"super\", \"this\", \"throw\", \"true\", \"try\", \"typealias\", \"val\", \"var\", \"when\", \"while\", \"by\", \"catch\", \"constructor\", \"delegate\", \"dynamic\", \"field\", \"file\", \"finally\", \"get\", \"import\", \"init\", \"param\", \"property\", \"receiver\", \"set\", \"setparam\", \"where\", \"actual\", \"abstract\", \"annotation\", \"companion\", \"const\", \"crossinline\", \"data\", \"enum\", \"expect\", \"external\", \"final\", \"infix\", \"inline\", \"inner\", \"internal\", \"lateinit\", \"noinline\", \"open\", \"operator\", \"out\", \"override\", \"private\", \"protected\", \"public\", \"reified\", \"sealed\", \"suspend\", \"tailrec\", \"vararg\", \"field\", \"it\"],\n  operators: [\"+\", \"-\", \"*\", \"/\", \"%\", \"=\", \"+=\", \"-=\", \"*=\", \"/=\", \"%=\", \"++\", \"--\", \"&&\", \"||\", \"!\", \"==\", \"!=\", \"===\", \"!==\", \">\", \"<\", \"<=\", \">=\", \"[\", \"]\", \"!!\", \"?.\", \"?:\", \"::\", \"..\", \":\", \"?\", \"->\", \"@\", \";\", \"$\", \"_\"],\n  symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  digits: /\\d+(_+\\d+)*/,\n  octaldigits: /[0-7]+(_+[0-7]+)*/,\n  binarydigits: /[0-1]+(_+[0-1]+)*/,\n  hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\n  tokenizer: {\n    root: [[/[A-Z][\\w\\$]*/, \"type.identifier\"], [/[a-zA-Z_$][\\w$]*/, {\n      cases: {\n        \"@keywords\": {\n          token: \"keyword.$0\"\n        },\n        \"@default\": \"identifier\"\n      }\n    }], {\n      include: \"@whitespace\"\n    }, [/[{}()\\[\\]]/, \"@brackets\"], [/[<>](?!@symbols)/, \"@brackets\"], [/@symbols/, {\n      cases: {\n        \"@operators\": \"delimiter\",\n        \"@default\": \"\"\n      }\n    }], [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, \"annotation\"], [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, \"number.float\"], [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, \"number.float\"], [/0[xX](@hexdigits)[Ll]?/, \"number.hex\"], [/0(@octaldigits)[Ll]?/, \"number.octal\"], [/0[bB](@binarydigits)[Ll]?/, \"number.binary\"], [/(@digits)[fFdD]/, \"number.float\"], [/(@digits)[lL]?/, \"number\"], [/[;,.]/, \"delimiter\"], [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"], [/\"\"\"/, \"string\", \"@multistring\"], [/\"/, \"string\", \"@string\"], [/'[^\\\\']'/, \"string\"], [/(')(@escapes)(')/, [\"string\", \"string.escape\", \"string\"]], [/'/, \"string.invalid\"]],\n    whitespace: [[/[ \\t\\r\\n]+/, \"\"], [/\\/\\*\\*(?!\\/)/, \"comment.doc\", \"@javadoc\"], [/\\/\\*/, \"comment\", \"@comment\"], [/\\/\\/.*$/, \"comment\"]],\n    comment: [[/[^\\/*]+/, \"comment\"], [/\\/\\*/, \"comment\", \"@comment\"], [/\\*\\//, \"comment\", \"@pop\"], [/[\\/*]/, \"comment\"]],\n    javadoc: [[/[^\\/*]+/, \"comment.doc\"], [/\\/\\*/, \"comment.doc\", \"@push\"], [/\\/\\*/, \"comment.doc.invalid\"], [/\\*\\//, \"comment.doc\", \"@pop\"], [/[\\/*]/, \"comment.doc\"]],\n    string: [[/[^\\\\\"]+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/\"/, \"string\", \"@pop\"]],\n    multistring: [[/[^\\\\\"]+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/\"\"\"/, \"string\", \"@pop\"], [/./, \"string\"]]\n  }\n};\nexport { conf, language };","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/basic-languages/kotlin/kotlin.js"],"names":["conf","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","keywords","operators","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","tokenizer","root","cases","token","include","whitespace","comment","javadoc","string","multistring"],"mappings":"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","sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/kotlin/kotlin.ts\nvar conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" },\n    { open: \"<\", close: \">\" }\n  ],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\n      end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".kt\",\n  keywords: [\n    \"as\",\n    \"as?\",\n    \"break\",\n    \"class\",\n    \"continue\",\n    \"do\",\n    \"else\",\n    \"false\",\n    \"for\",\n    \"fun\",\n    \"if\",\n    \"in\",\n    \"!in\",\n    \"interface\",\n    \"is\",\n    \"!is\",\n    \"null\",\n    \"object\",\n    \"package\",\n    \"return\",\n    \"super\",\n    \"this\",\n    \"throw\",\n    \"true\",\n    \"try\",\n    \"typealias\",\n    \"val\",\n    \"var\",\n    \"when\",\n    \"while\",\n    \"by\",\n    \"catch\",\n    \"constructor\",\n    \"delegate\",\n    \"dynamic\",\n    \"field\",\n    \"file\",\n    \"finally\",\n    \"get\",\n    \"import\",\n    \"init\",\n    \"param\",\n    \"property\",\n    \"receiver\",\n    \"set\",\n    \"setparam\",\n    \"where\",\n    \"actual\",\n    \"abstract\",\n    \"annotation\",\n    \"companion\",\n    \"const\",\n    \"crossinline\",\n    \"data\",\n    \"enum\",\n    \"expect\",\n    \"external\",\n    \"final\",\n    \"infix\",\n    \"inline\",\n    \"inner\",\n    \"internal\",\n    \"lateinit\",\n    \"noinline\",\n    \"open\",\n    \"operator\",\n    \"out\",\n    \"override\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"reified\",\n    \"sealed\",\n    \"suspend\",\n    \"tailrec\",\n    \"vararg\",\n    \"field\",\n    \"it\"\n  ],\n  operators: [\n    \"+\",\n    \"-\",\n    \"*\",\n    \"/\",\n    \"%\",\n    \"=\",\n    \"+=\",\n    \"-=\",\n    \"*=\",\n    \"/=\",\n    \"%=\",\n    \"++\",\n    \"--\",\n    \"&&\",\n    \"||\",\n    \"!\",\n    \"==\",\n    \"!=\",\n    \"===\",\n    \"!==\",\n    \">\",\n    \"<\",\n    \"<=\",\n    \">=\",\n    \"[\",\n    \"]\",\n    \"!!\",\n    \"?.\",\n    \"?:\",\n    \"::\",\n    \"..\",\n    \":\",\n    \"?\",\n    \"->\",\n    \"@\",\n    \";\",\n    \"$\",\n    \"_\"\n  ],\n  symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  digits: /\\d+(_+\\d+)*/,\n  octaldigits: /[0-7]+(_+[0-7]+)*/,\n  binarydigits: /[0-1]+(_+[0-1]+)*/,\n  hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\n  tokenizer: {\n    root: [\n      [/[A-Z][\\w\\$]*/, \"type.identifier\"],\n      [\n        /[a-zA-Z_$][\\w$]*/,\n        {\n          cases: {\n            \"@keywords\": { token: \"keyword.$0\" },\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      { include: \"@whitespace\" },\n      [/[{}()\\[\\]]/, \"@brackets\"],\n      [/[<>](?!@symbols)/, \"@brackets\"],\n      [\n        /@symbols/,\n        {\n          cases: {\n            \"@operators\": \"delimiter\",\n            \"@default\": \"\"\n          }\n        }\n      ],\n      [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, \"annotation\"],\n      [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, \"number.float\"],\n      [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, \"number.float\"],\n      [/0[xX](@hexdigits)[Ll]?/, \"number.hex\"],\n      [/0(@octaldigits)[Ll]?/, \"number.octal\"],\n      [/0[bB](@binarydigits)[Ll]?/, \"number.binary\"],\n      [/(@digits)[fFdD]/, \"number.float\"],\n      [/(@digits)[lL]?/, \"number\"],\n      [/[;,.]/, \"delimiter\"],\n      [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"],\n      [/\"\"\"/, \"string\", \"@multistring\"],\n      [/\"/, \"string\", \"@string\"],\n      [/'[^\\\\']'/, \"string\"],\n      [/(')(@escapes)(')/, [\"string\", \"string.escape\", \"string\"]],\n      [/'/, \"string.invalid\"]\n    ],\n    whitespace: [\n      [/[ \\t\\r\\n]+/, \"\"],\n      [/\\/\\*\\*(?!\\/)/, \"comment.doc\", \"@javadoc\"],\n      [/\\/\\*/, \"comment\", \"@comment\"],\n      [/\\/\\/.*$/, \"comment\"]\n    ],\n    comment: [\n      [/[^\\/*]+/, \"comment\"],\n      [/\\/\\*/, \"comment\", \"@comment\"],\n      [/\\*\\//, \"comment\", \"@pop\"],\n      [/[\\/*]/, \"comment\"]\n    ],\n    javadoc: [\n      [/[^\\/*]+/, \"comment.doc\"],\n      [/\\/\\*/, \"comment.doc\", \"@push\"],\n      [/\\/\\*/, \"comment.doc.invalid\"],\n      [/\\*\\//, \"comment.doc\", \"@pop\"],\n      [/[\\/*]/, \"comment.doc\"]\n    ],\n    string: [\n      [/[^\\\\\"]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [/\"/, \"string\", \"@pop\"]\n    ],\n    multistring: [\n      [/[^\\\\\"]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [/\"\"\"/, \"string\", \"@pop\"],\n      [/./, \"string\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"]},"metadata":{},"sourceType":"module"}