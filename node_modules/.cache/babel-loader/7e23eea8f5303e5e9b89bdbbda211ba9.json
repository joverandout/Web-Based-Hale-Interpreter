{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport '../../common/languages/languageConfigurationRegistry.js';\nimport './standaloneCodeEditorService.js';\nimport './standaloneLayoutService.js';\nimport '../../../platform/undoRedo/common/undoRedoService.js';\nimport '../../common/services/languageFeatureDebounce.js';\nimport * as strings from '../../../base/common/strings.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { SimpleKeybinding, createKeybinding } from '../../../base/common/keybindings.js';\nimport { ImmortalReference, toDisposable, DisposableStore, Disposable } from '../../../base/common/lifecycle.js';\nimport { OS, isLinux, isMacintosh } from '../../../base/common/platform.js';\nimport Severity from '../../../base/common/severity.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { IBulkEditService, ResourceTextEdit } from '../../browser/services/bulkEditService.js';\nimport { isDiffEditorConfigurationKey, isEditorConfigurationKey } from '../../common/config/editorConfigurationSchema.js';\nimport { EditOperation } from '../../common/core/editOperation.js';\nimport { Position as Pos } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { IModelService } from '../../common/services/model.js';\nimport { ITextModelService } from '../../common/services/resolverService.js';\nimport { ITextResourceConfigurationService, ITextResourcePropertiesService } from '../../common/services/textResourceConfiguration.js';\nimport { CommandsRegistry, ICommandService } from '../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { Configuration, ConfigurationModel, DefaultConfigurationModel, ConfigurationChangeEvent } from '../../../platform/configuration/common/configurationModels.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IDialogService } from '../../../platform/dialogs/common/dialogs.js';\nimport { createDecorator, IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { AbstractKeybindingService } from '../../../platform/keybinding/common/abstractKeybindingService.js';\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\nimport { KeybindingResolver } from '../../../platform/keybinding/common/keybindingResolver.js';\nimport { KeybindingsRegistry } from '../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { ResolvedKeybindingItem } from '../../../platform/keybinding/common/resolvedKeybindingItem.js';\nimport { USLayoutResolvedKeybinding } from '../../../platform/keybinding/common/usLayoutResolvedKeybinding.js';\nimport { ILabelService } from '../../../platform/label/common/label.js';\nimport { INotificationService, NoOpNotification } from '../../../platform/notification/common/notification.js';\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\nimport { ITelemetryService } from '../../../platform/telemetry/common/telemetry.js';\nimport { IWorkspaceContextService, WorkspaceFolder } from '../../../platform/workspace/common/workspace.js';\nimport { ILayoutService } from '../../../platform/layout/browser/layoutService.js';\nimport { StandaloneServicesNLS } from '../../common/standaloneStrings.js';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\nimport { ConsoleLogger, ILogService, LogService } from '../../../platform/log/common/log.js';\nimport { IWorkspaceTrustManagementService } from '../../../platform/workspace/common/workspaceTrust.js';\nimport { IContextMenuService, IContextViewService } from '../../../platform/contextview/browser/contextView.js';\nimport { ContextViewService } from '../../../platform/contextview/browser/contextViewService.js';\nimport { LanguageService } from '../../common/services/languageService.js';\nimport { ContextMenuService } from '../../../platform/contextview/browser/contextMenuService.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { getSingletonServiceDescriptors, registerSingleton } from '../../../platform/instantiation/common/extensions.js';\nimport { OpenerService } from '../../browser/services/openerService.js';\nimport { IEditorWorkerService } from '../../common/services/editorWorker.js';\nimport { EditorWorkerService } from '../../browser/services/editorWorkerService.js';\nimport { ILanguageService } from '../../common/services/language.js';\nimport { MarkerDecorationsService } from '../../common/services/markerDecorationsService.js';\nimport { IMarkerDecorationsService } from '../../common/services/markerDecorations.js';\nimport { ModelService } from '../../common/services/modelService.js';\nimport { StandaloneQuickInputService } from './quickInput/standaloneQuickInputService.js';\nimport { StandaloneThemeService } from './standaloneThemeService.js';\nimport { IStandaloneThemeService } from '../common/standaloneTheme.js';\nimport { AccessibilityService } from '../../../platform/accessibility/browser/accessibilityService.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nimport { IMenuService } from '../../../platform/actions/common/actions.js';\nimport { MenuService } from '../../../platform/actions/common/menuService.js';\nimport { BrowserClipboardService } from '../../../platform/clipboard/browser/clipboardService.js';\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\nimport { ContextKeyService } from '../../../platform/contextkey/browser/contextKeyService.js';\nimport { SyncDescriptor } from '../../../platform/instantiation/common/descriptors.js';\nimport { InstantiationService } from '../../../platform/instantiation/common/instantiationService.js';\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\nimport { IListService, ListService } from '../../../platform/list/browser/listService.js';\nimport { IMarkerService } from '../../../platform/markers/common/markers.js';\nimport { MarkerService } from '../../../platform/markers/common/markerService.js';\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\nimport { IQuickInputService } from '../../../platform/quickinput/common/quickInput.js';\nimport { IStorageService, InMemoryStorageService } from '../../../platform/storage/common/storage.js';\n\nclass SimpleModel {\n  constructor(model) {\n    this.disposed = false;\n    this.model = model;\n    this._onWillDispose = new Emitter();\n  }\n\n  get textEditorModel() {\n    return this.model;\n  }\n\n  dispose() {\n    this.disposed = true;\n\n    this._onWillDispose.fire();\n  }\n\n}\n\nlet StandaloneTextModelService = class StandaloneTextModelService {\n  constructor(modelService) {\n    this.modelService = modelService;\n  }\n\n  createModelReference(resource) {\n    const model = this.modelService.getModel(resource);\n\n    if (!model) {\n      return Promise.reject(new Error(`Model not found`));\n    }\n\n    return Promise.resolve(new ImmortalReference(new SimpleModel(model)));\n  }\n\n};\nStandaloneTextModelService = __decorate([__param(0, IModelService)], StandaloneTextModelService);\n\nclass StandaloneEditorProgressService {\n  show() {\n    return StandaloneEditorProgressService.NULL_PROGRESS_RUNNER;\n  }\n\n  showWhile(promise, delay) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield promise;\n    });\n  }\n\n}\n\nStandaloneEditorProgressService.NULL_PROGRESS_RUNNER = {\n  done: () => {},\n  total: () => {},\n  worked: () => {}\n};\n\nclass StandaloneDialogService {\n  confirm(confirmation) {\n    return this.doConfirm(confirmation).then(confirmed => {\n      return {\n        confirmed,\n        checkboxChecked: false // unsupported\n\n      };\n    });\n  }\n\n  doConfirm(confirmation) {\n    let messageText = confirmation.message;\n\n    if (confirmation.detail) {\n      messageText = messageText + '\\n\\n' + confirmation.detail;\n    }\n\n    return Promise.resolve(window.confirm(messageText));\n  }\n\n  show(severity, message, buttons, options) {\n    return Promise.resolve({\n      choice: 0\n    });\n  }\n\n}\n\nexport class StandaloneNotificationService {\n  info(message) {\n    return this.notify({\n      severity: Severity.Info,\n      message\n    });\n  }\n\n  warn(message) {\n    return this.notify({\n      severity: Severity.Warning,\n      message\n    });\n  }\n\n  error(error) {\n    return this.notify({\n      severity: Severity.Error,\n      message: error\n    });\n  }\n\n  notify(notification) {\n    switch (notification.severity) {\n      case Severity.Error:\n        console.error(notification.message);\n        break;\n\n      case Severity.Warning:\n        console.warn(notification.message);\n        break;\n\n      default:\n        console.log(notification.message);\n        break;\n    }\n\n    return StandaloneNotificationService.NO_OP;\n  }\n\n  status(message, options) {\n    return Disposable.None;\n  }\n\n}\nStandaloneNotificationService.NO_OP = new NoOpNotification();\nlet StandaloneCommandService = class StandaloneCommandService {\n  constructor(instantiationService) {\n    this._onWillExecuteCommand = new Emitter();\n    this._onDidExecuteCommand = new Emitter();\n    this.onWillExecuteCommand = this._onWillExecuteCommand.event;\n    this.onDidExecuteCommand = this._onDidExecuteCommand.event;\n    this._instantiationService = instantiationService;\n  }\n\n  executeCommand(id, ...args) {\n    const command = CommandsRegistry.getCommand(id);\n\n    if (!command) {\n      return Promise.reject(new Error(`command '${id}' not found`));\n    }\n\n    try {\n      this._onWillExecuteCommand.fire({\n        commandId: id,\n        args\n      });\n\n      const result = this._instantiationService.invokeFunction.apply(this._instantiationService, [command.handler, ...args]);\n\n      this._onDidExecuteCommand.fire({\n        commandId: id,\n        args\n      });\n\n      return Promise.resolve(result);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  }\n\n};\nStandaloneCommandService = __decorate([__param(0, IInstantiationService)], StandaloneCommandService);\nexport { StandaloneCommandService };\nlet StandaloneKeybindingService = class StandaloneKeybindingService extends AbstractKeybindingService {\n  constructor(contextKeyService, commandService, telemetryService, notificationService, logService, codeEditorService) {\n    super(contextKeyService, commandService, telemetryService, notificationService, logService);\n    this._cachedResolver = null;\n    this._dynamicKeybindings = [];\n    this._domNodeListeners = [];\n\n    const addContainer = domNode => {\n      const disposables = new DisposableStore(); // for standard keybindings\n\n      disposables.add(dom.addDisposableListener(domNode, dom.EventType.KEY_DOWN, e => {\n        const keyEvent = new StandardKeyboardEvent(e);\n\n        const shouldPreventDefault = this._dispatch(keyEvent, keyEvent.target);\n\n        if (shouldPreventDefault) {\n          keyEvent.preventDefault();\n          keyEvent.stopPropagation();\n        }\n      })); // for single modifier chord keybindings (e.g. shift shift)\n\n      disposables.add(dom.addDisposableListener(domNode, dom.EventType.KEY_UP, e => {\n        const keyEvent = new StandardKeyboardEvent(e);\n\n        const shouldPreventDefault = this._singleModifierDispatch(keyEvent, keyEvent.target);\n\n        if (shouldPreventDefault) {\n          keyEvent.preventDefault();\n        }\n      }));\n\n      this._domNodeListeners.push(new DomNodeListeners(domNode, disposables));\n    };\n\n    const removeContainer = domNode => {\n      for (let i = 0; i < this._domNodeListeners.length; i++) {\n        const domNodeListeners = this._domNodeListeners[i];\n\n        if (domNodeListeners.domNode === domNode) {\n          this._domNodeListeners.splice(i, 1);\n\n          domNodeListeners.dispose();\n        }\n      }\n    };\n\n    const addCodeEditor = codeEditor => {\n      if (codeEditor.getOption(54\n      /* inDiffEditor */\n      )) {\n        return;\n      }\n\n      addContainer(codeEditor.getContainerDomNode());\n    };\n\n    const removeCodeEditor = codeEditor => {\n      if (codeEditor.getOption(54\n      /* inDiffEditor */\n      )) {\n        return;\n      }\n\n      removeContainer(codeEditor.getContainerDomNode());\n    };\n\n    this._register(codeEditorService.onCodeEditorAdd(addCodeEditor));\n\n    this._register(codeEditorService.onCodeEditorRemove(removeCodeEditor));\n\n    codeEditorService.listCodeEditors().forEach(addCodeEditor);\n\n    const addDiffEditor = diffEditor => {\n      addContainer(diffEditor.getContainerDomNode());\n    };\n\n    const removeDiffEditor = diffEditor => {\n      removeContainer(diffEditor.getContainerDomNode());\n    };\n\n    this._register(codeEditorService.onDiffEditorAdd(addDiffEditor));\n\n    this._register(codeEditorService.onDiffEditorRemove(removeDiffEditor));\n\n    codeEditorService.listDiffEditors().forEach(addDiffEditor);\n  }\n\n  addDynamicKeybinding(commandId, _keybinding, handler, when) {\n    const keybinding = createKeybinding(_keybinding, OS);\n    const toDispose = new DisposableStore();\n\n    if (keybinding) {\n      this._dynamicKeybindings.push({\n        keybinding: keybinding.parts,\n        command: commandId,\n        when: when,\n        weight1: 1000,\n        weight2: 0,\n        extensionId: null,\n        isBuiltinExtension: false\n      });\n\n      toDispose.add(toDisposable(() => {\n        for (let i = 0; i < this._dynamicKeybindings.length; i++) {\n          const kb = this._dynamicKeybindings[i];\n\n          if (kb.command === commandId) {\n            this._dynamicKeybindings.splice(i, 1);\n\n            this.updateResolver({\n              source: 1\n              /* Default */\n\n            });\n            return;\n          }\n        }\n      }));\n    }\n\n    toDispose.add(CommandsRegistry.registerCommand(commandId, handler));\n    this.updateResolver({\n      source: 1\n      /* Default */\n\n    });\n    return toDispose;\n  }\n\n  updateResolver(event) {\n    this._cachedResolver = null;\n\n    this._onDidUpdateKeybindings.fire(event);\n  }\n\n  _getResolver() {\n    if (!this._cachedResolver) {\n      const defaults = this._toNormalizedKeybindingItems(KeybindingsRegistry.getDefaultKeybindings(), true);\n\n      const overrides = this._toNormalizedKeybindingItems(this._dynamicKeybindings, false);\n\n      this._cachedResolver = new KeybindingResolver(defaults, overrides, str => this._log(str));\n    }\n\n    return this._cachedResolver;\n  }\n\n  _documentHasFocus() {\n    return document.hasFocus();\n  }\n\n  _toNormalizedKeybindingItems(items, isDefault) {\n    const result = [];\n    let resultLen = 0;\n\n    for (const item of items) {\n      const when = item.when || undefined;\n      const keybinding = item.keybinding;\n\n      if (!keybinding) {\n        // This might be a removal keybinding item in user settings => accept it\n        result[resultLen++] = new ResolvedKeybindingItem(undefined, item.command, item.commandArgs, when, isDefault, null, false);\n      } else {\n        const resolvedKeybindings = USLayoutResolvedKeybinding.resolveUserBinding(keybinding, OS);\n\n        for (const resolvedKeybinding of resolvedKeybindings) {\n          result[resultLen++] = new ResolvedKeybindingItem(resolvedKeybinding, item.command, item.commandArgs, when, isDefault, null, false);\n        }\n      }\n    }\n\n    return result;\n  }\n\n  resolveKeyboardEvent(keyboardEvent) {\n    const keybinding = new SimpleKeybinding(keyboardEvent.ctrlKey, keyboardEvent.shiftKey, keyboardEvent.altKey, keyboardEvent.metaKey, keyboardEvent.keyCode).toChord();\n    return new USLayoutResolvedKeybinding(keybinding, OS);\n  }\n\n};\nStandaloneKeybindingService = __decorate([__param(0, IContextKeyService), __param(1, ICommandService), __param(2, ITelemetryService), __param(3, INotificationService), __param(4, ILogService), __param(5, ICodeEditorService)], StandaloneKeybindingService);\nexport { StandaloneKeybindingService };\n\nclass DomNodeListeners extends Disposable {\n  constructor(domNode, disposables) {\n    super();\n    this.domNode = domNode;\n\n    this._register(disposables);\n  }\n\n}\n\nfunction isConfigurationOverrides(thing) {\n  return thing && typeof thing === 'object' && (!thing.overrideIdentifier || typeof thing.overrideIdentifier === 'string') && (!thing.resource || thing.resource instanceof URI);\n}\n\nexport class StandaloneConfigurationService {\n  constructor() {\n    this._onDidChangeConfiguration = new Emitter();\n    this.onDidChangeConfiguration = this._onDidChangeConfiguration.event;\n    this._configuration = new Configuration(new DefaultConfigurationModel(), new ConfigurationModel());\n  }\n\n  getValue(arg1, arg2) {\n    const section = typeof arg1 === 'string' ? arg1 : undefined;\n    const overrides = isConfigurationOverrides(arg1) ? arg1 : isConfigurationOverrides(arg2) ? arg2 : {};\n    return this._configuration.getValue(section, overrides, undefined);\n  }\n\n  updateValues(values) {\n    const previous = {\n      data: this._configuration.toData()\n    };\n    const changedKeys = [];\n\n    for (const entry of values) {\n      const [key, value] = entry;\n\n      if (this.getValue(key) === value) {\n        continue;\n      }\n\n      this._configuration.updateValue(key, value);\n\n      changedKeys.push(key);\n    }\n\n    if (changedKeys.length > 0) {\n      const configurationChangeEvent = new ConfigurationChangeEvent({\n        keys: changedKeys,\n        overrides: []\n      }, previous, this._configuration);\n      configurationChangeEvent.source = 7\n      /* MEMORY */\n      ;\n      configurationChangeEvent.sourceConfig = null;\n\n      this._onDidChangeConfiguration.fire(configurationChangeEvent);\n    }\n\n    return Promise.resolve();\n  }\n\n  updateValue(key, value, arg3, arg4) {\n    return this.updateValues([[key, value]]);\n  }\n\n  inspect(key, options = {}) {\n    return this._configuration.inspect(key, options, undefined);\n  }\n\n}\nlet StandaloneResourceConfigurationService = class StandaloneResourceConfigurationService {\n  constructor(configurationService) {\n    this.configurationService = configurationService;\n    this._onDidChangeConfiguration = new Emitter();\n    this.configurationService.onDidChangeConfiguration(e => {\n      this._onDidChangeConfiguration.fire({\n        affectedKeys: e.affectedKeys,\n        affectsConfiguration: (resource, configuration) => e.affectsConfiguration(configuration)\n      });\n    });\n  }\n\n  getValue(resource, arg2, arg3) {\n    const position = Pos.isIPosition(arg2) ? arg2 : null;\n    const section = position ? typeof arg3 === 'string' ? arg3 : undefined : typeof arg2 === 'string' ? arg2 : undefined;\n\n    if (typeof section === 'undefined') {\n      return this.configurationService.getValue();\n    }\n\n    return this.configurationService.getValue(section);\n  }\n\n};\nStandaloneResourceConfigurationService = __decorate([__param(0, IConfigurationService)], StandaloneResourceConfigurationService);\nlet StandaloneResourcePropertiesService = class StandaloneResourcePropertiesService {\n  constructor(configurationService) {\n    this.configurationService = configurationService;\n  }\n\n  getEOL(resource, language) {\n    const eol = this.configurationService.getValue('files.eol', {\n      overrideIdentifier: language,\n      resource\n    });\n\n    if (eol && typeof eol === 'string' && eol !== 'auto') {\n      return eol;\n    }\n\n    return isLinux || isMacintosh ? '\\n' : '\\r\\n';\n  }\n\n};\nStandaloneResourcePropertiesService = __decorate([__param(0, IConfigurationService)], StandaloneResourcePropertiesService);\n\nclass StandaloneTelemetryService {\n  publicLog(eventName, data) {\n    return Promise.resolve(undefined);\n  }\n\n  publicLog2(eventName, data) {\n    return this.publicLog(eventName, data);\n  }\n\n}\n\nclass StandaloneWorkspaceContextService {\n  constructor() {\n    const resource = URI.from({\n      scheme: StandaloneWorkspaceContextService.SCHEME,\n      authority: 'model',\n      path: '/'\n    });\n    this.workspace = {\n      id: '4064f6ec-cb38-4ad0-af64-ee6467e63c82',\n      folders: [new WorkspaceFolder({\n        uri: resource,\n        name: '',\n        index: 0\n      })]\n    };\n  }\n\n  getWorkspace() {\n    return this.workspace;\n  }\n\n}\n\nStandaloneWorkspaceContextService.SCHEME = 'inmemory';\nexport function updateConfigurationService(configurationService, source, isDiffEditor) {\n  if (!source) {\n    return;\n  }\n\n  if (!(configurationService instanceof StandaloneConfigurationService)) {\n    return;\n  }\n\n  const toUpdate = [];\n  Object.keys(source).forEach(key => {\n    if (isEditorConfigurationKey(key)) {\n      toUpdate.push([`editor.${key}`, source[key]]);\n    }\n\n    if (isDiffEditor && isDiffEditorConfigurationKey(key)) {\n      toUpdate.push([`diffEditor.${key}`, source[key]]);\n    }\n  });\n\n  if (toUpdate.length > 0) {\n    configurationService.updateValues(toUpdate);\n  }\n}\nlet StandaloneBulkEditService = class StandaloneBulkEditService {\n  constructor(_modelService) {\n    this._modelService = _modelService; //\n  }\n\n  hasPreviewHandler() {\n    return false;\n  }\n\n  apply(edits, _options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const textEdits = new Map();\n\n      for (let edit of edits) {\n        if (!(edit instanceof ResourceTextEdit)) {\n          throw new Error('bad edit - only text edits are supported');\n        }\n\n        const model = this._modelService.getModel(edit.resource);\n\n        if (!model) {\n          throw new Error('bad edit - model not found');\n        }\n\n        if (typeof edit.versionId === 'number' && model.getVersionId() !== edit.versionId) {\n          throw new Error('bad state - model changed in the meantime');\n        }\n\n        let array = textEdits.get(model);\n\n        if (!array) {\n          array = [];\n          textEdits.set(model, array);\n        }\n\n        array.push(EditOperation.replaceMove(Range.lift(edit.textEdit.range), edit.textEdit.text));\n      }\n\n      let totalEdits = 0;\n      let totalFiles = 0;\n\n      for (const [model, edits] of textEdits) {\n        model.pushStackElement();\n        model.pushEditOperations([], edits, () => []);\n        model.pushStackElement();\n        totalFiles += 1;\n        totalEdits += edits.length;\n      }\n\n      return {\n        ariaSummary: strings.format(StandaloneServicesNLS.bulkEditServiceSummary, totalEdits, totalFiles)\n      };\n    });\n  }\n\n};\nStandaloneBulkEditService = __decorate([__param(0, IModelService)], StandaloneBulkEditService);\n\nclass StandaloneUriLabelService {\n  getUriLabel(resource, options) {\n    if (resource.scheme === 'file') {\n      return resource.fsPath;\n    }\n\n    return resource.path;\n  }\n\n}\n\nlet StandaloneContextViewService = class StandaloneContextViewService extends ContextViewService {\n  constructor(layoutService, _codeEditorService) {\n    super(layoutService);\n    this._codeEditorService = _codeEditorService;\n  }\n\n  showContextView(delegate, container, shadowRoot) {\n    if (!container) {\n      const codeEditor = this._codeEditorService.getFocusedCodeEditor() || this._codeEditorService.getActiveCodeEditor();\n\n      if (codeEditor) {\n        container = codeEditor.getContainerDomNode();\n      }\n    }\n\n    return super.showContextView(delegate, container, shadowRoot);\n  }\n\n};\nStandaloneContextViewService = __decorate([__param(0, ILayoutService), __param(1, ICodeEditorService)], StandaloneContextViewService);\n\nclass StandaloneWorkspaceTrustManagementService {\n  constructor() {\n    this._neverEmitter = new Emitter();\n    this.onDidChangeTrust = this._neverEmitter.event;\n  }\n\n  isWorkspaceTrusted() {\n    return true;\n  }\n\n}\n\nclass StandaloneLanguageService extends LanguageService {\n  constructor() {\n    super();\n  }\n\n}\n\nclass StandaloneLogService extends LogService {\n  constructor() {\n    super(new ConsoleLogger());\n  }\n\n}\n\nlet StandaloneContextMenuService = class StandaloneContextMenuService extends ContextMenuService {\n  constructor(telemetryService, notificationService, contextViewService, keybindingService, themeService) {\n    super(telemetryService, notificationService, contextViewService, keybindingService, themeService);\n    this.configure({\n      blockMouse: false\n    }); // we do not want that in the standalone editor\n  }\n\n};\nStandaloneContextMenuService = __decorate([__param(0, ITelemetryService), __param(1, INotificationService), __param(2, IContextViewService), __param(3, IKeybindingService), __param(4, IThemeService)], StandaloneContextMenuService);\nregisterSingleton(IConfigurationService, StandaloneConfigurationService);\nregisterSingleton(ITextResourceConfigurationService, StandaloneResourceConfigurationService);\nregisterSingleton(ITextResourcePropertiesService, StandaloneResourcePropertiesService);\nregisterSingleton(IWorkspaceContextService, StandaloneWorkspaceContextService);\nregisterSingleton(ILabelService, StandaloneUriLabelService);\nregisterSingleton(ITelemetryService, StandaloneTelemetryService);\nregisterSingleton(IDialogService, StandaloneDialogService);\nregisterSingleton(INotificationService, StandaloneNotificationService);\nregisterSingleton(IMarkerService, MarkerService);\nregisterSingleton(ILanguageService, StandaloneLanguageService);\nregisterSingleton(IStandaloneThemeService, StandaloneThemeService);\nregisterSingleton(ILogService, StandaloneLogService);\nregisterSingleton(IModelService, ModelService);\nregisterSingleton(IMarkerDecorationsService, MarkerDecorationsService);\nregisterSingleton(IContextKeyService, ContextKeyService);\nregisterSingleton(IEditorProgressService, StandaloneEditorProgressService);\nregisterSingleton(IStorageService, InMemoryStorageService);\nregisterSingleton(IEditorWorkerService, EditorWorkerService);\nregisterSingleton(IBulkEditService, StandaloneBulkEditService);\nregisterSingleton(IWorkspaceTrustManagementService, StandaloneWorkspaceTrustManagementService);\nregisterSingleton(ITextModelService, StandaloneTextModelService);\nregisterSingleton(IAccessibilityService, AccessibilityService);\nregisterSingleton(IListService, ListService);\nregisterSingleton(ICommandService, StandaloneCommandService);\nregisterSingleton(IKeybindingService, StandaloneKeybindingService);\nregisterSingleton(IQuickInputService, StandaloneQuickInputService);\nregisterSingleton(IContextViewService, StandaloneContextViewService);\nregisterSingleton(IOpenerService, OpenerService);\nregisterSingleton(IClipboardService, BrowserClipboardService);\nregisterSingleton(IContextMenuService, StandaloneContextMenuService);\nregisterSingleton(IMenuService, MenuService);\n/**\n * We don't want to eagerly instantiate services because embedders get a one time chance\n * to override services when they create the first editor.\n */\n\nexport var StandaloneServices;\n\n(function (StandaloneServices) {\n  const serviceCollection = new ServiceCollection();\n\n  for (const [id, descriptor] of getSingletonServiceDescriptors()) {\n    serviceCollection.set(id, descriptor);\n  }\n\n  const instantiationService = new InstantiationService(serviceCollection, true);\n  serviceCollection.set(IInstantiationService, instantiationService);\n\n  function get(serviceId) {\n    const r = serviceCollection.get(serviceId);\n\n    if (!r) {\n      throw new Error('Missing service ' + serviceId);\n    }\n\n    if (r instanceof SyncDescriptor) {\n      return instantiationService.invokeFunction(accessor => accessor.get(serviceId));\n    } else {\n      return r;\n    }\n  }\n\n  StandaloneServices.get = get;\n  let initialized = false;\n\n  function initialize(overrides) {\n    if (initialized) {\n      return instantiationService;\n    }\n\n    initialized = true; // Add singletons that were registered after this module loaded\n\n    for (const [id, descriptor] of getSingletonServiceDescriptors()) {\n      if (!serviceCollection.get(id)) {\n        serviceCollection.set(id, descriptor);\n      }\n    } // Initialize the service collection with the overrides, but only if the\n    // service was not instantiated in the meantime.\n\n\n    for (const serviceId in overrides) {\n      if (overrides.hasOwnProperty(serviceId)) {\n        const serviceIdentifier = createDecorator(serviceId);\n        const r = serviceCollection.get(serviceIdentifier);\n\n        if (r instanceof SyncDescriptor) {\n          serviceCollection.set(serviceIdentifier, overrides[serviceId]);\n        }\n      }\n    }\n\n    return instantiationService;\n  }\n\n  StandaloneServices.initialize = initialize;\n})(StandaloneServices || (StandaloneServices = {}));","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/standalone/browser/standaloneServices.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","strings","dom","StandardKeyboardEvent","Emitter","SimpleKeybinding","createKeybinding","ImmortalReference","toDisposable","DisposableStore","Disposable","OS","isLinux","isMacintosh","Severity","URI","IBulkEditService","ResourceTextEdit","isDiffEditorConfigurationKey","isEditorConfigurationKey","EditOperation","Position","Pos","Range","IModelService","ITextModelService","ITextResourceConfigurationService","ITextResourcePropertiesService","CommandsRegistry","ICommandService","IConfigurationService","Configuration","ConfigurationModel","DefaultConfigurationModel","ConfigurationChangeEvent","IContextKeyService","IDialogService","createDecorator","IInstantiationService","AbstractKeybindingService","IKeybindingService","KeybindingResolver","KeybindingsRegistry","ResolvedKeybindingItem","USLayoutResolvedKeybinding","ILabelService","INotificationService","NoOpNotification","IEditorProgressService","ITelemetryService","IWorkspaceContextService","WorkspaceFolder","ILayoutService","StandaloneServicesNLS","ICodeEditorService","ConsoleLogger","ILogService","LogService","IWorkspaceTrustManagementService","IContextMenuService","IContextViewService","ContextViewService","LanguageService","ContextMenuService","IThemeService","getSingletonServiceDescriptors","registerSingleton","OpenerService","IEditorWorkerService","EditorWorkerService","ILanguageService","MarkerDecorationsService","IMarkerDecorationsService","ModelService","StandaloneQuickInputService","StandaloneThemeService","IStandaloneThemeService","AccessibilityService","IAccessibilityService","IMenuService","MenuService","BrowserClipboardService","IClipboardService","ContextKeyService","SyncDescriptor","InstantiationService","ServiceCollection","IListService","ListService","IMarkerService","MarkerService","IOpenerService","IQuickInputService","IStorageService","InMemoryStorageService","SimpleModel","constructor","model","disposed","_onWillDispose","textEditorModel","dispose","fire","StandaloneTextModelService","modelService","createModelReference","resource","getModel","Error","StandaloneEditorProgressService","show","NULL_PROGRESS_RUNNER","showWhile","promise","delay","total","worked","StandaloneDialogService","confirm","confirmation","doConfirm","confirmed","checkboxChecked","messageText","message","detail","window","severity","buttons","options","choice","StandaloneNotificationService","info","notify","Info","warn","Warning","error","notification","console","log","NO_OP","status","None","StandaloneCommandService","instantiationService","_onWillExecuteCommand","_onDidExecuteCommand","onWillExecuteCommand","event","onDidExecuteCommand","_instantiationService","executeCommand","id","args","command","getCommand","commandId","invokeFunction","handler","err","StandaloneKeybindingService","contextKeyService","commandService","telemetryService","notificationService","logService","codeEditorService","_cachedResolver","_dynamicKeybindings","_domNodeListeners","addContainer","domNode","disposables","add","addDisposableListener","EventType","KEY_DOWN","keyEvent","shouldPreventDefault","_dispatch","preventDefault","stopPropagation","KEY_UP","_singleModifierDispatch","push","DomNodeListeners","removeContainer","domNodeListeners","splice","addCodeEditor","codeEditor","getOption","getContainerDomNode","removeCodeEditor","_register","onCodeEditorAdd","onCodeEditorRemove","listCodeEditors","forEach","addDiffEditor","diffEditor","removeDiffEditor","onDiffEditorAdd","onDiffEditorRemove","listDiffEditors","addDynamicKeybinding","_keybinding","when","keybinding","toDispose","parts","weight1","weight2","extensionId","isBuiltinExtension","kb","updateResolver","source","registerCommand","_onDidUpdateKeybindings","_getResolver","defaults","_toNormalizedKeybindingItems","getDefaultKeybindings","overrides","str","_log","_documentHasFocus","document","hasFocus","items","isDefault","resultLen","item","undefined","commandArgs","resolvedKeybindings","resolveUserBinding","resolvedKeybinding","resolveKeyboardEvent","keyboardEvent","ctrlKey","shiftKey","altKey","metaKey","keyCode","toChord","isConfigurationOverrides","thing","overrideIdentifier","StandaloneConfigurationService","_onDidChangeConfiguration","onDidChangeConfiguration","_configuration","getValue","arg1","arg2","section","updateValues","values","previous","data","toData","changedKeys","entry","updateValue","configurationChangeEvent","keys","sourceConfig","arg3","arg4","inspect","StandaloneResourceConfigurationService","configurationService","affectedKeys","affectsConfiguration","configuration","position","isIPosition","StandaloneResourcePropertiesService","getEOL","language","eol","StandaloneTelemetryService","publicLog","eventName","publicLog2","StandaloneWorkspaceContextService","from","scheme","SCHEME","authority","path","workspace","folders","uri","name","index","getWorkspace","updateConfigurationService","isDiffEditor","toUpdate","StandaloneBulkEditService","_modelService","hasPreviewHandler","edits","_options","textEdits","Map","edit","versionId","getVersionId","array","get","set","replaceMove","lift","textEdit","range","text","totalEdits","totalFiles","pushStackElement","pushEditOperations","ariaSummary","format","bulkEditServiceSummary","StandaloneUriLabelService","getUriLabel","fsPath","StandaloneContextViewService","layoutService","_codeEditorService","showContextView","delegate","container","shadowRoot","getFocusedCodeEditor","getActiveCodeEditor","StandaloneWorkspaceTrustManagementService","_neverEmitter","onDidChangeTrust","isWorkspaceTrusted","StandaloneLanguageService","StandaloneLogService","StandaloneContextMenuService","contextViewService","keybindingService","themeService","configure","blockMouse","StandaloneServices","serviceCollection","descriptor","serviceId","accessor","initialized","initialize","hasOwnProperty","serviceIdentifier"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport '../../common/languages/languageConfigurationRegistry.js';\nimport './standaloneCodeEditorService.js';\nimport './standaloneLayoutService.js';\nimport '../../../platform/undoRedo/common/undoRedoService.js';\nimport '../../common/services/languageFeatureDebounce.js';\nimport * as strings from '../../../base/common/strings.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { SimpleKeybinding, createKeybinding } from '../../../base/common/keybindings.js';\nimport { ImmortalReference, toDisposable, DisposableStore, Disposable } from '../../../base/common/lifecycle.js';\nimport { OS, isLinux, isMacintosh } from '../../../base/common/platform.js';\nimport Severity from '../../../base/common/severity.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { IBulkEditService, ResourceTextEdit } from '../../browser/services/bulkEditService.js';\nimport { isDiffEditorConfigurationKey, isEditorConfigurationKey } from '../../common/config/editorConfigurationSchema.js';\nimport { EditOperation } from '../../common/core/editOperation.js';\nimport { Position as Pos } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { IModelService } from '../../common/services/model.js';\nimport { ITextModelService } from '../../common/services/resolverService.js';\nimport { ITextResourceConfigurationService, ITextResourcePropertiesService } from '../../common/services/textResourceConfiguration.js';\nimport { CommandsRegistry, ICommandService } from '../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { Configuration, ConfigurationModel, DefaultConfigurationModel, ConfigurationChangeEvent } from '../../../platform/configuration/common/configurationModels.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IDialogService } from '../../../platform/dialogs/common/dialogs.js';\nimport { createDecorator, IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { AbstractKeybindingService } from '../../../platform/keybinding/common/abstractKeybindingService.js';\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\nimport { KeybindingResolver } from '../../../platform/keybinding/common/keybindingResolver.js';\nimport { KeybindingsRegistry } from '../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { ResolvedKeybindingItem } from '../../../platform/keybinding/common/resolvedKeybindingItem.js';\nimport { USLayoutResolvedKeybinding } from '../../../platform/keybinding/common/usLayoutResolvedKeybinding.js';\nimport { ILabelService } from '../../../platform/label/common/label.js';\nimport { INotificationService, NoOpNotification } from '../../../platform/notification/common/notification.js';\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\nimport { ITelemetryService } from '../../../platform/telemetry/common/telemetry.js';\nimport { IWorkspaceContextService, WorkspaceFolder } from '../../../platform/workspace/common/workspace.js';\nimport { ILayoutService } from '../../../platform/layout/browser/layoutService.js';\nimport { StandaloneServicesNLS } from '../../common/standaloneStrings.js';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\nimport { ConsoleLogger, ILogService, LogService } from '../../../platform/log/common/log.js';\nimport { IWorkspaceTrustManagementService } from '../../../platform/workspace/common/workspaceTrust.js';\nimport { IContextMenuService, IContextViewService } from '../../../platform/contextview/browser/contextView.js';\nimport { ContextViewService } from '../../../platform/contextview/browser/contextViewService.js';\nimport { LanguageService } from '../../common/services/languageService.js';\nimport { ContextMenuService } from '../../../platform/contextview/browser/contextMenuService.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { getSingletonServiceDescriptors, registerSingleton } from '../../../platform/instantiation/common/extensions.js';\nimport { OpenerService } from '../../browser/services/openerService.js';\nimport { IEditorWorkerService } from '../../common/services/editorWorker.js';\nimport { EditorWorkerService } from '../../browser/services/editorWorkerService.js';\nimport { ILanguageService } from '../../common/services/language.js';\nimport { MarkerDecorationsService } from '../../common/services/markerDecorationsService.js';\nimport { IMarkerDecorationsService } from '../../common/services/markerDecorations.js';\nimport { ModelService } from '../../common/services/modelService.js';\nimport { StandaloneQuickInputService } from './quickInput/standaloneQuickInputService.js';\nimport { StandaloneThemeService } from './standaloneThemeService.js';\nimport { IStandaloneThemeService } from '../common/standaloneTheme.js';\nimport { AccessibilityService } from '../../../platform/accessibility/browser/accessibilityService.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nimport { IMenuService } from '../../../platform/actions/common/actions.js';\nimport { MenuService } from '../../../platform/actions/common/menuService.js';\nimport { BrowserClipboardService } from '../../../platform/clipboard/browser/clipboardService.js';\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\nimport { ContextKeyService } from '../../../platform/contextkey/browser/contextKeyService.js';\nimport { SyncDescriptor } from '../../../platform/instantiation/common/descriptors.js';\nimport { InstantiationService } from '../../../platform/instantiation/common/instantiationService.js';\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\nimport { IListService, ListService } from '../../../platform/list/browser/listService.js';\nimport { IMarkerService } from '../../../platform/markers/common/markers.js';\nimport { MarkerService } from '../../../platform/markers/common/markerService.js';\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\nimport { IQuickInputService } from '../../../platform/quickinput/common/quickInput.js';\nimport { IStorageService, InMemoryStorageService } from '../../../platform/storage/common/storage.js';\nclass SimpleModel {\n    constructor(model) {\n        this.disposed = false;\n        this.model = model;\n        this._onWillDispose = new Emitter();\n    }\n    get textEditorModel() {\n        return this.model;\n    }\n    dispose() {\n        this.disposed = true;\n        this._onWillDispose.fire();\n    }\n}\nlet StandaloneTextModelService = class StandaloneTextModelService {\n    constructor(modelService) {\n        this.modelService = modelService;\n    }\n    createModelReference(resource) {\n        const model = this.modelService.getModel(resource);\n        if (!model) {\n            return Promise.reject(new Error(`Model not found`));\n        }\n        return Promise.resolve(new ImmortalReference(new SimpleModel(model)));\n    }\n};\nStandaloneTextModelService = __decorate([\n    __param(0, IModelService)\n], StandaloneTextModelService);\nclass StandaloneEditorProgressService {\n    show() {\n        return StandaloneEditorProgressService.NULL_PROGRESS_RUNNER;\n    }\n    showWhile(promise, delay) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield promise;\n        });\n    }\n}\nStandaloneEditorProgressService.NULL_PROGRESS_RUNNER = {\n    done: () => { },\n    total: () => { },\n    worked: () => { }\n};\nclass StandaloneDialogService {\n    confirm(confirmation) {\n        return this.doConfirm(confirmation).then(confirmed => {\n            return {\n                confirmed,\n                checkboxChecked: false // unsupported\n            };\n        });\n    }\n    doConfirm(confirmation) {\n        let messageText = confirmation.message;\n        if (confirmation.detail) {\n            messageText = messageText + '\\n\\n' + confirmation.detail;\n        }\n        return Promise.resolve(window.confirm(messageText));\n    }\n    show(severity, message, buttons, options) {\n        return Promise.resolve({ choice: 0 });\n    }\n}\nexport class StandaloneNotificationService {\n    info(message) {\n        return this.notify({ severity: Severity.Info, message });\n    }\n    warn(message) {\n        return this.notify({ severity: Severity.Warning, message });\n    }\n    error(error) {\n        return this.notify({ severity: Severity.Error, message: error });\n    }\n    notify(notification) {\n        switch (notification.severity) {\n            case Severity.Error:\n                console.error(notification.message);\n                break;\n            case Severity.Warning:\n                console.warn(notification.message);\n                break;\n            default:\n                console.log(notification.message);\n                break;\n        }\n        return StandaloneNotificationService.NO_OP;\n    }\n    status(message, options) {\n        return Disposable.None;\n    }\n}\nStandaloneNotificationService.NO_OP = new NoOpNotification();\nlet StandaloneCommandService = class StandaloneCommandService {\n    constructor(instantiationService) {\n        this._onWillExecuteCommand = new Emitter();\n        this._onDidExecuteCommand = new Emitter();\n        this.onWillExecuteCommand = this._onWillExecuteCommand.event;\n        this.onDidExecuteCommand = this._onDidExecuteCommand.event;\n        this._instantiationService = instantiationService;\n    }\n    executeCommand(id, ...args) {\n        const command = CommandsRegistry.getCommand(id);\n        if (!command) {\n            return Promise.reject(new Error(`command '${id}' not found`));\n        }\n        try {\n            this._onWillExecuteCommand.fire({ commandId: id, args });\n            const result = this._instantiationService.invokeFunction.apply(this._instantiationService, [command.handler, ...args]);\n            this._onDidExecuteCommand.fire({ commandId: id, args });\n            return Promise.resolve(result);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n};\nStandaloneCommandService = __decorate([\n    __param(0, IInstantiationService)\n], StandaloneCommandService);\nexport { StandaloneCommandService };\nlet StandaloneKeybindingService = class StandaloneKeybindingService extends AbstractKeybindingService {\n    constructor(contextKeyService, commandService, telemetryService, notificationService, logService, codeEditorService) {\n        super(contextKeyService, commandService, telemetryService, notificationService, logService);\n        this._cachedResolver = null;\n        this._dynamicKeybindings = [];\n        this._domNodeListeners = [];\n        const addContainer = (domNode) => {\n            const disposables = new DisposableStore();\n            // for standard keybindings\n            disposables.add(dom.addDisposableListener(domNode, dom.EventType.KEY_DOWN, (e) => {\n                const keyEvent = new StandardKeyboardEvent(e);\n                const shouldPreventDefault = this._dispatch(keyEvent, keyEvent.target);\n                if (shouldPreventDefault) {\n                    keyEvent.preventDefault();\n                    keyEvent.stopPropagation();\n                }\n            }));\n            // for single modifier chord keybindings (e.g. shift shift)\n            disposables.add(dom.addDisposableListener(domNode, dom.EventType.KEY_UP, (e) => {\n                const keyEvent = new StandardKeyboardEvent(e);\n                const shouldPreventDefault = this._singleModifierDispatch(keyEvent, keyEvent.target);\n                if (shouldPreventDefault) {\n                    keyEvent.preventDefault();\n                }\n            }));\n            this._domNodeListeners.push(new DomNodeListeners(domNode, disposables));\n        };\n        const removeContainer = (domNode) => {\n            for (let i = 0; i < this._domNodeListeners.length; i++) {\n                const domNodeListeners = this._domNodeListeners[i];\n                if (domNodeListeners.domNode === domNode) {\n                    this._domNodeListeners.splice(i, 1);\n                    domNodeListeners.dispose();\n                }\n            }\n        };\n        const addCodeEditor = (codeEditor) => {\n            if (codeEditor.getOption(54 /* inDiffEditor */)) {\n                return;\n            }\n            addContainer(codeEditor.getContainerDomNode());\n        };\n        const removeCodeEditor = (codeEditor) => {\n            if (codeEditor.getOption(54 /* inDiffEditor */)) {\n                return;\n            }\n            removeContainer(codeEditor.getContainerDomNode());\n        };\n        this._register(codeEditorService.onCodeEditorAdd(addCodeEditor));\n        this._register(codeEditorService.onCodeEditorRemove(removeCodeEditor));\n        codeEditorService.listCodeEditors().forEach(addCodeEditor);\n        const addDiffEditor = (diffEditor) => {\n            addContainer(diffEditor.getContainerDomNode());\n        };\n        const removeDiffEditor = (diffEditor) => {\n            removeContainer(diffEditor.getContainerDomNode());\n        };\n        this._register(codeEditorService.onDiffEditorAdd(addDiffEditor));\n        this._register(codeEditorService.onDiffEditorRemove(removeDiffEditor));\n        codeEditorService.listDiffEditors().forEach(addDiffEditor);\n    }\n    addDynamicKeybinding(commandId, _keybinding, handler, when) {\n        const keybinding = createKeybinding(_keybinding, OS);\n        const toDispose = new DisposableStore();\n        if (keybinding) {\n            this._dynamicKeybindings.push({\n                keybinding: keybinding.parts,\n                command: commandId,\n                when: when,\n                weight1: 1000,\n                weight2: 0,\n                extensionId: null,\n                isBuiltinExtension: false\n            });\n            toDispose.add(toDisposable(() => {\n                for (let i = 0; i < this._dynamicKeybindings.length; i++) {\n                    const kb = this._dynamicKeybindings[i];\n                    if (kb.command === commandId) {\n                        this._dynamicKeybindings.splice(i, 1);\n                        this.updateResolver({ source: 1 /* Default */ });\n                        return;\n                    }\n                }\n            }));\n        }\n        toDispose.add(CommandsRegistry.registerCommand(commandId, handler));\n        this.updateResolver({ source: 1 /* Default */ });\n        return toDispose;\n    }\n    updateResolver(event) {\n        this._cachedResolver = null;\n        this._onDidUpdateKeybindings.fire(event);\n    }\n    _getResolver() {\n        if (!this._cachedResolver) {\n            const defaults = this._toNormalizedKeybindingItems(KeybindingsRegistry.getDefaultKeybindings(), true);\n            const overrides = this._toNormalizedKeybindingItems(this._dynamicKeybindings, false);\n            this._cachedResolver = new KeybindingResolver(defaults, overrides, (str) => this._log(str));\n        }\n        return this._cachedResolver;\n    }\n    _documentHasFocus() {\n        return document.hasFocus();\n    }\n    _toNormalizedKeybindingItems(items, isDefault) {\n        const result = [];\n        let resultLen = 0;\n        for (const item of items) {\n            const when = item.when || undefined;\n            const keybinding = item.keybinding;\n            if (!keybinding) {\n                // This might be a removal keybinding item in user settings => accept it\n                result[resultLen++] = new ResolvedKeybindingItem(undefined, item.command, item.commandArgs, when, isDefault, null, false);\n            }\n            else {\n                const resolvedKeybindings = USLayoutResolvedKeybinding.resolveUserBinding(keybinding, OS);\n                for (const resolvedKeybinding of resolvedKeybindings) {\n                    result[resultLen++] = new ResolvedKeybindingItem(resolvedKeybinding, item.command, item.commandArgs, when, isDefault, null, false);\n                }\n            }\n        }\n        return result;\n    }\n    resolveKeyboardEvent(keyboardEvent) {\n        const keybinding = new SimpleKeybinding(keyboardEvent.ctrlKey, keyboardEvent.shiftKey, keyboardEvent.altKey, keyboardEvent.metaKey, keyboardEvent.keyCode).toChord();\n        return new USLayoutResolvedKeybinding(keybinding, OS);\n    }\n};\nStandaloneKeybindingService = __decorate([\n    __param(0, IContextKeyService),\n    __param(1, ICommandService),\n    __param(2, ITelemetryService),\n    __param(3, INotificationService),\n    __param(4, ILogService),\n    __param(5, ICodeEditorService)\n], StandaloneKeybindingService);\nexport { StandaloneKeybindingService };\nclass DomNodeListeners extends Disposable {\n    constructor(domNode, disposables) {\n        super();\n        this.domNode = domNode;\n        this._register(disposables);\n    }\n}\nfunction isConfigurationOverrides(thing) {\n    return thing\n        && typeof thing === 'object'\n        && (!thing.overrideIdentifier || typeof thing.overrideIdentifier === 'string')\n        && (!thing.resource || thing.resource instanceof URI);\n}\nexport class StandaloneConfigurationService {\n    constructor() {\n        this._onDidChangeConfiguration = new Emitter();\n        this.onDidChangeConfiguration = this._onDidChangeConfiguration.event;\n        this._configuration = new Configuration(new DefaultConfigurationModel(), new ConfigurationModel());\n    }\n    getValue(arg1, arg2) {\n        const section = typeof arg1 === 'string' ? arg1 : undefined;\n        const overrides = isConfigurationOverrides(arg1) ? arg1 : isConfigurationOverrides(arg2) ? arg2 : {};\n        return this._configuration.getValue(section, overrides, undefined);\n    }\n    updateValues(values) {\n        const previous = { data: this._configuration.toData() };\n        const changedKeys = [];\n        for (const entry of values) {\n            const [key, value] = entry;\n            if (this.getValue(key) === value) {\n                continue;\n            }\n            this._configuration.updateValue(key, value);\n            changedKeys.push(key);\n        }\n        if (changedKeys.length > 0) {\n            const configurationChangeEvent = new ConfigurationChangeEvent({ keys: changedKeys, overrides: [] }, previous, this._configuration);\n            configurationChangeEvent.source = 7 /* MEMORY */;\n            configurationChangeEvent.sourceConfig = null;\n            this._onDidChangeConfiguration.fire(configurationChangeEvent);\n        }\n        return Promise.resolve();\n    }\n    updateValue(key, value, arg3, arg4) {\n        return this.updateValues([[key, value]]);\n    }\n    inspect(key, options = {}) {\n        return this._configuration.inspect(key, options, undefined);\n    }\n}\nlet StandaloneResourceConfigurationService = class StandaloneResourceConfigurationService {\n    constructor(configurationService) {\n        this.configurationService = configurationService;\n        this._onDidChangeConfiguration = new Emitter();\n        this.configurationService.onDidChangeConfiguration((e) => {\n            this._onDidChangeConfiguration.fire({ affectedKeys: e.affectedKeys, affectsConfiguration: (resource, configuration) => e.affectsConfiguration(configuration) });\n        });\n    }\n    getValue(resource, arg2, arg3) {\n        const position = Pos.isIPosition(arg2) ? arg2 : null;\n        const section = position ? (typeof arg3 === 'string' ? arg3 : undefined) : (typeof arg2 === 'string' ? arg2 : undefined);\n        if (typeof section === 'undefined') {\n            return this.configurationService.getValue();\n        }\n        return this.configurationService.getValue(section);\n    }\n};\nStandaloneResourceConfigurationService = __decorate([\n    __param(0, IConfigurationService)\n], StandaloneResourceConfigurationService);\nlet StandaloneResourcePropertiesService = class StandaloneResourcePropertiesService {\n    constructor(configurationService) {\n        this.configurationService = configurationService;\n    }\n    getEOL(resource, language) {\n        const eol = this.configurationService.getValue('files.eol', { overrideIdentifier: language, resource });\n        if (eol && typeof eol === 'string' && eol !== 'auto') {\n            return eol;\n        }\n        return (isLinux || isMacintosh) ? '\\n' : '\\r\\n';\n    }\n};\nStandaloneResourcePropertiesService = __decorate([\n    __param(0, IConfigurationService)\n], StandaloneResourcePropertiesService);\nclass StandaloneTelemetryService {\n    publicLog(eventName, data) {\n        return Promise.resolve(undefined);\n    }\n    publicLog2(eventName, data) {\n        return this.publicLog(eventName, data);\n    }\n}\nclass StandaloneWorkspaceContextService {\n    constructor() {\n        const resource = URI.from({ scheme: StandaloneWorkspaceContextService.SCHEME, authority: 'model', path: '/' });\n        this.workspace = { id: '4064f6ec-cb38-4ad0-af64-ee6467e63c82', folders: [new WorkspaceFolder({ uri: resource, name: '', index: 0 })] };\n    }\n    getWorkspace() {\n        return this.workspace;\n    }\n}\nStandaloneWorkspaceContextService.SCHEME = 'inmemory';\nexport function updateConfigurationService(configurationService, source, isDiffEditor) {\n    if (!source) {\n        return;\n    }\n    if (!(configurationService instanceof StandaloneConfigurationService)) {\n        return;\n    }\n    const toUpdate = [];\n    Object.keys(source).forEach((key) => {\n        if (isEditorConfigurationKey(key)) {\n            toUpdate.push([`editor.${key}`, source[key]]);\n        }\n        if (isDiffEditor && isDiffEditorConfigurationKey(key)) {\n            toUpdate.push([`diffEditor.${key}`, source[key]]);\n        }\n    });\n    if (toUpdate.length > 0) {\n        configurationService.updateValues(toUpdate);\n    }\n}\nlet StandaloneBulkEditService = class StandaloneBulkEditService {\n    constructor(_modelService) {\n        this._modelService = _modelService;\n        //\n    }\n    hasPreviewHandler() {\n        return false;\n    }\n    apply(edits, _options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const textEdits = new Map();\n            for (let edit of edits) {\n                if (!(edit instanceof ResourceTextEdit)) {\n                    throw new Error('bad edit - only text edits are supported');\n                }\n                const model = this._modelService.getModel(edit.resource);\n                if (!model) {\n                    throw new Error('bad edit - model not found');\n                }\n                if (typeof edit.versionId === 'number' && model.getVersionId() !== edit.versionId) {\n                    throw new Error('bad state - model changed in the meantime');\n                }\n                let array = textEdits.get(model);\n                if (!array) {\n                    array = [];\n                    textEdits.set(model, array);\n                }\n                array.push(EditOperation.replaceMove(Range.lift(edit.textEdit.range), edit.textEdit.text));\n            }\n            let totalEdits = 0;\n            let totalFiles = 0;\n            for (const [model, edits] of textEdits) {\n                model.pushStackElement();\n                model.pushEditOperations([], edits, () => []);\n                model.pushStackElement();\n                totalFiles += 1;\n                totalEdits += edits.length;\n            }\n            return {\n                ariaSummary: strings.format(StandaloneServicesNLS.bulkEditServiceSummary, totalEdits, totalFiles)\n            };\n        });\n    }\n};\nStandaloneBulkEditService = __decorate([\n    __param(0, IModelService)\n], StandaloneBulkEditService);\nclass StandaloneUriLabelService {\n    getUriLabel(resource, options) {\n        if (resource.scheme === 'file') {\n            return resource.fsPath;\n        }\n        return resource.path;\n    }\n}\nlet StandaloneContextViewService = class StandaloneContextViewService extends ContextViewService {\n    constructor(layoutService, _codeEditorService) {\n        super(layoutService);\n        this._codeEditorService = _codeEditorService;\n    }\n    showContextView(delegate, container, shadowRoot) {\n        if (!container) {\n            const codeEditor = this._codeEditorService.getFocusedCodeEditor() || this._codeEditorService.getActiveCodeEditor();\n            if (codeEditor) {\n                container = codeEditor.getContainerDomNode();\n            }\n        }\n        return super.showContextView(delegate, container, shadowRoot);\n    }\n};\nStandaloneContextViewService = __decorate([\n    __param(0, ILayoutService),\n    __param(1, ICodeEditorService)\n], StandaloneContextViewService);\nclass StandaloneWorkspaceTrustManagementService {\n    constructor() {\n        this._neverEmitter = new Emitter();\n        this.onDidChangeTrust = this._neverEmitter.event;\n    }\n    isWorkspaceTrusted() {\n        return true;\n    }\n}\nclass StandaloneLanguageService extends LanguageService {\n    constructor() {\n        super();\n    }\n}\nclass StandaloneLogService extends LogService {\n    constructor() {\n        super(new ConsoleLogger());\n    }\n}\nlet StandaloneContextMenuService = class StandaloneContextMenuService extends ContextMenuService {\n    constructor(telemetryService, notificationService, contextViewService, keybindingService, themeService) {\n        super(telemetryService, notificationService, contextViewService, keybindingService, themeService);\n        this.configure({ blockMouse: false }); // we do not want that in the standalone editor\n    }\n};\nStandaloneContextMenuService = __decorate([\n    __param(0, ITelemetryService),\n    __param(1, INotificationService),\n    __param(2, IContextViewService),\n    __param(3, IKeybindingService),\n    __param(4, IThemeService)\n], StandaloneContextMenuService);\nregisterSingleton(IConfigurationService, StandaloneConfigurationService);\nregisterSingleton(ITextResourceConfigurationService, StandaloneResourceConfigurationService);\nregisterSingleton(ITextResourcePropertiesService, StandaloneResourcePropertiesService);\nregisterSingleton(IWorkspaceContextService, StandaloneWorkspaceContextService);\nregisterSingleton(ILabelService, StandaloneUriLabelService);\nregisterSingleton(ITelemetryService, StandaloneTelemetryService);\nregisterSingleton(IDialogService, StandaloneDialogService);\nregisterSingleton(INotificationService, StandaloneNotificationService);\nregisterSingleton(IMarkerService, MarkerService);\nregisterSingleton(ILanguageService, StandaloneLanguageService);\nregisterSingleton(IStandaloneThemeService, StandaloneThemeService);\nregisterSingleton(ILogService, StandaloneLogService);\nregisterSingleton(IModelService, ModelService);\nregisterSingleton(IMarkerDecorationsService, MarkerDecorationsService);\nregisterSingleton(IContextKeyService, ContextKeyService);\nregisterSingleton(IEditorProgressService, StandaloneEditorProgressService);\nregisterSingleton(IStorageService, InMemoryStorageService);\nregisterSingleton(IEditorWorkerService, EditorWorkerService);\nregisterSingleton(IBulkEditService, StandaloneBulkEditService);\nregisterSingleton(IWorkspaceTrustManagementService, StandaloneWorkspaceTrustManagementService);\nregisterSingleton(ITextModelService, StandaloneTextModelService);\nregisterSingleton(IAccessibilityService, AccessibilityService);\nregisterSingleton(IListService, ListService);\nregisterSingleton(ICommandService, StandaloneCommandService);\nregisterSingleton(IKeybindingService, StandaloneKeybindingService);\nregisterSingleton(IQuickInputService, StandaloneQuickInputService);\nregisterSingleton(IContextViewService, StandaloneContextViewService);\nregisterSingleton(IOpenerService, OpenerService);\nregisterSingleton(IClipboardService, BrowserClipboardService);\nregisterSingleton(IContextMenuService, StandaloneContextMenuService);\nregisterSingleton(IMenuService, MenuService);\n/**\n * We don't want to eagerly instantiate services because embedders get a one time chance\n * to override services when they create the first editor.\n */\nexport var StandaloneServices;\n(function (StandaloneServices) {\n    const serviceCollection = new ServiceCollection();\n    for (const [id, descriptor] of getSingletonServiceDescriptors()) {\n        serviceCollection.set(id, descriptor);\n    }\n    const instantiationService = new InstantiationService(serviceCollection, true);\n    serviceCollection.set(IInstantiationService, instantiationService);\n    function get(serviceId) {\n        const r = serviceCollection.get(serviceId);\n        if (!r) {\n            throw new Error('Missing service ' + serviceId);\n        }\n        if (r instanceof SyncDescriptor) {\n            return instantiationService.invokeFunction((accessor) => accessor.get(serviceId));\n        }\n        else {\n            return r;\n        }\n    }\n    StandaloneServices.get = get;\n    let initialized = false;\n    function initialize(overrides) {\n        if (initialized) {\n            return instantiationService;\n        }\n        initialized = true;\n        // Add singletons that were registered after this module loaded\n        for (const [id, descriptor] of getSingletonServiceDescriptors()) {\n            if (!serviceCollection.get(id)) {\n                serviceCollection.set(id, descriptor);\n            }\n        }\n        // Initialize the service collection with the overrides, but only if the\n        // service was not instantiated in the meantime.\n        for (const serviceId in overrides) {\n            if (overrides.hasOwnProperty(serviceId)) {\n                const serviceIdentifier = createDecorator(serviceId);\n                const r = serviceCollection.get(serviceIdentifier);\n                if (r instanceof SyncDescriptor) {\n                    serviceCollection.set(serviceIdentifier, overrides[serviceId]);\n                }\n            }\n        }\n        return instantiationService;\n    }\n    StandaloneServices.initialize = initialize;\n})(StandaloneServices || (StandaloneServices = {}));\n"]},"metadata":{},"sourceType":"module"}