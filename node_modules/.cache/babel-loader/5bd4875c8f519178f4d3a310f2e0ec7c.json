{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './viewCursors.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { IntervalTimer, TimeoutTimer } from '../../../../base/common/async.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { ViewCursor } from './viewCursor.js';\nimport { TextEditorCursorStyle } from '../../../common/config/editorOptions.js';\nimport { editorCursorBackground, editorCursorForeground } from '../../../common/core/editorColorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nexport class ViewCursors extends ViewPart {\n  constructor(context) {\n    super(context);\n    const options = this._context.configuration.options;\n    this._readOnly = options.get(81\n    /* readOnly */\n    );\n    this._cursorBlinking = options.get(22\n    /* cursorBlinking */\n    );\n    this._cursorStyle = options.get(24\n    /* cursorStyle */\n    );\n    this._cursorSmoothCaretAnimation = options.get(23\n    /* cursorSmoothCaretAnimation */\n    );\n    this._selectionIsEmpty = true;\n    this._isComposingInput = false;\n    this._isVisible = false;\n    this._primaryCursor = new ViewCursor(this._context);\n    this._secondaryCursors = [];\n    this._renderData = [];\n    this._domNode = createFastDomNode(document.createElement('div'));\n\n    this._domNode.setAttribute('role', 'presentation');\n\n    this._domNode.setAttribute('aria-hidden', 'true');\n\n    this._updateDomClassName();\n\n    this._domNode.appendChild(this._primaryCursor.getDomNode());\n\n    this._startCursorBlinkAnimation = new TimeoutTimer();\n    this._cursorFlatBlinkInterval = new IntervalTimer();\n    this._blinkingEnabled = false;\n    this._editorHasFocus = false;\n\n    this._updateBlinking();\n  }\n\n  dispose() {\n    super.dispose();\n\n    this._startCursorBlinkAnimation.dispose();\n\n    this._cursorFlatBlinkInterval.dispose();\n  }\n\n  getDomNode() {\n    return this._domNode;\n  } // --- begin event handlers\n\n\n  onCompositionStart(e) {\n    this._isComposingInput = true;\n\n    this._updateBlinking();\n\n    return true;\n  }\n\n  onCompositionEnd(e) {\n    this._isComposingInput = false;\n\n    this._updateBlinking();\n\n    return true;\n  }\n\n  onConfigurationChanged(e) {\n    const options = this._context.configuration.options;\n    this._readOnly = options.get(81\n    /* readOnly */\n    );\n    this._cursorBlinking = options.get(22\n    /* cursorBlinking */\n    );\n    this._cursorStyle = options.get(24\n    /* cursorStyle */\n    );\n    this._cursorSmoothCaretAnimation = options.get(23\n    /* cursorSmoothCaretAnimation */\n    );\n\n    this._updateBlinking();\n\n    this._updateDomClassName();\n\n    this._primaryCursor.onConfigurationChanged(e);\n\n    for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n      this._secondaryCursors[i].onConfigurationChanged(e);\n    }\n\n    return true;\n  }\n\n  _onCursorPositionChanged(position, secondaryPositions) {\n    this._primaryCursor.onCursorPositionChanged(position);\n\n    this._updateBlinking();\n\n    if (this._secondaryCursors.length < secondaryPositions.length) {\n      // Create new cursors\n      const addCnt = secondaryPositions.length - this._secondaryCursors.length;\n\n      for (let i = 0; i < addCnt; i++) {\n        const newCursor = new ViewCursor(this._context);\n\n        this._domNode.domNode.insertBefore(newCursor.getDomNode().domNode, this._primaryCursor.getDomNode().domNode.nextSibling);\n\n        this._secondaryCursors.push(newCursor);\n      }\n    } else if (this._secondaryCursors.length > secondaryPositions.length) {\n      // Remove some cursors\n      const removeCnt = this._secondaryCursors.length - secondaryPositions.length;\n\n      for (let i = 0; i < removeCnt; i++) {\n        this._domNode.removeChild(this._secondaryCursors[0].getDomNode());\n\n        this._secondaryCursors.splice(0, 1);\n      }\n    }\n\n    for (let i = 0; i < secondaryPositions.length; i++) {\n      this._secondaryCursors[i].onCursorPositionChanged(secondaryPositions[i]);\n    }\n  }\n\n  onCursorStateChanged(e) {\n    const positions = [];\n\n    for (let i = 0, len = e.selections.length; i < len; i++) {\n      positions[i] = e.selections[i].getPosition();\n    }\n\n    this._onCursorPositionChanged(positions[0], positions.slice(1));\n\n    const selectionIsEmpty = e.selections[0].isEmpty();\n\n    if (this._selectionIsEmpty !== selectionIsEmpty) {\n      this._selectionIsEmpty = selectionIsEmpty;\n\n      this._updateDomClassName();\n    }\n\n    return true;\n  }\n\n  onDecorationsChanged(e) {\n    // true for inline decorations that can end up relayouting text\n    return true;\n  }\n\n  onFlushed(e) {\n    return true;\n  }\n\n  onFocusChanged(e) {\n    this._editorHasFocus = e.isFocused;\n\n    this._updateBlinking();\n\n    return false;\n  }\n\n  onLinesChanged(e) {\n    return true;\n  }\n\n  onLinesDeleted(e) {\n    return true;\n  }\n\n  onLinesInserted(e) {\n    return true;\n  }\n\n  onScrollChanged(e) {\n    return true;\n  }\n\n  onTokensChanged(e) {\n    const shouldRender = position => {\n      for (let i = 0, len = e.ranges.length; i < len; i++) {\n        if (e.ranges[i].fromLineNumber <= position.lineNumber && position.lineNumber <= e.ranges[i].toLineNumber) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    if (shouldRender(this._primaryCursor.getPosition())) {\n      return true;\n    }\n\n    for (const secondaryCursor of this._secondaryCursors) {\n      if (shouldRender(secondaryCursor.getPosition())) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  onZonesChanged(e) {\n    return true;\n  } // --- end event handlers\n  // ---- blinking logic\n\n\n  _getCursorBlinking() {\n    if (this._isComposingInput) {\n      // avoid double cursors\n      return 0\n      /* Hidden */\n      ;\n    }\n\n    if (!this._editorHasFocus) {\n      return 0\n      /* Hidden */\n      ;\n    }\n\n    if (this._readOnly) {\n      return 5\n      /* Solid */\n      ;\n    }\n\n    return this._cursorBlinking;\n  }\n\n  _updateBlinking() {\n    this._startCursorBlinkAnimation.cancel();\n\n    this._cursorFlatBlinkInterval.cancel();\n\n    const blinkingStyle = this._getCursorBlinking(); // hidden and solid are special as they involve no animations\n\n\n    const isHidden = blinkingStyle === 0\n    /* Hidden */\n    ;\n    const isSolid = blinkingStyle === 5\n    /* Solid */\n    ;\n\n    if (isHidden) {\n      this._hide();\n    } else {\n      this._show();\n    }\n\n    this._blinkingEnabled = false;\n\n    this._updateDomClassName();\n\n    if (!isHidden && !isSolid) {\n      if (blinkingStyle === 1\n      /* Blink */\n      ) {\n        // flat blinking is handled by JavaScript to save battery life due to Chromium step timing issue https://bugs.chromium.org/p/chromium/issues/detail?id=361587\n        this._cursorFlatBlinkInterval.cancelAndSet(() => {\n          if (this._isVisible) {\n            this._hide();\n          } else {\n            this._show();\n          }\n        }, ViewCursors.BLINK_INTERVAL);\n      } else {\n        this._startCursorBlinkAnimation.setIfNotSet(() => {\n          this._blinkingEnabled = true;\n\n          this._updateDomClassName();\n        }, ViewCursors.BLINK_INTERVAL);\n      }\n    }\n  } // --- end blinking logic\n\n\n  _updateDomClassName() {\n    this._domNode.setClassName(this._getClassName());\n  }\n\n  _getClassName() {\n    let result = 'cursors-layer';\n\n    if (!this._selectionIsEmpty) {\n      result += ' has-selection';\n    }\n\n    switch (this._cursorStyle) {\n      case TextEditorCursorStyle.Line:\n        result += ' cursor-line-style';\n        break;\n\n      case TextEditorCursorStyle.Block:\n        result += ' cursor-block-style';\n        break;\n\n      case TextEditorCursorStyle.Underline:\n        result += ' cursor-underline-style';\n        break;\n\n      case TextEditorCursorStyle.LineThin:\n        result += ' cursor-line-thin-style';\n        break;\n\n      case TextEditorCursorStyle.BlockOutline:\n        result += ' cursor-block-outline-style';\n        break;\n\n      case TextEditorCursorStyle.UnderlineThin:\n        result += ' cursor-underline-thin-style';\n        break;\n\n      default:\n        result += ' cursor-line-style';\n    }\n\n    if (this._blinkingEnabled) {\n      switch (this._getCursorBlinking()) {\n        case 1\n        /* Blink */\n        :\n          result += ' cursor-blink';\n          break;\n\n        case 2\n        /* Smooth */\n        :\n          result += ' cursor-smooth';\n          break;\n\n        case 3\n        /* Phase */\n        :\n          result += ' cursor-phase';\n          break;\n\n        case 4\n        /* Expand */\n        :\n          result += ' cursor-expand';\n          break;\n\n        case 5\n        /* Solid */\n        :\n          result += ' cursor-solid';\n          break;\n\n        default:\n          result += ' cursor-solid';\n      }\n    } else {\n      result += ' cursor-solid';\n    }\n\n    if (this._cursorSmoothCaretAnimation) {\n      result += ' cursor-smooth-caret-animation';\n    }\n\n    return result;\n  }\n\n  _show() {\n    this._primaryCursor.show();\n\n    for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n      this._secondaryCursors[i].show();\n    }\n\n    this._isVisible = true;\n  }\n\n  _hide() {\n    this._primaryCursor.hide();\n\n    for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n      this._secondaryCursors[i].hide();\n    }\n\n    this._isVisible = false;\n  } // ---- IViewPart implementation\n\n\n  prepareRender(ctx) {\n    this._primaryCursor.prepareRender(ctx);\n\n    for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n      this._secondaryCursors[i].prepareRender(ctx);\n    }\n  }\n\n  render(ctx) {\n    const renderData = [];\n    let renderDataLen = 0;\n\n    const primaryRenderData = this._primaryCursor.render(ctx);\n\n    if (primaryRenderData) {\n      renderData[renderDataLen++] = primaryRenderData;\n    }\n\n    for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n      const secondaryRenderData = this._secondaryCursors[i].render(ctx);\n\n      if (secondaryRenderData) {\n        renderData[renderDataLen++] = secondaryRenderData;\n      }\n    }\n\n    this._renderData = renderData;\n  }\n\n  getLastRenderData() {\n    return this._renderData;\n  }\n\n}\nViewCursors.BLINK_INTERVAL = 500;\nregisterThemingParticipant((theme, collector) => {\n  const caret = theme.getColor(editorCursorForeground);\n\n  if (caret) {\n    let caretBackground = theme.getColor(editorCursorBackground);\n\n    if (!caretBackground) {\n      caretBackground = caret.opposite();\n    }\n\n    collector.addRule(`.monaco-editor .cursors-layer .cursor { background-color: ${caret}; border-color: ${caret}; color: ${caretBackground}; }`);\n\n    if (theme.type === 'hc') {\n      collector.addRule(`.monaco-editor .cursors-layer.has-selection .cursor { border-left: 1px solid ${caretBackground}; border-right: 1px solid ${caretBackground}; }`);\n    }\n  }\n});","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewCursors/viewCursors.js"],"names":["createFastDomNode","IntervalTimer","TimeoutTimer","ViewPart","ViewCursor","TextEditorCursorStyle","editorCursorBackground","editorCursorForeground","registerThemingParticipant","ViewCursors","constructor","context","options","_context","configuration","_readOnly","get","_cursorBlinking","_cursorStyle","_cursorSmoothCaretAnimation","_selectionIsEmpty","_isComposingInput","_isVisible","_primaryCursor","_secondaryCursors","_renderData","_domNode","document","createElement","setAttribute","_updateDomClassName","appendChild","getDomNode","_startCursorBlinkAnimation","_cursorFlatBlinkInterval","_blinkingEnabled","_editorHasFocus","_updateBlinking","dispose","onCompositionStart","e","onCompositionEnd","onConfigurationChanged","i","len","length","_onCursorPositionChanged","position","secondaryPositions","onCursorPositionChanged","addCnt","newCursor","domNode","insertBefore","nextSibling","push","removeCnt","removeChild","splice","onCursorStateChanged","positions","selections","getPosition","slice","selectionIsEmpty","isEmpty","onDecorationsChanged","onFlushed","onFocusChanged","isFocused","onLinesChanged","onLinesDeleted","onLinesInserted","onScrollChanged","onTokensChanged","shouldRender","ranges","fromLineNumber","lineNumber","toLineNumber","secondaryCursor","onZonesChanged","_getCursorBlinking","cancel","blinkingStyle","isHidden","isSolid","_hide","_show","cancelAndSet","BLINK_INTERVAL","setIfNotSet","setClassName","_getClassName","result","Line","Block","Underline","LineThin","BlockOutline","UnderlineThin","show","hide","prepareRender","ctx","render","renderData","renderDataLen","primaryRenderData","secondaryRenderData","getLastRenderData","theme","collector","caret","getColor","caretBackground","opposite","addRule","type"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './viewCursors.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { IntervalTimer, TimeoutTimer } from '../../../../base/common/async.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { ViewCursor } from './viewCursor.js';\nimport { TextEditorCursorStyle } from '../../../common/config/editorOptions.js';\nimport { editorCursorBackground, editorCursorForeground } from '../../../common/core/editorColorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nexport class ViewCursors extends ViewPart {\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        this._readOnly = options.get(81 /* readOnly */);\n        this._cursorBlinking = options.get(22 /* cursorBlinking */);\n        this._cursorStyle = options.get(24 /* cursorStyle */);\n        this._cursorSmoothCaretAnimation = options.get(23 /* cursorSmoothCaretAnimation */);\n        this._selectionIsEmpty = true;\n        this._isComposingInput = false;\n        this._isVisible = false;\n        this._primaryCursor = new ViewCursor(this._context);\n        this._secondaryCursors = [];\n        this._renderData = [];\n        this._domNode = createFastDomNode(document.createElement('div'));\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.setAttribute('aria-hidden', 'true');\n        this._updateDomClassName();\n        this._domNode.appendChild(this._primaryCursor.getDomNode());\n        this._startCursorBlinkAnimation = new TimeoutTimer();\n        this._cursorFlatBlinkInterval = new IntervalTimer();\n        this._blinkingEnabled = false;\n        this._editorHasFocus = false;\n        this._updateBlinking();\n    }\n    dispose() {\n        super.dispose();\n        this._startCursorBlinkAnimation.dispose();\n        this._cursorFlatBlinkInterval.dispose();\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    // --- begin event handlers\n    onCompositionStart(e) {\n        this._isComposingInput = true;\n        this._updateBlinking();\n        return true;\n    }\n    onCompositionEnd(e) {\n        this._isComposingInput = false;\n        this._updateBlinking();\n        return true;\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        this._readOnly = options.get(81 /* readOnly */);\n        this._cursorBlinking = options.get(22 /* cursorBlinking */);\n        this._cursorStyle = options.get(24 /* cursorStyle */);\n        this._cursorSmoothCaretAnimation = options.get(23 /* cursorSmoothCaretAnimation */);\n        this._updateBlinking();\n        this._updateDomClassName();\n        this._primaryCursor.onConfigurationChanged(e);\n        for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n            this._secondaryCursors[i].onConfigurationChanged(e);\n        }\n        return true;\n    }\n    _onCursorPositionChanged(position, secondaryPositions) {\n        this._primaryCursor.onCursorPositionChanged(position);\n        this._updateBlinking();\n        if (this._secondaryCursors.length < secondaryPositions.length) {\n            // Create new cursors\n            const addCnt = secondaryPositions.length - this._secondaryCursors.length;\n            for (let i = 0; i < addCnt; i++) {\n                const newCursor = new ViewCursor(this._context);\n                this._domNode.domNode.insertBefore(newCursor.getDomNode().domNode, this._primaryCursor.getDomNode().domNode.nextSibling);\n                this._secondaryCursors.push(newCursor);\n            }\n        }\n        else if (this._secondaryCursors.length > secondaryPositions.length) {\n            // Remove some cursors\n            const removeCnt = this._secondaryCursors.length - secondaryPositions.length;\n            for (let i = 0; i < removeCnt; i++) {\n                this._domNode.removeChild(this._secondaryCursors[0].getDomNode());\n                this._secondaryCursors.splice(0, 1);\n            }\n        }\n        for (let i = 0; i < secondaryPositions.length; i++) {\n            this._secondaryCursors[i].onCursorPositionChanged(secondaryPositions[i]);\n        }\n    }\n    onCursorStateChanged(e) {\n        const positions = [];\n        for (let i = 0, len = e.selections.length; i < len; i++) {\n            positions[i] = e.selections[i].getPosition();\n        }\n        this._onCursorPositionChanged(positions[0], positions.slice(1));\n        const selectionIsEmpty = e.selections[0].isEmpty();\n        if (this._selectionIsEmpty !== selectionIsEmpty) {\n            this._selectionIsEmpty = selectionIsEmpty;\n            this._updateDomClassName();\n        }\n        return true;\n    }\n    onDecorationsChanged(e) {\n        // true for inline decorations that can end up relayouting text\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onFocusChanged(e) {\n        this._editorHasFocus = e.isFocused;\n        this._updateBlinking();\n        return false;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return true;\n    }\n    onTokensChanged(e) {\n        const shouldRender = (position) => {\n            for (let i = 0, len = e.ranges.length; i < len; i++) {\n                if (e.ranges[i].fromLineNumber <= position.lineNumber && position.lineNumber <= e.ranges[i].toLineNumber) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        if (shouldRender(this._primaryCursor.getPosition())) {\n            return true;\n        }\n        for (const secondaryCursor of this._secondaryCursors) {\n            if (shouldRender(secondaryCursor.getPosition())) {\n                return true;\n            }\n        }\n        return false;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    // ---- blinking logic\n    _getCursorBlinking() {\n        if (this._isComposingInput) {\n            // avoid double cursors\n            return 0 /* Hidden */;\n        }\n        if (!this._editorHasFocus) {\n            return 0 /* Hidden */;\n        }\n        if (this._readOnly) {\n            return 5 /* Solid */;\n        }\n        return this._cursorBlinking;\n    }\n    _updateBlinking() {\n        this._startCursorBlinkAnimation.cancel();\n        this._cursorFlatBlinkInterval.cancel();\n        const blinkingStyle = this._getCursorBlinking();\n        // hidden and solid are special as they involve no animations\n        const isHidden = (blinkingStyle === 0 /* Hidden */);\n        const isSolid = (blinkingStyle === 5 /* Solid */);\n        if (isHidden) {\n            this._hide();\n        }\n        else {\n            this._show();\n        }\n        this._blinkingEnabled = false;\n        this._updateDomClassName();\n        if (!isHidden && !isSolid) {\n            if (blinkingStyle === 1 /* Blink */) {\n                // flat blinking is handled by JavaScript to save battery life due to Chromium step timing issue https://bugs.chromium.org/p/chromium/issues/detail?id=361587\n                this._cursorFlatBlinkInterval.cancelAndSet(() => {\n                    if (this._isVisible) {\n                        this._hide();\n                    }\n                    else {\n                        this._show();\n                    }\n                }, ViewCursors.BLINK_INTERVAL);\n            }\n            else {\n                this._startCursorBlinkAnimation.setIfNotSet(() => {\n                    this._blinkingEnabled = true;\n                    this._updateDomClassName();\n                }, ViewCursors.BLINK_INTERVAL);\n            }\n        }\n    }\n    // --- end blinking logic\n    _updateDomClassName() {\n        this._domNode.setClassName(this._getClassName());\n    }\n    _getClassName() {\n        let result = 'cursors-layer';\n        if (!this._selectionIsEmpty) {\n            result += ' has-selection';\n        }\n        switch (this._cursorStyle) {\n            case TextEditorCursorStyle.Line:\n                result += ' cursor-line-style';\n                break;\n            case TextEditorCursorStyle.Block:\n                result += ' cursor-block-style';\n                break;\n            case TextEditorCursorStyle.Underline:\n                result += ' cursor-underline-style';\n                break;\n            case TextEditorCursorStyle.LineThin:\n                result += ' cursor-line-thin-style';\n                break;\n            case TextEditorCursorStyle.BlockOutline:\n                result += ' cursor-block-outline-style';\n                break;\n            case TextEditorCursorStyle.UnderlineThin:\n                result += ' cursor-underline-thin-style';\n                break;\n            default:\n                result += ' cursor-line-style';\n        }\n        if (this._blinkingEnabled) {\n            switch (this._getCursorBlinking()) {\n                case 1 /* Blink */:\n                    result += ' cursor-blink';\n                    break;\n                case 2 /* Smooth */:\n                    result += ' cursor-smooth';\n                    break;\n                case 3 /* Phase */:\n                    result += ' cursor-phase';\n                    break;\n                case 4 /* Expand */:\n                    result += ' cursor-expand';\n                    break;\n                case 5 /* Solid */:\n                    result += ' cursor-solid';\n                    break;\n                default:\n                    result += ' cursor-solid';\n            }\n        }\n        else {\n            result += ' cursor-solid';\n        }\n        if (this._cursorSmoothCaretAnimation) {\n            result += ' cursor-smooth-caret-animation';\n        }\n        return result;\n    }\n    _show() {\n        this._primaryCursor.show();\n        for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n            this._secondaryCursors[i].show();\n        }\n        this._isVisible = true;\n    }\n    _hide() {\n        this._primaryCursor.hide();\n        for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n            this._secondaryCursors[i].hide();\n        }\n        this._isVisible = false;\n    }\n    // ---- IViewPart implementation\n    prepareRender(ctx) {\n        this._primaryCursor.prepareRender(ctx);\n        for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n            this._secondaryCursors[i].prepareRender(ctx);\n        }\n    }\n    render(ctx) {\n        const renderData = [];\n        let renderDataLen = 0;\n        const primaryRenderData = this._primaryCursor.render(ctx);\n        if (primaryRenderData) {\n            renderData[renderDataLen++] = primaryRenderData;\n        }\n        for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n            const secondaryRenderData = this._secondaryCursors[i].render(ctx);\n            if (secondaryRenderData) {\n                renderData[renderDataLen++] = secondaryRenderData;\n            }\n        }\n        this._renderData = renderData;\n    }\n    getLastRenderData() {\n        return this._renderData;\n    }\n}\nViewCursors.BLINK_INTERVAL = 500;\nregisterThemingParticipant((theme, collector) => {\n    const caret = theme.getColor(editorCursorForeground);\n    if (caret) {\n        let caretBackground = theme.getColor(editorCursorBackground);\n        if (!caretBackground) {\n            caretBackground = caret.opposite();\n        }\n        collector.addRule(`.monaco-editor .cursors-layer .cursor { background-color: ${caret}; border-color: ${caret}; color: ${caretBackground}; }`);\n        if (theme.type === 'hc') {\n            collector.addRule(`.monaco-editor .cursors-layer.has-selection .cursor { border-left: 1px solid ${caretBackground}; border-right: 1px solid ${caretBackground}; }`);\n        }\n    }\n});\n"]},"metadata":{},"sourceType":"module"}