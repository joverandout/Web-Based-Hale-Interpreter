{"ast":null,"code":"import '../../editor/editor.api.js';\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\n\nvar __reExport = (target, module, copyDefault, desc) => {\n  if (module && typeof module === \"object\" || typeof module === \"function\") {\n    for (let key of __getOwnPropNames(module)) if (!__hasOwnProp.call(target, key) && (copyDefault || key !== \"default\")) __defProp(target, key, {\n      get: () => module[key],\n      enumerable: !(desc = __getOwnPropDesc(module, key)) || desc.enumerable\n    });\n  }\n\n  return target;\n}; // src/fillers/monaco-editor-core.ts\n\n\nvar monaco_editor_core_exports = {};\n\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\n\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\"; // src/language/html/monaco.contribution.ts\n\nvar LanguageServiceDefaultsImpl = class {\n  _onDidChange = new monaco_editor_core_exports.Emitter();\n  _options;\n  _modeConfiguration;\n  _languageId;\n\n  constructor(languageId, options, modeConfiguration) {\n    this._languageId = languageId;\n    this.setOptions(options);\n    this.setModeConfiguration(modeConfiguration);\n  }\n\n  get onDidChange() {\n    return this._onDidChange.event;\n  }\n\n  get languageId() {\n    return this._languageId;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  get modeConfiguration() {\n    return this._modeConfiguration;\n  }\n\n  setOptions(options) {\n    this._options = options || /* @__PURE__ */Object.create(null);\n\n    this._onDidChange.fire(this);\n  }\n\n  setModeConfiguration(modeConfiguration) {\n    this._modeConfiguration = modeConfiguration || /* @__PURE__ */Object.create(null);\n\n    this._onDidChange.fire(this);\n  }\n\n};\nvar formatDefaults = {\n  tabSize: 4,\n  insertSpaces: false,\n  wrapLineLength: 120,\n  unformatted: 'default\": \"a, abbr, acronym, b, bdo, big, br, button, cite, code, dfn, em, i, img, input, kbd, label, map, object, q, samp, select, small, span, strong, sub, sup, textarea, tt, var',\n  contentUnformatted: \"pre\",\n  indentInnerHtml: false,\n  preserveNewLines: true,\n  maxPreserveNewLines: void 0,\n  indentHandlebars: false,\n  endWithNewline: false,\n  extraLiners: \"head, body, /html\",\n  wrapAttributes: \"auto\"\n};\nvar optionsDefault = {\n  format: formatDefaults,\n  suggest: {},\n  data: {\n    useDefaultDataProvider: true\n  }\n};\n\nfunction getConfigurationDefault(languageId) {\n  return {\n    completionItems: true,\n    hovers: true,\n    documentSymbols: true,\n    links: true,\n    documentHighlights: true,\n    rename: true,\n    colors: true,\n    foldingRanges: true,\n    selectionRanges: true,\n    diagnostics: languageId === htmlLanguageId,\n    documentFormattingEdits: languageId === htmlLanguageId,\n    documentRangeFormattingEdits: languageId === htmlLanguageId\n  };\n}\n\nvar htmlLanguageId = \"html\";\nvar handlebarsLanguageId = \"handlebars\";\nvar razorLanguageId = \"razor\";\nvar htmlLanguageService = registerHTMLLanguageService(htmlLanguageId, optionsDefault, getConfigurationDefault(htmlLanguageId));\nvar htmlDefaults = htmlLanguageService.defaults;\nvar handlebarLanguageService = registerHTMLLanguageService(handlebarsLanguageId, optionsDefault, getConfigurationDefault(handlebarsLanguageId));\nvar handlebarDefaults = handlebarLanguageService.defaults;\nvar razorLanguageService = registerHTMLLanguageService(razorLanguageId, optionsDefault, getConfigurationDefault(razorLanguageId));\nvar razorDefaults = razorLanguageService.defaults;\nmonaco_editor_core_exports.languages.html = {\n  htmlDefaults,\n  razorDefaults,\n  handlebarDefaults,\n  htmlLanguageService,\n  handlebarLanguageService,\n  razorLanguageService,\n  registerHTMLLanguageService\n};\n\nfunction getMode() {\n  if (false) {\n    return new Promise((resolve, reject) => {\n      __require([\"vs/language/html/htmlMode\"], resolve, reject);\n    });\n  } else {\n    return import(\"./htmlMode.js\");\n  }\n}\n\nfunction registerHTMLLanguageService(languageId, options = optionsDefault, modeConfiguration = getConfigurationDefault(languageId)) {\n  const defaults = new LanguageServiceDefaultsImpl(languageId, options, modeConfiguration);\n  let mode;\n  const onLanguageListener = monaco_editor_core_exports.languages.onLanguage(languageId, async () => {\n    mode = (await getMode()).setupMode(defaults);\n  });\n  return {\n    defaults,\n\n    dispose() {\n      var _mode;\n\n      onLanguageListener.dispose();\n      (_mode = mode) === null || _mode === void 0 ? void 0 : _mode.dispose();\n      mode = void 0;\n    }\n\n  };\n}\n\nexport { handlebarDefaults, handlebarLanguageService, htmlDefaults, htmlLanguageService, razorDefaults, razorLanguageService, registerHTMLLanguageService };","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/language/html/monaco.contribution.js"],"names":["__defProp","Object","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","__reExport","target","module","copyDefault","desc","key","call","get","enumerable","monaco_editor_core_exports","monaco_editor_core_star","LanguageServiceDefaultsImpl","_onDidChange","Emitter","_options","_modeConfiguration","_languageId","constructor","languageId","options","modeConfiguration","setOptions","setModeConfiguration","onDidChange","event","create","fire","formatDefaults","tabSize","insertSpaces","wrapLineLength","unformatted","contentUnformatted","indentInnerHtml","preserveNewLines","maxPreserveNewLines","indentHandlebars","endWithNewline","extraLiners","wrapAttributes","optionsDefault","format","suggest","data","useDefaultDataProvider","getConfigurationDefault","completionItems","hovers","documentSymbols","links","documentHighlights","rename","colors","foldingRanges","selectionRanges","diagnostics","htmlLanguageId","documentFormattingEdits","documentRangeFormattingEdits","handlebarsLanguageId","razorLanguageId","htmlLanguageService","registerHTMLLanguageService","htmlDefaults","defaults","handlebarLanguageService","handlebarDefaults","razorLanguageService","razorDefaults","languages","html","getMode","Promise","resolve","reject","__require","mode","onLanguageListener","onLanguage","setupMode","dispose"],"mappings":"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","sourcesContent":["import '../../editor/editor.api.js';\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __reExport = (target, module, copyDefault, desc) => {\n  if (module && typeof module === \"object\" || typeof module === \"function\") {\n    for (let key of __getOwnPropNames(module))\n      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== \"default\"))\n        __defProp(target, key, { get: () => module[key], enumerable: !(desc = __getOwnPropDesc(module, key)) || desc.enumerable });\n  }\n  return target;\n};\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\";\n\n// src/language/html/monaco.contribution.ts\nvar LanguageServiceDefaultsImpl = class {\n  _onDidChange = new monaco_editor_core_exports.Emitter();\n  _options;\n  _modeConfiguration;\n  _languageId;\n  constructor(languageId, options, modeConfiguration) {\n    this._languageId = languageId;\n    this.setOptions(options);\n    this.setModeConfiguration(modeConfiguration);\n  }\n  get onDidChange() {\n    return this._onDidChange.event;\n  }\n  get languageId() {\n    return this._languageId;\n  }\n  get options() {\n    return this._options;\n  }\n  get modeConfiguration() {\n    return this._modeConfiguration;\n  }\n  setOptions(options) {\n    this._options = options || /* @__PURE__ */ Object.create(null);\n    this._onDidChange.fire(this);\n  }\n  setModeConfiguration(modeConfiguration) {\n    this._modeConfiguration = modeConfiguration || /* @__PURE__ */ Object.create(null);\n    this._onDidChange.fire(this);\n  }\n};\nvar formatDefaults = {\n  tabSize: 4,\n  insertSpaces: false,\n  wrapLineLength: 120,\n  unformatted: 'default\": \"a, abbr, acronym, b, bdo, big, br, button, cite, code, dfn, em, i, img, input, kbd, label, map, object, q, samp, select, small, span, strong, sub, sup, textarea, tt, var',\n  contentUnformatted: \"pre\",\n  indentInnerHtml: false,\n  preserveNewLines: true,\n  maxPreserveNewLines: void 0,\n  indentHandlebars: false,\n  endWithNewline: false,\n  extraLiners: \"head, body, /html\",\n  wrapAttributes: \"auto\"\n};\nvar optionsDefault = {\n  format: formatDefaults,\n  suggest: {},\n  data: { useDefaultDataProvider: true }\n};\nfunction getConfigurationDefault(languageId) {\n  return {\n    completionItems: true,\n    hovers: true,\n    documentSymbols: true,\n    links: true,\n    documentHighlights: true,\n    rename: true,\n    colors: true,\n    foldingRanges: true,\n    selectionRanges: true,\n    diagnostics: languageId === htmlLanguageId,\n    documentFormattingEdits: languageId === htmlLanguageId,\n    documentRangeFormattingEdits: languageId === htmlLanguageId\n  };\n}\nvar htmlLanguageId = \"html\";\nvar handlebarsLanguageId = \"handlebars\";\nvar razorLanguageId = \"razor\";\nvar htmlLanguageService = registerHTMLLanguageService(htmlLanguageId, optionsDefault, getConfigurationDefault(htmlLanguageId));\nvar htmlDefaults = htmlLanguageService.defaults;\nvar handlebarLanguageService = registerHTMLLanguageService(handlebarsLanguageId, optionsDefault, getConfigurationDefault(handlebarsLanguageId));\nvar handlebarDefaults = handlebarLanguageService.defaults;\nvar razorLanguageService = registerHTMLLanguageService(razorLanguageId, optionsDefault, getConfigurationDefault(razorLanguageId));\nvar razorDefaults = razorLanguageService.defaults;\nmonaco_editor_core_exports.languages.html = {\n  htmlDefaults,\n  razorDefaults,\n  handlebarDefaults,\n  htmlLanguageService,\n  handlebarLanguageService,\n  razorLanguageService,\n  registerHTMLLanguageService\n};\nfunction getMode() {\n  if (false) {\n    return new Promise((resolve, reject) => {\n      __require([\"vs/language/html/htmlMode\"], resolve, reject);\n    });\n  } else {\n    return import(\"./htmlMode.js\");\n  }\n}\nfunction registerHTMLLanguageService(languageId, options = optionsDefault, modeConfiguration = getConfigurationDefault(languageId)) {\n  const defaults = new LanguageServiceDefaultsImpl(languageId, options, modeConfiguration);\n  let mode;\n  const onLanguageListener = monaco_editor_core_exports.languages.onLanguage(languageId, async () => {\n    mode = (await getMode()).setupMode(defaults);\n  });\n  return {\n    defaults,\n    dispose() {\n      onLanguageListener.dispose();\n      mode?.dispose();\n      mode = void 0;\n    }\n  };\n}\nexport {\n  handlebarDefaults,\n  handlebarLanguageService,\n  htmlDefaults,\n  htmlLanguageService,\n  razorDefaults,\n  razorLanguageService,\n  registerHTMLLanguageService\n};\n"]},"metadata":{},"sourceType":"module"}