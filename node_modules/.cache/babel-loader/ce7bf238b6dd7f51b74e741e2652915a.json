{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { isSafari, isWebkitWebView } from '../../../base/browser/browser.js';\nimport { $, addDisposableListener } from '../../../base/browser/dom.js';\nimport { DeferredPromise } from '../../../base/common/async.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\nimport { ILogService } from '../../log/common/log.js';\nlet BrowserClipboardService = class BrowserClipboardService extends Disposable {\n  constructor(layoutService, logService) {\n    super();\n    this.layoutService = layoutService;\n    this.logService = logService;\n    this.mapTextToType = new Map(); // unsupported in web (only in-memory)\n\n    this.findText = ''; // unsupported in web (only in-memory)\n\n    if (isSafari || isWebkitWebView) {\n      this.installWebKitWriteTextWorkaround();\n    }\n  } // In Safari, it has the following note:\n  //\n  // \"The request to write to the clipboard must be triggered during a user gesture.\n  // A call to clipboard.write or clipboard.writeText outside the scope of a user\n  // gesture(such as \"click\" or \"touch\" event handlers) will result in the immediate\n  // rejection of the promise returned by the API call.\"\n  // From: https://webkit.org/blog/10855/async-clipboard-api/\n  //\n  // Since extensions run in a web worker, and handle gestures in an asynchronous way,\n  // they are not classified by Safari as \"in response to a user gesture\" and will reject.\n  //\n  // This function sets up some handlers to work around that behavior.\n\n\n  installWebKitWriteTextWorkaround() {\n    const handler = () => {\n      const currentWritePromise = new DeferredPromise(); // Cancel the previous promise since we just created a new one in response to this new event\n\n      if (this.webKitPendingClipboardWritePromise && !this.webKitPendingClipboardWritePromise.isSettled) {\n        this.webKitPendingClipboardWritePromise.cancel();\n      }\n\n      this.webKitPendingClipboardWritePromise = currentWritePromise; // The ctor of ClipboardItem allows you to pass in a promise that will resolve to a string.\n      // This allows us to pass in a Promise that will either be cancelled by another event or\n      // resolved with the contents of the first call to this.writeText.\n      // see https://developer.mozilla.org/en-US/docs/Web/API/ClipboardItem/ClipboardItem#parameters\n\n      navigator.clipboard.write([new ClipboardItem({\n        'text/plain': currentWritePromise.p\n      })]).catch(err => __awaiter(this, void 0, void 0, function* () {\n        if (!(err instanceof Error) || err.name !== 'NotAllowedError' || !currentWritePromise.isRejected) {\n          this.logService.error(err);\n        }\n      }));\n    };\n\n    if (this.layoutService.hasContainer) {\n      this._register(addDisposableListener(this.layoutService.container, 'click', handler));\n\n      this._register(addDisposableListener(this.layoutService.container, 'keydown', handler));\n    }\n  }\n\n  writeText(text, type) {\n    return __awaiter(this, void 0, void 0, function* () {\n      // With type: only in-memory is supported\n      if (type) {\n        this.mapTextToType.set(type, text);\n        return;\n      }\n\n      if (this.webKitPendingClipboardWritePromise) {\n        // For Safari, we complete this Promise which allows the call to `navigator.clipboard.write()`\n        // above to resolve and successfully copy to the clipboard. If we let this continue, Safari\n        // would throw an error because this call stack doesn't appear to originate from a user gesture.\n        return this.webKitPendingClipboardWritePromise.complete(text);\n      } // Guard access to navigator.clipboard with try/catch\n      // as we have seen DOMExceptions in certain browsers\n      // due to security policies.\n\n\n      try {\n        return yield navigator.clipboard.writeText(text);\n      } catch (error) {\n        console.error(error);\n      } // Fallback to textarea and execCommand solution\n\n\n      const activeElement = document.activeElement;\n      const textArea = document.body.appendChild($('textarea', {\n        'aria-hidden': true\n      }));\n      textArea.style.height = '1px';\n      textArea.style.width = '1px';\n      textArea.style.position = 'absolute';\n      textArea.value = text;\n      textArea.focus();\n      textArea.select();\n      document.execCommand('copy');\n\n      if (activeElement instanceof HTMLElement) {\n        activeElement.focus();\n      }\n\n      document.body.removeChild(textArea);\n      return;\n    });\n  }\n\n  readText(type) {\n    return __awaiter(this, void 0, void 0, function* () {\n      // With type: only in-memory is supported\n      if (type) {\n        return this.mapTextToType.get(type) || '';\n      } // Guard access to navigator.clipboard with try/catch\n      // as we have seen DOMExceptions in certain browsers\n      // due to security policies.\n\n\n      try {\n        return yield navigator.clipboard.readText();\n      } catch (error) {\n        console.error(error);\n        return '';\n      }\n    });\n  }\n\n  readFindText() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.findText;\n    });\n  }\n\n  writeFindText(text) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.findText = text;\n    });\n  }\n\n};\nBrowserClipboardService = __decorate([__param(0, ILayoutService), __param(1, ILogService)], BrowserClipboardService);\nexport { BrowserClipboardService };","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/platform/clipboard/browser/clipboardService.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","isSafari","isWebkitWebView","$","addDisposableListener","DeferredPromise","Disposable","ILayoutService","ILogService","BrowserClipboardService","constructor","layoutService","logService","mapTextToType","Map","findText","installWebKitWriteTextWorkaround","handler","currentWritePromise","webKitPendingClipboardWritePromise","isSettled","cancel","navigator","clipboard","write","ClipboardItem","p","catch","err","Error","name","isRejected","error","hasContainer","_register","container","writeText","text","type","set","complete","console","activeElement","document","textArea","body","appendChild","style","height","width","position","focus","select","execCommand","HTMLElement","removeChild","readText","get","readFindText","writeFindText"],"mappings":"AAAA;AACA;AACA;AACA;AACA,IAAIA,UAAU,GAAI,QAAQ,KAAKA,UAAd,IAA6B,UAAUC,UAAV,EAAsBC,MAAtB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AACnF,MAAIC,CAAC,GAAGC,SAAS,CAACC,MAAlB;AAAA,MAA0BC,CAAC,GAAGH,CAAC,GAAG,CAAJ,GAAQH,MAAR,GAAiBE,IAAI,KAAK,IAAT,GAAgBA,IAAI,GAAGK,MAAM,CAACC,wBAAP,CAAgCR,MAAhC,EAAwCC,GAAxC,CAAvB,GAAsEC,IAArH;AAAA,MAA2HO,CAA3H;AACA,MAAI,OAAOC,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACC,QAAf,KAA4B,UAA/D,EAA2EL,CAAC,GAAGI,OAAO,CAACC,QAAR,CAAiBZ,UAAjB,EAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,IAA1C,CAAJ,CAA3E,KACK,KAAK,IAAIU,CAAC,GAAGb,UAAU,CAACM,MAAX,GAAoB,CAAjC,EAAoCO,CAAC,IAAI,CAAzC,EAA4CA,CAAC,EAA7C,EAAiD,IAAIH,CAAC,GAAGV,UAAU,CAACa,CAAD,CAAlB,EAAuBN,CAAC,GAAG,CAACH,CAAC,GAAG,CAAJ,GAAQM,CAAC,CAACH,CAAD,CAAT,GAAeH,CAAC,GAAG,CAAJ,GAAQM,CAAC,CAACT,MAAD,EAASC,GAAT,EAAcK,CAAd,CAAT,GAA4BG,CAAC,CAACT,MAAD,EAASC,GAAT,CAA7C,KAA+DK,CAAnE;AAC7E,SAAOH,CAAC,GAAG,CAAJ,IAASG,CAAT,IAAcC,MAAM,CAACM,cAAP,CAAsBb,MAAtB,EAA8BC,GAA9B,EAAmCK,CAAnC,CAAd,EAAqDA,CAA5D;AACH,CALD;;AAMA,IAAIQ,OAAO,GAAI,QAAQ,KAAKA,OAAd,IAA0B,UAAUC,UAAV,EAAsBC,SAAtB,EAAiC;AACrE,SAAO,UAAUhB,MAAV,EAAkBC,GAAlB,EAAuB;AAAEe,IAAAA,SAAS,CAAChB,MAAD,EAASC,GAAT,EAAcc,UAAd,CAAT;AAAqC,GAArE;AACH,CAFD;;AAGA,IAAIE,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA4B,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AACrF,WAASC,KAAT,CAAeC,KAAf,EAAsB;AAAE,WAAOA,KAAK,YAAYH,CAAjB,GAAqBG,KAArB,GAA6B,IAAIH,CAAJ,CAAM,UAAUI,OAAV,EAAmB;AAAEA,MAAAA,OAAO,CAACD,KAAD,CAAP;AAAiB,KAA5C,CAApC;AAAoF;;AAC5G,SAAO,KAAKH,CAAC,KAAKA,CAAC,GAAGK,OAAT,CAAN,EAAyB,UAAUD,OAAV,EAAmBE,MAAnB,EAA2B;AACvD,aAASC,SAAT,CAAmBJ,KAAnB,EAA0B;AAAE,UAAI;AAAEK,QAAAA,IAAI,CAACP,SAAS,CAACQ,IAAV,CAAeN,KAAf,CAAD,CAAJ;AAA8B,OAApC,CAAqC,OAAOO,CAAP,EAAU;AAAEJ,QAAAA,MAAM,CAACI,CAAD,CAAN;AAAY;AAAE;;AAC3F,aAASC,QAAT,CAAkBR,KAAlB,EAAyB;AAAE,UAAI;AAAEK,QAAAA,IAAI,CAACP,SAAS,CAAC,OAAD,CAAT,CAAmBE,KAAnB,CAAD,CAAJ;AAAkC,OAAxC,CAAyC,OAAOO,CAAP,EAAU;AAAEJ,QAAAA,MAAM,CAACI,CAAD,CAAN;AAAY;AAAE;;AAC9F,aAASF,IAAT,CAAcI,MAAd,EAAsB;AAAEA,MAAAA,MAAM,CAACC,IAAP,GAAcT,OAAO,CAACQ,MAAM,CAACT,KAAR,CAArB,GAAsCD,KAAK,CAACU,MAAM,CAACT,KAAR,CAAL,CAAoBW,IAApB,CAAyBP,SAAzB,EAAoCI,QAApC,CAAtC;AAAsF;;AAC9GH,IAAAA,IAAI,CAAC,CAACP,SAAS,GAAGA,SAAS,CAACc,KAAV,CAAgBjB,OAAhB,EAAyBC,UAAU,IAAI,EAAvC,CAAb,EAAyDU,IAAzD,EAAD,CAAJ;AACH,GALM,CAAP;AAMH,CARD;;AASA,SAASO,QAAT,EAAmBC,eAAnB,QAA0C,kCAA1C;AACA,SAASC,CAAT,EAAYC,qBAAZ,QAAyC,8BAAzC;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA,SAASC,cAAT,QAA+B,uCAA/B;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,IAAIC,uBAAuB,GAAG,MAAMA,uBAAN,SAAsCH,UAAtC,CAAiD;AAC3EI,EAAAA,WAAW,CAACC,aAAD,EAAgBC,UAAhB,EAA4B;AACnC;AACA,SAAKD,aAAL,GAAqBA,aAArB;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,aAAL,GAAqB,IAAIC,GAAJ,EAArB,CAJmC,CAIH;;AAChC,SAAKC,QAAL,GAAgB,EAAhB,CALmC,CAKf;;AACpB,QAAId,QAAQ,IAAIC,eAAhB,EAAiC;AAC7B,WAAKc,gCAAL;AACH;AACJ,GAV0E,CAW3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAA,EAAAA,gCAAgC,GAAG;AAC/B,UAAMC,OAAO,GAAG,MAAM;AAClB,YAAMC,mBAAmB,GAAG,IAAIb,eAAJ,EAA5B,CADkB,CAElB;;AACA,UAAI,KAAKc,kCAAL,IAA2C,CAAC,KAAKA,kCAAL,CAAwCC,SAAxF,EAAmG;AAC/F,aAAKD,kCAAL,CAAwCE,MAAxC;AACH;;AACD,WAAKF,kCAAL,GAA0CD,mBAA1C,CANkB,CAOlB;AACA;AACA;AACA;;AACAI,MAAAA,SAAS,CAACC,SAAV,CAAoBC,KAApB,CAA0B,CAAC,IAAIC,aAAJ,CAAkB;AACrC,sBAAcP,mBAAmB,CAACQ;AADG,OAAlB,CAAD,CAA1B,EAESC,KAFT,CAEgBC,GAAD,IAAS9C,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AACjE,YAAI,EAAE8C,GAAG,YAAYC,KAAjB,KAA2BD,GAAG,CAACE,IAAJ,KAAa,iBAAxC,IAA6D,CAACZ,mBAAmB,CAACa,UAAtF,EAAkG;AAC9F,eAAKnB,UAAL,CAAgBoB,KAAhB,CAAsBJ,GAAtB;AACH;AACJ,OAJgC,CAFjC;AAOH,KAlBD;;AAmBA,QAAI,KAAKjB,aAAL,CAAmBsB,YAAvB,EAAqC;AACjC,WAAKC,SAAL,CAAe9B,qBAAqB,CAAC,KAAKO,aAAL,CAAmBwB,SAApB,EAA+B,OAA/B,EAAwClB,OAAxC,CAApC;;AACA,WAAKiB,SAAL,CAAe9B,qBAAqB,CAAC,KAAKO,aAAL,CAAmBwB,SAApB,EAA+B,SAA/B,EAA0ClB,OAA1C,CAApC;AACH;AACJ;;AACDmB,EAAAA,SAAS,CAACC,IAAD,EAAOC,IAAP,EAAa;AAClB,WAAOxD,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAChD;AACA,UAAIwD,IAAJ,EAAU;AACN,aAAKzB,aAAL,CAAmB0B,GAAnB,CAAuBD,IAAvB,EAA6BD,IAA7B;AACA;AACH;;AACD,UAAI,KAAKlB,kCAAT,EAA6C;AACzC;AACA;AACA;AACA,eAAO,KAAKA,kCAAL,CAAwCqB,QAAxC,CAAiDH,IAAjD,CAAP;AACH,OAX+C,CAYhD;AACA;AACA;;;AACA,UAAI;AACA,eAAO,MAAMf,SAAS,CAACC,SAAV,CAAoBa,SAApB,CAA8BC,IAA9B,CAAb;AACH,OAFD,CAGA,OAAOL,KAAP,EAAc;AACVS,QAAAA,OAAO,CAACT,KAAR,CAAcA,KAAd;AACH,OApB+C,CAqBhD;;;AACA,YAAMU,aAAa,GAAGC,QAAQ,CAACD,aAA/B;AACA,YAAME,QAAQ,GAAGD,QAAQ,CAACE,IAAT,CAAcC,WAAd,CAA0B3C,CAAC,CAAC,UAAD,EAAa;AAAE,uBAAe;AAAjB,OAAb,CAA3B,CAAjB;AACAyC,MAAAA,QAAQ,CAACG,KAAT,CAAeC,MAAf,GAAwB,KAAxB;AACAJ,MAAAA,QAAQ,CAACG,KAAT,CAAeE,KAAf,GAAuB,KAAvB;AACAL,MAAAA,QAAQ,CAACG,KAAT,CAAeG,QAAf,GAA0B,UAA1B;AACAN,MAAAA,QAAQ,CAACxD,KAAT,GAAiBiD,IAAjB;AACAO,MAAAA,QAAQ,CAACO,KAAT;AACAP,MAAAA,QAAQ,CAACQ,MAAT;AACAT,MAAAA,QAAQ,CAACU,WAAT,CAAqB,MAArB;;AACA,UAAIX,aAAa,YAAYY,WAA7B,EAA0C;AACtCZ,QAAAA,aAAa,CAACS,KAAd;AACH;;AACDR,MAAAA,QAAQ,CAACE,IAAT,CAAcU,WAAd,CAA0BX,QAA1B;AACA;AACH,KApCe,CAAhB;AAqCH;;AACDY,EAAAA,QAAQ,CAAClB,IAAD,EAAO;AACX,WAAOxD,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAChD;AACA,UAAIwD,IAAJ,EAAU;AACN,eAAO,KAAKzB,aAAL,CAAmB4C,GAAnB,CAAuBnB,IAAvB,KAAgC,EAAvC;AACH,OAJ+C,CAKhD;AACA;AACA;;;AACA,UAAI;AACA,eAAO,MAAMhB,SAAS,CAACC,SAAV,CAAoBiC,QAApB,EAAb;AACH,OAFD,CAGA,OAAOxB,KAAP,EAAc;AACVS,QAAAA,OAAO,CAACT,KAAR,CAAcA,KAAd;AACA,eAAO,EAAP;AACH;AACJ,KAfe,CAAhB;AAgBH;;AACD0B,EAAAA,YAAY,GAAG;AACX,WAAO5E,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAChD,aAAO,KAAKiC,QAAZ;AACH,KAFe,CAAhB;AAGH;;AACD4C,EAAAA,aAAa,CAACtB,IAAD,EAAO;AAChB,WAAOvD,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAChD,WAAKiC,QAAL,GAAgBsB,IAAhB;AACH,KAFe,CAAhB;AAGH;;AAlH0E,CAA/E;AAoHA5B,uBAAuB,GAAG9C,UAAU,CAAC,CACjCgB,OAAO,CAAC,CAAD,EAAI4B,cAAJ,CAD0B,EAEjC5B,OAAO,CAAC,CAAD,EAAI6B,WAAJ,CAF0B,CAAD,EAGjCC,uBAHiC,CAApC;AAIA,SAASA,uBAAT","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { isSafari, isWebkitWebView } from '../../../base/browser/browser.js';\nimport { $, addDisposableListener } from '../../../base/browser/dom.js';\nimport { DeferredPromise } from '../../../base/common/async.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\nimport { ILogService } from '../../log/common/log.js';\nlet BrowserClipboardService = class BrowserClipboardService extends Disposable {\n    constructor(layoutService, logService) {\n        super();\n        this.layoutService = layoutService;\n        this.logService = logService;\n        this.mapTextToType = new Map(); // unsupported in web (only in-memory)\n        this.findText = ''; // unsupported in web (only in-memory)\n        if (isSafari || isWebkitWebView) {\n            this.installWebKitWriteTextWorkaround();\n        }\n    }\n    // In Safari, it has the following note:\n    //\n    // \"The request to write to the clipboard must be triggered during a user gesture.\n    // A call to clipboard.write or clipboard.writeText outside the scope of a user\n    // gesture(such as \"click\" or \"touch\" event handlers) will result in the immediate\n    // rejection of the promise returned by the API call.\"\n    // From: https://webkit.org/blog/10855/async-clipboard-api/\n    //\n    // Since extensions run in a web worker, and handle gestures in an asynchronous way,\n    // they are not classified by Safari as \"in response to a user gesture\" and will reject.\n    //\n    // This function sets up some handlers to work around that behavior.\n    installWebKitWriteTextWorkaround() {\n        const handler = () => {\n            const currentWritePromise = new DeferredPromise();\n            // Cancel the previous promise since we just created a new one in response to this new event\n            if (this.webKitPendingClipboardWritePromise && !this.webKitPendingClipboardWritePromise.isSettled) {\n                this.webKitPendingClipboardWritePromise.cancel();\n            }\n            this.webKitPendingClipboardWritePromise = currentWritePromise;\n            // The ctor of ClipboardItem allows you to pass in a promise that will resolve to a string.\n            // This allows us to pass in a Promise that will either be cancelled by another event or\n            // resolved with the contents of the first call to this.writeText.\n            // see https://developer.mozilla.org/en-US/docs/Web/API/ClipboardItem/ClipboardItem#parameters\n            navigator.clipboard.write([new ClipboardItem({\n                    'text/plain': currentWritePromise.p,\n                })]).catch((err) => __awaiter(this, void 0, void 0, function* () {\n                if (!(err instanceof Error) || err.name !== 'NotAllowedError' || !currentWritePromise.isRejected) {\n                    this.logService.error(err);\n                }\n            }));\n        };\n        if (this.layoutService.hasContainer) {\n            this._register(addDisposableListener(this.layoutService.container, 'click', handler));\n            this._register(addDisposableListener(this.layoutService.container, 'keydown', handler));\n        }\n    }\n    writeText(text, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // With type: only in-memory is supported\n            if (type) {\n                this.mapTextToType.set(type, text);\n                return;\n            }\n            if (this.webKitPendingClipboardWritePromise) {\n                // For Safari, we complete this Promise which allows the call to `navigator.clipboard.write()`\n                // above to resolve and successfully copy to the clipboard. If we let this continue, Safari\n                // would throw an error because this call stack doesn't appear to originate from a user gesture.\n                return this.webKitPendingClipboardWritePromise.complete(text);\n            }\n            // Guard access to navigator.clipboard with try/catch\n            // as we have seen DOMExceptions in certain browsers\n            // due to security policies.\n            try {\n                return yield navigator.clipboard.writeText(text);\n            }\n            catch (error) {\n                console.error(error);\n            }\n            // Fallback to textarea and execCommand solution\n            const activeElement = document.activeElement;\n            const textArea = document.body.appendChild($('textarea', { 'aria-hidden': true }));\n            textArea.style.height = '1px';\n            textArea.style.width = '1px';\n            textArea.style.position = 'absolute';\n            textArea.value = text;\n            textArea.focus();\n            textArea.select();\n            document.execCommand('copy');\n            if (activeElement instanceof HTMLElement) {\n                activeElement.focus();\n            }\n            document.body.removeChild(textArea);\n            return;\n        });\n    }\n    readText(type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // With type: only in-memory is supported\n            if (type) {\n                return this.mapTextToType.get(type) || '';\n            }\n            // Guard access to navigator.clipboard with try/catch\n            // as we have seen DOMExceptions in certain browsers\n            // due to security policies.\n            try {\n                return yield navigator.clipboard.readText();\n            }\n            catch (error) {\n                console.error(error);\n                return '';\n            }\n        });\n    }\n    readFindText() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.findText;\n        });\n    }\n    writeFindText(text) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.findText = text;\n        });\n    }\n};\nBrowserClipboardService = __decorate([\n    __param(0, ILayoutService),\n    __param(1, ILogService)\n], BrowserClipboardService);\nexport { BrowserClipboardService };\n"]},"metadata":{},"sourceType":"module"}