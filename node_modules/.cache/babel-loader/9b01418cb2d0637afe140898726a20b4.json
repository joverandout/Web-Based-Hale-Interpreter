{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './scrollDecoration.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { scrollbarShadow } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nexport class ScrollDecorationViewPart extends ViewPart {\n  constructor(context) {\n    super(context);\n    this._scrollTop = 0;\n    this._width = 0;\n\n    this._updateWidth();\n\n    this._shouldShow = false;\n    const options = this._context.configuration.options;\n    const scrollbar = options.get(92\n    /* scrollbar */\n    );\n    this._useShadows = scrollbar.useShadows;\n    this._domNode = createFastDomNode(document.createElement('div'));\n\n    this._domNode.setAttribute('role', 'presentation');\n\n    this._domNode.setAttribute('aria-hidden', 'true');\n  }\n\n  dispose() {\n    super.dispose();\n  }\n\n  _updateShouldShow() {\n    const newShouldShow = this._useShadows && this._scrollTop > 0;\n\n    if (this._shouldShow !== newShouldShow) {\n      this._shouldShow = newShouldShow;\n      return true;\n    }\n\n    return false;\n  }\n\n  getDomNode() {\n    return this._domNode;\n  }\n\n  _updateWidth() {\n    const options = this._context.configuration.options;\n    const layoutInfo = options.get(131\n    /* layoutInfo */\n    );\n\n    if (layoutInfo.minimap.renderMinimap === 0 || layoutInfo.minimap.minimapWidth > 0 && layoutInfo.minimap.minimapLeft === 0) {\n      this._width = layoutInfo.width;\n    } else {\n      this._width = layoutInfo.width - layoutInfo.minimap.minimapWidth - layoutInfo.verticalScrollbarWidth;\n    }\n  } // --- begin event handlers\n\n\n  onConfigurationChanged(e) {\n    const options = this._context.configuration.options;\n    const scrollbar = options.get(92\n    /* scrollbar */\n    );\n    this._useShadows = scrollbar.useShadows;\n\n    this._updateWidth();\n\n    this._updateShouldShow();\n\n    return true;\n  }\n\n  onScrollChanged(e) {\n    this._scrollTop = e.scrollTop;\n    return this._updateShouldShow();\n  } // --- end event handlers\n\n\n  prepareRender(ctx) {// Nothing to read\n  }\n\n  render(ctx) {\n    this._domNode.setWidth(this._width);\n\n    this._domNode.setClassName(this._shouldShow ? 'scroll-decoration' : '');\n  }\n\n}\nregisterThemingParticipant((theme, collector) => {\n  const shadow = theme.getColor(scrollbarShadow);\n\n  if (shadow) {\n    collector.addRule(`.monaco-editor .scroll-decoration { box-shadow: ${shadow} 0 6px 6px -6px inset; }`);\n  }\n});","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/scrollDecoration/scrollDecoration.js"],"names":["createFastDomNode","ViewPart","scrollbarShadow","registerThemingParticipant","ScrollDecorationViewPart","constructor","context","_scrollTop","_width","_updateWidth","_shouldShow","options","_context","configuration","scrollbar","get","_useShadows","useShadows","_domNode","document","createElement","setAttribute","dispose","_updateShouldShow","newShouldShow","getDomNode","layoutInfo","minimap","renderMinimap","minimapWidth","minimapLeft","width","verticalScrollbarWidth","onConfigurationChanged","e","onScrollChanged","scrollTop","prepareRender","ctx","render","setWidth","setClassName","theme","collector","shadow","getColor","addRule"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './scrollDecoration.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { scrollbarShadow } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nexport class ScrollDecorationViewPart extends ViewPart {\n    constructor(context) {\n        super(context);\n        this._scrollTop = 0;\n        this._width = 0;\n        this._updateWidth();\n        this._shouldShow = false;\n        const options = this._context.configuration.options;\n        const scrollbar = options.get(92 /* scrollbar */);\n        this._useShadows = scrollbar.useShadows;\n        this._domNode = createFastDomNode(document.createElement('div'));\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.setAttribute('aria-hidden', 'true');\n    }\n    dispose() {\n        super.dispose();\n    }\n    _updateShouldShow() {\n        const newShouldShow = (this._useShadows && this._scrollTop > 0);\n        if (this._shouldShow !== newShouldShow) {\n            this._shouldShow = newShouldShow;\n            return true;\n        }\n        return false;\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    _updateWidth() {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(131 /* layoutInfo */);\n        if (layoutInfo.minimap.renderMinimap === 0 || (layoutInfo.minimap.minimapWidth > 0 && layoutInfo.minimap.minimapLeft === 0)) {\n            this._width = layoutInfo.width;\n        }\n        else {\n            this._width = layoutInfo.width - layoutInfo.minimap.minimapWidth - layoutInfo.verticalScrollbarWidth;\n        }\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const scrollbar = options.get(92 /* scrollbar */);\n        this._useShadows = scrollbar.useShadows;\n        this._updateWidth();\n        this._updateShouldShow();\n        return true;\n    }\n    onScrollChanged(e) {\n        this._scrollTop = e.scrollTop;\n        return this._updateShouldShow();\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    render(ctx) {\n        this._domNode.setWidth(this._width);\n        this._domNode.setClassName(this._shouldShow ? 'scroll-decoration' : '');\n    }\n}\nregisterThemingParticipant((theme, collector) => {\n    const shadow = theme.getColor(scrollbarShadow);\n    if (shadow) {\n        collector.addRule(`.monaco-editor .scroll-decoration { box-shadow: ${shadow} 0 6px 6px -6px inset; }`);\n    }\n});\n"]},"metadata":{},"sourceType":"module"}