{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport { runWhenIdle } from '../../../../base/common/async.js';\nimport { once } from '../../../../base/common/functional.js';\nimport { LRUCache } from '../../../../base/common/map.js';\nimport { Range } from '../../../common/core/range.js';\nimport { CodeLensModel } from './codelens.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IStorageService, WillSaveStateReason } from '../../../../platform/storage/common/storage.js';\nexport const ICodeLensCache = createDecorator('ICodeLensCache');\n\nclass CacheItem {\n  constructor(lineCount, data) {\n    this.lineCount = lineCount;\n    this.data = data;\n  }\n\n}\n\nlet CodeLensCache = class CodeLensCache {\n  constructor(storageService) {\n    this._fakeProvider = new class {\n      provideCodeLenses() {\n        throw new Error('not supported');\n      }\n\n    }();\n    this._cache = new LRUCache(20, 0.75); // remove old data\n\n    const oldkey = 'codelens/cache';\n    runWhenIdle(() => storageService.remove(oldkey, 1\n    /* WORKSPACE */\n    )); // restore lens data on start\n\n    const key = 'codelens/cache2';\n    const raw = storageService.get(key, 1\n    /* WORKSPACE */\n    , '{}');\n\n    this._deserialize(raw); // store lens data on shutdown\n\n\n    once(storageService.onWillSaveState)(e => {\n      if (e.reason === WillSaveStateReason.SHUTDOWN) {\n        storageService.store(key, this._serialize(), 1\n        /* WORKSPACE */\n        , 1\n        /* MACHINE */\n        );\n      }\n    });\n  }\n\n  put(model, data) {\n    // create a copy of the model that is without command-ids\n    // but with comand-labels\n    const copyItems = data.lenses.map(item => {\n      var _a;\n\n      return {\n        range: item.symbol.range,\n        command: item.symbol.command && {\n          id: '',\n          title: (_a = item.symbol.command) === null || _a === void 0 ? void 0 : _a.title\n        }\n      };\n    });\n    const copyModel = new CodeLensModel();\n    copyModel.add({\n      lenses: copyItems,\n      dispose: () => {}\n    }, this._fakeProvider);\n    const item = new CacheItem(model.getLineCount(), copyModel);\n\n    this._cache.set(model.uri.toString(), item);\n  }\n\n  get(model) {\n    const item = this._cache.get(model.uri.toString());\n\n    return item && item.lineCount === model.getLineCount() ? item.data : undefined;\n  }\n\n  delete(model) {\n    this._cache.delete(model.uri.toString());\n  } // --- persistence\n\n\n  _serialize() {\n    const data = Object.create(null);\n\n    for (const [key, value] of this._cache) {\n      const lines = new Set();\n\n      for (const d of value.data.lenses) {\n        lines.add(d.symbol.range.startLineNumber);\n      }\n\n      data[key] = {\n        lineCount: value.lineCount,\n        lines: [...lines.values()]\n      };\n    }\n\n    return JSON.stringify(data);\n  }\n\n  _deserialize(raw) {\n    try {\n      const data = JSON.parse(raw);\n\n      for (const key in data) {\n        const element = data[key];\n        const lenses = [];\n\n        for (const line of element.lines) {\n          lenses.push({\n            range: new Range(line, 1, line, 11)\n          });\n        }\n\n        const model = new CodeLensModel();\n        model.add({\n          lenses,\n\n          dispose() {}\n\n        }, this._fakeProvider);\n\n        this._cache.set(key, new CacheItem(element.lineCount, model));\n      }\n    } catch (_a) {// ignore...\n    }\n  }\n\n};\nCodeLensCache = __decorate([__param(0, IStorageService)], CodeLensCache);\nexport { CodeLensCache };\nregisterSingleton(ICodeLensCache, CodeLensCache);","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/contrib/codelens/browser/codeLensCache.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","runWhenIdle","once","LRUCache","Range","CodeLensModel","registerSingleton","createDecorator","IStorageService","WillSaveStateReason","ICodeLensCache","CacheItem","constructor","lineCount","data","CodeLensCache","storageService","_fakeProvider","provideCodeLenses","Error","_cache","oldkey","remove","raw","get","_deserialize","onWillSaveState","e","reason","SHUTDOWN","store","_serialize","put","model","copyItems","lenses","map","item","_a","range","symbol","command","id","title","copyModel","add","dispose","getLineCount","set","uri","toString","undefined","delete","create","value","lines","Set","startLineNumber","values","JSON","stringify","parse","element","line","push"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { runWhenIdle } from '../../../../base/common/async.js';\nimport { once } from '../../../../base/common/functional.js';\nimport { LRUCache } from '../../../../base/common/map.js';\nimport { Range } from '../../../common/core/range.js';\nimport { CodeLensModel } from './codelens.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IStorageService, WillSaveStateReason } from '../../../../platform/storage/common/storage.js';\nexport const ICodeLensCache = createDecorator('ICodeLensCache');\nclass CacheItem {\n    constructor(lineCount, data) {\n        this.lineCount = lineCount;\n        this.data = data;\n    }\n}\nlet CodeLensCache = class CodeLensCache {\n    constructor(storageService) {\n        this._fakeProvider = new class {\n            provideCodeLenses() {\n                throw new Error('not supported');\n            }\n        };\n        this._cache = new LRUCache(20, 0.75);\n        // remove old data\n        const oldkey = 'codelens/cache';\n        runWhenIdle(() => storageService.remove(oldkey, 1 /* WORKSPACE */));\n        // restore lens data on start\n        const key = 'codelens/cache2';\n        const raw = storageService.get(key, 1 /* WORKSPACE */, '{}');\n        this._deserialize(raw);\n        // store lens data on shutdown\n        once(storageService.onWillSaveState)(e => {\n            if (e.reason === WillSaveStateReason.SHUTDOWN) {\n                storageService.store(key, this._serialize(), 1 /* WORKSPACE */, 1 /* MACHINE */);\n            }\n        });\n    }\n    put(model, data) {\n        // create a copy of the model that is without command-ids\n        // but with comand-labels\n        const copyItems = data.lenses.map(item => {\n            var _a;\n            return {\n                range: item.symbol.range,\n                command: item.symbol.command && { id: '', title: (_a = item.symbol.command) === null || _a === void 0 ? void 0 : _a.title },\n            };\n        });\n        const copyModel = new CodeLensModel();\n        copyModel.add({ lenses: copyItems, dispose: () => { } }, this._fakeProvider);\n        const item = new CacheItem(model.getLineCount(), copyModel);\n        this._cache.set(model.uri.toString(), item);\n    }\n    get(model) {\n        const item = this._cache.get(model.uri.toString());\n        return item && item.lineCount === model.getLineCount() ? item.data : undefined;\n    }\n    delete(model) {\n        this._cache.delete(model.uri.toString());\n    }\n    // --- persistence\n    _serialize() {\n        const data = Object.create(null);\n        for (const [key, value] of this._cache) {\n            const lines = new Set();\n            for (const d of value.data.lenses) {\n                lines.add(d.symbol.range.startLineNumber);\n            }\n            data[key] = {\n                lineCount: value.lineCount,\n                lines: [...lines.values()]\n            };\n        }\n        return JSON.stringify(data);\n    }\n    _deserialize(raw) {\n        try {\n            const data = JSON.parse(raw);\n            for (const key in data) {\n                const element = data[key];\n                const lenses = [];\n                for (const line of element.lines) {\n                    lenses.push({ range: new Range(line, 1, line, 11) });\n                }\n                const model = new CodeLensModel();\n                model.add({ lenses, dispose() { } }, this._fakeProvider);\n                this._cache.set(key, new CacheItem(element.lineCount, model));\n            }\n        }\n        catch (_a) {\n            // ignore...\n        }\n    }\n};\nCodeLensCache = __decorate([\n    __param(0, IStorageService)\n], CodeLensCache);\nexport { CodeLensCache };\nregisterSingleton(ICodeLensCache, CodeLensCache);\n"]},"metadata":{},"sourceType":"module"}