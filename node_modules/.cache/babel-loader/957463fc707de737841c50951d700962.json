{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { Emitter } from '../../../base/common/event.js';\nexport class ElementSizeObserver extends Disposable {\n  constructor(referenceDomElement, dimension) {\n    super();\n    this._onDidChange = this._register(new Emitter());\n    this.onDidChange = this._onDidChange.event;\n    this._referenceDomElement = referenceDomElement;\n    this._width = -1;\n    this._height = -1;\n    this._resizeObserver = null;\n    this.measureReferenceDomElement(false, dimension);\n  }\n\n  dispose() {\n    this.stopObserving();\n    super.dispose();\n  }\n\n  getWidth() {\n    return this._width;\n  }\n\n  getHeight() {\n    return this._height;\n  }\n\n  startObserving() {\n    if (!this._resizeObserver && this._referenceDomElement) {\n      this._resizeObserver = new ResizeObserver(entries => {\n        if (entries && entries[0] && entries[0].contentRect) {\n          this.observe({\n            width: entries[0].contentRect.width,\n            height: entries[0].contentRect.height\n          });\n        } else {\n          this.observe();\n        }\n      });\n\n      this._resizeObserver.observe(this._referenceDomElement);\n    }\n  }\n\n  stopObserving() {\n    if (this._resizeObserver) {\n      this._resizeObserver.disconnect();\n\n      this._resizeObserver = null;\n    }\n  }\n\n  observe(dimension) {\n    this.measureReferenceDomElement(true, dimension);\n  }\n\n  measureReferenceDomElement(emitEvent, dimension) {\n    let observedWidth = 0;\n    let observedHeight = 0;\n\n    if (dimension) {\n      observedWidth = dimension.width;\n      observedHeight = dimension.height;\n    } else if (this._referenceDomElement) {\n      observedWidth = this._referenceDomElement.clientWidth;\n      observedHeight = this._referenceDomElement.clientHeight;\n    }\n\n    observedWidth = Math.max(5, observedWidth);\n    observedHeight = Math.max(5, observedHeight);\n\n    if (this._width !== observedWidth || this._height !== observedHeight) {\n      this._width = observedWidth;\n      this._height = observedHeight;\n\n      if (emitEvent) {\n        this._onDidChange.fire();\n      }\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/browser/config/elementSizeObserver.js"],"names":["Disposable","Emitter","ElementSizeObserver","constructor","referenceDomElement","dimension","_onDidChange","_register","onDidChange","event","_referenceDomElement","_width","_height","_resizeObserver","measureReferenceDomElement","dispose","stopObserving","getWidth","getHeight","startObserving","ResizeObserver","entries","contentRect","observe","width","height","disconnect","emitEvent","observedWidth","observedHeight","clientWidth","clientHeight","Math","max","fire"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,UAAT,QAA2B,mCAA3B;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,OAAO,MAAMC,mBAAN,SAAkCF,UAAlC,CAA6C;AAChDG,EAAAA,WAAW,CAACC,mBAAD,EAAsBC,SAAtB,EAAiC;AACxC;AACA,SAAKC,YAAL,GAAoB,KAAKC,SAAL,CAAe,IAAIN,OAAJ,EAAf,CAApB;AACA,SAAKO,WAAL,GAAmB,KAAKF,YAAL,CAAkBG,KAArC;AACA,SAAKC,oBAAL,GAA4BN,mBAA5B;AACA,SAAKO,MAAL,GAAc,CAAC,CAAf;AACA,SAAKC,OAAL,GAAe,CAAC,CAAhB;AACA,SAAKC,eAAL,GAAuB,IAAvB;AACA,SAAKC,0BAAL,CAAgC,KAAhC,EAAuCT,SAAvC;AACH;;AACDU,EAAAA,OAAO,GAAG;AACN,SAAKC,aAAL;AACA,UAAMD,OAAN;AACH;;AACDE,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKN,MAAZ;AACH;;AACDO,EAAAA,SAAS,GAAG;AACR,WAAO,KAAKN,OAAZ;AACH;;AACDO,EAAAA,cAAc,GAAG;AACb,QAAI,CAAC,KAAKN,eAAN,IAAyB,KAAKH,oBAAlC,EAAwD;AACpD,WAAKG,eAAL,GAAuB,IAAIO,cAAJ,CAAoBC,OAAD,IAAa;AACnD,YAAIA,OAAO,IAAIA,OAAO,CAAC,CAAD,CAAlB,IAAyBA,OAAO,CAAC,CAAD,CAAP,CAAWC,WAAxC,EAAqD;AACjD,eAAKC,OAAL,CAAa;AAAEC,YAAAA,KAAK,EAAEH,OAAO,CAAC,CAAD,CAAP,CAAWC,WAAX,CAAuBE,KAAhC;AAAuCC,YAAAA,MAAM,EAAEJ,OAAO,CAAC,CAAD,CAAP,CAAWC,WAAX,CAAuBG;AAAtE,WAAb;AACH,SAFD,MAGK;AACD,eAAKF,OAAL;AACH;AACJ,OAPsB,CAAvB;;AAQA,WAAKV,eAAL,CAAqBU,OAArB,CAA6B,KAAKb,oBAAlC;AACH;AACJ;;AACDM,EAAAA,aAAa,GAAG;AACZ,QAAI,KAAKH,eAAT,EAA0B;AACtB,WAAKA,eAAL,CAAqBa,UAArB;;AACA,WAAKb,eAAL,GAAuB,IAAvB;AACH;AACJ;;AACDU,EAAAA,OAAO,CAAClB,SAAD,EAAY;AACf,SAAKS,0BAAL,CAAgC,IAAhC,EAAsCT,SAAtC;AACH;;AACDS,EAAAA,0BAA0B,CAACa,SAAD,EAAYtB,SAAZ,EAAuB;AAC7C,QAAIuB,aAAa,GAAG,CAApB;AACA,QAAIC,cAAc,GAAG,CAArB;;AACA,QAAIxB,SAAJ,EAAe;AACXuB,MAAAA,aAAa,GAAGvB,SAAS,CAACmB,KAA1B;AACAK,MAAAA,cAAc,GAAGxB,SAAS,CAACoB,MAA3B;AACH,KAHD,MAIK,IAAI,KAAKf,oBAAT,EAA+B;AAChCkB,MAAAA,aAAa,GAAG,KAAKlB,oBAAL,CAA0BoB,WAA1C;AACAD,MAAAA,cAAc,GAAG,KAAKnB,oBAAL,CAA0BqB,YAA3C;AACH;;AACDH,IAAAA,aAAa,GAAGI,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYL,aAAZ,CAAhB;AACAC,IAAAA,cAAc,GAAGG,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYJ,cAAZ,CAAjB;;AACA,QAAI,KAAKlB,MAAL,KAAgBiB,aAAhB,IAAiC,KAAKhB,OAAL,KAAiBiB,cAAtD,EAAsE;AAClE,WAAKlB,MAAL,GAAciB,aAAd;AACA,WAAKhB,OAAL,GAAeiB,cAAf;;AACA,UAAIF,SAAJ,EAAe;AACX,aAAKrB,YAAL,CAAkB4B,IAAlB;AACH;AACJ;AACJ;;AA/D+C","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { Emitter } from '../../../base/common/event.js';\nexport class ElementSizeObserver extends Disposable {\n    constructor(referenceDomElement, dimension) {\n        super();\n        this._onDidChange = this._register(new Emitter());\n        this.onDidChange = this._onDidChange.event;\n        this._referenceDomElement = referenceDomElement;\n        this._width = -1;\n        this._height = -1;\n        this._resizeObserver = null;\n        this.measureReferenceDomElement(false, dimension);\n    }\n    dispose() {\n        this.stopObserving();\n        super.dispose();\n    }\n    getWidth() {\n        return this._width;\n    }\n    getHeight() {\n        return this._height;\n    }\n    startObserving() {\n        if (!this._resizeObserver && this._referenceDomElement) {\n            this._resizeObserver = new ResizeObserver((entries) => {\n                if (entries && entries[0] && entries[0].contentRect) {\n                    this.observe({ width: entries[0].contentRect.width, height: entries[0].contentRect.height });\n                }\n                else {\n                    this.observe();\n                }\n            });\n            this._resizeObserver.observe(this._referenceDomElement);\n        }\n    }\n    stopObserving() {\n        if (this._resizeObserver) {\n            this._resizeObserver.disconnect();\n            this._resizeObserver = null;\n        }\n    }\n    observe(dimension) {\n        this.measureReferenceDomElement(true, dimension);\n    }\n    measureReferenceDomElement(emitEvent, dimension) {\n        let observedWidth = 0;\n        let observedHeight = 0;\n        if (dimension) {\n            observedWidth = dimension.width;\n            observedHeight = dimension.height;\n        }\n        else if (this._referenceDomElement) {\n            observedWidth = this._referenceDomElement.clientWidth;\n            observedHeight = this._referenceDomElement.clientHeight;\n        }\n        observedWidth = Math.max(5, observedWidth);\n        observedHeight = Math.max(5, observedHeight);\n        if (this._width !== observedWidth || this._height !== observedHeight) {\n            this._width = observedWidth;\n            this._height = observedHeight;\n            if (emitEvent) {\n                this._onDidChange.fire();\n            }\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}