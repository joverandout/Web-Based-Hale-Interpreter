{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { timeout } from '../../../base/common/async.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Disposable, DisposableStore, MutableDisposable } from '../../../base/common/lifecycle.js';\nexport var TriggerAction;\n\n(function (TriggerAction) {\n  /**\n   * Do nothing after the button was clicked.\n   */\n  TriggerAction[TriggerAction[\"NO_ACTION\"] = 0] = \"NO_ACTION\";\n  /**\n   * Close the picker.\n   */\n\n  TriggerAction[TriggerAction[\"CLOSE_PICKER\"] = 1] = \"CLOSE_PICKER\";\n  /**\n   * Update the results of the picker.\n   */\n\n  TriggerAction[TriggerAction[\"REFRESH_PICKER\"] = 2] = \"REFRESH_PICKER\";\n  /**\n   * Remove the item from the picker.\n   */\n\n  TriggerAction[TriggerAction[\"REMOVE_ITEM\"] = 3] = \"REMOVE_ITEM\";\n})(TriggerAction || (TriggerAction = {}));\n\nfunction isPicksWithActive(obj) {\n  const candidate = obj;\n  return Array.isArray(candidate.items);\n}\n\nfunction isFastAndSlowPicks(obj) {\n  const candidate = obj;\n  return !!candidate.picks && candidate.additionalPicks instanceof Promise;\n}\n\nexport class PickerQuickAccessProvider extends Disposable {\n  constructor(prefix, options) {\n    super();\n    this.prefix = prefix;\n    this.options = options;\n  }\n\n  provide(picker, token) {\n    var _a;\n\n    const disposables = new DisposableStore(); // Apply options if any\n\n    picker.canAcceptInBackground = !!((_a = this.options) === null || _a === void 0 ? void 0 : _a.canAcceptInBackground); // Disable filtering & sorting, we control the results\n\n    picker.matchOnLabel = picker.matchOnDescription = picker.matchOnDetail = picker.sortByLabel = false; // Set initial picks and update on type\n\n    let picksCts = undefined;\n    const picksDisposable = disposables.add(new MutableDisposable());\n\n    const updatePickerItems = () => __awaiter(this, void 0, void 0, function* () {\n      const picksDisposables = picksDisposable.value = new DisposableStore(); // Cancel any previous ask for picks and busy\n\n      picksCts === null || picksCts === void 0 ? void 0 : picksCts.dispose(true);\n      picker.busy = false; // Create new cancellation source for this run\n\n      picksCts = new CancellationTokenSource(token); // Collect picks and support both long running and short or combined\n\n      const picksToken = picksCts.token;\n      const picksFilter = picker.value.substr(this.prefix.length).trim();\n\n      const providedPicks = this._getPicks(picksFilter, picksDisposables, picksToken);\n\n      const applyPicks = (picks, skipEmpty) => {\n        var _a;\n\n        let items;\n        let activeItem = undefined;\n\n        if (isPicksWithActive(picks)) {\n          items = picks.items;\n          activeItem = picks.active;\n        } else {\n          items = picks;\n        }\n\n        if (items.length === 0) {\n          if (skipEmpty) {\n            return false;\n          }\n\n          if (picksFilter.length > 0 && ((_a = this.options) === null || _a === void 0 ? void 0 : _a.noResultsPick)) {\n            items = [this.options.noResultsPick];\n          }\n        }\n\n        picker.items = items;\n\n        if (activeItem) {\n          picker.activeItems = [activeItem];\n        }\n\n        return true;\n      }; // No Picks\n\n\n      if (providedPicks === null) {// Ignore\n      } // Fast and Slow Picks\n      else if (isFastAndSlowPicks(providedPicks)) {\n        let fastPicksApplied = false;\n        let slowPicksApplied = false;\n        yield Promise.all([// Fast Picks: to reduce amount of flicker, we race against\n        // the slow picks over 500ms and then set the fast picks.\n        // If the slow picks are faster, we reduce the flicker by\n        // only setting the items once.\n        (() => __awaiter(this, void 0, void 0, function* () {\n          yield timeout(PickerQuickAccessProvider.FAST_PICKS_RACE_DELAY);\n\n          if (picksToken.isCancellationRequested) {\n            return;\n          }\n\n          if (!slowPicksApplied) {\n            fastPicksApplied = applyPicks(providedPicks.picks, true\n            /* skip over empty to reduce flicker */\n            );\n          }\n        }))(), // Slow Picks: we await the slow picks and then set them at\n        // once together with the fast picks, but only if we actually\n        // have additional results.\n        (() => __awaiter(this, void 0, void 0, function* () {\n          picker.busy = true;\n\n          try {\n            const awaitedAdditionalPicks = yield providedPicks.additionalPicks;\n\n            if (picksToken.isCancellationRequested) {\n              return;\n            }\n\n            let picks;\n            let activePick = undefined;\n\n            if (isPicksWithActive(providedPicks.picks)) {\n              picks = providedPicks.picks.items;\n              activePick = providedPicks.picks.active;\n            } else {\n              picks = providedPicks.picks;\n            }\n\n            let additionalPicks;\n            let additionalActivePick = undefined;\n\n            if (isPicksWithActive(awaitedAdditionalPicks)) {\n              additionalPicks = awaitedAdditionalPicks.items;\n              additionalActivePick = awaitedAdditionalPicks.active;\n            } else {\n              additionalPicks = awaitedAdditionalPicks;\n            }\n\n            if (additionalPicks.length > 0 || !fastPicksApplied) {\n              // If we do not have any activePick or additionalActivePick\n              // we try to preserve the currently active pick from the\n              // fast results. This fixes an issue where the user might\n              // have made a pick active before the additional results\n              // kick in.\n              // See https://github.com/microsoft/vscode/issues/102480\n              let fallbackActivePick = undefined;\n\n              if (!activePick && !additionalActivePick) {\n                const fallbackActivePickCandidate = picker.activeItems[0];\n\n                if (fallbackActivePickCandidate && picks.indexOf(fallbackActivePickCandidate) !== -1) {\n                  fallbackActivePick = fallbackActivePickCandidate;\n                }\n              }\n\n              applyPicks({\n                items: [...picks, ...additionalPicks],\n                active: activePick || additionalActivePick || fallbackActivePick\n              });\n            }\n          } finally {\n            if (!picksToken.isCancellationRequested) {\n              picker.busy = false;\n            }\n\n            slowPicksApplied = true;\n          }\n        }))()]);\n      } // Fast Picks\n      else if (!(providedPicks instanceof Promise)) {\n        applyPicks(providedPicks);\n      } // Slow Picks\n      else {\n        picker.busy = true;\n\n        try {\n          const awaitedPicks = yield providedPicks;\n\n          if (picksToken.isCancellationRequested) {\n            return;\n          }\n\n          applyPicks(awaitedPicks);\n        } finally {\n          if (!picksToken.isCancellationRequested) {\n            picker.busy = false;\n          }\n        }\n      }\n    });\n\n    disposables.add(picker.onDidChangeValue(() => updatePickerItems()));\n    updatePickerItems(); // Accept the pick on accept and hide picker\n\n    disposables.add(picker.onDidAccept(event => {\n      const [item] = picker.selectedItems;\n\n      if (typeof (item === null || item === void 0 ? void 0 : item.accept) === 'function') {\n        if (!event.inBackground) {\n          picker.hide(); // hide picker unless we accept in background\n        }\n\n        item.accept(picker.keyMods, event);\n      }\n    })); // Trigger the pick with button index if button triggered\n\n    disposables.add(picker.onDidTriggerItemButton(({\n      button,\n      item\n    }) => __awaiter(this, void 0, void 0, function* () {\n      var _b, _c;\n\n      if (typeof item.trigger === 'function') {\n        const buttonIndex = (_c = (_b = item.buttons) === null || _b === void 0 ? void 0 : _b.indexOf(button)) !== null && _c !== void 0 ? _c : -1;\n\n        if (buttonIndex >= 0) {\n          const result = item.trigger(buttonIndex, picker.keyMods);\n          const action = typeof result === 'number' ? result : yield result;\n\n          if (token.isCancellationRequested) {\n            return;\n          }\n\n          switch (action) {\n            case TriggerAction.NO_ACTION:\n              break;\n\n            case TriggerAction.CLOSE_PICKER:\n              picker.hide();\n              break;\n\n            case TriggerAction.REFRESH_PICKER:\n              updatePickerItems();\n              break;\n\n            case TriggerAction.REMOVE_ITEM:\n              {\n                const index = picker.items.indexOf(item);\n\n                if (index !== -1) {\n                  const items = picker.items.slice();\n                  const removed = items.splice(index, 1);\n                  const activeItems = picker.activeItems.filter(activeItem => activeItem !== removed[0]);\n                  const keepScrollPositionBefore = picker.keepScrollPosition;\n                  picker.keepScrollPosition = true;\n                  picker.items = items;\n\n                  if (activeItems) {\n                    picker.activeItems = activeItems;\n                  }\n\n                  picker.keepScrollPosition = keepScrollPositionBefore;\n                }\n\n                break;\n              }\n          }\n        }\n      }\n    })));\n    return disposables;\n  }\n\n}\nPickerQuickAccessProvider.FAST_PICKS_RACE_DELAY = 200; // timeout before we accept fast results before slow results are present","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/pickerQuickAccess.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","timeout","CancellationTokenSource","Disposable","DisposableStore","MutableDisposable","TriggerAction","isPicksWithActive","obj","candidate","Array","isArray","items","isFastAndSlowPicks","picks","additionalPicks","PickerQuickAccessProvider","constructor","prefix","options","provide","picker","token","_a","disposables","canAcceptInBackground","matchOnLabel","matchOnDescription","matchOnDetail","sortByLabel","picksCts","undefined","picksDisposable","add","updatePickerItems","picksDisposables","dispose","busy","picksToken","picksFilter","substr","length","trim","providedPicks","_getPicks","applyPicks","skipEmpty","activeItem","active","noResultsPick","activeItems","fastPicksApplied","slowPicksApplied","all","FAST_PICKS_RACE_DELAY","isCancellationRequested","awaitedAdditionalPicks","activePick","additionalActivePick","fallbackActivePick","fallbackActivePickCandidate","indexOf","awaitedPicks","onDidChangeValue","onDidAccept","event","item","selectedItems","accept","inBackground","hide","keyMods","onDidTriggerItemButton","button","_b","_c","trigger","buttonIndex","buttons","action","NO_ACTION","CLOSE_PICKER","REFRESH_PICKER","REMOVE_ITEM","index","slice","removed","splice","filter","keepScrollPositionBefore","keepScrollPosition"],"mappings":"AAAA;AACA;AACA;AACA;AACA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA4B,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AACrF,WAASC,KAAT,CAAeC,KAAf,EAAsB;AAAE,WAAOA,KAAK,YAAYH,CAAjB,GAAqBG,KAArB,GAA6B,IAAIH,CAAJ,CAAM,UAAUI,OAAV,EAAmB;AAAEA,MAAAA,OAAO,CAACD,KAAD,CAAP;AAAiB,KAA5C,CAApC;AAAoF;;AAC5G,SAAO,KAAKH,CAAC,KAAKA,CAAC,GAAGK,OAAT,CAAN,EAAyB,UAAUD,OAAV,EAAmBE,MAAnB,EAA2B;AACvD,aAASC,SAAT,CAAmBJ,KAAnB,EAA0B;AAAE,UAAI;AAAEK,QAAAA,IAAI,CAACP,SAAS,CAACQ,IAAV,CAAeN,KAAf,CAAD,CAAJ;AAA8B,OAApC,CAAqC,OAAOO,CAAP,EAAU;AAAEJ,QAAAA,MAAM,CAACI,CAAD,CAAN;AAAY;AAAE;;AAC3F,aAASC,QAAT,CAAkBR,KAAlB,EAAyB;AAAE,UAAI;AAAEK,QAAAA,IAAI,CAACP,SAAS,CAAC,OAAD,CAAT,CAAmBE,KAAnB,CAAD,CAAJ;AAAkC,OAAxC,CAAyC,OAAOO,CAAP,EAAU;AAAEJ,QAAAA,MAAM,CAACI,CAAD,CAAN;AAAY;AAAE;;AAC9F,aAASF,IAAT,CAAcI,MAAd,EAAsB;AAAEA,MAAAA,MAAM,CAACC,IAAP,GAAcT,OAAO,CAACQ,MAAM,CAACT,KAAR,CAArB,GAAsCD,KAAK,CAACU,MAAM,CAACT,KAAR,CAAL,CAAoBW,IAApB,CAAyBP,SAAzB,EAAoCI,QAApC,CAAtC;AAAsF;;AAC9GH,IAAAA,IAAI,CAAC,CAACP,SAAS,GAAGA,SAAS,CAACc,KAAV,CAAgBjB,OAAhB,EAAyBC,UAAU,IAAI,EAAvC,CAAb,EAAyDU,IAAzD,EAAD,CAAJ;AACH,GALM,CAAP;AAMH,CARD;;AASA,SAASO,OAAT,QAAwB,+BAAxB;AACA,SAASC,uBAAT,QAAwC,sCAAxC;AACA,SAASC,UAAT,EAAqBC,eAArB,EAAsCC,iBAAtC,QAA+D,mCAA/D;AACA,OAAO,IAAIC,aAAJ;;AACP,CAAC,UAAUA,aAAV,EAAyB;AACtB;AACJ;AACA;AACIA,EAAAA,aAAa,CAACA,aAAa,CAAC,WAAD,CAAb,GAA6B,CAA9B,CAAb,GAAgD,WAAhD;AACA;AACJ;AACA;;AACIA,EAAAA,aAAa,CAACA,aAAa,CAAC,cAAD,CAAb,GAAgC,CAAjC,CAAb,GAAmD,cAAnD;AACA;AACJ;AACA;;AACIA,EAAAA,aAAa,CAACA,aAAa,CAAC,gBAAD,CAAb,GAAkC,CAAnC,CAAb,GAAqD,gBAArD;AACA;AACJ;AACA;;AACIA,EAAAA,aAAa,CAACA,aAAa,CAAC,aAAD,CAAb,GAA+B,CAAhC,CAAb,GAAkD,aAAlD;AACH,CAjBD,EAiBGA,aAAa,KAAKA,aAAa,GAAG,EAArB,CAjBhB;;AAkBA,SAASC,iBAAT,CAA2BC,GAA3B,EAAgC;AAC5B,QAAMC,SAAS,GAAGD,GAAlB;AACA,SAAOE,KAAK,CAACC,OAAN,CAAcF,SAAS,CAACG,KAAxB,CAAP;AACH;;AACD,SAASC,kBAAT,CAA4BL,GAA5B,EAAiC;AAC7B,QAAMC,SAAS,GAAGD,GAAlB;AACA,SAAO,CAAC,CAACC,SAAS,CAACK,KAAZ,IAAqBL,SAAS,CAACM,eAAV,YAAqCzB,OAAjE;AACH;;AACD,OAAO,MAAM0B,yBAAN,SAAwCb,UAAxC,CAAmD;AACtDc,EAAAA,WAAW,CAACC,MAAD,EAASC,OAAT,EAAkB;AACzB;AACA,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,OAAL,GAAeA,OAAf;AACH;;AACDC,EAAAA,OAAO,CAACC,MAAD,EAASC,KAAT,EAAgB;AACnB,QAAIC,EAAJ;;AACA,UAAMC,WAAW,GAAG,IAAIpB,eAAJ,EAApB,CAFmB,CAGnB;;AACAiB,IAAAA,MAAM,CAACI,qBAAP,GAA+B,CAAC,EAAE,CAACF,EAAE,GAAG,KAAKJ,OAAX,MAAwB,IAAxB,IAAgCI,EAAE,KAAK,KAAK,CAA5C,GAAgD,KAAK,CAArD,GAAyDA,EAAE,CAACE,qBAA9D,CAAhC,CAJmB,CAKnB;;AACAJ,IAAAA,MAAM,CAACK,YAAP,GAAsBL,MAAM,CAACM,kBAAP,GAA4BN,MAAM,CAACO,aAAP,GAAuBP,MAAM,CAACQ,WAAP,GAAqB,KAA9F,CANmB,CAOnB;;AACA,QAAIC,QAAQ,GAAGC,SAAf;AACA,UAAMC,eAAe,GAAGR,WAAW,CAACS,GAAZ,CAAgB,IAAI5B,iBAAJ,EAAhB,CAAxB;;AACA,UAAM6B,iBAAiB,GAAG,MAAMpD,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AACzE,YAAMqD,gBAAgB,GAAGH,eAAe,CAAC5C,KAAhB,GAAwB,IAAIgB,eAAJ,EAAjD,CADyE,CAEzE;;AACA0B,MAAAA,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACM,OAAT,CAAiB,IAAjB,CAApD;AACAf,MAAAA,MAAM,CAACgB,IAAP,GAAc,KAAd,CAJyE,CAKzE;;AACAP,MAAAA,QAAQ,GAAG,IAAI5B,uBAAJ,CAA4BoB,KAA5B,CAAX,CANyE,CAOzE;;AACA,YAAMgB,UAAU,GAAGR,QAAQ,CAACR,KAA5B;AACA,YAAMiB,WAAW,GAAGlB,MAAM,CAACjC,KAAP,CAAaoD,MAAb,CAAoB,KAAKtB,MAAL,CAAYuB,MAAhC,EAAwCC,IAAxC,EAApB;;AACA,YAAMC,aAAa,GAAG,KAAKC,SAAL,CAAeL,WAAf,EAA4BJ,gBAA5B,EAA8CG,UAA9C,CAAtB;;AACA,YAAMO,UAAU,GAAG,CAAC/B,KAAD,EAAQgC,SAAR,KAAsB;AACrC,YAAIvB,EAAJ;;AACA,YAAIX,KAAJ;AACA,YAAImC,UAAU,GAAGhB,SAAjB;;AACA,YAAIxB,iBAAiB,CAACO,KAAD,CAArB,EAA8B;AAC1BF,UAAAA,KAAK,GAAGE,KAAK,CAACF,KAAd;AACAmC,UAAAA,UAAU,GAAGjC,KAAK,CAACkC,MAAnB;AACH,SAHD,MAIK;AACDpC,UAAAA,KAAK,GAAGE,KAAR;AACH;;AACD,YAAIF,KAAK,CAAC6B,MAAN,KAAiB,CAArB,EAAwB;AACpB,cAAIK,SAAJ,EAAe;AACX,mBAAO,KAAP;AACH;;AACD,cAAIP,WAAW,CAACE,MAAZ,GAAqB,CAArB,KAA2B,CAAClB,EAAE,GAAG,KAAKJ,OAAX,MAAwB,IAAxB,IAAgCI,EAAE,KAAK,KAAK,CAA5C,GAAgD,KAAK,CAArD,GAAyDA,EAAE,CAAC0B,aAAvF,CAAJ,EAA2G;AACvGrC,YAAAA,KAAK,GAAG,CAAC,KAAKO,OAAL,CAAa8B,aAAd,CAAR;AACH;AACJ;;AACD5B,QAAAA,MAAM,CAACT,KAAP,GAAeA,KAAf;;AACA,YAAImC,UAAJ,EAAgB;AACZ1B,UAAAA,MAAM,CAAC6B,WAAP,GAAqB,CAACH,UAAD,CAArB;AACH;;AACD,eAAO,IAAP;AACH,OAxBD,CAXyE,CAoCzE;;;AACA,UAAIJ,aAAa,KAAK,IAAtB,EAA4B,CACxB;AACH,OAFD,CAGA;AAHA,WAIK,IAAI9B,kBAAkB,CAAC8B,aAAD,CAAtB,EAAuC;AACxC,YAAIQ,gBAAgB,GAAG,KAAvB;AACA,YAAIC,gBAAgB,GAAG,KAAvB;AACA,cAAM9D,OAAO,CAAC+D,GAAR,CAAY,CACd;AACA;AACA;AACA;AACA,SAAC,MAAMvE,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAChD,gBAAMmB,OAAO,CAACe,yBAAyB,CAACsC,qBAA3B,CAAb;;AACA,cAAIhB,UAAU,CAACiB,uBAAf,EAAwC;AACpC;AACH;;AACD,cAAI,CAACH,gBAAL,EAAuB;AACnBD,YAAAA,gBAAgB,GAAGN,UAAU,CAACF,aAAa,CAAC7B,KAAf,EAAsB;AAAK;AAA3B,aAA7B;AACH;AACJ,SARe,CAAhB,GALc,EAcd;AACA;AACA;AACA,SAAC,MAAMhC,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAChDuC,UAAAA,MAAM,CAACgB,IAAP,GAAc,IAAd;;AACA,cAAI;AACA,kBAAMmB,sBAAsB,GAAG,MAAMb,aAAa,CAAC5B,eAAnD;;AACA,gBAAIuB,UAAU,CAACiB,uBAAf,EAAwC;AACpC;AACH;;AACD,gBAAIzC,KAAJ;AACA,gBAAI2C,UAAU,GAAG1B,SAAjB;;AACA,gBAAIxB,iBAAiB,CAACoC,aAAa,CAAC7B,KAAf,CAArB,EAA4C;AACxCA,cAAAA,KAAK,GAAG6B,aAAa,CAAC7B,KAAd,CAAoBF,KAA5B;AACA6C,cAAAA,UAAU,GAAGd,aAAa,CAAC7B,KAAd,CAAoBkC,MAAjC;AACH,aAHD,MAIK;AACDlC,cAAAA,KAAK,GAAG6B,aAAa,CAAC7B,KAAtB;AACH;;AACD,gBAAIC,eAAJ;AACA,gBAAI2C,oBAAoB,GAAG3B,SAA3B;;AACA,gBAAIxB,iBAAiB,CAACiD,sBAAD,CAArB,EAA+C;AAC3CzC,cAAAA,eAAe,GAAGyC,sBAAsB,CAAC5C,KAAzC;AACA8C,cAAAA,oBAAoB,GAAGF,sBAAsB,CAACR,MAA9C;AACH,aAHD,MAIK;AACDjC,cAAAA,eAAe,GAAGyC,sBAAlB;AACH;;AACD,gBAAIzC,eAAe,CAAC0B,MAAhB,GAAyB,CAAzB,IAA8B,CAACU,gBAAnC,EAAqD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,kBAAIQ,kBAAkB,GAAG5B,SAAzB;;AACA,kBAAI,CAAC0B,UAAD,IAAe,CAACC,oBAApB,EAA0C;AACtC,sBAAME,2BAA2B,GAAGvC,MAAM,CAAC6B,WAAP,CAAmB,CAAnB,CAApC;;AACA,oBAAIU,2BAA2B,IAAI9C,KAAK,CAAC+C,OAAN,CAAcD,2BAAd,MAA+C,CAAC,CAAnF,EAAsF;AAClFD,kBAAAA,kBAAkB,GAAGC,2BAArB;AACH;AACJ;;AACDf,cAAAA,UAAU,CAAC;AACPjC,gBAAAA,KAAK,EAAE,CAAC,GAAGE,KAAJ,EAAW,GAAGC,eAAd,CADA;AAEPiC,gBAAAA,MAAM,EAAES,UAAU,IAAIC,oBAAd,IAAsCC;AAFvC,eAAD,CAAV;AAIH;AACJ,WA1CD,SA2CQ;AACJ,gBAAI,CAACrB,UAAU,CAACiB,uBAAhB,EAAyC;AACrClC,cAAAA,MAAM,CAACgB,IAAP,GAAc,KAAd;AACH;;AACDe,YAAAA,gBAAgB,GAAG,IAAnB;AACH;AACJ,SAnDe,CAAhB,GAjBc,CAAZ,CAAN;AAsEH,OAzEI,CA0EL;AA1EK,WA2EA,IAAI,EAAET,aAAa,YAAYrD,OAA3B,CAAJ,EAAyC;AAC1CuD,QAAAA,UAAU,CAACF,aAAD,CAAV;AACH,OAFI,CAGL;AAHK,WAIA;AACDtB,QAAAA,MAAM,CAACgB,IAAP,GAAc,IAAd;;AACA,YAAI;AACA,gBAAMyB,YAAY,GAAG,MAAMnB,aAA3B;;AACA,cAAIL,UAAU,CAACiB,uBAAf,EAAwC;AACpC;AACH;;AACDV,UAAAA,UAAU,CAACiB,YAAD,CAAV;AACH,SAND,SAOQ;AACJ,cAAI,CAACxB,UAAU,CAACiB,uBAAhB,EAAyC;AACrClC,YAAAA,MAAM,CAACgB,IAAP,GAAc,KAAd;AACH;AACJ;AACJ;AACJ,KAvIwC,CAAzC;;AAwIAb,IAAAA,WAAW,CAACS,GAAZ,CAAgBZ,MAAM,CAAC0C,gBAAP,CAAwB,MAAM7B,iBAAiB,EAA/C,CAAhB;AACAA,IAAAA,iBAAiB,GAnJE,CAoJnB;;AACAV,IAAAA,WAAW,CAACS,GAAZ,CAAgBZ,MAAM,CAAC2C,WAAP,CAAmBC,KAAK,IAAI;AACxC,YAAM,CAACC,IAAD,IAAS7C,MAAM,CAAC8C,aAAtB;;AACA,UAAI,QAAQD,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmC,KAAK,CAAxC,GAA4CA,IAAI,CAACE,MAAzD,MAAqE,UAAzE,EAAqF;AACjF,YAAI,CAACH,KAAK,CAACI,YAAX,EAAyB;AACrBhD,UAAAA,MAAM,CAACiD,IAAP,GADqB,CACN;AAClB;;AACDJ,QAAAA,IAAI,CAACE,MAAL,CAAY/C,MAAM,CAACkD,OAAnB,EAA4BN,KAA5B;AACH;AACJ,KARe,CAAhB,EArJmB,CA8JnB;;AACAzC,IAAAA,WAAW,CAACS,GAAZ,CAAgBZ,MAAM,CAACmD,sBAAP,CAA8B,CAAC;AAAEC,MAAAA,MAAF;AAAUP,MAAAA;AAAV,KAAD,KAAsBpF,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAC7G,UAAI4F,EAAJ,EAAQC,EAAR;;AACA,UAAI,OAAOT,IAAI,CAACU,OAAZ,KAAwB,UAA5B,EAAwC;AACpC,cAAMC,WAAW,GAAG,CAACF,EAAE,GAAG,CAACD,EAAE,GAAGR,IAAI,CAACY,OAAX,MAAwB,IAAxB,IAAgCJ,EAAE,KAAK,KAAK,CAA5C,GAAgD,KAAK,CAArD,GAAyDA,EAAE,CAACb,OAAH,CAAWY,MAAX,CAA/D,MAAuF,IAAvF,IAA+FE,EAAE,KAAK,KAAK,CAA3G,GAA+GA,EAA/G,GAAoH,CAAC,CAAzI;;AACA,YAAIE,WAAW,IAAI,CAAnB,EAAsB;AAClB,gBAAMhF,MAAM,GAAGqE,IAAI,CAACU,OAAL,CAAaC,WAAb,EAA0BxD,MAAM,CAACkD,OAAjC,CAAf;AACA,gBAAMQ,MAAM,GAAI,OAAOlF,MAAP,KAAkB,QAAnB,GAA+BA,MAA/B,GAAwC,MAAMA,MAA7D;;AACA,cAAIyB,KAAK,CAACiC,uBAAV,EAAmC;AAC/B;AACH;;AACD,kBAAQwB,MAAR;AACI,iBAAKzE,aAAa,CAAC0E,SAAnB;AACI;;AACJ,iBAAK1E,aAAa,CAAC2E,YAAnB;AACI5D,cAAAA,MAAM,CAACiD,IAAP;AACA;;AACJ,iBAAKhE,aAAa,CAAC4E,cAAnB;AACIhD,cAAAA,iBAAiB;AACjB;;AACJ,iBAAK5B,aAAa,CAAC6E,WAAnB;AAAgC;AAC5B,sBAAMC,KAAK,GAAG/D,MAAM,CAACT,KAAP,CAAaiD,OAAb,CAAqBK,IAArB,CAAd;;AACA,oBAAIkB,KAAK,KAAK,CAAC,CAAf,EAAkB;AACd,wBAAMxE,KAAK,GAAGS,MAAM,CAACT,KAAP,CAAayE,KAAb,EAAd;AACA,wBAAMC,OAAO,GAAG1E,KAAK,CAAC2E,MAAN,CAAaH,KAAb,EAAoB,CAApB,CAAhB;AACA,wBAAMlC,WAAW,GAAG7B,MAAM,CAAC6B,WAAP,CAAmBsC,MAAnB,CAA0BzC,UAAU,IAAIA,UAAU,KAAKuC,OAAO,CAAC,CAAD,CAA9D,CAApB;AACA,wBAAMG,wBAAwB,GAAGpE,MAAM,CAACqE,kBAAxC;AACArE,kBAAAA,MAAM,CAACqE,kBAAP,GAA4B,IAA5B;AACArE,kBAAAA,MAAM,CAACT,KAAP,GAAeA,KAAf;;AACA,sBAAIsC,WAAJ,EAAiB;AACb7B,oBAAAA,MAAM,CAAC6B,WAAP,GAAqBA,WAArB;AACH;;AACD7B,kBAAAA,MAAM,CAACqE,kBAAP,GAA4BD,wBAA5B;AACH;;AACD;AACH;AAxBL;AA0BH;AACJ;AACJ,KAtC4E,CAA7D,CAAhB;AAuCA,WAAOjE,WAAP;AACH;;AA7MqD;AA+M1DR,yBAAyB,CAACsC,qBAA1B,GAAkD,GAAlD,C,CAAuD","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { timeout } from '../../../base/common/async.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Disposable, DisposableStore, MutableDisposable } from '../../../base/common/lifecycle.js';\nexport var TriggerAction;\n(function (TriggerAction) {\n    /**\n     * Do nothing after the button was clicked.\n     */\n    TriggerAction[TriggerAction[\"NO_ACTION\"] = 0] = \"NO_ACTION\";\n    /**\n     * Close the picker.\n     */\n    TriggerAction[TriggerAction[\"CLOSE_PICKER\"] = 1] = \"CLOSE_PICKER\";\n    /**\n     * Update the results of the picker.\n     */\n    TriggerAction[TriggerAction[\"REFRESH_PICKER\"] = 2] = \"REFRESH_PICKER\";\n    /**\n     * Remove the item from the picker.\n     */\n    TriggerAction[TriggerAction[\"REMOVE_ITEM\"] = 3] = \"REMOVE_ITEM\";\n})(TriggerAction || (TriggerAction = {}));\nfunction isPicksWithActive(obj) {\n    const candidate = obj;\n    return Array.isArray(candidate.items);\n}\nfunction isFastAndSlowPicks(obj) {\n    const candidate = obj;\n    return !!candidate.picks && candidate.additionalPicks instanceof Promise;\n}\nexport class PickerQuickAccessProvider extends Disposable {\n    constructor(prefix, options) {\n        super();\n        this.prefix = prefix;\n        this.options = options;\n    }\n    provide(picker, token) {\n        var _a;\n        const disposables = new DisposableStore();\n        // Apply options if any\n        picker.canAcceptInBackground = !!((_a = this.options) === null || _a === void 0 ? void 0 : _a.canAcceptInBackground);\n        // Disable filtering & sorting, we control the results\n        picker.matchOnLabel = picker.matchOnDescription = picker.matchOnDetail = picker.sortByLabel = false;\n        // Set initial picks and update on type\n        let picksCts = undefined;\n        const picksDisposable = disposables.add(new MutableDisposable());\n        const updatePickerItems = () => __awaiter(this, void 0, void 0, function* () {\n            const picksDisposables = picksDisposable.value = new DisposableStore();\n            // Cancel any previous ask for picks and busy\n            picksCts === null || picksCts === void 0 ? void 0 : picksCts.dispose(true);\n            picker.busy = false;\n            // Create new cancellation source for this run\n            picksCts = new CancellationTokenSource(token);\n            // Collect picks and support both long running and short or combined\n            const picksToken = picksCts.token;\n            const picksFilter = picker.value.substr(this.prefix.length).trim();\n            const providedPicks = this._getPicks(picksFilter, picksDisposables, picksToken);\n            const applyPicks = (picks, skipEmpty) => {\n                var _a;\n                let items;\n                let activeItem = undefined;\n                if (isPicksWithActive(picks)) {\n                    items = picks.items;\n                    activeItem = picks.active;\n                }\n                else {\n                    items = picks;\n                }\n                if (items.length === 0) {\n                    if (skipEmpty) {\n                        return false;\n                    }\n                    if (picksFilter.length > 0 && ((_a = this.options) === null || _a === void 0 ? void 0 : _a.noResultsPick)) {\n                        items = [this.options.noResultsPick];\n                    }\n                }\n                picker.items = items;\n                if (activeItem) {\n                    picker.activeItems = [activeItem];\n                }\n                return true;\n            };\n            // No Picks\n            if (providedPicks === null) {\n                // Ignore\n            }\n            // Fast and Slow Picks\n            else if (isFastAndSlowPicks(providedPicks)) {\n                let fastPicksApplied = false;\n                let slowPicksApplied = false;\n                yield Promise.all([\n                    // Fast Picks: to reduce amount of flicker, we race against\n                    // the slow picks over 500ms and then set the fast picks.\n                    // If the slow picks are faster, we reduce the flicker by\n                    // only setting the items once.\n                    (() => __awaiter(this, void 0, void 0, function* () {\n                        yield timeout(PickerQuickAccessProvider.FAST_PICKS_RACE_DELAY);\n                        if (picksToken.isCancellationRequested) {\n                            return;\n                        }\n                        if (!slowPicksApplied) {\n                            fastPicksApplied = applyPicks(providedPicks.picks, true /* skip over empty to reduce flicker */);\n                        }\n                    }))(),\n                    // Slow Picks: we await the slow picks and then set them at\n                    // once together with the fast picks, but only if we actually\n                    // have additional results.\n                    (() => __awaiter(this, void 0, void 0, function* () {\n                        picker.busy = true;\n                        try {\n                            const awaitedAdditionalPicks = yield providedPicks.additionalPicks;\n                            if (picksToken.isCancellationRequested) {\n                                return;\n                            }\n                            let picks;\n                            let activePick = undefined;\n                            if (isPicksWithActive(providedPicks.picks)) {\n                                picks = providedPicks.picks.items;\n                                activePick = providedPicks.picks.active;\n                            }\n                            else {\n                                picks = providedPicks.picks;\n                            }\n                            let additionalPicks;\n                            let additionalActivePick = undefined;\n                            if (isPicksWithActive(awaitedAdditionalPicks)) {\n                                additionalPicks = awaitedAdditionalPicks.items;\n                                additionalActivePick = awaitedAdditionalPicks.active;\n                            }\n                            else {\n                                additionalPicks = awaitedAdditionalPicks;\n                            }\n                            if (additionalPicks.length > 0 || !fastPicksApplied) {\n                                // If we do not have any activePick or additionalActivePick\n                                // we try to preserve the currently active pick from the\n                                // fast results. This fixes an issue where the user might\n                                // have made a pick active before the additional results\n                                // kick in.\n                                // See https://github.com/microsoft/vscode/issues/102480\n                                let fallbackActivePick = undefined;\n                                if (!activePick && !additionalActivePick) {\n                                    const fallbackActivePickCandidate = picker.activeItems[0];\n                                    if (fallbackActivePickCandidate && picks.indexOf(fallbackActivePickCandidate) !== -1) {\n                                        fallbackActivePick = fallbackActivePickCandidate;\n                                    }\n                                }\n                                applyPicks({\n                                    items: [...picks, ...additionalPicks],\n                                    active: activePick || additionalActivePick || fallbackActivePick\n                                });\n                            }\n                        }\n                        finally {\n                            if (!picksToken.isCancellationRequested) {\n                                picker.busy = false;\n                            }\n                            slowPicksApplied = true;\n                        }\n                    }))()\n                ]);\n            }\n            // Fast Picks\n            else if (!(providedPicks instanceof Promise)) {\n                applyPicks(providedPicks);\n            }\n            // Slow Picks\n            else {\n                picker.busy = true;\n                try {\n                    const awaitedPicks = yield providedPicks;\n                    if (picksToken.isCancellationRequested) {\n                        return;\n                    }\n                    applyPicks(awaitedPicks);\n                }\n                finally {\n                    if (!picksToken.isCancellationRequested) {\n                        picker.busy = false;\n                    }\n                }\n            }\n        });\n        disposables.add(picker.onDidChangeValue(() => updatePickerItems()));\n        updatePickerItems();\n        // Accept the pick on accept and hide picker\n        disposables.add(picker.onDidAccept(event => {\n            const [item] = picker.selectedItems;\n            if (typeof (item === null || item === void 0 ? void 0 : item.accept) === 'function') {\n                if (!event.inBackground) {\n                    picker.hide(); // hide picker unless we accept in background\n                }\n                item.accept(picker.keyMods, event);\n            }\n        }));\n        // Trigger the pick with button index if button triggered\n        disposables.add(picker.onDidTriggerItemButton(({ button, item }) => __awaiter(this, void 0, void 0, function* () {\n            var _b, _c;\n            if (typeof item.trigger === 'function') {\n                const buttonIndex = (_c = (_b = item.buttons) === null || _b === void 0 ? void 0 : _b.indexOf(button)) !== null && _c !== void 0 ? _c : -1;\n                if (buttonIndex >= 0) {\n                    const result = item.trigger(buttonIndex, picker.keyMods);\n                    const action = (typeof result === 'number') ? result : yield result;\n                    if (token.isCancellationRequested) {\n                        return;\n                    }\n                    switch (action) {\n                        case TriggerAction.NO_ACTION:\n                            break;\n                        case TriggerAction.CLOSE_PICKER:\n                            picker.hide();\n                            break;\n                        case TriggerAction.REFRESH_PICKER:\n                            updatePickerItems();\n                            break;\n                        case TriggerAction.REMOVE_ITEM: {\n                            const index = picker.items.indexOf(item);\n                            if (index !== -1) {\n                                const items = picker.items.slice();\n                                const removed = items.splice(index, 1);\n                                const activeItems = picker.activeItems.filter(activeItem => activeItem !== removed[0]);\n                                const keepScrollPositionBefore = picker.keepScrollPosition;\n                                picker.keepScrollPosition = true;\n                                picker.items = items;\n                                if (activeItems) {\n                                    picker.activeItems = activeItems;\n                                }\n                                picker.keepScrollPosition = keepScrollPositionBefore;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n        })));\n        return disposables;\n    }\n}\nPickerQuickAccessProvider.FAST_PICKS_RACE_DELAY = 200; // timeout before we accept fast results before slow results are present\n"]},"metadata":{},"sourceType":"module"}