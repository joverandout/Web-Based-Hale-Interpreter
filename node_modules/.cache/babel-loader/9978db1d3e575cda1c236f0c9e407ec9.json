{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nexport class DragAndDropCommand {\n  constructor(selection, targetPosition, copy) {\n    this.selection = selection;\n    this.targetPosition = targetPosition;\n    this.copy = copy;\n    this.targetSelection = null;\n  }\n\n  getEditOperations(model, builder) {\n    let text = model.getValueInRange(this.selection);\n\n    if (!this.copy) {\n      builder.addEditOperation(this.selection, null);\n    }\n\n    builder.addEditOperation(new Range(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column), text);\n\n    if (this.selection.containsPosition(this.targetPosition) && !(this.copy && (this.selection.getEndPosition().equals(this.targetPosition) || this.selection.getStartPosition().equals(this.targetPosition)) // we allow users to paste content beside the selection\n    )) {\n      this.targetSelection = this.selection;\n      return;\n    }\n\n    if (this.copy) {\n      this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.selection.endLineNumber - this.selection.startLineNumber + this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ? this.targetPosition.column + this.selection.endColumn - this.selection.startColumn : this.selection.endColumn);\n      return;\n    }\n\n    if (this.targetPosition.lineNumber > this.selection.endLineNumber) {\n      // Drag the selection downwards\n      this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ? this.targetPosition.column + this.selection.endColumn - this.selection.startColumn : this.selection.endColumn);\n      return;\n    }\n\n    if (this.targetPosition.lineNumber < this.selection.endLineNumber) {\n      // Drag the selection upwards\n      this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber + this.selection.endLineNumber - this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ? this.targetPosition.column + this.selection.endColumn - this.selection.startColumn : this.selection.endColumn);\n      return;\n    } // The target position is at the same line as the selection's end position.\n\n\n    if (this.selection.endColumn <= this.targetPosition.column) {\n      // The target position is after the selection's end position\n      this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ? this.targetPosition.column - this.selection.endColumn + this.selection.startColumn : this.targetPosition.column - this.selection.endColumn + this.selection.startColumn, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ? this.targetPosition.column : this.selection.endColumn);\n    } else {\n      // The target position is before the selection's end position. Since the selection doesn't contain the target position, the selection is one-line and target position is before this selection.\n      this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column + this.selection.endColumn - this.selection.startColumn);\n    }\n  }\n\n  computeCursorState(model, helper) {\n    return this.targetSelection;\n  }\n\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/contrib/dnd/browser/dragAndDropCommand.js"],"names":["Range","Selection","DragAndDropCommand","constructor","selection","targetPosition","copy","targetSelection","getEditOperations","model","builder","text","getValueInRange","addEditOperation","lineNumber","column","containsPosition","getEndPosition","equals","getStartPosition","endLineNumber","startLineNumber","endColumn","startColumn","computeCursorState","helper"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nexport class DragAndDropCommand {\n    constructor(selection, targetPosition, copy) {\n        this.selection = selection;\n        this.targetPosition = targetPosition;\n        this.copy = copy;\n        this.targetSelection = null;\n    }\n    getEditOperations(model, builder) {\n        let text = model.getValueInRange(this.selection);\n        if (!this.copy) {\n            builder.addEditOperation(this.selection, null);\n        }\n        builder.addEditOperation(new Range(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column), text);\n        if (this.selection.containsPosition(this.targetPosition) && !(this.copy && (this.selection.getEndPosition().equals(this.targetPosition) || this.selection.getStartPosition().equals(this.targetPosition)) // we allow users to paste content beside the selection\n        )) {\n            this.targetSelection = this.selection;\n            return;\n        }\n        if (this.copy) {\n            this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.selection.endLineNumber - this.selection.startLineNumber + this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\n                this.selection.endColumn);\n            return;\n        }\n        if (this.targetPosition.lineNumber > this.selection.endLineNumber) {\n            // Drag the selection downwards\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\n                this.selection.endColumn);\n            return;\n        }\n        if (this.targetPosition.lineNumber < this.selection.endLineNumber) {\n            // Drag the selection upwards\n            this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber + this.selection.endLineNumber - this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\n                this.selection.endColumn);\n            return;\n        }\n        // The target position is at the same line as the selection's end position.\n        if (this.selection.endColumn <= this.targetPosition.column) {\n            // The target position is after the selection's end position\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column - this.selection.endColumn + this.selection.startColumn :\n                this.targetPosition.column - this.selection.endColumn + this.selection.startColumn, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column :\n                this.selection.endColumn);\n        }\n        else {\n            // The target position is before the selection's end position. Since the selection doesn't contain the target position, the selection is one-line and target position is before this selection.\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column + this.selection.endColumn - this.selection.startColumn);\n        }\n    }\n    computeCursorState(model, helper) {\n        return this.targetSelection;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}