{"ast":null,"code":"var PacketHeader = require('./PacketHeader');\n\nvar BigNumber = require('bignumber.js');\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar BufferList = require('./BufferList');\n\nvar MAX_PACKET_LENGTH = Math.pow(2, 24) - 1;\nvar MUL_32BIT = Math.pow(2, 32);\nvar PACKET_HEADER_LENGTH = 4;\nmodule.exports = Parser;\n\nfunction Parser(options) {\n  options = options || {};\n  this._supportBigNumbers = options.config && options.config.supportBigNumbers;\n  this._buffer = Buffer.alloc(0);\n  this._nextBuffers = new BufferList();\n  this._longPacketBuffers = new BufferList();\n  this._offset = 0;\n  this._packetEnd = null;\n  this._packetHeader = null;\n  this._packetOffset = null;\n\n  this._onError = options.onError || function (err) {\n    throw err;\n  };\n\n  this._onPacket = options.onPacket || function () {};\n\n  this._nextPacketNumber = 0;\n  this._encoding = 'utf-8';\n  this._paused = false;\n}\n\nParser.prototype.write = function write(chunk) {\n  this._nextBuffers.push(chunk);\n\n  while (!this._paused) {\n    var packetHeader = this._tryReadPacketHeader();\n\n    if (!packetHeader) {\n      break;\n    }\n\n    if (!this._combineNextBuffers(packetHeader.length)) {\n      break;\n    }\n\n    this._parsePacket(packetHeader);\n  }\n};\n\nParser.prototype.append = function append(chunk) {\n  if (!chunk || chunk.length === 0) {\n    return;\n  } // Calculate slice ranges\n\n\n  var sliceEnd = this._buffer.length;\n  var sliceStart = this._packetOffset === null ? this._offset : this._packetOffset;\n  var sliceLength = sliceEnd - sliceStart; // Get chunk data\n\n  var buffer = null;\n  var chunks = !(chunk instanceof Array || Array.isArray(chunk)) ? [chunk] : chunk;\n  var length = 0;\n  var offset = 0;\n\n  for (var i = 0; i < chunks.length; i++) {\n    length += chunks[i].length;\n  }\n\n  if (sliceLength !== 0) {\n    // Create a new Buffer\n    buffer = Buffer.allocUnsafe(sliceLength + length);\n    offset = 0; // Copy data slice\n\n    offset += this._buffer.copy(buffer, 0, sliceStart, sliceEnd); // Copy chunks\n\n    for (var i = 0; i < chunks.length; i++) {\n      offset += chunks[i].copy(buffer, offset);\n    }\n  } else if (chunks.length > 1) {\n    // Create a new Buffer\n    buffer = Buffer.allocUnsafe(length);\n    offset = 0; // Copy chunks\n\n    for (var i = 0; i < chunks.length; i++) {\n      offset += chunks[i].copy(buffer, offset);\n    }\n  } else {\n    // Buffer is the only chunk\n    buffer = chunks[0];\n  } // Adjust data-tracking pointers\n\n\n  this._buffer = buffer;\n  this._offset = this._offset - sliceStart;\n  this._packetEnd = this._packetEnd !== null ? this._packetEnd - sliceStart : null;\n  this._packetOffset = this._packetOffset !== null ? this._packetOffset - sliceStart : null;\n};\n\nParser.prototype.pause = function () {\n  this._paused = true;\n};\n\nParser.prototype.resume = function () {\n  this._paused = false; // nextTick() to avoid entering write() multiple times within the same stack\n  // which would cause problems as write manipulates the state of the object.\n\n  process.nextTick(this.write.bind(this));\n};\n\nParser.prototype.peak = function peak(offset) {\n  return this._buffer[this._offset + (offset >>> 0)];\n};\n\nParser.prototype.parseUnsignedNumber = function parseUnsignedNumber(bytes) {\n  if (bytes === 1) {\n    return this._buffer[this._offset++];\n  }\n\n  var buffer = this._buffer;\n  var offset = this._offset + bytes - 1;\n  var value = 0;\n\n  if (bytes > 4) {\n    var err = new Error('parseUnsignedNumber: Supports only up to 4 bytes');\n    err.offset = this._offset - this._packetOffset - 1;\n    err.code = 'PARSER_UNSIGNED_TOO_LONG';\n    throw err;\n  }\n\n  while (offset >= this._offset) {\n    value = (value << 8 | buffer[offset]) >>> 0;\n    offset--;\n  }\n\n  this._offset += bytes;\n  return value;\n};\n\nParser.prototype.parseLengthCodedString = function () {\n  var length = this.parseLengthCodedNumber();\n\n  if (length === null) {\n    return null;\n  }\n\n  return this.parseString(length);\n};\n\nParser.prototype.parseLengthCodedBuffer = function () {\n  var length = this.parseLengthCodedNumber();\n\n  if (length === null) {\n    return null;\n  }\n\n  return this.parseBuffer(length);\n};\n\nParser.prototype.parseLengthCodedNumber = function parseLengthCodedNumber() {\n  if (this._offset >= this._buffer.length) {\n    var err = new Error('Parser: read past end');\n    err.offset = this._offset - this._packetOffset;\n    err.code = 'PARSER_READ_PAST_END';\n    throw err;\n  }\n\n  var bits = this._buffer[this._offset++];\n\n  if (bits <= 250) {\n    return bits;\n  }\n\n  switch (bits) {\n    case 251:\n      return null;\n\n    case 252:\n      return this.parseUnsignedNumber(2);\n\n    case 253:\n      return this.parseUnsignedNumber(3);\n\n    case 254:\n      break;\n\n    default:\n      var err = new Error('Unexpected first byte' + (bits ? ': 0x' + bits.toString(16) : ''));\n      err.offset = this._offset - this._packetOffset - 1;\n      err.code = 'PARSER_BAD_LENGTH_BYTE';\n      throw err;\n  }\n\n  var low = this.parseUnsignedNumber(4);\n  var high = this.parseUnsignedNumber(4);\n  var value;\n\n  if (high >>> 21) {\n    value = BigNumber(MUL_32BIT).times(high).plus(low).toString();\n\n    if (this._supportBigNumbers) {\n      return value;\n    }\n\n    var err = new Error('parseLengthCodedNumber: JS precision range exceeded, ' + 'number is >= 53 bit: \"' + value + '\"');\n    err.offset = this._offset - this._packetOffset - 8;\n    err.code = 'PARSER_JS_PRECISION_RANGE_EXCEEDED';\n    throw err;\n  }\n\n  value = low + MUL_32BIT * high;\n  return value;\n};\n\nParser.prototype.parseFiller = function (length) {\n  return this.parseBuffer(length);\n};\n\nParser.prototype.parseNullTerminatedBuffer = function () {\n  var end = this._nullByteOffset();\n\n  var value = this._buffer.slice(this._offset, end);\n\n  this._offset = end + 1;\n  return value;\n};\n\nParser.prototype.parseNullTerminatedString = function () {\n  var end = this._nullByteOffset();\n\n  var value = this._buffer.toString(this._encoding, this._offset, end);\n\n  this._offset = end + 1;\n  return value;\n};\n\nParser.prototype._nullByteOffset = function () {\n  var offset = this._offset;\n\n  while (this._buffer[offset] !== 0x00) {\n    offset++;\n\n    if (offset >= this._buffer.length) {\n      var err = new Error('Offset of null terminated string not found.');\n      err.offset = this._offset - this._packetOffset;\n      err.code = 'PARSER_MISSING_NULL_BYTE';\n      throw err;\n    }\n  }\n\n  return offset;\n};\n\nParser.prototype.parsePacketTerminatedBuffer = function parsePacketTerminatedBuffer() {\n  var length = this._packetEnd - this._offset;\n  return this.parseBuffer(length);\n};\n\nParser.prototype.parsePacketTerminatedString = function () {\n  var length = this._packetEnd - this._offset;\n  return this.parseString(length);\n};\n\nParser.prototype.parseBuffer = function (length) {\n  var response = Buffer.alloc(length);\n\n  this._buffer.copy(response, 0, this._offset, this._offset + length);\n\n  this._offset += length;\n  return response;\n};\n\nParser.prototype.parseString = function (length) {\n  var offset = this._offset;\n  var end = offset + length;\n\n  var value = this._buffer.toString(this._encoding, offset, end);\n\n  this._offset = end;\n  return value;\n};\n\nParser.prototype.parseGeometryValue = function () {\n  var buffer = this.parseLengthCodedBuffer();\n  var offset = 4;\n\n  if (buffer === null || !buffer.length) {\n    return null;\n  }\n\n  function parseGeometry() {\n    var result = null;\n    var byteOrder = buffer.readUInt8(offset);\n    offset += 1;\n    var wkbType = byteOrder ? buffer.readUInt32LE(offset) : buffer.readUInt32BE(offset);\n    offset += 4;\n\n    switch (wkbType) {\n      case 1:\n        // WKBPoint\n        var x = byteOrder ? buffer.readDoubleLE(offset) : buffer.readDoubleBE(offset);\n        offset += 8;\n        var y = byteOrder ? buffer.readDoubleLE(offset) : buffer.readDoubleBE(offset);\n        offset += 8;\n        result = {\n          x: x,\n          y: y\n        };\n        break;\n\n      case 2:\n        // WKBLineString\n        var numPoints = byteOrder ? buffer.readUInt32LE(offset) : buffer.readUInt32BE(offset);\n        offset += 4;\n        result = [];\n\n        for (var i = numPoints; i > 0; i--) {\n          var x = byteOrder ? buffer.readDoubleLE(offset) : buffer.readDoubleBE(offset);\n          offset += 8;\n          var y = byteOrder ? buffer.readDoubleLE(offset) : buffer.readDoubleBE(offset);\n          offset += 8;\n          result.push({\n            x: x,\n            y: y\n          });\n        }\n\n        break;\n\n      case 3:\n        // WKBPolygon\n        var numRings = byteOrder ? buffer.readUInt32LE(offset) : buffer.readUInt32BE(offset);\n        offset += 4;\n        result = [];\n\n        for (var i = numRings; i > 0; i--) {\n          var numPoints = byteOrder ? buffer.readUInt32LE(offset) : buffer.readUInt32BE(offset);\n          offset += 4;\n          var line = [];\n\n          for (var j = numPoints; j > 0; j--) {\n            var x = byteOrder ? buffer.readDoubleLE(offset) : buffer.readDoubleBE(offset);\n            offset += 8;\n            var y = byteOrder ? buffer.readDoubleLE(offset) : buffer.readDoubleBE(offset);\n            offset += 8;\n            line.push({\n              x: x,\n              y: y\n            });\n          }\n\n          result.push(line);\n        }\n\n        break;\n\n      case 4: // WKBMultiPoint\n\n      case 5: // WKBMultiLineString\n\n      case 6: // WKBMultiPolygon\n\n      case 7:\n        // WKBGeometryCollection\n        var num = byteOrder ? buffer.readUInt32LE(offset) : buffer.readUInt32BE(offset);\n        offset += 4;\n        var result = [];\n\n        for (var i = num; i > 0; i--) {\n          result.push(parseGeometry());\n        }\n\n        break;\n    }\n\n    return result;\n  }\n\n  return parseGeometry();\n};\n\nParser.prototype.reachedPacketEnd = function () {\n  return this._offset === this._packetEnd;\n};\n\nParser.prototype.incrementPacketNumber = function () {\n  var currentPacketNumber = this._nextPacketNumber;\n  this._nextPacketNumber = (this._nextPacketNumber + 1) % 256;\n  return currentPacketNumber;\n};\n\nParser.prototype.resetPacketNumber = function () {\n  this._nextPacketNumber = 0;\n};\n\nParser.prototype.packetLength = function packetLength() {\n  if (!this._packetHeader) {\n    return null;\n  }\n\n  return this._packetHeader.length + this._longPacketBuffers.size;\n};\n\nParser.prototype._combineNextBuffers = function _combineNextBuffers(bytes) {\n  var length = this._buffer.length - this._offset;\n\n  if (length >= bytes) {\n    return true;\n  }\n\n  if (length + this._nextBuffers.size < bytes) {\n    return false;\n  }\n\n  var buffers = [];\n  var bytesNeeded = bytes - length;\n\n  while (bytesNeeded > 0) {\n    var buffer = this._nextBuffers.shift();\n\n    buffers.push(buffer);\n    bytesNeeded -= buffer.length;\n  }\n\n  this.append(buffers);\n  return true;\n};\n\nParser.prototype._combineLongPacketBuffers = function _combineLongPacketBuffers() {\n  if (!this._longPacketBuffers.size) {\n    return;\n  } // Calculate bytes\n\n\n  var remainingBytes = this._buffer.length - this._offset;\n  var trailingPacketBytes = this._buffer.length - this._packetEnd; // Create buffer\n\n  var buf = null;\n  var buffer = Buffer.allocUnsafe(remainingBytes + this._longPacketBuffers.size);\n  var offset = 0; // Copy long buffers\n\n  while (buf = this._longPacketBuffers.shift()) {\n    offset += buf.copy(buffer, offset);\n  } // Copy remaining bytes\n\n\n  this._buffer.copy(buffer, offset, this._offset);\n\n  this._buffer = buffer;\n  this._offset = 0;\n  this._packetEnd = this._buffer.length - trailingPacketBytes;\n  this._packetOffset = 0;\n};\n\nParser.prototype._parsePacket = function _parsePacket(packetHeader) {\n  this._packetEnd = this._offset + packetHeader.length;\n  this._packetOffset = this._offset;\n\n  if (packetHeader.length === MAX_PACKET_LENGTH) {\n    this._longPacketBuffers.push(this._buffer.slice(this._packetOffset, this._packetEnd));\n\n    this._advanceToNextPacket();\n\n    return;\n  }\n\n  this._combineLongPacketBuffers();\n\n  var hadException = true;\n\n  try {\n    this._onPacket(packetHeader);\n\n    hadException = false;\n  } catch (err) {\n    if (!err || typeof err.code !== 'string' || err.code.substr(0, 7) !== 'PARSER_') {\n      throw err; // Rethrow non-MySQL errors\n    } // Pass down parser errors\n\n\n    this._onError(err);\n\n    hadException = false;\n  } finally {\n    this._advanceToNextPacket(); // If there was an exception, the parser while loop will be broken out\n    // of after the finally block. So schedule a blank write to re-enter it\n    // to continue parsing any bytes that may already have been received.\n\n\n    if (hadException) {\n      process.nextTick(this.write.bind(this));\n    }\n  }\n};\n\nParser.prototype._tryReadPacketHeader = function _tryReadPacketHeader() {\n  if (this._packetHeader) {\n    return this._packetHeader;\n  }\n\n  if (!this._combineNextBuffers(PACKET_HEADER_LENGTH)) {\n    return null;\n  }\n\n  this._packetHeader = new PacketHeader(this.parseUnsignedNumber(3), this.parseUnsignedNumber(1));\n\n  if (this._packetHeader.number !== this._nextPacketNumber) {\n    var err = new Error('Packets out of order. Got: ' + this._packetHeader.number + ' ' + 'Expected: ' + this._nextPacketNumber);\n    err.code = 'PROTOCOL_PACKETS_OUT_OF_ORDER';\n    err.fatal = true;\n\n    this._onError(err);\n  }\n\n  this.incrementPacketNumber();\n  return this._packetHeader;\n};\n\nParser.prototype._advanceToNextPacket = function () {\n  this._offset = this._packetEnd;\n  this._packetHeader = null;\n  this._packetEnd = null;\n  this._packetOffset = null;\n};","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/mysql/lib/protocol/Parser.js"],"names":["PacketHeader","require","BigNumber","Buffer","BufferList","MAX_PACKET_LENGTH","Math","pow","MUL_32BIT","PACKET_HEADER_LENGTH","module","exports","Parser","options","_supportBigNumbers","config","supportBigNumbers","_buffer","alloc","_nextBuffers","_longPacketBuffers","_offset","_packetEnd","_packetHeader","_packetOffset","_onError","onError","err","_onPacket","onPacket","_nextPacketNumber","_encoding","_paused","prototype","write","chunk","push","packetHeader","_tryReadPacketHeader","_combineNextBuffers","length","_parsePacket","append","sliceEnd","sliceStart","sliceLength","buffer","chunks","Array","isArray","offset","i","allocUnsafe","copy","pause","resume","process","nextTick","bind","peak","parseUnsignedNumber","bytes","value","Error","code","parseLengthCodedString","parseLengthCodedNumber","parseString","parseLengthCodedBuffer","parseBuffer","bits","toString","low","high","times","plus","parseFiller","parseNullTerminatedBuffer","end","_nullByteOffset","slice","parseNullTerminatedString","parsePacketTerminatedBuffer","parsePacketTerminatedString","response","parseGeometryValue","parseGeometry","result","byteOrder","readUInt8","wkbType","readUInt32LE","readUInt32BE","x","readDoubleLE","readDoubleBE","y","numPoints","numRings","line","j","num","reachedPacketEnd","incrementPacketNumber","currentPacketNumber","resetPacketNumber","packetLength","size","buffers","bytesNeeded","shift","_combineLongPacketBuffers","remainingBytes","trailingPacketBytes","buf","_advanceToNextPacket","hadException","substr","number","fatal"],"mappings":"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","sourcesContent":["var PacketHeader = require('./PacketHeader');\nvar BigNumber    = require('bignumber.js');\nvar Buffer       = require('safe-buffer').Buffer;\nvar BufferList   = require('./BufferList');\n\nvar MAX_PACKET_LENGTH    = Math.pow(2, 24) - 1;\nvar MUL_32BIT            = Math.pow(2, 32);\nvar PACKET_HEADER_LENGTH = 4;\n\nmodule.exports = Parser;\nfunction Parser(options) {\n  options = options || {};\n\n  this._supportBigNumbers = options.config && options.config.supportBigNumbers;\n  this._buffer            = Buffer.alloc(0);\n  this._nextBuffers       = new BufferList();\n  this._longPacketBuffers = new BufferList();\n  this._offset            = 0;\n  this._packetEnd         = null;\n  this._packetHeader      = null;\n  this._packetOffset      = null;\n  this._onError           = options.onError || function(err) { throw err; };\n  this._onPacket          = options.onPacket || function() {};\n  this._nextPacketNumber  = 0;\n  this._encoding          = 'utf-8';\n  this._paused            = false;\n}\n\nParser.prototype.write = function write(chunk) {\n  this._nextBuffers.push(chunk);\n\n  while (!this._paused) {\n    var packetHeader = this._tryReadPacketHeader();\n\n    if (!packetHeader) {\n      break;\n    }\n\n    if (!this._combineNextBuffers(packetHeader.length)) {\n      break;\n    }\n\n    this._parsePacket(packetHeader);\n  }\n};\n\nParser.prototype.append = function append(chunk) {\n  if (!chunk || chunk.length === 0) {\n    return;\n  }\n\n  // Calculate slice ranges\n  var sliceEnd    = this._buffer.length;\n  var sliceStart  = this._packetOffset === null\n    ? this._offset\n    : this._packetOffset;\n  var sliceLength = sliceEnd - sliceStart;\n\n  // Get chunk data\n  var buffer = null;\n  var chunks = !(chunk instanceof Array || Array.isArray(chunk)) ? [chunk] : chunk;\n  var length = 0;\n  var offset = 0;\n\n  for (var i = 0; i < chunks.length; i++) {\n    length += chunks[i].length;\n  }\n\n  if (sliceLength !== 0) {\n    // Create a new Buffer\n    buffer = Buffer.allocUnsafe(sliceLength + length);\n    offset = 0;\n\n    // Copy data slice\n    offset += this._buffer.copy(buffer, 0, sliceStart, sliceEnd);\n\n    // Copy chunks\n    for (var i = 0; i < chunks.length; i++) {\n      offset += chunks[i].copy(buffer, offset);\n    }\n  } else if (chunks.length > 1) {\n    // Create a new Buffer\n    buffer = Buffer.allocUnsafe(length);\n    offset = 0;\n\n    // Copy chunks\n    for (var i = 0; i < chunks.length; i++) {\n      offset += chunks[i].copy(buffer, offset);\n    }\n  } else {\n    // Buffer is the only chunk\n    buffer = chunks[0];\n  }\n\n  // Adjust data-tracking pointers\n  this._buffer       = buffer;\n  this._offset       = this._offset - sliceStart;\n  this._packetEnd    = this._packetEnd !== null\n    ? this._packetEnd - sliceStart\n    : null;\n  this._packetOffset = this._packetOffset !== null\n    ? this._packetOffset - sliceStart\n    : null;\n};\n\nParser.prototype.pause = function() {\n  this._paused = true;\n};\n\nParser.prototype.resume = function() {\n  this._paused = false;\n\n  // nextTick() to avoid entering write() multiple times within the same stack\n  // which would cause problems as write manipulates the state of the object.\n  process.nextTick(this.write.bind(this));\n};\n\nParser.prototype.peak = function peak(offset) {\n  return this._buffer[this._offset + (offset >>> 0)];\n};\n\nParser.prototype.parseUnsignedNumber = function parseUnsignedNumber(bytes) {\n  if (bytes === 1) {\n    return this._buffer[this._offset++];\n  }\n\n  var buffer = this._buffer;\n  var offset = this._offset + bytes - 1;\n  var value  = 0;\n\n  if (bytes > 4) {\n    var err    = new Error('parseUnsignedNumber: Supports only up to 4 bytes');\n    err.offset = (this._offset - this._packetOffset - 1);\n    err.code   = 'PARSER_UNSIGNED_TOO_LONG';\n    throw err;\n  }\n\n  while (offset >= this._offset) {\n    value = ((value << 8) | buffer[offset]) >>> 0;\n    offset--;\n  }\n\n  this._offset += bytes;\n\n  return value;\n};\n\nParser.prototype.parseLengthCodedString = function() {\n  var length = this.parseLengthCodedNumber();\n\n  if (length === null) {\n    return null;\n  }\n\n  return this.parseString(length);\n};\n\nParser.prototype.parseLengthCodedBuffer = function() {\n  var length = this.parseLengthCodedNumber();\n\n  if (length === null) {\n    return null;\n  }\n\n  return this.parseBuffer(length);\n};\n\nParser.prototype.parseLengthCodedNumber = function parseLengthCodedNumber() {\n  if (this._offset >= this._buffer.length) {\n    var err    = new Error('Parser: read past end');\n    err.offset = (this._offset - this._packetOffset);\n    err.code   = 'PARSER_READ_PAST_END';\n    throw err;\n  }\n\n  var bits = this._buffer[this._offset++];\n\n  if (bits <= 250) {\n    return bits;\n  }\n\n  switch (bits) {\n    case 251:\n      return null;\n    case 252:\n      return this.parseUnsignedNumber(2);\n    case 253:\n      return this.parseUnsignedNumber(3);\n    case 254:\n      break;\n    default:\n      var err    = new Error('Unexpected first byte' + (bits ? ': 0x' + bits.toString(16) : ''));\n      err.offset = (this._offset - this._packetOffset - 1);\n      err.code   = 'PARSER_BAD_LENGTH_BYTE';\n      throw err;\n  }\n\n  var low = this.parseUnsignedNumber(4);\n  var high = this.parseUnsignedNumber(4);\n  var value;\n\n  if (high >>> 21) {\n    value = BigNumber(MUL_32BIT).times(high).plus(low).toString();\n\n    if (this._supportBigNumbers) {\n      return value;\n    }\n\n    var err    = new Error(\n      'parseLengthCodedNumber: JS precision range exceeded, ' +\n      'number is >= 53 bit: \"' + value + '\"'\n    );\n    err.offset = (this._offset - this._packetOffset - 8);\n    err.code   = 'PARSER_JS_PRECISION_RANGE_EXCEEDED';\n    throw err;\n  }\n\n  value = low + (MUL_32BIT * high);\n\n  return value;\n};\n\nParser.prototype.parseFiller = function(length) {\n  return this.parseBuffer(length);\n};\n\nParser.prototype.parseNullTerminatedBuffer = function() {\n  var end      = this._nullByteOffset();\n  var value    = this._buffer.slice(this._offset, end);\n  this._offset = end + 1;\n\n  return value;\n};\n\nParser.prototype.parseNullTerminatedString = function() {\n  var end      = this._nullByteOffset();\n  var value    = this._buffer.toString(this._encoding, this._offset, end);\n  this._offset = end + 1;\n\n  return value;\n};\n\nParser.prototype._nullByteOffset = function() {\n  var offset = this._offset;\n\n  while (this._buffer[offset] !== 0x00) {\n    offset++;\n\n    if (offset >= this._buffer.length) {\n      var err    = new Error('Offset of null terminated string not found.');\n      err.offset = (this._offset - this._packetOffset);\n      err.code   = 'PARSER_MISSING_NULL_BYTE';\n      throw err;\n    }\n  }\n\n  return offset;\n};\n\nParser.prototype.parsePacketTerminatedBuffer = function parsePacketTerminatedBuffer() {\n  var length = this._packetEnd - this._offset;\n  return this.parseBuffer(length);\n};\n\nParser.prototype.parsePacketTerminatedString = function() {\n  var length = this._packetEnd - this._offset;\n  return this.parseString(length);\n};\n\nParser.prototype.parseBuffer = function(length) {\n  var response = Buffer.alloc(length);\n  this._buffer.copy(response, 0, this._offset, this._offset + length);\n\n  this._offset += length;\n  return response;\n};\n\nParser.prototype.parseString = function(length) {\n  var offset = this._offset;\n  var end = offset + length;\n  var value = this._buffer.toString(this._encoding, offset, end);\n\n  this._offset = end;\n  return value;\n};\n\nParser.prototype.parseGeometryValue = function() {\n  var buffer = this.parseLengthCodedBuffer();\n  var offset = 4;\n\n  if (buffer === null || !buffer.length) {\n    return null;\n  }\n\n  function parseGeometry() {\n    var result = null;\n    var byteOrder = buffer.readUInt8(offset); offset += 1;\n    var wkbType = byteOrder ? buffer.readUInt32LE(offset) : buffer.readUInt32BE(offset); offset += 4;\n    switch (wkbType) {\n      case 1: // WKBPoint\n        var x = byteOrder ? buffer.readDoubleLE(offset) : buffer.readDoubleBE(offset); offset += 8;\n        var y = byteOrder ? buffer.readDoubleLE(offset) : buffer.readDoubleBE(offset); offset += 8;\n        result = {x: x, y: y};\n        break;\n      case 2: // WKBLineString\n        var numPoints = byteOrder ? buffer.readUInt32LE(offset) : buffer.readUInt32BE(offset); offset += 4;\n        result = [];\n        for (var i = numPoints; i > 0; i--) {\n          var x = byteOrder ? buffer.readDoubleLE(offset) : buffer.readDoubleBE(offset); offset += 8;\n          var y = byteOrder ? buffer.readDoubleLE(offset) : buffer.readDoubleBE(offset); offset += 8;\n          result.push({x: x, y: y});\n        }\n        break;\n      case 3: // WKBPolygon\n        var numRings = byteOrder ? buffer.readUInt32LE(offset) : buffer.readUInt32BE(offset); offset += 4;\n        result = [];\n        for (var i = numRings; i > 0; i--) {\n          var numPoints = byteOrder ? buffer.readUInt32LE(offset) : buffer.readUInt32BE(offset); offset += 4;\n          var line = [];\n          for (var j = numPoints; j > 0; j--) {\n            var x = byteOrder ? buffer.readDoubleLE(offset) : buffer.readDoubleBE(offset); offset += 8;\n            var y = byteOrder ? buffer.readDoubleLE(offset) : buffer.readDoubleBE(offset); offset += 8;\n            line.push({x: x, y: y});\n          }\n          result.push(line);\n        }\n        break;\n      case 4: // WKBMultiPoint\n      case 5: // WKBMultiLineString\n      case 6: // WKBMultiPolygon\n      case 7: // WKBGeometryCollection\n        var num = byteOrder ? buffer.readUInt32LE(offset) : buffer.readUInt32BE(offset); offset += 4;\n        var result = [];\n        for (var i = num; i > 0; i--) {\n          result.push(parseGeometry());\n        }\n        break;\n    }\n    return result;\n  }\n  return parseGeometry();\n};\n\nParser.prototype.reachedPacketEnd = function() {\n  return this._offset === this._packetEnd;\n};\n\nParser.prototype.incrementPacketNumber = function() {\n  var currentPacketNumber = this._nextPacketNumber;\n  this._nextPacketNumber = (this._nextPacketNumber + 1) % 256;\n\n  return currentPacketNumber;\n};\n\nParser.prototype.resetPacketNumber = function() {\n  this._nextPacketNumber = 0;\n};\n\nParser.prototype.packetLength = function packetLength() {\n  if (!this._packetHeader) {\n    return null;\n  }\n\n  return this._packetHeader.length + this._longPacketBuffers.size;\n};\n\nParser.prototype._combineNextBuffers = function _combineNextBuffers(bytes) {\n  var length = this._buffer.length - this._offset;\n\n  if (length >= bytes) {\n    return true;\n  }\n\n  if ((length + this._nextBuffers.size) < bytes) {\n    return false;\n  }\n\n  var buffers     = [];\n  var bytesNeeded = bytes - length;\n\n  while (bytesNeeded > 0) {\n    var buffer = this._nextBuffers.shift();\n    buffers.push(buffer);\n    bytesNeeded -= buffer.length;\n  }\n\n  this.append(buffers);\n  return true;\n};\n\nParser.prototype._combineLongPacketBuffers = function _combineLongPacketBuffers() {\n  if (!this._longPacketBuffers.size) {\n    return;\n  }\n\n  // Calculate bytes\n  var remainingBytes      = this._buffer.length - this._offset;\n  var trailingPacketBytes = this._buffer.length - this._packetEnd;\n\n  // Create buffer\n  var buf    = null;\n  var buffer = Buffer.allocUnsafe(remainingBytes + this._longPacketBuffers.size);\n  var offset = 0;\n\n  // Copy long buffers\n  while ((buf = this._longPacketBuffers.shift())) {\n    offset += buf.copy(buffer, offset);\n  }\n\n  // Copy remaining bytes\n  this._buffer.copy(buffer, offset, this._offset);\n\n  this._buffer       = buffer;\n  this._offset       = 0;\n  this._packetEnd    = this._buffer.length - trailingPacketBytes;\n  this._packetOffset = 0;\n};\n\nParser.prototype._parsePacket = function _parsePacket(packetHeader) {\n  this._packetEnd    = this._offset + packetHeader.length;\n  this._packetOffset = this._offset;\n\n  if (packetHeader.length === MAX_PACKET_LENGTH) {\n    this._longPacketBuffers.push(this._buffer.slice(this._packetOffset, this._packetEnd));\n    this._advanceToNextPacket();\n    return;\n  }\n\n  this._combineLongPacketBuffers();\n\n  var hadException = true;\n  try {\n    this._onPacket(packetHeader);\n    hadException = false;\n  } catch (err) {\n    if (!err || typeof err.code !== 'string' || err.code.substr(0, 7) !== 'PARSER_') {\n      throw err; // Rethrow non-MySQL errors\n    }\n\n    // Pass down parser errors\n    this._onError(err);\n    hadException = false;\n  } finally {\n    this._advanceToNextPacket();\n\n    // If there was an exception, the parser while loop will be broken out\n    // of after the finally block. So schedule a blank write to re-enter it\n    // to continue parsing any bytes that may already have been received.\n    if (hadException) {\n      process.nextTick(this.write.bind(this));\n    }\n  }\n};\n\nParser.prototype._tryReadPacketHeader = function _tryReadPacketHeader() {\n  if (this._packetHeader) {\n    return this._packetHeader;\n  }\n\n  if (!this._combineNextBuffers(PACKET_HEADER_LENGTH)) {\n    return null;\n  }\n\n  this._packetHeader = new PacketHeader(\n    this.parseUnsignedNumber(3),\n    this.parseUnsignedNumber(1)\n  );\n\n  if (this._packetHeader.number !== this._nextPacketNumber) {\n    var err = new Error(\n      'Packets out of order. Got: ' + this._packetHeader.number + ' ' +\n      'Expected: ' + this._nextPacketNumber\n    );\n\n    err.code  = 'PROTOCOL_PACKETS_OUT_OF_ORDER';\n    err.fatal = true;\n\n    this._onError(err);\n  }\n\n  this.incrementPacketNumber();\n\n  return this._packetHeader;\n};\n\nParser.prototype._advanceToNextPacket = function() {\n  this._offset       = this._packetEnd;\n  this._packetHeader = null;\n  this._packetEnd    = null;\n  this._packetOffset = null;\n};\n"]},"metadata":{},"sourceType":"script"}