{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { canceled, isCancellationError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { FuzzyScore } from '../../../../base/common/filters.js';\nimport { DisposableStore, isDisposable } from '../../../../base/common/lifecycle.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport * as modes from '../../../common/languages.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { localize } from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nexport const Context = {\n  Visible: new RawContextKey('suggestWidgetVisible', false, localize('suggestWidgetVisible', \"Whether suggestion are visible\")),\n  DetailsVisible: new RawContextKey('suggestWidgetDetailsVisible', false, localize('suggestWidgetDetailsVisible', \"Whether suggestion details are visible\")),\n  MultipleSuggestions: new RawContextKey('suggestWidgetMultipleSuggestions', false, localize('suggestWidgetMultipleSuggestions', \"Whether there are multiple suggestions to pick from\")),\n  MakesTextEdit: new RawContextKey('suggestionMakesTextEdit', true, localize('suggestionMakesTextEdit', \"Whether inserting the current suggestion yields in a change or has everything already been typed\")),\n  AcceptSuggestionsOnEnter: new RawContextKey('acceptSuggestionOnEnter', true, localize('acceptSuggestionOnEnter', \"Whether suggestions are inserted when pressing Enter\")),\n  HasInsertAndReplaceRange: new RawContextKey('suggestionHasInsertAndReplaceRange', false, localize('suggestionHasInsertAndReplaceRange', \"Whether the current suggestion has insert and replace behaviour\")),\n  InsertMode: new RawContextKey('suggestionInsertMode', undefined, {\n    type: 'string',\n    description: localize('suggestionInsertMode', \"Whether the default behaviour is to insert or replace\")\n  }),\n  CanResolve: new RawContextKey('suggestionCanResolve', false, localize('suggestionCanResolve', \"Whether the current suggestion supports to resolve further details\"))\n};\nexport const suggestWidgetStatusbarMenu = new MenuId('suggestWidgetStatusBar');\nexport class CompletionItem {\n  constructor(position, completion, container, provider) {\n    this.position = position;\n    this.completion = completion;\n    this.container = container;\n    this.provider = provider; // validation\n\n    this.isInvalid = false; // sorting, filtering\n\n    this.score = FuzzyScore.Default;\n    this.distance = 0;\n    this.textLabel = typeof completion.label === 'string' ? completion.label : completion.label.label; // ensure lower-variants (perf)\n\n    this.labelLow = this.textLabel.toLowerCase(); // validate label\n\n    this.isInvalid = !this.textLabel;\n    this.sortTextLow = completion.sortText && completion.sortText.toLowerCase();\n    this.filterTextLow = completion.filterText && completion.filterText.toLowerCase(); // normalize ranges\n\n    if (Range.isIRange(completion.range)) {\n      this.editStart = new Position(completion.range.startLineNumber, completion.range.startColumn);\n      this.editInsertEnd = new Position(completion.range.endLineNumber, completion.range.endColumn);\n      this.editReplaceEnd = new Position(completion.range.endLineNumber, completion.range.endColumn); // validate range\n\n      this.isInvalid = this.isInvalid || Range.spansMultipleLines(completion.range) || completion.range.startLineNumber !== position.lineNumber;\n    } else {\n      this.editStart = new Position(completion.range.insert.startLineNumber, completion.range.insert.startColumn);\n      this.editInsertEnd = new Position(completion.range.insert.endLineNumber, completion.range.insert.endColumn);\n      this.editReplaceEnd = new Position(completion.range.replace.endLineNumber, completion.range.replace.endColumn); // validate ranges\n\n      this.isInvalid = this.isInvalid || Range.spansMultipleLines(completion.range.insert) || Range.spansMultipleLines(completion.range.replace) || completion.range.insert.startLineNumber !== position.lineNumber || completion.range.replace.startLineNumber !== position.lineNumber || completion.range.insert.startColumn !== completion.range.replace.startColumn;\n    } // create the suggestion resolver\n\n\n    if (typeof provider.resolveCompletionItem !== 'function') {\n      this._resolveCache = Promise.resolve();\n      this._isResolved = true;\n    }\n  } // ---- resolving\n\n\n  get isResolved() {\n    return !!this._isResolved;\n  }\n\n  resolve(token) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this._resolveCache) {\n        const sub = token.onCancellationRequested(() => {\n          this._resolveCache = undefined;\n          this._isResolved = false;\n        });\n        this._resolveCache = Promise.resolve(this.provider.resolveCompletionItem(this.completion, token)).then(value => {\n          Object.assign(this.completion, value);\n          this._isResolved = true;\n          sub.dispose();\n        }, err => {\n          if (isCancellationError(err)) {\n            // the IPC queue will reject the request with the\n            // cancellation error -> reset cached\n            this._resolveCache = undefined;\n            this._isResolved = false;\n          }\n        });\n      }\n\n      return this._resolveCache;\n    });\n  }\n\n}\nexport class CompletionOptions {\n  constructor(snippetSortOrder = 2\n  /* Bottom */\n  , kindFilter = new Set(), providerFilter = new Set(), showDeprecated = true) {\n    this.snippetSortOrder = snippetSortOrder;\n    this.kindFilter = kindFilter;\n    this.providerFilter = providerFilter;\n    this.showDeprecated = showDeprecated;\n  }\n\n}\nCompletionOptions.default = new CompletionOptions();\n\nlet _snippetSuggestSupport;\n\nexport function getSnippetSuggestSupport() {\n  return _snippetSuggestSupport;\n}\nexport class CompletionItemModel {\n  constructor(items, needsClipboard, durations, disposable) {\n    this.items = items;\n    this.needsClipboard = needsClipboard;\n    this.durations = durations;\n    this.disposable = disposable;\n  }\n\n}\nexport function provideSuggestionItems(model, position, options = CompletionOptions.default, context = {\n  triggerKind: 0\n  /* Invoke */\n\n}, token = CancellationToken.None) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const sw = new StopWatch(true);\n    position = position.clone();\n    const word = model.getWordAtPosition(position);\n    const defaultReplaceRange = word ? new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn) : Range.fromPositions(position);\n    const defaultRange = {\n      replace: defaultReplaceRange,\n      insert: defaultReplaceRange.setEndPosition(position.lineNumber, position.column)\n    };\n    const result = [];\n    const disposables = new DisposableStore();\n    const durations = [];\n    let needsClipboard = false;\n\n    const onCompletionList = (provider, container, sw) => {\n      var _a, _b, _c;\n\n      let didAddResult = false;\n\n      if (!container) {\n        return didAddResult;\n      }\n\n      for (let suggestion of container.suggestions) {\n        if (!options.kindFilter.has(suggestion.kind)) {\n          // skip if not showing deprecated suggestions\n          if (!options.showDeprecated && ((_a = suggestion === null || suggestion === void 0 ? void 0 : suggestion.tags) === null || _a === void 0 ? void 0 : _a.includes(1\n          /* Deprecated */\n          ))) {\n            continue;\n          } // fill in default range when missing\n\n\n          if (!suggestion.range) {\n            suggestion.range = defaultRange;\n          } // fill in default sortText when missing\n\n\n          if (!suggestion.sortText) {\n            suggestion.sortText = typeof suggestion.label === 'string' ? suggestion.label : suggestion.label.label;\n          }\n\n          if (!needsClipboard && suggestion.insertTextRules && suggestion.insertTextRules & 4\n          /* InsertAsSnippet */\n          ) {\n            needsClipboard = SnippetParser.guessNeedsClipboard(suggestion.insertText);\n          }\n\n          result.push(new CompletionItem(position, suggestion, container, provider));\n          didAddResult = true;\n        }\n      }\n\n      if (isDisposable(container)) {\n        disposables.add(container);\n      }\n\n      durations.push({\n        providerName: (_b = provider._debugDisplayName) !== null && _b !== void 0 ? _b : 'unkown_provider',\n        elapsedProvider: (_c = container.duration) !== null && _c !== void 0 ? _c : -1,\n        elapsedOverall: sw.elapsed()\n      });\n      return didAddResult;\n    }; // ask for snippets in parallel to asking \"real\" providers. Only do something if configured to\n    // do so - no snippet filter, no special-providers-only request\n\n\n    const snippetCompletions = (() => __awaiter(this, void 0, void 0, function* () {\n      if (!_snippetSuggestSupport || options.kindFilter.has(27\n      /* Snippet */\n      )) {\n        return;\n      }\n\n      if (options.providerFilter.size > 0 && !options.providerFilter.has(_snippetSuggestSupport)) {\n        return;\n      }\n\n      const sw = new StopWatch(true);\n      const list = yield _snippetSuggestSupport.provideCompletionItems(model, position, context, token);\n      onCompletionList(_snippetSuggestSupport, list, sw);\n    }))(); // add suggestions from contributed providers - providers are ordered in groups of\n    // equal score and once a group produces a result the process stops\n    // get provider groups, always add snippet suggestion provider\n\n\n    for (let providerGroup of modes.CompletionProviderRegistry.orderedGroups(model)) {\n      // for each support in the group ask for suggestions\n      let didAddResult = false;\n      yield Promise.all(providerGroup.map(provider => __awaiter(this, void 0, void 0, function* () {\n        if (options.providerFilter.size > 0 && !options.providerFilter.has(provider)) {\n          return;\n        }\n\n        try {\n          const sw = new StopWatch(true);\n          const list = yield provider.provideCompletionItems(model, position, context, token);\n          didAddResult = onCompletionList(provider, list, sw) || didAddResult;\n        } catch (err) {\n          onUnexpectedExternalError(err);\n        }\n      })));\n\n      if (didAddResult || token.isCancellationRequested) {\n        break;\n      }\n    }\n\n    yield snippetCompletions;\n\n    if (token.isCancellationRequested) {\n      disposables.dispose();\n      return Promise.reject(canceled());\n    }\n\n    return new CompletionItemModel(result.sort(getSuggestionComparator(options.snippetSortOrder)), needsClipboard, {\n      entries: durations,\n      elapsed: sw.elapsed()\n    }, disposables);\n  });\n}\n\nfunction defaultComparator(a, b) {\n  // check with 'sortText'\n  if (a.sortTextLow && b.sortTextLow) {\n    if (a.sortTextLow < b.sortTextLow) {\n      return -1;\n    } else if (a.sortTextLow > b.sortTextLow) {\n      return 1;\n    }\n  } // check with 'label'\n\n\n  if (a.completion.label < b.completion.label) {\n    return -1;\n  } else if (a.completion.label > b.completion.label) {\n    return 1;\n  } // check with 'type'\n\n\n  return a.completion.kind - b.completion.kind;\n}\n\nfunction snippetUpComparator(a, b) {\n  if (a.completion.kind !== b.completion.kind) {\n    if (a.completion.kind === 27\n    /* Snippet */\n    ) {\n      return -1;\n    } else if (b.completion.kind === 27\n    /* Snippet */\n    ) {\n      return 1;\n    }\n  }\n\n  return defaultComparator(a, b);\n}\n\nfunction snippetDownComparator(a, b) {\n  if (a.completion.kind !== b.completion.kind) {\n    if (a.completion.kind === 27\n    /* Snippet */\n    ) {\n      return 1;\n    } else if (b.completion.kind === 27\n    /* Snippet */\n    ) {\n      return -1;\n    }\n  }\n\n  return defaultComparator(a, b);\n}\n\nconst _snippetComparators = new Map();\n\n_snippetComparators.set(0\n/* Top */\n, snippetUpComparator);\n\n_snippetComparators.set(2\n/* Bottom */\n, snippetDownComparator);\n\n_snippetComparators.set(1\n/* Inline */\n, defaultComparator);\n\nexport function getSuggestionComparator(snippetConfig) {\n  return _snippetComparators.get(snippetConfig);\n}\nCommandsRegistry.registerCommand('_executeCompletionItemProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\n  const [uri, position, triggerCharacter, maxItemsToResolve] = args;\n  assertType(URI.isUri(uri));\n  assertType(Position.isIPosition(position));\n  assertType(typeof triggerCharacter === 'string' || !triggerCharacter);\n  assertType(typeof maxItemsToResolve === 'number' || !maxItemsToResolve);\n  const ref = yield accessor.get(ITextModelService).createModelReference(uri);\n\n  try {\n    const result = {\n      incomplete: false,\n      suggestions: []\n    };\n    const resolving = [];\n    const completions = yield provideSuggestionItems(ref.object.textEditorModel, Position.lift(position), undefined, {\n      triggerCharacter,\n      triggerKind: triggerCharacter ? 1\n      /* TriggerCharacter */\n      : 0\n      /* Invoke */\n\n    });\n\n    for (const item of completions.items) {\n      if (resolving.length < (maxItemsToResolve !== null && maxItemsToResolve !== void 0 ? maxItemsToResolve : 0)) {\n        resolving.push(item.resolve(CancellationToken.None));\n      }\n\n      result.incomplete = result.incomplete || item.container.incomplete;\n      result.suggestions.push(item.completion);\n    }\n\n    try {\n      yield Promise.all(resolving);\n      return result;\n    } finally {\n      setTimeout(() => completions.disposable.dispose(), 100);\n    }\n  } finally {\n    ref.dispose();\n  }\n}));\n\nconst _provider = new class {\n  constructor() {\n    this.onlyOnceSuggestions = [];\n  }\n\n  provideCompletionItems() {\n    let suggestions = this.onlyOnceSuggestions.slice(0);\n    let result = {\n      suggestions\n    };\n    this.onlyOnceSuggestions.length = 0;\n    return result;\n  }\n\n}();\n\nmodes.CompletionProviderRegistry.register('*', _provider);\nexport function showSimpleSuggestions(editor, suggestions) {\n  setTimeout(() => {\n    var _a;\n\n    _provider.onlyOnceSuggestions.push(...suggestions);\n\n    (_a = editor.getContribution('editor.contrib.suggestController')) === null || _a === void 0 ? void 0 : _a.triggerSuggest(new Set().add(_provider));\n  }, 0);\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/contrib/suggest/browser/suggest.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","CancellationToken","canceled","isCancellationError","onUnexpectedExternalError","FuzzyScore","DisposableStore","isDisposable","StopWatch","assertType","URI","Position","Range","modes","ITextModelService","SnippetParser","localize","MenuId","CommandsRegistry","RawContextKey","Context","Visible","DetailsVisible","MultipleSuggestions","MakesTextEdit","AcceptSuggestionsOnEnter","HasInsertAndReplaceRange","InsertMode","undefined","type","description","CanResolve","suggestWidgetStatusbarMenu","CompletionItem","constructor","position","completion","container","provider","isInvalid","score","Default","distance","textLabel","label","labelLow","toLowerCase","sortTextLow","sortText","filterTextLow","filterText","isIRange","range","editStart","startLineNumber","startColumn","editInsertEnd","endLineNumber","endColumn","editReplaceEnd","spansMultipleLines","lineNumber","insert","replace","resolveCompletionItem","_resolveCache","_isResolved","isResolved","token","sub","onCancellationRequested","Object","assign","dispose","err","CompletionOptions","snippetSortOrder","kindFilter","Set","providerFilter","showDeprecated","default","_snippetSuggestSupport","getSnippetSuggestSupport","CompletionItemModel","items","needsClipboard","durations","disposable","provideSuggestionItems","model","options","context","triggerKind","None","sw","clone","word","getWordAtPosition","defaultReplaceRange","fromPositions","defaultRange","setEndPosition","column","disposables","onCompletionList","_a","_b","_c","didAddResult","suggestion","suggestions","has","kind","tags","includes","insertTextRules","guessNeedsClipboard","insertText","push","add","providerName","_debugDisplayName","elapsedProvider","duration","elapsedOverall","elapsed","snippetCompletions","size","list","provideCompletionItems","providerGroup","CompletionProviderRegistry","orderedGroups","all","map","isCancellationRequested","sort","getSuggestionComparator","entries","defaultComparator","a","b","snippetUpComparator","snippetDownComparator","_snippetComparators","Map","set","snippetConfig","get","registerCommand","accessor","args","uri","triggerCharacter","maxItemsToResolve","isUri","isIPosition","ref","createModelReference","incomplete","resolving","completions","object","textEditorModel","lift","item","length","setTimeout","_provider","onlyOnceSuggestions","slice","register","showSimpleSuggestions","editor","getContribution","triggerSuggest"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { canceled, isCancellationError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { FuzzyScore } from '../../../../base/common/filters.js';\nimport { DisposableStore, isDisposable } from '../../../../base/common/lifecycle.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport * as modes from '../../../common/languages.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { localize } from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nexport const Context = {\n    Visible: new RawContextKey('suggestWidgetVisible', false, localize('suggestWidgetVisible', \"Whether suggestion are visible\")),\n    DetailsVisible: new RawContextKey('suggestWidgetDetailsVisible', false, localize('suggestWidgetDetailsVisible', \"Whether suggestion details are visible\")),\n    MultipleSuggestions: new RawContextKey('suggestWidgetMultipleSuggestions', false, localize('suggestWidgetMultipleSuggestions', \"Whether there are multiple suggestions to pick from\")),\n    MakesTextEdit: new RawContextKey('suggestionMakesTextEdit', true, localize('suggestionMakesTextEdit', \"Whether inserting the current suggestion yields in a change or has everything already been typed\")),\n    AcceptSuggestionsOnEnter: new RawContextKey('acceptSuggestionOnEnter', true, localize('acceptSuggestionOnEnter', \"Whether suggestions are inserted when pressing Enter\")),\n    HasInsertAndReplaceRange: new RawContextKey('suggestionHasInsertAndReplaceRange', false, localize('suggestionHasInsertAndReplaceRange', \"Whether the current suggestion has insert and replace behaviour\")),\n    InsertMode: new RawContextKey('suggestionInsertMode', undefined, { type: 'string', description: localize('suggestionInsertMode', \"Whether the default behaviour is to insert or replace\") }),\n    CanResolve: new RawContextKey('suggestionCanResolve', false, localize('suggestionCanResolve', \"Whether the current suggestion supports to resolve further details\")),\n};\nexport const suggestWidgetStatusbarMenu = new MenuId('suggestWidgetStatusBar');\nexport class CompletionItem {\n    constructor(position, completion, container, provider) {\n        this.position = position;\n        this.completion = completion;\n        this.container = container;\n        this.provider = provider;\n        // validation\n        this.isInvalid = false;\n        // sorting, filtering\n        this.score = FuzzyScore.Default;\n        this.distance = 0;\n        this.textLabel = typeof completion.label === 'string'\n            ? completion.label\n            : completion.label.label;\n        // ensure lower-variants (perf)\n        this.labelLow = this.textLabel.toLowerCase();\n        // validate label\n        this.isInvalid = !this.textLabel;\n        this.sortTextLow = completion.sortText && completion.sortText.toLowerCase();\n        this.filterTextLow = completion.filterText && completion.filterText.toLowerCase();\n        // normalize ranges\n        if (Range.isIRange(completion.range)) {\n            this.editStart = new Position(completion.range.startLineNumber, completion.range.startColumn);\n            this.editInsertEnd = new Position(completion.range.endLineNumber, completion.range.endColumn);\n            this.editReplaceEnd = new Position(completion.range.endLineNumber, completion.range.endColumn);\n            // validate range\n            this.isInvalid = this.isInvalid\n                || Range.spansMultipleLines(completion.range) || completion.range.startLineNumber !== position.lineNumber;\n        }\n        else {\n            this.editStart = new Position(completion.range.insert.startLineNumber, completion.range.insert.startColumn);\n            this.editInsertEnd = new Position(completion.range.insert.endLineNumber, completion.range.insert.endColumn);\n            this.editReplaceEnd = new Position(completion.range.replace.endLineNumber, completion.range.replace.endColumn);\n            // validate ranges\n            this.isInvalid = this.isInvalid\n                || Range.spansMultipleLines(completion.range.insert) || Range.spansMultipleLines(completion.range.replace)\n                || completion.range.insert.startLineNumber !== position.lineNumber || completion.range.replace.startLineNumber !== position.lineNumber\n                || completion.range.insert.startColumn !== completion.range.replace.startColumn;\n        }\n        // create the suggestion resolver\n        if (typeof provider.resolveCompletionItem !== 'function') {\n            this._resolveCache = Promise.resolve();\n            this._isResolved = true;\n        }\n    }\n    // ---- resolving\n    get isResolved() {\n        return !!this._isResolved;\n    }\n    resolve(token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._resolveCache) {\n                const sub = token.onCancellationRequested(() => {\n                    this._resolveCache = undefined;\n                    this._isResolved = false;\n                });\n                this._resolveCache = Promise.resolve(this.provider.resolveCompletionItem(this.completion, token)).then(value => {\n                    Object.assign(this.completion, value);\n                    this._isResolved = true;\n                    sub.dispose();\n                }, err => {\n                    if (isCancellationError(err)) {\n                        // the IPC queue will reject the request with the\n                        // cancellation error -> reset cached\n                        this._resolveCache = undefined;\n                        this._isResolved = false;\n                    }\n                });\n            }\n            return this._resolveCache;\n        });\n    }\n}\nexport class CompletionOptions {\n    constructor(snippetSortOrder = 2 /* Bottom */, kindFilter = new Set(), providerFilter = new Set(), showDeprecated = true) {\n        this.snippetSortOrder = snippetSortOrder;\n        this.kindFilter = kindFilter;\n        this.providerFilter = providerFilter;\n        this.showDeprecated = showDeprecated;\n    }\n}\nCompletionOptions.default = new CompletionOptions();\nlet _snippetSuggestSupport;\nexport function getSnippetSuggestSupport() {\n    return _snippetSuggestSupport;\n}\nexport class CompletionItemModel {\n    constructor(items, needsClipboard, durations, disposable) {\n        this.items = items;\n        this.needsClipboard = needsClipboard;\n        this.durations = durations;\n        this.disposable = disposable;\n    }\n}\nexport function provideSuggestionItems(model, position, options = CompletionOptions.default, context = { triggerKind: 0 /* Invoke */ }, token = CancellationToken.None) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const sw = new StopWatch(true);\n        position = position.clone();\n        const word = model.getWordAtPosition(position);\n        const defaultReplaceRange = word ? new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn) : Range.fromPositions(position);\n        const defaultRange = { replace: defaultReplaceRange, insert: defaultReplaceRange.setEndPosition(position.lineNumber, position.column) };\n        const result = [];\n        const disposables = new DisposableStore();\n        const durations = [];\n        let needsClipboard = false;\n        const onCompletionList = (provider, container, sw) => {\n            var _a, _b, _c;\n            let didAddResult = false;\n            if (!container) {\n                return didAddResult;\n            }\n            for (let suggestion of container.suggestions) {\n                if (!options.kindFilter.has(suggestion.kind)) {\n                    // skip if not showing deprecated suggestions\n                    if (!options.showDeprecated && ((_a = suggestion === null || suggestion === void 0 ? void 0 : suggestion.tags) === null || _a === void 0 ? void 0 : _a.includes(1 /* Deprecated */))) {\n                        continue;\n                    }\n                    // fill in default range when missing\n                    if (!suggestion.range) {\n                        suggestion.range = defaultRange;\n                    }\n                    // fill in default sortText when missing\n                    if (!suggestion.sortText) {\n                        suggestion.sortText = typeof suggestion.label === 'string' ? suggestion.label : suggestion.label.label;\n                    }\n                    if (!needsClipboard && suggestion.insertTextRules && suggestion.insertTextRules & 4 /* InsertAsSnippet */) {\n                        needsClipboard = SnippetParser.guessNeedsClipboard(suggestion.insertText);\n                    }\n                    result.push(new CompletionItem(position, suggestion, container, provider));\n                    didAddResult = true;\n                }\n            }\n            if (isDisposable(container)) {\n                disposables.add(container);\n            }\n            durations.push({\n                providerName: (_b = provider._debugDisplayName) !== null && _b !== void 0 ? _b : 'unkown_provider', elapsedProvider: (_c = container.duration) !== null && _c !== void 0 ? _c : -1, elapsedOverall: sw.elapsed()\n            });\n            return didAddResult;\n        };\n        // ask for snippets in parallel to asking \"real\" providers. Only do something if configured to\n        // do so - no snippet filter, no special-providers-only request\n        const snippetCompletions = (() => __awaiter(this, void 0, void 0, function* () {\n            if (!_snippetSuggestSupport || options.kindFilter.has(27 /* Snippet */)) {\n                return;\n            }\n            if (options.providerFilter.size > 0 && !options.providerFilter.has(_snippetSuggestSupport)) {\n                return;\n            }\n            const sw = new StopWatch(true);\n            const list = yield _snippetSuggestSupport.provideCompletionItems(model, position, context, token);\n            onCompletionList(_snippetSuggestSupport, list, sw);\n        }))();\n        // add suggestions from contributed providers - providers are ordered in groups of\n        // equal score and once a group produces a result the process stops\n        // get provider groups, always add snippet suggestion provider\n        for (let providerGroup of modes.CompletionProviderRegistry.orderedGroups(model)) {\n            // for each support in the group ask for suggestions\n            let didAddResult = false;\n            yield Promise.all(providerGroup.map((provider) => __awaiter(this, void 0, void 0, function* () {\n                if (options.providerFilter.size > 0 && !options.providerFilter.has(provider)) {\n                    return;\n                }\n                try {\n                    const sw = new StopWatch(true);\n                    const list = yield provider.provideCompletionItems(model, position, context, token);\n                    didAddResult = onCompletionList(provider, list, sw) || didAddResult;\n                }\n                catch (err) {\n                    onUnexpectedExternalError(err);\n                }\n            })));\n            if (didAddResult || token.isCancellationRequested) {\n                break;\n            }\n        }\n        yield snippetCompletions;\n        if (token.isCancellationRequested) {\n            disposables.dispose();\n            return Promise.reject(canceled());\n        }\n        return new CompletionItemModel(result.sort(getSuggestionComparator(options.snippetSortOrder)), needsClipboard, { entries: durations, elapsed: sw.elapsed() }, disposables);\n    });\n}\nfunction defaultComparator(a, b) {\n    // check with 'sortText'\n    if (a.sortTextLow && b.sortTextLow) {\n        if (a.sortTextLow < b.sortTextLow) {\n            return -1;\n        }\n        else if (a.sortTextLow > b.sortTextLow) {\n            return 1;\n        }\n    }\n    // check with 'label'\n    if (a.completion.label < b.completion.label) {\n        return -1;\n    }\n    else if (a.completion.label > b.completion.label) {\n        return 1;\n    }\n    // check with 'type'\n    return a.completion.kind - b.completion.kind;\n}\nfunction snippetUpComparator(a, b) {\n    if (a.completion.kind !== b.completion.kind) {\n        if (a.completion.kind === 27 /* Snippet */) {\n            return -1;\n        }\n        else if (b.completion.kind === 27 /* Snippet */) {\n            return 1;\n        }\n    }\n    return defaultComparator(a, b);\n}\nfunction snippetDownComparator(a, b) {\n    if (a.completion.kind !== b.completion.kind) {\n        if (a.completion.kind === 27 /* Snippet */) {\n            return 1;\n        }\n        else if (b.completion.kind === 27 /* Snippet */) {\n            return -1;\n        }\n    }\n    return defaultComparator(a, b);\n}\nconst _snippetComparators = new Map();\n_snippetComparators.set(0 /* Top */, snippetUpComparator);\n_snippetComparators.set(2 /* Bottom */, snippetDownComparator);\n_snippetComparators.set(1 /* Inline */, defaultComparator);\nexport function getSuggestionComparator(snippetConfig) {\n    return _snippetComparators.get(snippetConfig);\n}\nCommandsRegistry.registerCommand('_executeCompletionItemProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\n    const [uri, position, triggerCharacter, maxItemsToResolve] = args;\n    assertType(URI.isUri(uri));\n    assertType(Position.isIPosition(position));\n    assertType(typeof triggerCharacter === 'string' || !triggerCharacter);\n    assertType(typeof maxItemsToResolve === 'number' || !maxItemsToResolve);\n    const ref = yield accessor.get(ITextModelService).createModelReference(uri);\n    try {\n        const result = {\n            incomplete: false,\n            suggestions: []\n        };\n        const resolving = [];\n        const completions = yield provideSuggestionItems(ref.object.textEditorModel, Position.lift(position), undefined, { triggerCharacter, triggerKind: triggerCharacter ? 1 /* TriggerCharacter */ : 0 /* Invoke */ });\n        for (const item of completions.items) {\n            if (resolving.length < (maxItemsToResolve !== null && maxItemsToResolve !== void 0 ? maxItemsToResolve : 0)) {\n                resolving.push(item.resolve(CancellationToken.None));\n            }\n            result.incomplete = result.incomplete || item.container.incomplete;\n            result.suggestions.push(item.completion);\n        }\n        try {\n            yield Promise.all(resolving);\n            return result;\n        }\n        finally {\n            setTimeout(() => completions.disposable.dispose(), 100);\n        }\n    }\n    finally {\n        ref.dispose();\n    }\n}));\nconst _provider = new class {\n    constructor() {\n        this.onlyOnceSuggestions = [];\n    }\n    provideCompletionItems() {\n        let suggestions = this.onlyOnceSuggestions.slice(0);\n        let result = { suggestions };\n        this.onlyOnceSuggestions.length = 0;\n        return result;\n    }\n};\nmodes.CompletionProviderRegistry.register('*', _provider);\nexport function showSimpleSuggestions(editor, suggestions) {\n    setTimeout(() => {\n        var _a;\n        _provider.onlyOnceSuggestions.push(...suggestions);\n        (_a = editor.getContribution('editor.contrib.suggestController')) === null || _a === void 0 ? void 0 : _a.triggerSuggest(new Set().add(_provider));\n    }, 0);\n}\n"]},"metadata":{},"sourceType":"module"}