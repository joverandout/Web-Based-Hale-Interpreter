{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { activeContrastBorder, badgeBackground, badgeForeground, contrastBorder, listActiveSelectionBackground, listActiveSelectionForeground, listActiveSelectionIconForeground, listDropBackground, listFilterWidgetBackground, listFilterWidgetNoMatchesOutline, listFilterWidgetOutline, listFocusBackground, listFocusForeground, listFocusOutline, listHoverBackground, listHoverForeground, listInactiveFocusBackground, listInactiveFocusOutline, listInactiveSelectionBackground, listInactiveSelectionForeground, listInactiveSelectionIconForeground, menuBackground, menuBorder, menuForeground, menuSelectionBackground, menuSelectionBorder, menuSelectionForeground, menuSeparatorBackground, resolveColorValue, scrollbarShadow, scrollbarSliderActiveBackground, scrollbarSliderBackground, scrollbarSliderHoverBackground, tableColumnsBorder, tableOddRowsBackgroundColor, treeIndentGuidesStroke, widgetShadow } from './colorRegistry.js';\nexport function computeStyles(theme, styleMap) {\n  const styles = Object.create(null);\n\n  for (let key in styleMap) {\n    const value = styleMap[key];\n\n    if (value) {\n      styles[key] = resolveColorValue(value, theme);\n    }\n  }\n\n  return styles;\n}\nexport function attachStyler(themeService, styleMap, widgetOrCallback) {\n  function applyStyles() {\n    const styles = computeStyles(themeService.getColorTheme(), styleMap);\n\n    if (typeof widgetOrCallback === 'function') {\n      widgetOrCallback(styles);\n    } else {\n      widgetOrCallback.style(styles);\n    }\n  }\n\n  applyStyles();\n  return themeService.onDidColorThemeChange(applyStyles);\n}\nexport function attachBadgeStyler(widget, themeService, style) {\n  return attachStyler(themeService, {\n    badgeBackground: (style === null || style === void 0 ? void 0 : style.badgeBackground) || badgeBackground,\n    badgeForeground: (style === null || style === void 0 ? void 0 : style.badgeForeground) || badgeForeground,\n    badgeBorder: contrastBorder\n  }, widget);\n}\nexport function attachListStyler(widget, themeService, overrides) {\n  return attachStyler(themeService, Object.assign(Object.assign({}, defaultListStyles), overrides || {}), widget);\n}\nexport const defaultListStyles = {\n  listFocusBackground,\n  listFocusForeground,\n  listFocusOutline,\n  listActiveSelectionBackground,\n  listActiveSelectionForeground,\n  listActiveSelectionIconForeground,\n  listFocusAndSelectionBackground: listActiveSelectionBackground,\n  listFocusAndSelectionForeground: listActiveSelectionForeground,\n  listInactiveSelectionBackground,\n  listInactiveSelectionIconForeground,\n  listInactiveSelectionForeground,\n  listInactiveFocusBackground,\n  listInactiveFocusOutline,\n  listHoverBackground,\n  listHoverForeground,\n  listDropBackground,\n  listSelectionOutline: activeContrastBorder,\n  listHoverOutline: activeContrastBorder,\n  listFilterWidgetBackground,\n  listFilterWidgetOutline,\n  listFilterWidgetNoMatchesOutline,\n  listMatchesShadow: widgetShadow,\n  treeIndentGuidesStroke,\n  tableColumnsBorder,\n  tableOddRowsBackgroundColor\n};\nexport const defaultMenuStyles = {\n  shadowColor: widgetShadow,\n  borderColor: menuBorder,\n  foregroundColor: menuForeground,\n  backgroundColor: menuBackground,\n  selectionForegroundColor: menuSelectionForeground,\n  selectionBackgroundColor: menuSelectionBackground,\n  selectionBorderColor: menuSelectionBorder,\n  separatorColor: menuSeparatorBackground,\n  scrollbarShadow: scrollbarShadow,\n  scrollbarSliderBackground: scrollbarSliderBackground,\n  scrollbarSliderHoverBackground: scrollbarSliderHoverBackground,\n  scrollbarSliderActiveBackground: scrollbarSliderActiveBackground\n};\nexport function attachMenuStyler(widget, themeService, style) {\n  return attachStyler(themeService, Object.assign(Object.assign({}, defaultMenuStyles), style), widget);\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/platform/theme/common/styler.js"],"names":["activeContrastBorder","badgeBackground","badgeForeground","contrastBorder","listActiveSelectionBackground","listActiveSelectionForeground","listActiveSelectionIconForeground","listDropBackground","listFilterWidgetBackground","listFilterWidgetNoMatchesOutline","listFilterWidgetOutline","listFocusBackground","listFocusForeground","listFocusOutline","listHoverBackground","listHoverForeground","listInactiveFocusBackground","listInactiveFocusOutline","listInactiveSelectionBackground","listInactiveSelectionForeground","listInactiveSelectionIconForeground","menuBackground","menuBorder","menuForeground","menuSelectionBackground","menuSelectionBorder","menuSelectionForeground","menuSeparatorBackground","resolveColorValue","scrollbarShadow","scrollbarSliderActiveBackground","scrollbarSliderBackground","scrollbarSliderHoverBackground","tableColumnsBorder","tableOddRowsBackgroundColor","treeIndentGuidesStroke","widgetShadow","computeStyles","theme","styleMap","styles","Object","create","key","value","attachStyler","themeService","widgetOrCallback","applyStyles","getColorTheme","style","onDidColorThemeChange","attachBadgeStyler","widget","badgeBorder","attachListStyler","overrides","assign","defaultListStyles","listFocusAndSelectionBackground","listFocusAndSelectionForeground","listSelectionOutline","listHoverOutline","listMatchesShadow","defaultMenuStyles","shadowColor","borderColor","foregroundColor","backgroundColor","selectionForegroundColor","selectionBackgroundColor","selectionBorderColor","separatorColor","attachMenuStyler"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { activeContrastBorder, badgeBackground, badgeForeground, contrastBorder, listActiveSelectionBackground, listActiveSelectionForeground, listActiveSelectionIconForeground, listDropBackground, listFilterWidgetBackground, listFilterWidgetNoMatchesOutline, listFilterWidgetOutline, listFocusBackground, listFocusForeground, listFocusOutline, listHoverBackground, listHoverForeground, listInactiveFocusBackground, listInactiveFocusOutline, listInactiveSelectionBackground, listInactiveSelectionForeground, listInactiveSelectionIconForeground, menuBackground, menuBorder, menuForeground, menuSelectionBackground, menuSelectionBorder, menuSelectionForeground, menuSeparatorBackground, resolveColorValue, scrollbarShadow, scrollbarSliderActiveBackground, scrollbarSliderBackground, scrollbarSliderHoverBackground, tableColumnsBorder, tableOddRowsBackgroundColor, treeIndentGuidesStroke, widgetShadow } from './colorRegistry.js';\nexport function computeStyles(theme, styleMap) {\n    const styles = Object.create(null);\n    for (let key in styleMap) {\n        const value = styleMap[key];\n        if (value) {\n            styles[key] = resolveColorValue(value, theme);\n        }\n    }\n    return styles;\n}\nexport function attachStyler(themeService, styleMap, widgetOrCallback) {\n    function applyStyles() {\n        const styles = computeStyles(themeService.getColorTheme(), styleMap);\n        if (typeof widgetOrCallback === 'function') {\n            widgetOrCallback(styles);\n        }\n        else {\n            widgetOrCallback.style(styles);\n        }\n    }\n    applyStyles();\n    return themeService.onDidColorThemeChange(applyStyles);\n}\nexport function attachBadgeStyler(widget, themeService, style) {\n    return attachStyler(themeService, {\n        badgeBackground: (style === null || style === void 0 ? void 0 : style.badgeBackground) || badgeBackground,\n        badgeForeground: (style === null || style === void 0 ? void 0 : style.badgeForeground) || badgeForeground,\n        badgeBorder: contrastBorder\n    }, widget);\n}\nexport function attachListStyler(widget, themeService, overrides) {\n    return attachStyler(themeService, Object.assign(Object.assign({}, defaultListStyles), (overrides || {})), widget);\n}\nexport const defaultListStyles = {\n    listFocusBackground,\n    listFocusForeground,\n    listFocusOutline,\n    listActiveSelectionBackground,\n    listActiveSelectionForeground,\n    listActiveSelectionIconForeground,\n    listFocusAndSelectionBackground: listActiveSelectionBackground,\n    listFocusAndSelectionForeground: listActiveSelectionForeground,\n    listInactiveSelectionBackground,\n    listInactiveSelectionIconForeground,\n    listInactiveSelectionForeground,\n    listInactiveFocusBackground,\n    listInactiveFocusOutline,\n    listHoverBackground,\n    listHoverForeground,\n    listDropBackground,\n    listSelectionOutline: activeContrastBorder,\n    listHoverOutline: activeContrastBorder,\n    listFilterWidgetBackground,\n    listFilterWidgetOutline,\n    listFilterWidgetNoMatchesOutline,\n    listMatchesShadow: widgetShadow,\n    treeIndentGuidesStroke,\n    tableColumnsBorder,\n    tableOddRowsBackgroundColor\n};\nexport const defaultMenuStyles = {\n    shadowColor: widgetShadow,\n    borderColor: menuBorder,\n    foregroundColor: menuForeground,\n    backgroundColor: menuBackground,\n    selectionForegroundColor: menuSelectionForeground,\n    selectionBackgroundColor: menuSelectionBackground,\n    selectionBorderColor: menuSelectionBorder,\n    separatorColor: menuSeparatorBackground,\n    scrollbarShadow: scrollbarShadow,\n    scrollbarSliderBackground: scrollbarSliderBackground,\n    scrollbarSliderHoverBackground: scrollbarSliderHoverBackground,\n    scrollbarSliderActiveBackground: scrollbarSliderActiveBackground\n};\nexport function attachMenuStyler(widget, themeService, style) {\n    return attachStyler(themeService, Object.assign(Object.assign({}, defaultMenuStyles), style), widget);\n}\n"]},"metadata":{},"sourceType":"module"}