{"ast":null,"code":"/**\n * marked - a markdown parser\n * Copyright (c) 2011-2022, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n// ESM-uncomment-begin\nlet __marked_exports = {};\n\n(function () {\n  function define(deps, factory) {\n    factory(__marked_exports);\n  }\n\n  define.amd = true; // ESM-uncomment-end\n\n  (function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.marked = {}));\n  })(this, function (exports) {\n    'use strict';\n\n    function _defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    function _createClass(Constructor, protoProps, staticProps) {\n      if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) _defineProperties(Constructor, staticProps);\n      Object.defineProperty(Constructor, \"prototype\", {\n        writable: false\n      });\n      return Constructor;\n    }\n\n    function _unsupportedIterableToArray(o, minLen) {\n      if (!o) return;\n      if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n      var n = Object.prototype.toString.call(o).slice(8, -1);\n      if (n === \"Object\" && o.constructor) n = o.constructor.name;\n      if (n === \"Map\" || n === \"Set\") return Array.from(o);\n      if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n    }\n\n    function _arrayLikeToArray(arr, len) {\n      if (len == null || len > arr.length) len = arr.length;\n\n      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n      return arr2;\n    }\n\n    function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n      var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n      if (it) return (it = it.call(o)).next.bind(it);\n\n      if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n        if (it) o = it;\n        var i = 0;\n        return function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        };\n      }\n\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n\n    function getDefaults() {\n      return {\n        baseUrl: null,\n        breaks: false,\n        extensions: null,\n        gfm: true,\n        headerIds: true,\n        headerPrefix: '',\n        highlight: null,\n        langPrefix: 'language-',\n        mangle: true,\n        pedantic: false,\n        renderer: null,\n        sanitize: false,\n        sanitizer: null,\n        silent: false,\n        smartLists: false,\n        smartypants: false,\n        tokenizer: null,\n        walkTokens: null,\n        xhtml: false\n      };\n    }\n\n    exports.defaults = getDefaults();\n\n    function changeDefaults(newDefaults) {\n      exports.defaults = newDefaults;\n    }\n    /**\n     * Helpers\n     */\n\n\n    var escapeTest = /[&<>\"']/;\n    var escapeReplace = /[&<>\"']/g;\n    var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n    var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n    var escapeReplacements = {\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '\"': '&quot;',\n      \"'\": '&#39;'\n    };\n\n    var getEscapeReplacement = function getEscapeReplacement(ch) {\n      return escapeReplacements[ch];\n    };\n\n    function escape(html, encode) {\n      if (encode) {\n        if (escapeTest.test(html)) {\n          return html.replace(escapeReplace, getEscapeReplacement);\n        }\n      } else {\n        if (escapeTestNoEncode.test(html)) {\n          return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n        }\n      }\n\n      return html;\n    }\n\n    var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n    function unescape(html) {\n      // explicitly match decimal, hex, and named HTML entities\n      return html.replace(unescapeTest, function (_, n) {\n        n = n.toLowerCase();\n        if (n === 'colon') return ':';\n\n        if (n.charAt(0) === '#') {\n          return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n        }\n\n        return '';\n      });\n    }\n\n    var caret = /(^|[^\\[])\\^/g;\n\n    function edit(regex, opt) {\n      regex = regex.source || regex;\n      opt = opt || '';\n      var obj = {\n        replace: function replace(name, val) {\n          val = val.source || val;\n          val = val.replace(caret, '$1');\n          regex = regex.replace(name, val);\n          return obj;\n        },\n        getRegex: function getRegex() {\n          return new RegExp(regex, opt);\n        }\n      };\n      return obj;\n    }\n\n    var nonWordAndColonTest = /[^\\w:]/g;\n    var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n    function cleanUrl(sanitize, base, href) {\n      if (sanitize) {\n        var prot;\n\n        try {\n          prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, '').toLowerCase();\n        } catch (e) {\n          return null;\n        }\n\n        if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n          return null;\n        }\n      }\n\n      if (base && !originIndependentUrl.test(href)) {\n        href = resolveUrl(base, href);\n      }\n\n      try {\n        href = encodeURI(href).replace(/%25/g, '%');\n      } catch (e) {\n        return null;\n      }\n\n      return href;\n    }\n\n    var baseUrls = {};\n    var justDomain = /^[^:]+:\\/*[^/]*$/;\n    var protocol = /^([^:]+:)[\\s\\S]*$/;\n    var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n    function resolveUrl(base, href) {\n      if (!baseUrls[' ' + base]) {\n        // we can ignore everything in base after the last slash of its path component,\n        // but we might need to add _that_\n        // https://tools.ietf.org/html/rfc3986#section-3\n        if (justDomain.test(base)) {\n          baseUrls[' ' + base] = base + '/';\n        } else {\n          baseUrls[' ' + base] = rtrim(base, '/', true);\n        }\n      }\n\n      base = baseUrls[' ' + base];\n      var relativeBase = base.indexOf(':') === -1;\n\n      if (href.substring(0, 2) === '//') {\n        if (relativeBase) {\n          return href;\n        }\n\n        return base.replace(protocol, '$1') + href;\n      } else if (href.charAt(0) === '/') {\n        if (relativeBase) {\n          return href;\n        }\n\n        return base.replace(domain, '$1') + href;\n      } else {\n        return base + href;\n      }\n    }\n\n    var noopTest = {\n      exec: function noopTest() {}\n    };\n\n    function merge(obj) {\n      var i = 1,\n          target,\n          key;\n\n      for (; i < arguments.length; i++) {\n        target = arguments[i];\n\n        for (key in target) {\n          if (Object.prototype.hasOwnProperty.call(target, key)) {\n            obj[key] = target[key];\n          }\n        }\n      }\n\n      return obj;\n    }\n\n    function splitCells(tableRow, count) {\n      // ensure that every cell-delimiting pipe has a space\n      // before it to distinguish it from an escaped pipe\n      var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n        var escaped = false,\n            curr = offset;\n\n        while (--curr >= 0 && str[curr] === '\\\\') {\n          escaped = !escaped;\n        }\n\n        if (escaped) {\n          // odd number of slashes means | is escaped\n          // so we leave it alone\n          return '|';\n        } else {\n          // add space before unescaped |\n          return ' |';\n        }\n      }),\n          cells = row.split(/ \\|/);\n      var i = 0; // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n\n      if (!cells[0].trim()) {\n        cells.shift();\n      }\n\n      if (!cells[cells.length - 1].trim()) {\n        cells.pop();\n      }\n\n      if (cells.length > count) {\n        cells.splice(count);\n      } else {\n        while (cells.length < count) {\n          cells.push('');\n        }\n      }\n\n      for (; i < cells.length; i++) {\n        // leading or trailing whitespace is ignored per the gfm spec\n        cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n      }\n\n      return cells;\n    } // Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n    // /c*$/ is vulnerable to REDOS.\n    // invert: Remove suffix of non-c chars instead. Default falsey.\n\n\n    function rtrim(str, c, invert) {\n      var l = str.length;\n\n      if (l === 0) {\n        return '';\n      } // Length of suffix matching the invert condition.\n\n\n      var suffLen = 0; // Step left until we fail to match the invert condition.\n\n      while (suffLen < l) {\n        var currChar = str.charAt(l - suffLen - 1);\n\n        if (currChar === c && !invert) {\n          suffLen++;\n        } else if (currChar !== c && invert) {\n          suffLen++;\n        } else {\n          break;\n        }\n      }\n\n      return str.substr(0, l - suffLen);\n    }\n\n    function findClosingBracket(str, b) {\n      if (str.indexOf(b[1]) === -1) {\n        return -1;\n      }\n\n      var l = str.length;\n      var level = 0,\n          i = 0;\n\n      for (; i < l; i++) {\n        if (str[i] === '\\\\') {\n          i++;\n        } else if (str[i] === b[0]) {\n          level++;\n        } else if (str[i] === b[1]) {\n          level--;\n\n          if (level < 0) {\n            return i;\n          }\n        }\n      }\n\n      return -1;\n    }\n\n    function checkSanitizeDeprecation(opt) {\n      if (opt && opt.sanitize && !opt.silent) {\n        console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n      }\n    } // copied from https://stackoverflow.com/a/5450113/806777\n\n\n    function repeatString(pattern, count) {\n      if (count < 1) {\n        return '';\n      }\n\n      var result = '';\n\n      while (count > 1) {\n        if (count & 1) {\n          result += pattern;\n        }\n\n        count >>= 1;\n        pattern += pattern;\n      }\n\n      return result + pattern;\n    }\n\n    function outputLink(cap, link, raw, lexer) {\n      var href = link.href;\n      var title = link.title ? escape(link.title) : null;\n      var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n      if (cap[0].charAt(0) !== '!') {\n        lexer.state.inLink = true;\n        var token = {\n          type: 'link',\n          raw: raw,\n          href: href,\n          title: title,\n          text: text,\n          tokens: lexer.inlineTokens(text, [])\n        };\n        lexer.state.inLink = false;\n        return token;\n      } else {\n        return {\n          type: 'image',\n          raw: raw,\n          href: href,\n          title: title,\n          text: escape(text)\n        };\n      }\n    }\n\n    function indentCodeCompensation(raw, text) {\n      var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n      if (matchIndentToCode === null) {\n        return text;\n      }\n\n      var indentToCode = matchIndentToCode[1];\n      return text.split('\\n').map(function (node) {\n        var matchIndentInNode = node.match(/^\\s+/);\n\n        if (matchIndentInNode === null) {\n          return node;\n        }\n\n        var indentInNode = matchIndentInNode[0];\n\n        if (indentInNode.length >= indentToCode.length) {\n          return node.slice(indentToCode.length);\n        }\n\n        return node;\n      }).join('\\n');\n    }\n    /**\n     * Tokenizer\n     */\n\n\n    var Tokenizer = /*#__PURE__*/function () {\n      function Tokenizer(options) {\n        this.options = options || exports.defaults;\n      }\n\n      var _proto = Tokenizer.prototype;\n\n      _proto.space = function space(src) {\n        var cap = this.rules.block.newline.exec(src);\n\n        if (cap && cap[0].length > 0) {\n          return {\n            type: 'space',\n            raw: cap[0]\n          };\n        }\n      };\n\n      _proto.code = function code(src) {\n        var cap = this.rules.block.code.exec(src);\n\n        if (cap) {\n          var text = cap[0].replace(/^ {1,4}/gm, '');\n          return {\n            type: 'code',\n            raw: cap[0],\n            codeBlockStyle: 'indented',\n            text: !this.options.pedantic ? rtrim(text, '\\n') : text\n          };\n        }\n      };\n\n      _proto.fences = function fences(src) {\n        var cap = this.rules.block.fences.exec(src);\n\n        if (cap) {\n          var raw = cap[0];\n          var text = indentCodeCompensation(raw, cap[3] || '');\n          return {\n            type: 'code',\n            raw: raw,\n            lang: cap[2] ? cap[2].trim() : cap[2],\n            text: text\n          };\n        }\n      };\n\n      _proto.heading = function heading(src) {\n        var cap = this.rules.block.heading.exec(src);\n\n        if (cap) {\n          var text = cap[2].trim(); // remove trailing #s\n\n          if (/#$/.test(text)) {\n            var trimmed = rtrim(text, '#');\n\n            if (this.options.pedantic) {\n              text = trimmed.trim();\n            } else if (!trimmed || / $/.test(trimmed)) {\n              // CommonMark requires space before trailing #s\n              text = trimmed.trim();\n            }\n          }\n\n          var token = {\n            type: 'heading',\n            raw: cap[0],\n            depth: cap[1].length,\n            text: text,\n            tokens: []\n          };\n          this.lexer.inline(token.text, token.tokens);\n          return token;\n        }\n      };\n\n      _proto.hr = function hr(src) {\n        var cap = this.rules.block.hr.exec(src);\n\n        if (cap) {\n          return {\n            type: 'hr',\n            raw: cap[0]\n          };\n        }\n      };\n\n      _proto.blockquote = function blockquote(src) {\n        var cap = this.rules.block.blockquote.exec(src);\n\n        if (cap) {\n          var text = cap[0].replace(/^ *> ?/gm, '');\n          return {\n            type: 'blockquote',\n            raw: cap[0],\n            tokens: this.lexer.blockTokens(text, []),\n            text: text\n          };\n        }\n      };\n\n      _proto.list = function list(src) {\n        var cap = this.rules.block.list.exec(src);\n\n        if (cap) {\n          var raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine, line, nextLine, rawLine, itemContents, endEarly;\n          var bull = cap[1].trim();\n          var isordered = bull.length > 1;\n          var list = {\n            type: 'list',\n            raw: '',\n            ordered: isordered,\n            start: isordered ? +bull.slice(0, -1) : '',\n            loose: false,\n            items: []\n          };\n          bull = isordered ? \"\\\\d{1,9}\\\\\" + bull.slice(-1) : \"\\\\\" + bull;\n\n          if (this.options.pedantic) {\n            bull = isordered ? bull : '[*+-]';\n          } // Get next list item\n\n\n          var itemRegex = new RegExp(\"^( {0,3}\" + bull + \")((?: [^\\\\n]*)?(?:\\\\n|$))\"); // Check if current bullet point can start a new List Item\n\n          while (src) {\n            endEarly = false;\n\n            if (!(cap = itemRegex.exec(src))) {\n              break;\n            }\n\n            if (this.rules.block.hr.test(src)) {\n              // End list if bullet was actually HR (possibly move into itemRegex?)\n              break;\n            }\n\n            raw = cap[0];\n            src = src.substring(raw.length);\n            line = cap[2].split('\\n', 1)[0];\n            nextLine = src.split('\\n', 1)[0];\n\n            if (this.options.pedantic) {\n              indent = 2;\n              itemContents = line.trimLeft();\n            } else {\n              indent = cap[2].search(/[^ ]/); // Find first non-space char\n\n              indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n\n              itemContents = line.slice(indent);\n              indent += cap[1].length;\n            }\n\n            blankLine = false;\n\n            if (!line && /^ *$/.test(nextLine)) {\n              // Items begin with at most one blank line\n              raw += nextLine + '\\n';\n              src = src.substring(nextLine.length + 1);\n              endEarly = true;\n            }\n\n            if (!endEarly) {\n              var nextBulletRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}(?:[*+-]|\\\\d{1,9}[.)])\"); // Check if following lines should be included in List Item\n\n              while (src) {\n                rawLine = src.split('\\n', 1)[0];\n                line = rawLine; // Re-align to follow commonmark nesting rules\n\n                if (this.options.pedantic) {\n                  line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n                } // End list item if found start of new bullet\n\n\n                if (nextBulletRegex.test(line)) {\n                  break;\n                }\n\n                if (line.search(/[^ ]/) >= indent || !line.trim()) {\n                  // Dedent if possible\n                  itemContents += '\\n' + line.slice(indent);\n                } else if (!blankLine) {\n                  // Until blank line, item doesn't need indentation\n                  itemContents += '\\n' + line;\n                } else {\n                  // Otherwise, improper indentation ends this item\n                  break;\n                }\n\n                if (!blankLine && !line.trim()) {\n                  // Check if current line is blank\n                  blankLine = true;\n                }\n\n                raw += rawLine + '\\n';\n                src = src.substring(rawLine.length + 1);\n              }\n            }\n\n            if (!list.loose) {\n              // If the previous item ended with a blank line, the list is loose\n              if (endsWithBlankLine) {\n                list.loose = true;\n              } else if (/\\n *\\n *$/.test(raw)) {\n                endsWithBlankLine = true;\n              }\n            } // Check for task list items\n\n\n            if (this.options.gfm) {\n              istask = /^\\[[ xX]\\] /.exec(itemContents);\n\n              if (istask) {\n                ischecked = istask[0] !== '[ ] ';\n                itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n              }\n            }\n\n            list.items.push({\n              type: 'list_item',\n              raw: raw,\n              task: !!istask,\n              checked: ischecked,\n              loose: false,\n              text: itemContents\n            });\n            list.raw += raw;\n          } // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n\n\n          list.items[list.items.length - 1].raw = raw.trimRight();\n          list.items[list.items.length - 1].text = itemContents.trimRight();\n          list.raw = list.raw.trimRight();\n          var l = list.items.length; // Item child tokens handled here at end because we needed to have the final item to trim it first\n\n          for (i = 0; i < l; i++) {\n            this.lexer.state.top = false;\n            list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n            var spacers = list.items[i].tokens.filter(function (t) {\n              return t.type === 'space';\n            });\n            var hasMultipleLineBreaks = spacers.every(function (t) {\n              var chars = t.raw.split('');\n              var lineBreaks = 0;\n\n              for (var _iterator = _createForOfIteratorHelperLoose(chars), _step; !(_step = _iterator()).done;) {\n                var _char = _step.value;\n\n                if (_char === '\\n') {\n                  lineBreaks += 1;\n                }\n\n                if (lineBreaks > 1) {\n                  return true;\n                }\n              }\n\n              return false;\n            });\n\n            if (!list.loose && spacers.length && hasMultipleLineBreaks) {\n              // Having a single line break doesn't mean a list is loose. A single line break is terminating the last list item\n              list.loose = true;\n              list.items[i].loose = true;\n            }\n          }\n\n          return list;\n        }\n      };\n\n      _proto.html = function html(src) {\n        var cap = this.rules.block.html.exec(src);\n\n        if (cap) {\n          var token = {\n            type: 'html',\n            raw: cap[0],\n            pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n            text: cap[0]\n          };\n\n          if (this.options.sanitize) {\n            token.type = 'paragraph';\n            token.text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n            token.tokens = [];\n            this.lexer.inline(token.text, token.tokens);\n          }\n\n          return token;\n        }\n      };\n\n      _proto.def = function def(src) {\n        var cap = this.rules.block.def.exec(src);\n\n        if (cap) {\n          if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n          var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n          return {\n            type: 'def',\n            tag: tag,\n            raw: cap[0],\n            href: cap[2],\n            title: cap[3]\n          };\n        }\n      };\n\n      _proto.table = function table(src) {\n        var cap = this.rules.block.table.exec(src);\n\n        if (cap) {\n          var item = {\n            type: 'table',\n            header: splitCells(cap[1]).map(function (c) {\n              return {\n                text: c\n              };\n            }),\n            align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n            rows: cap[3] ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n          };\n\n          if (item.header.length === item.align.length) {\n            item.raw = cap[0];\n            var l = item.align.length;\n            var i, j, k, row;\n\n            for (i = 0; i < l; i++) {\n              if (/^ *-+: *$/.test(item.align[i])) {\n                item.align[i] = 'right';\n              } else if (/^ *:-+: *$/.test(item.align[i])) {\n                item.align[i] = 'center';\n              } else if (/^ *:-+ *$/.test(item.align[i])) {\n                item.align[i] = 'left';\n              } else {\n                item.align[i] = null;\n              }\n            }\n\n            l = item.rows.length;\n\n            for (i = 0; i < l; i++) {\n              item.rows[i] = splitCells(item.rows[i], item.header.length).map(function (c) {\n                return {\n                  text: c\n                };\n              });\n            } // parse child tokens inside headers and cells\n            // header child tokens\n\n\n            l = item.header.length;\n\n            for (j = 0; j < l; j++) {\n              item.header[j].tokens = [];\n              this.lexer.inlineTokens(item.header[j].text, item.header[j].tokens);\n            } // cell child tokens\n\n\n            l = item.rows.length;\n\n            for (j = 0; j < l; j++) {\n              row = item.rows[j];\n\n              for (k = 0; k < row.length; k++) {\n                row[k].tokens = [];\n                this.lexer.inlineTokens(row[k].text, row[k].tokens);\n              }\n            }\n\n            return item;\n          }\n        }\n      };\n\n      _proto.lheading = function lheading(src) {\n        var cap = this.rules.block.lheading.exec(src);\n\n        if (cap) {\n          var token = {\n            type: 'heading',\n            raw: cap[0],\n            depth: cap[2].charAt(0) === '=' ? 1 : 2,\n            text: cap[1],\n            tokens: []\n          };\n          this.lexer.inline(token.text, token.tokens);\n          return token;\n        }\n      };\n\n      _proto.paragraph = function paragraph(src) {\n        var cap = this.rules.block.paragraph.exec(src);\n\n        if (cap) {\n          var token = {\n            type: 'paragraph',\n            raw: cap[0],\n            text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1],\n            tokens: []\n          };\n          this.lexer.inline(token.text, token.tokens);\n          return token;\n        }\n      };\n\n      _proto.text = function text(src) {\n        var cap = this.rules.block.text.exec(src);\n\n        if (cap) {\n          var token = {\n            type: 'text',\n            raw: cap[0],\n            text: cap[0],\n            tokens: []\n          };\n          this.lexer.inline(token.text, token.tokens);\n          return token;\n        }\n      };\n\n      _proto.escape = function escape$1(src) {\n        var cap = this.rules.inline.escape.exec(src);\n\n        if (cap) {\n          return {\n            type: 'escape',\n            raw: cap[0],\n            text: escape(cap[1])\n          };\n        }\n      };\n\n      _proto.tag = function tag(src) {\n        var cap = this.rules.inline.tag.exec(src);\n\n        if (cap) {\n          if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n            this.lexer.state.inLink = true;\n          } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n            this.lexer.state.inLink = false;\n          }\n\n          if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n            this.lexer.state.inRawBlock = true;\n          } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n            this.lexer.state.inRawBlock = false;\n          }\n\n          return {\n            type: this.options.sanitize ? 'text' : 'html',\n            raw: cap[0],\n            inLink: this.lexer.state.inLink,\n            inRawBlock: this.lexer.state.inRawBlock,\n            text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0]\n          };\n        }\n      };\n\n      _proto.link = function link(src) {\n        var cap = this.rules.inline.link.exec(src);\n\n        if (cap) {\n          var trimmedUrl = cap[2].trim();\n\n          if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n            // commonmark requires matching angle brackets\n            if (!/>$/.test(trimmedUrl)) {\n              return;\n            } // ending angle bracket cannot be escaped\n\n\n            var rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n\n            if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n              return;\n            }\n          } else {\n            // find closing parenthesis\n            var lastParenIndex = findClosingBracket(cap[2], '()');\n\n            if (lastParenIndex > -1) {\n              var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n              var linkLen = start + cap[1].length + lastParenIndex;\n              cap[2] = cap[2].substring(0, lastParenIndex);\n              cap[0] = cap[0].substring(0, linkLen).trim();\n              cap[3] = '';\n            }\n          }\n\n          var href = cap[2];\n          var title = '';\n\n          if (this.options.pedantic) {\n            // split pedantic href and title\n            var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n            if (link) {\n              href = link[1];\n              title = link[3];\n            }\n          } else {\n            title = cap[3] ? cap[3].slice(1, -1) : '';\n          }\n\n          href = href.trim();\n\n          if (/^</.test(href)) {\n            if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\n              // pedantic allows starting angle bracket without ending angle bracket\n              href = href.slice(1);\n            } else {\n              href = href.slice(1, -1);\n            }\n          }\n\n          return outputLink(cap, {\n            href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n            title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n          }, cap[0], this.lexer);\n        }\n      };\n\n      _proto.reflink = function reflink(src, links) {\n        var cap;\n\n        if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n          var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n          link = links[link.toLowerCase()];\n\n          if (!link || !link.href) {\n            var text = cap[0].charAt(0);\n            return {\n              type: 'text',\n              raw: text,\n              text: text\n            };\n          }\n\n          return outputLink(cap, link, cap[0], this.lexer);\n        }\n      };\n\n      _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\n        if (prevChar === void 0) {\n          prevChar = '';\n        }\n\n        var match = this.rules.inline.emStrong.lDelim.exec(src);\n        if (!match) return; // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n\n        if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDF70-\\uDF81\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC71\\uDC72\\uDC75\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B\\uDF40-\\uDF46]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEB0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|\\uD80B[\\uDF90-\\uDFF0]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDE70-\\uDEBE\\uDEC0-\\uDEC9\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD82C[\\uDC00-\\uDD22\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD837[\\uDF00-\\uDF1E]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDE90-\\uDEAD\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD839[\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF38\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/)) return;\n        var nextChar = match[1] || match[2] || '';\n\n        if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {\n          var lLength = match[0].length - 1;\n          var rDelim,\n              rLength,\n              delimTotal = lLength,\n              midDelimTotal = 0;\n          var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n          endReg.lastIndex = 0; // Clip maskedSrc to same section of string as src (move to lexer?)\n\n          maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n          while ((match = endReg.exec(maskedSrc)) != null) {\n            rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n            if (!rDelim) continue; // skip single * in __abc*abc__\n\n            rLength = rDelim.length;\n\n            if (match[3] || match[4]) {\n              // found another Left Delim\n              delimTotal += rLength;\n              continue;\n            } else if (match[5] || match[6]) {\n              // either Left or Right Delim\n              if (lLength % 3 && !((lLength + rLength) % 3)) {\n                midDelimTotal += rLength;\n                continue; // CommonMark Emphasis Rules 9-10\n              }\n            }\n\n            delimTotal -= rLength;\n            if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n            // Remove extra characters. *a*** -> *a*\n\n            rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal); // Create `em` if smallest delimiter has odd char count. *a***\n\n            if (Math.min(lLength, rLength) % 2) {\n              var _text = src.slice(1, lLength + match.index + rLength);\n\n              return {\n                type: 'em',\n                raw: src.slice(0, lLength + match.index + rLength + 1),\n                text: _text,\n                tokens: this.lexer.inlineTokens(_text, [])\n              };\n            } // Create 'strong' if smallest delimiter has even char count. **a***\n\n\n            var text = src.slice(2, lLength + match.index + rLength - 1);\n            return {\n              type: 'strong',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: text,\n              tokens: this.lexer.inlineTokens(text, [])\n            };\n          }\n        }\n      };\n\n      _proto.codespan = function codespan(src) {\n        var cap = this.rules.inline.code.exec(src);\n\n        if (cap) {\n          var text = cap[2].replace(/\\n/g, ' ');\n          var hasNonSpaceChars = /[^ ]/.test(text);\n          var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n\n          if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n            text = text.substring(1, text.length - 1);\n          }\n\n          text = escape(text, true);\n          return {\n            type: 'codespan',\n            raw: cap[0],\n            text: text\n          };\n        }\n      };\n\n      _proto.br = function br(src) {\n        var cap = this.rules.inline.br.exec(src);\n\n        if (cap) {\n          return {\n            type: 'br',\n            raw: cap[0]\n          };\n        }\n      };\n\n      _proto.del = function del(src) {\n        var cap = this.rules.inline.del.exec(src);\n\n        if (cap) {\n          return {\n            type: 'del',\n            raw: cap[0],\n            text: cap[2],\n            tokens: this.lexer.inlineTokens(cap[2], [])\n          };\n        }\n      };\n\n      _proto.autolink = function autolink(src, mangle) {\n        var cap = this.rules.inline.autolink.exec(src);\n\n        if (cap) {\n          var text, href;\n\n          if (cap[2] === '@') {\n            text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n            href = 'mailto:' + text;\n          } else {\n            text = escape(cap[1]);\n            href = text;\n          }\n\n          return {\n            type: 'link',\n            raw: cap[0],\n            text: text,\n            href: href,\n            tokens: [{\n              type: 'text',\n              raw: text,\n              text: text\n            }]\n          };\n        }\n      };\n\n      _proto.url = function url(src, mangle) {\n        var cap;\n\n        if (cap = this.rules.inline.url.exec(src)) {\n          var text, href;\n\n          if (cap[2] === '@') {\n            text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n            href = 'mailto:' + text;\n          } else {\n            // do extended autolink path validation\n            var prevCapZero;\n\n            do {\n              prevCapZero = cap[0];\n              cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n            } while (prevCapZero !== cap[0]);\n\n            text = escape(cap[0]);\n\n            if (cap[1] === 'www.') {\n              href = 'http://' + text;\n            } else {\n              href = text;\n            }\n          }\n\n          return {\n            type: 'link',\n            raw: cap[0],\n            text: text,\n            href: href,\n            tokens: [{\n              type: 'text',\n              raw: text,\n              text: text\n            }]\n          };\n        }\n      };\n\n      _proto.inlineText = function inlineText(src, smartypants) {\n        var cap = this.rules.inline.text.exec(src);\n\n        if (cap) {\n          var text;\n\n          if (this.lexer.state.inRawBlock) {\n            text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0];\n          } else {\n            text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n          }\n\n          return {\n            type: 'text',\n            raw: cap[0],\n            text: text\n          };\n        }\n      };\n\n      return Tokenizer;\n    }();\n    /**\n     * Block-Level Grammar\n     */\n\n\n    var block = {\n      newline: /^(?: *(?:\\n|$))+/,\n      code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n      fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n      hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n      heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n      blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n      list: /^( {0,3}bull)( [^\\n]+?)?(?:\\n|$)/,\n      html: '^ {0,3}(?:' // optional indentation\n      + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n      + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n      + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n      + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n      + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n      + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n      + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n      + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n      + ')',\n      def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?<?([^\\s>]+)>?(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n      table: noopTest,\n      lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n      // regex template, placeholders will be replaced according to different paragraph\n      // interruption rules of commonmark and the original markdown spec:\n      _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n      text: /^[^\\n]+/\n    };\n    block._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\n    block._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n    block.def = edit(block.def).replace('label', block._label).replace('title', block._title).getRegex();\n    block.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n    block.listItemStart = edit(/^( *)(bull) */).replace('bull', block.bullet).getRegex();\n    block.list = edit(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\n    block._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n    block._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n    block.html = edit(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n    block.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n    .replace('|table', '').replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n    .getRegex();\n    block.blockquote = edit(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n    /**\n     * Normal Block Grammar\n     */\n\n    block.normal = merge({}, block);\n    /**\n     * GFM Block Grammar\n     */\n\n    block.gfm = merge({}, block.normal, {\n      table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n      + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n      + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n\n    });\n    block.gfm.table = edit(block.gfm.table).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n    .getRegex();\n    block.gfm.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n    .replace('table', block.gfm.table) // interrupt paragraphs with table\n    .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n    .getRegex();\n    /**\n     * Pedantic grammar (original John Gruber's loose markdown specification)\n     */\n\n    block.pedantic = merge({}, block.normal, {\n      html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n      + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n      def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n      heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n      fences: noopTest,\n      // fences not supported\n      paragraph: edit(block.normal._paragraph).replace('hr', block.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n    });\n    /**\n     * Inline-Level Grammar\n     */\n\n    var inline = {\n      escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n      autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n      url: noopTest,\n      tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n      + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n      + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n      + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n      + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n      // CDATA section\n      link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n      reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n      nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n      reflinkSearch: 'reflink|nolink(?!\\\\()',\n      emStrong: {\n        lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n        //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n        //        () Skip orphan delim inside strong    (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n        rDelimAst: /^[^_*]*?\\_\\_[^_*]*?\\*[^_*]*?(?=\\_\\_)|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n        rDelimUnd: /^[^_*]*?\\*\\*[^_*]*?\\_[^_*]*?(?=\\*\\*)|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n\n      },\n      code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n      br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n      del: noopTest,\n      text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n      punctuation: /^([\\spunctuation])/\n    }; // list of punctuation marks from CommonMark spec\n    // without * and _ to handle the different emphasis markers * and _\n\n    inline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\n    inline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>\n\n    inline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n    inline.escapedEmSt = /\\\\\\*|\\\\_/g;\n    inline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n    inline.emStrong.lDelim = edit(inline.emStrong.lDelim).replace(/punct/g, inline._punctuation).getRegex();\n    inline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g').replace(/punct/g, inline._punctuation).getRegex();\n    inline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g').replace(/punct/g, inline._punctuation).getRegex();\n    inline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n    inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n    inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n    inline.autolink = edit(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\n    inline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n    inline.tag = edit(inline.tag).replace('comment', inline._comment).replace('attribute', inline._attribute).getRegex();\n    inline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n    inline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\n    inline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n    inline.link = edit(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();\n    inline.reflink = edit(inline.reflink).replace('label', inline._label).replace('ref', block._label).getRegex();\n    inline.nolink = edit(inline.nolink).replace('ref', block._label).getRegex();\n    inline.reflinkSearch = edit(inline.reflinkSearch, 'g').replace('reflink', inline.reflink).replace('nolink', inline.nolink).getRegex();\n    /**\n     * Normal Inline Grammar\n     */\n\n    inline.normal = merge({}, inline);\n    /**\n     * Pedantic Inline Grammar\n     */\n\n    inline.pedantic = merge({}, inline.normal, {\n      strong: {\n        start: /^__|\\*\\*/,\n        middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n        endAst: /\\*\\*(?!\\*)/g,\n        endUnd: /__(?!_)/g\n      },\n      em: {\n        start: /^_|\\*/,\n        middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n        endAst: /\\*(?!\\*)/g,\n        endUnd: /_(?!_)/g\n      },\n      link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline._label).getRegex(),\n      reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline._label).getRegex()\n    });\n    /**\n     * GFM Inline Grammar\n     */\n\n    inline.gfm = merge({}, inline.normal, {\n      escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n      _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n      url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n      _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n      del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n      text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n    });\n    inline.gfm.url = edit(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();\n    /**\n     * GFM + Line Breaks Inline Grammar\n     */\n\n    inline.breaks = merge({}, inline.gfm, {\n      br: edit(inline.br).replace('{2,}', '*').getRegex(),\n      text: edit(inline.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n    });\n    /**\n     * smartypants text replacement\n     */\n\n    function smartypants(text) {\n      return text // em-dashes\n      .replace(/---/g, \"\\u2014\") // en-dashes\n      .replace(/--/g, \"\\u2013\") // opening singles\n      .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n      .replace(/'/g, \"\\u2019\") // opening doubles\n      .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n      .replace(/\"/g, \"\\u201D\") // ellipses\n      .replace(/\\.{3}/g, \"\\u2026\");\n    }\n    /**\n     * mangle email addresses\n     */\n\n\n    function mangle(text) {\n      var out = '',\n          i,\n          ch;\n      var l = text.length;\n\n      for (i = 0; i < l; i++) {\n        ch = text.charCodeAt(i);\n\n        if (Math.random() > 0.5) {\n          ch = 'x' + ch.toString(16);\n        }\n\n        out += '&#' + ch + ';';\n      }\n\n      return out;\n    }\n    /**\n     * Block Lexer\n     */\n\n\n    var Lexer = /*#__PURE__*/function () {\n      function Lexer(options) {\n        this.tokens = [];\n        this.tokens.links = Object.create(null);\n        this.options = options || exports.defaults;\n        this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n        this.tokenizer = this.options.tokenizer;\n        this.tokenizer.options = this.options;\n        this.tokenizer.lexer = this;\n        this.inlineQueue = [];\n        this.state = {\n          inLink: false,\n          inRawBlock: false,\n          top: true\n        };\n        var rules = {\n          block: block.normal,\n          inline: inline.normal\n        };\n\n        if (this.options.pedantic) {\n          rules.block = block.pedantic;\n          rules.inline = inline.pedantic;\n        } else if (this.options.gfm) {\n          rules.block = block.gfm;\n\n          if (this.options.breaks) {\n            rules.inline = inline.breaks;\n          } else {\n            rules.inline = inline.gfm;\n          }\n        }\n\n        this.tokenizer.rules = rules;\n      }\n      /**\n       * Expose Rules\n       */\n\n      /**\n       * Static Lex Method\n       */\n\n\n      Lexer.lex = function lex(src, options) {\n        var lexer = new Lexer(options);\n        return lexer.lex(src);\n      }\n      /**\n       * Static Lex Inline Method\n       */\n      ;\n\n      Lexer.lexInline = function lexInline(src, options) {\n        var lexer = new Lexer(options);\n        return lexer.inlineTokens(src);\n      }\n      /**\n       * Preprocessing\n       */\n      ;\n\n      var _proto = Lexer.prototype;\n\n      _proto.lex = function lex(src) {\n        src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ');\n        this.blockTokens(src, this.tokens);\n        var next;\n\n        while (next = this.inlineQueue.shift()) {\n          this.inlineTokens(next.src, next.tokens);\n        }\n\n        return this.tokens;\n      }\n      /**\n       * Lexing\n       */\n      ;\n\n      _proto.blockTokens = function blockTokens(src, tokens) {\n        var _this = this;\n\n        if (tokens === void 0) {\n          tokens = [];\n        }\n\n        if (this.options.pedantic) {\n          src = src.replace(/^ +$/gm, '');\n        }\n\n        var token, lastToken, cutSrc, lastParagraphClipped;\n\n        while (src) {\n          if (this.options.extensions && this.options.extensions.block && this.options.extensions.block.some(function (extTokenizer) {\n            if (token = extTokenizer.call({\n              lexer: _this\n            }, src, tokens)) {\n              src = src.substring(token.raw.length);\n              tokens.push(token);\n              return true;\n            }\n\n            return false;\n          })) {\n            continue;\n          } // newline\n\n\n          if (token = this.tokenizer.space(src)) {\n            src = src.substring(token.raw.length);\n\n            if (token.raw.length === 1 && tokens.length > 0) {\n              // if there's a single \\n as a spacer, it's terminating the last line,\n              // so move it there so that we don't get unecessary paragraph tags\n              tokens[tokens.length - 1].raw += '\\n';\n            } else {\n              tokens.push(token);\n            }\n\n            continue;\n          } // code\n\n\n          if (token = this.tokenizer.code(src)) {\n            src = src.substring(token.raw.length);\n            lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\n\n            if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n              lastToken.raw += '\\n' + token.raw;\n              lastToken.text += '\\n' + token.text;\n              this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n            } else {\n              tokens.push(token);\n            }\n\n            continue;\n          } // fences\n\n\n          if (token = this.tokenizer.fences(src)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            continue;\n          } // heading\n\n\n          if (token = this.tokenizer.heading(src)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            continue;\n          } // hr\n\n\n          if (token = this.tokenizer.hr(src)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            continue;\n          } // blockquote\n\n\n          if (token = this.tokenizer.blockquote(src)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            continue;\n          } // list\n\n\n          if (token = this.tokenizer.list(src)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            continue;\n          } // html\n\n\n          if (token = this.tokenizer.html(src)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            continue;\n          } // def\n\n\n          if (token = this.tokenizer.def(src)) {\n            src = src.substring(token.raw.length);\n            lastToken = tokens[tokens.length - 1];\n\n            if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n              lastToken.raw += '\\n' + token.raw;\n              lastToken.text += '\\n' + token.raw;\n              this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n            } else if (!this.tokens.links[token.tag]) {\n              this.tokens.links[token.tag] = {\n                href: token.href,\n                title: token.title\n              };\n            }\n\n            continue;\n          } // table (gfm)\n\n\n          if (token = this.tokenizer.table(src)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            continue;\n          } // lheading\n\n\n          if (token = this.tokenizer.lheading(src)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            continue;\n          } // top-level paragraph\n          // prevent paragraph consuming extensions by clipping 'src' to extension start\n\n\n          cutSrc = src;\n\n          if (this.options.extensions && this.options.extensions.startBlock) {\n            (function () {\n              var startIndex = Infinity;\n              var tempSrc = src.slice(1);\n              var tempStart = void 0;\n\n              _this.options.extensions.startBlock.forEach(function (getStartIndex) {\n                tempStart = getStartIndex.call({\n                  lexer: this\n                }, tempSrc);\n\n                if (typeof tempStart === 'number' && tempStart >= 0) {\n                  startIndex = Math.min(startIndex, tempStart);\n                }\n              });\n\n              if (startIndex < Infinity && startIndex >= 0) {\n                cutSrc = src.substring(0, startIndex + 1);\n              }\n            })();\n          }\n\n          if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n            lastToken = tokens[tokens.length - 1];\n\n            if (lastParagraphClipped && lastToken.type === 'paragraph') {\n              lastToken.raw += '\\n' + token.raw;\n              lastToken.text += '\\n' + token.text;\n              this.inlineQueue.pop();\n              this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n            } else {\n              tokens.push(token);\n            }\n\n            lastParagraphClipped = cutSrc.length !== src.length;\n            src = src.substring(token.raw.length);\n            continue;\n          } // text\n\n\n          if (token = this.tokenizer.text(src)) {\n            src = src.substring(token.raw.length);\n            lastToken = tokens[tokens.length - 1];\n\n            if (lastToken && lastToken.type === 'text') {\n              lastToken.raw += '\\n' + token.raw;\n              lastToken.text += '\\n' + token.text;\n              this.inlineQueue.pop();\n              this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n            } else {\n              tokens.push(token);\n            }\n\n            continue;\n          }\n\n          if (src) {\n            var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n            if (this.options.silent) {\n              console.error(errMsg);\n              break;\n            } else {\n              throw new Error(errMsg);\n            }\n          }\n        }\n\n        this.state.top = true;\n        return tokens;\n      };\n\n      _proto.inline = function inline(src, tokens) {\n        this.inlineQueue.push({\n          src: src,\n          tokens: tokens\n        });\n      }\n      /**\n       * Lexing/Compiling\n       */\n      ;\n\n      _proto.inlineTokens = function inlineTokens(src, tokens) {\n        var _this2 = this;\n\n        if (tokens === void 0) {\n          tokens = [];\n        }\n\n        var token, lastToken, cutSrc; // String with links masked to avoid interference with em and strong\n\n        var maskedSrc = src;\n        var match;\n        var keepPrevChar, prevChar; // Mask out reflinks\n\n        if (this.tokens.links) {\n          var links = Object.keys(this.tokens.links);\n\n          if (links.length > 0) {\n            while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n              if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n                maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n              }\n            }\n          }\n        } // Mask out other blocks\n\n\n        while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n          maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n        } // Mask out escaped em & strong delimiters\n\n\n        while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n          maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n        }\n\n        while (src) {\n          if (!keepPrevChar) {\n            prevChar = '';\n          }\n\n          keepPrevChar = false; // extensions\n\n          if (this.options.extensions && this.options.extensions.inline && this.options.extensions.inline.some(function (extTokenizer) {\n            if (token = extTokenizer.call({\n              lexer: _this2\n            }, src, tokens)) {\n              src = src.substring(token.raw.length);\n              tokens.push(token);\n              return true;\n            }\n\n            return false;\n          })) {\n            continue;\n          } // escape\n\n\n          if (token = this.tokenizer.escape(src)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            continue;\n          } // tag\n\n\n          if (token = this.tokenizer.tag(src)) {\n            src = src.substring(token.raw.length);\n            lastToken = tokens[tokens.length - 1];\n\n            if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n              lastToken.raw += token.raw;\n              lastToken.text += token.text;\n            } else {\n              tokens.push(token);\n            }\n\n            continue;\n          } // link\n\n\n          if (token = this.tokenizer.link(src)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            continue;\n          } // reflink, nolink\n\n\n          if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n            src = src.substring(token.raw.length);\n            lastToken = tokens[tokens.length - 1];\n\n            if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n              lastToken.raw += token.raw;\n              lastToken.text += token.text;\n            } else {\n              tokens.push(token);\n            }\n\n            continue;\n          } // em & strong\n\n\n          if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            continue;\n          } // code\n\n\n          if (token = this.tokenizer.codespan(src)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            continue;\n          } // br\n\n\n          if (token = this.tokenizer.br(src)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            continue;\n          } // del (gfm)\n\n\n          if (token = this.tokenizer.del(src)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            continue;\n          } // autolink\n\n\n          if (token = this.tokenizer.autolink(src, mangle)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            continue;\n          } // url (gfm)\n\n\n          if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            continue;\n          } // text\n          // prevent inlineText consuming extensions by clipping 'src' to extension start\n\n\n          cutSrc = src;\n\n          if (this.options.extensions && this.options.extensions.startInline) {\n            (function () {\n              var startIndex = Infinity;\n              var tempSrc = src.slice(1);\n              var tempStart = void 0;\n\n              _this2.options.extensions.startInline.forEach(function (getStartIndex) {\n                tempStart = getStartIndex.call({\n                  lexer: this\n                }, tempSrc);\n\n                if (typeof tempStart === 'number' && tempStart >= 0) {\n                  startIndex = Math.min(startIndex, tempStart);\n                }\n              });\n\n              if (startIndex < Infinity && startIndex >= 0) {\n                cutSrc = src.substring(0, startIndex + 1);\n              }\n            })();\n          }\n\n          if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n            src = src.substring(token.raw.length);\n\n            if (token.raw.slice(-1) !== '_') {\n              // Track prevChar before string of ____ started\n              prevChar = token.raw.slice(-1);\n            }\n\n            keepPrevChar = true;\n            lastToken = tokens[tokens.length - 1];\n\n            if (lastToken && lastToken.type === 'text') {\n              lastToken.raw += token.raw;\n              lastToken.text += token.text;\n            } else {\n              tokens.push(token);\n            }\n\n            continue;\n          }\n\n          if (src) {\n            var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n            if (this.options.silent) {\n              console.error(errMsg);\n              break;\n            } else {\n              throw new Error(errMsg);\n            }\n          }\n        }\n\n        return tokens;\n      };\n\n      _createClass(Lexer, null, [{\n        key: \"rules\",\n        get: function get() {\n          return {\n            block: block,\n            inline: inline\n          };\n        }\n      }]);\n\n      return Lexer;\n    }();\n    /**\n     * Renderer\n     */\n\n\n    var Renderer = /*#__PURE__*/function () {\n      function Renderer(options) {\n        this.options = options || exports.defaults;\n      }\n\n      var _proto = Renderer.prototype;\n\n      _proto.code = function code(_code, infostring, escaped) {\n        var lang = (infostring || '').match(/\\S*/)[0];\n\n        if (this.options.highlight) {\n          var out = this.options.highlight(_code, lang);\n\n          if (out != null && out !== _code) {\n            escaped = true;\n            _code = out;\n          }\n        }\n\n        _code = _code.replace(/\\n$/, '') + '\\n';\n\n        if (!lang) {\n          return '<pre><code>' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n        }\n\n        return '<pre><code class=\"' + this.options.langPrefix + escape(lang, true) + '\">' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n      };\n\n      _proto.blockquote = function blockquote(quote) {\n        return '<blockquote>\\n' + quote + '</blockquote>\\n';\n      };\n\n      _proto.html = function html(_html) {\n        return _html;\n      };\n\n      _proto.heading = function heading(text, level, raw, slugger) {\n        if (this.options.headerIds) {\n          return '<h' + level + ' id=\"' + this.options.headerPrefix + slugger.slug(raw) + '\">' + text + '</h' + level + '>\\n';\n        } // ignore IDs\n\n\n        return '<h' + level + '>' + text + '</h' + level + '>\\n';\n      };\n\n      _proto.hr = function hr() {\n        return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n      };\n\n      _proto.list = function list(body, ordered, start) {\n        var type = ordered ? 'ol' : 'ul',\n            startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n        return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n      };\n\n      _proto.listitem = function listitem(text) {\n        return '<li>' + text + '</li>\\n';\n      };\n\n      _proto.checkbox = function checkbox(checked) {\n        return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n      };\n\n      _proto.paragraph = function paragraph(text) {\n        return '<p>' + text + '</p>\\n';\n      };\n\n      _proto.table = function table(header, body) {\n        if (body) body = '<tbody>' + body + '</tbody>';\n        return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n      };\n\n      _proto.tablerow = function tablerow(content) {\n        return '<tr>\\n' + content + '</tr>\\n';\n      };\n\n      _proto.tablecell = function tablecell(content, flags) {\n        var type = flags.header ? 'th' : 'td';\n        var tag = flags.align ? '<' + type + ' align=\"' + flags.align + '\">' : '<' + type + '>';\n        return tag + content + '</' + type + '>\\n';\n      } // span level renderer\n      ;\n\n      _proto.strong = function strong(text) {\n        return '<strong>' + text + '</strong>';\n      };\n\n      _proto.em = function em(text) {\n        return '<em>' + text + '</em>';\n      };\n\n      _proto.codespan = function codespan(text) {\n        return '<code>' + text + '</code>';\n      };\n\n      _proto.br = function br() {\n        return this.options.xhtml ? '<br/>' : '<br>';\n      };\n\n      _proto.del = function del(text) {\n        return '<del>' + text + '</del>';\n      };\n\n      _proto.link = function link(href, title, text) {\n        href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n        if (href === null) {\n          return text;\n        }\n\n        var out = '<a href=\"' + escape(href) + '\"';\n\n        if (title) {\n          out += ' title=\"' + title + '\"';\n        }\n\n        out += '>' + text + '</a>';\n        return out;\n      };\n\n      _proto.image = function image(href, title, text) {\n        href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n        if (href === null) {\n          return text;\n        }\n\n        var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\n        if (title) {\n          out += ' title=\"' + title + '\"';\n        }\n\n        out += this.options.xhtml ? '/>' : '>';\n        return out;\n      };\n\n      _proto.text = function text(_text) {\n        return _text;\n      };\n\n      return Renderer;\n    }();\n    /**\n     * TextRenderer\n     * returns only the textual part of the token\n     */\n\n\n    var TextRenderer = /*#__PURE__*/function () {\n      function TextRenderer() {}\n\n      var _proto = TextRenderer.prototype; // no need for block level renderers\n\n      _proto.strong = function strong(text) {\n        return text;\n      };\n\n      _proto.em = function em(text) {\n        return text;\n      };\n\n      _proto.codespan = function codespan(text) {\n        return text;\n      };\n\n      _proto.del = function del(text) {\n        return text;\n      };\n\n      _proto.html = function html(text) {\n        return text;\n      };\n\n      _proto.text = function text(_text) {\n        return _text;\n      };\n\n      _proto.link = function link(href, title, text) {\n        return '' + text;\n      };\n\n      _proto.image = function image(href, title, text) {\n        return '' + text;\n      };\n\n      _proto.br = function br() {\n        return '';\n      };\n\n      return TextRenderer;\n    }();\n    /**\n     * Slugger generates header id\n     */\n\n\n    var Slugger = /*#__PURE__*/function () {\n      function Slugger() {\n        this.seen = {};\n      }\n\n      var _proto = Slugger.prototype;\n\n      _proto.serialize = function serialize(value) {\n        return value.toLowerCase().trim() // remove html tags\n        .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n        .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n      }\n      /**\n       * Finds the next safe (unique) slug to use\n       */\n      ;\n\n      _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n        var slug = originalSlug;\n        var occurenceAccumulator = 0;\n\n        if (this.seen.hasOwnProperty(slug)) {\n          occurenceAccumulator = this.seen[originalSlug];\n\n          do {\n            occurenceAccumulator++;\n            slug = originalSlug + '-' + occurenceAccumulator;\n          } while (this.seen.hasOwnProperty(slug));\n        }\n\n        if (!isDryRun) {\n          this.seen[originalSlug] = occurenceAccumulator;\n          this.seen[slug] = 0;\n        }\n\n        return slug;\n      }\n      /**\n       * Convert string to unique id\n       * @param {object} options\n       * @param {boolean} options.dryrun Generates the next unique slug without updating the internal accumulator.\n       */\n      ;\n\n      _proto.slug = function slug(value, options) {\n        if (options === void 0) {\n          options = {};\n        }\n\n        var slug = this.serialize(value);\n        return this.getNextSafeSlug(slug, options.dryrun);\n      };\n\n      return Slugger;\n    }();\n    /**\n     * Parsing & Compiling\n     */\n\n\n    var Parser = /*#__PURE__*/function () {\n      function Parser(options) {\n        this.options = options || exports.defaults;\n        this.options.renderer = this.options.renderer || new Renderer();\n        this.renderer = this.options.renderer;\n        this.renderer.options = this.options;\n        this.textRenderer = new TextRenderer();\n        this.slugger = new Slugger();\n      }\n      /**\n       * Static Parse Method\n       */\n\n\n      Parser.parse = function parse(tokens, options) {\n        var parser = new Parser(options);\n        return parser.parse(tokens);\n      }\n      /**\n       * Static Parse Inline Method\n       */\n      ;\n\n      Parser.parseInline = function parseInline(tokens, options) {\n        var parser = new Parser(options);\n        return parser.parseInline(tokens);\n      }\n      /**\n       * Parse Loop\n       */\n      ;\n\n      var _proto = Parser.prototype;\n\n      _proto.parse = function parse(tokens, top) {\n        if (top === void 0) {\n          top = true;\n        }\n\n        var out = '',\n            i,\n            j,\n            k,\n            l2,\n            l3,\n            row,\n            cell,\n            header,\n            body,\n            token,\n            ordered,\n            start,\n            loose,\n            itemBody,\n            item,\n            checked,\n            task,\n            checkbox,\n            ret;\n        var l = tokens.length;\n\n        for (i = 0; i < l; i++) {\n          token = tokens[i]; // Run any renderer extensions\n\n          if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n            ret = this.options.extensions.renderers[token.type].call({\n              parser: this\n            }, token);\n\n            if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n              out += ret || '';\n              continue;\n            }\n          }\n\n          switch (token.type) {\n            case 'space':\n              {\n                continue;\n              }\n\n            case 'hr':\n              {\n                out += this.renderer.hr();\n                continue;\n              }\n\n            case 'heading':\n              {\n                out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n                continue;\n              }\n\n            case 'code':\n              {\n                out += this.renderer.code(token.text, token.lang, token.escaped);\n                continue;\n              }\n\n            case 'table':\n              {\n                header = ''; // header\n\n                cell = '';\n                l2 = token.header.length;\n\n                for (j = 0; j < l2; j++) {\n                  cell += this.renderer.tablecell(this.parseInline(token.header[j].tokens), {\n                    header: true,\n                    align: token.align[j]\n                  });\n                }\n\n                header += this.renderer.tablerow(cell);\n                body = '';\n                l2 = token.rows.length;\n\n                for (j = 0; j < l2; j++) {\n                  row = token.rows[j];\n                  cell = '';\n                  l3 = row.length;\n\n                  for (k = 0; k < l3; k++) {\n                    cell += this.renderer.tablecell(this.parseInline(row[k].tokens), {\n                      header: false,\n                      align: token.align[k]\n                    });\n                  }\n\n                  body += this.renderer.tablerow(cell);\n                }\n\n                out += this.renderer.table(header, body);\n                continue;\n              }\n\n            case 'blockquote':\n              {\n                body = this.parse(token.tokens);\n                out += this.renderer.blockquote(body);\n                continue;\n              }\n\n            case 'list':\n              {\n                ordered = token.ordered;\n                start = token.start;\n                loose = token.loose;\n                l2 = token.items.length;\n                body = '';\n\n                for (j = 0; j < l2; j++) {\n                  item = token.items[j];\n                  checked = item.checked;\n                  task = item.task;\n                  itemBody = '';\n\n                  if (item.task) {\n                    checkbox = this.renderer.checkbox(checked);\n\n                    if (loose) {\n                      if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                        item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n\n                        if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                          item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                        }\n                      } else {\n                        item.tokens.unshift({\n                          type: 'text',\n                          text: checkbox\n                        });\n                      }\n                    } else {\n                      itemBody += checkbox;\n                    }\n                  }\n\n                  itemBody += this.parse(item.tokens, loose);\n                  body += this.renderer.listitem(itemBody, task, checked);\n                }\n\n                out += this.renderer.list(body, ordered, start);\n                continue;\n              }\n\n            case 'html':\n              {\n                // TODO parse inline content if parameter markdown=1\n                out += this.renderer.html(token.text);\n                continue;\n              }\n\n            case 'paragraph':\n              {\n                out += this.renderer.paragraph(this.parseInline(token.tokens));\n                continue;\n              }\n\n            case 'text':\n              {\n                body = token.tokens ? this.parseInline(token.tokens) : token.text;\n\n                while (i + 1 < l && tokens[i + 1].type === 'text') {\n                  token = tokens[++i];\n                  body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n                }\n\n                out += top ? this.renderer.paragraph(body) : body;\n                continue;\n              }\n\n            default:\n              {\n                var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n                if (this.options.silent) {\n                  console.error(errMsg);\n                  return;\n                } else {\n                  throw new Error(errMsg);\n                }\n              }\n          }\n        }\n\n        return out;\n      }\n      /**\n       * Parse Inline Tokens\n       */\n      ;\n\n      _proto.parseInline = function parseInline(tokens, renderer) {\n        renderer = renderer || this.renderer;\n        var out = '',\n            i,\n            token,\n            ret;\n        var l = tokens.length;\n\n        for (i = 0; i < l; i++) {\n          token = tokens[i]; // Run any renderer extensions\n\n          if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n            ret = this.options.extensions.renderers[token.type].call({\n              parser: this\n            }, token);\n\n            if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n              out += ret || '';\n              continue;\n            }\n          }\n\n          switch (token.type) {\n            case 'escape':\n              {\n                out += renderer.text(token.text);\n                break;\n              }\n\n            case 'html':\n              {\n                out += renderer.html(token.text);\n                break;\n              }\n\n            case 'link':\n              {\n                out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n                break;\n              }\n\n            case 'image':\n              {\n                out += renderer.image(token.href, token.title, token.text);\n                break;\n              }\n\n            case 'strong':\n              {\n                out += renderer.strong(this.parseInline(token.tokens, renderer));\n                break;\n              }\n\n            case 'em':\n              {\n                out += renderer.em(this.parseInline(token.tokens, renderer));\n                break;\n              }\n\n            case 'codespan':\n              {\n                out += renderer.codespan(token.text);\n                break;\n              }\n\n            case 'br':\n              {\n                out += renderer.br();\n                break;\n              }\n\n            case 'del':\n              {\n                out += renderer.del(this.parseInline(token.tokens, renderer));\n                break;\n              }\n\n            case 'text':\n              {\n                out += renderer.text(token.text);\n                break;\n              }\n\n            default:\n              {\n                var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n                if (this.options.silent) {\n                  console.error(errMsg);\n                  return;\n                } else {\n                  throw new Error(errMsg);\n                }\n              }\n          }\n        }\n\n        return out;\n      };\n\n      return Parser;\n    }();\n    /**\n     * Marked\n     */\n\n\n    function marked(src, opt, callback) {\n      // throw error in case of non string input\n      if (typeof src === 'undefined' || src === null) {\n        throw new Error('marked(): input parameter is undefined or null');\n      }\n\n      if (typeof src !== 'string') {\n        throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n      }\n\n      if (typeof opt === 'function') {\n        callback = opt;\n        opt = null;\n      }\n\n      opt = merge({}, marked.defaults, opt || {});\n      checkSanitizeDeprecation(opt);\n\n      if (callback) {\n        var highlight = opt.highlight;\n        var tokens;\n\n        try {\n          tokens = Lexer.lex(src, opt);\n        } catch (e) {\n          return callback(e);\n        }\n\n        var done = function done(err) {\n          var out;\n\n          if (!err) {\n            try {\n              if (opt.walkTokens) {\n                marked.walkTokens(tokens, opt.walkTokens);\n              }\n\n              out = Parser.parse(tokens, opt);\n            } catch (e) {\n              err = e;\n            }\n          }\n\n          opt.highlight = highlight;\n          return err ? callback(err) : callback(null, out);\n        };\n\n        if (!highlight || highlight.length < 3) {\n          return done();\n        }\n\n        delete opt.highlight;\n        if (!tokens.length) return done();\n        var pending = 0;\n        marked.walkTokens(tokens, function (token) {\n          if (token.type === 'code') {\n            pending++;\n            setTimeout(function () {\n              highlight(token.text, token.lang, function (err, code) {\n                if (err) {\n                  return done(err);\n                }\n\n                if (code != null && code !== token.text) {\n                  token.text = code;\n                  token.escaped = true;\n                }\n\n                pending--;\n\n                if (pending === 0) {\n                  done();\n                }\n              });\n            }, 0);\n          }\n        });\n\n        if (pending === 0) {\n          done();\n        }\n\n        return;\n      }\n\n      try {\n        var _tokens = Lexer.lex(src, opt);\n\n        if (opt.walkTokens) {\n          marked.walkTokens(_tokens, opt.walkTokens);\n        }\n\n        return Parser.parse(_tokens, opt);\n      } catch (e) {\n        e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n        if (opt.silent) {\n          return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n        }\n\n        throw e;\n      }\n    }\n    /**\n     * Options\n     */\n\n\n    marked.options = marked.setOptions = function (opt) {\n      merge(marked.defaults, opt);\n      changeDefaults(marked.defaults);\n      return marked;\n    };\n\n    marked.getDefaults = getDefaults;\n    marked.defaults = exports.defaults;\n    /**\n     * Use Extension\n     */\n\n    marked.use = function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var opts = merge.apply(void 0, [{}].concat(args));\n      var extensions = marked.defaults.extensions || {\n        renderers: {},\n        childTokens: {}\n      };\n      var hasExtensions;\n      args.forEach(function (pack) {\n        // ==-- Parse \"addon\" extensions --== //\n        if (pack.extensions) {\n          hasExtensions = true;\n          pack.extensions.forEach(function (ext) {\n            if (!ext.name) {\n              throw new Error('extension name required');\n            }\n\n            if (ext.renderer) {\n              // Renderer extensions\n              var prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;\n\n              if (prevRenderer) {\n                // Replace extension with func to run new extension but fall back if false\n                extensions.renderers[ext.name] = function () {\n                  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                    args[_key2] = arguments[_key2];\n                  }\n\n                  var ret = ext.renderer.apply(this, args);\n\n                  if (ret === false) {\n                    ret = prevRenderer.apply(this, args);\n                  }\n\n                  return ret;\n                };\n              } else {\n                extensions.renderers[ext.name] = ext.renderer;\n              }\n            }\n\n            if (ext.tokenizer) {\n              // Tokenizer Extensions\n              if (!ext.level || ext.level !== 'block' && ext.level !== 'inline') {\n                throw new Error(\"extension level must be 'block' or 'inline'\");\n              }\n\n              if (extensions[ext.level]) {\n                extensions[ext.level].unshift(ext.tokenizer);\n              } else {\n                extensions[ext.level] = [ext.tokenizer];\n              }\n\n              if (ext.start) {\n                // Function to check for start of token\n                if (ext.level === 'block') {\n                  if (extensions.startBlock) {\n                    extensions.startBlock.push(ext.start);\n                  } else {\n                    extensions.startBlock = [ext.start];\n                  }\n                } else if (ext.level === 'inline') {\n                  if (extensions.startInline) {\n                    extensions.startInline.push(ext.start);\n                  } else {\n                    extensions.startInline = [ext.start];\n                  }\n                }\n              }\n            }\n\n            if (ext.childTokens) {\n              // Child tokens to be visited by walkTokens\n              extensions.childTokens[ext.name] = ext.childTokens;\n            }\n          });\n        } // ==-- Parse \"overwrite\" extensions --== //\n\n\n        if (pack.renderer) {\n          (function () {\n            var renderer = marked.defaults.renderer || new Renderer();\n\n            var _loop = function _loop(prop) {\n              var prevRenderer = renderer[prop]; // Replace renderer with func to run extension, but fall back if false\n\n              renderer[prop] = function () {\n                for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                  args[_key3] = arguments[_key3];\n                }\n\n                var ret = pack.renderer[prop].apply(renderer, args);\n\n                if (ret === false) {\n                  ret = prevRenderer.apply(renderer, args);\n                }\n\n                return ret;\n              };\n            };\n\n            for (var prop in pack.renderer) {\n              _loop(prop);\n            }\n\n            opts.renderer = renderer;\n          })();\n        }\n\n        if (pack.tokenizer) {\n          (function () {\n            var tokenizer = marked.defaults.tokenizer || new Tokenizer();\n\n            var _loop2 = function _loop2(prop) {\n              var prevTokenizer = tokenizer[prop]; // Replace tokenizer with func to run extension, but fall back if false\n\n              tokenizer[prop] = function () {\n                for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n                  args[_key4] = arguments[_key4];\n                }\n\n                var ret = pack.tokenizer[prop].apply(tokenizer, args);\n\n                if (ret === false) {\n                  ret = prevTokenizer.apply(tokenizer, args);\n                }\n\n                return ret;\n              };\n            };\n\n            for (var prop in pack.tokenizer) {\n              _loop2(prop);\n            }\n\n            opts.tokenizer = tokenizer;\n          })();\n        } // ==-- Parse WalkTokens extensions --== //\n\n\n        if (pack.walkTokens) {\n          var _walkTokens = marked.defaults.walkTokens;\n\n          opts.walkTokens = function (token) {\n            pack.walkTokens.call(this, token);\n\n            if (_walkTokens) {\n              _walkTokens.call(this, token);\n            }\n          };\n        }\n\n        if (hasExtensions) {\n          opts.extensions = extensions;\n        }\n\n        marked.setOptions(opts);\n      });\n    };\n    /**\n     * Run callback for every token\n     */\n\n\n    marked.walkTokens = function (tokens, callback) {\n      var _loop3 = function _loop3() {\n        var token = _step.value;\n        callback.call(marked, token);\n\n        switch (token.type) {\n          case 'table':\n            {\n              for (var _iterator2 = _createForOfIteratorHelperLoose(token.header), _step2; !(_step2 = _iterator2()).done;) {\n                var cell = _step2.value;\n                marked.walkTokens(cell.tokens, callback);\n              }\n\n              for (var _iterator3 = _createForOfIteratorHelperLoose(token.rows), _step3; !(_step3 = _iterator3()).done;) {\n                var row = _step3.value;\n\n                for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                  var _cell = _step4.value;\n                  marked.walkTokens(_cell.tokens, callback);\n                }\n              }\n\n              break;\n            }\n\n          case 'list':\n            {\n              marked.walkTokens(token.items, callback);\n              break;\n            }\n\n          default:\n            {\n              if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) {\n                // Walk any extensions\n                marked.defaults.extensions.childTokens[token.type].forEach(function (childTokens) {\n                  marked.walkTokens(token[childTokens], callback);\n                });\n              } else if (token.tokens) {\n                marked.walkTokens(token.tokens, callback);\n              }\n            }\n        }\n      };\n\n      for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n        _loop3();\n      }\n    };\n    /**\n     * Parse Inline\n     */\n\n\n    marked.parseInline = function (src, opt) {\n      // throw error in case of non string input\n      if (typeof src === 'undefined' || src === null) {\n        throw new Error('marked.parseInline(): input parameter is undefined or null');\n      }\n\n      if (typeof src !== 'string') {\n        throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n      }\n\n      opt = merge({}, marked.defaults, opt || {});\n      checkSanitizeDeprecation(opt);\n\n      try {\n        var tokens = Lexer.lexInline(src, opt);\n\n        if (opt.walkTokens) {\n          marked.walkTokens(tokens, opt.walkTokens);\n        }\n\n        return Parser.parseInline(tokens, opt);\n      } catch (e) {\n        e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n        if (opt.silent) {\n          return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n        }\n\n        throw e;\n      }\n    };\n    /**\n     * Expose\n     */\n\n\n    marked.Parser = Parser;\n    marked.parser = Parser.parse;\n    marked.Renderer = Renderer;\n    marked.TextRenderer = TextRenderer;\n    marked.Lexer = Lexer;\n    marked.lexer = Lexer.lex;\n    marked.Tokenizer = Tokenizer;\n    marked.Slugger = Slugger;\n    marked.parse = marked;\n    var options = marked.options;\n    var setOptions = marked.setOptions;\n    var use = marked.use;\n    var walkTokens = marked.walkTokens;\n    var parseInline = marked.parseInline;\n    var parse = marked;\n    var parser = Parser.parse;\n    var lexer = Lexer.lex;\n    exports.Lexer = Lexer;\n    exports.Parser = Parser;\n    exports.Renderer = Renderer;\n    exports.Slugger = Slugger;\n    exports.TextRenderer = TextRenderer;\n    exports.Tokenizer = Tokenizer;\n    exports.getDefaults = getDefaults;\n    exports.lexer = lexer;\n    exports.marked = marked;\n    exports.options = options;\n    exports.parse = parse;\n    exports.parseInline = parseInline;\n    exports.parser = parser;\n    exports.setOptions = setOptions;\n    exports.use = use;\n    exports.walkTokens = walkTokens;\n    Object.defineProperty(exports, '__esModule', {\n      value: true\n    });\n  }); // ESM-uncomment-begin\n\n})();\n\nexport var marked = __marked_exports || exports; // ESM-uncomment-end","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/base/common/marked/marked.js"],"names":["__marked_exports","define","deps","factory","amd","global","exports","module","globalThis","self","marked","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","_unsupportedIterableToArray","o","minLen","_arrayLikeToArray","n","toString","call","slice","constructor","name","Array","from","test","arr","len","arr2","_createForOfIteratorHelperLoose","allowArrayLike","it","Symbol","iterator","next","bind","isArray","done","value","TypeError","getDefaults","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartLists","smartypants","tokenizer","walkTokens","xhtml","defaults","changeDefaults","newDefaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape","html","encode","replace","unescapeTest","unescape","_","toLowerCase","charAt","String","fromCharCode","parseInt","substring","caret","edit","regex","opt","source","obj","val","getRegex","RegExp","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","href","prot","decodeURIComponent","e","indexOf","resolveUrl","encodeURI","baseUrls","justDomain","protocol","domain","rtrim","relativeBase","noopTest","exec","merge","arguments","hasOwnProperty","splitCells","tableRow","count","row","match","offset","str","escaped","curr","cells","split","trim","shift","pop","splice","push","c","invert","l","suffLen","currChar","substr","findClosingBracket","b","level","checkSanitizeDeprecation","console","warn","repeatString","pattern","result","outputLink","cap","link","raw","lexer","title","text","state","inLink","token","type","tokens","inlineTokens","indentCodeCompensation","matchIndentToCode","indentToCode","map","node","matchIndentInNode","indentInNode","join","Tokenizer","options","_proto","space","src","rules","block","newline","code","codeBlockStyle","fences","lang","heading","trimmed","depth","inline","hr","blockquote","blockTokens","list","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","start","loose","items","itemRegex","trimLeft","search","nextBulletRegex","Math","min","task","checked","trimRight","top","spacers","filter","t","hasMultipleLineBreaks","every","chars","lineBreaks","_iterator","_step","_char","pre","def","tag","table","item","header","align","rows","j","k","lheading","paragraph","escape$1","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","_escapes","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","_text","index","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","url","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","out","charCodeAt","random","Lexer","create","inlineQueue","lex","lexInline","_this","lastToken","cutSrc","lastParagraphClipped","some","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","forEach","getStartIndex","errMsg","error","Error","_this2","keepPrevChar","keys","includes","lastIndexOf","startInline","get","Renderer","_code","infostring","quote","_html","slugger","slug","body","startatt","listitem","checkbox","tablerow","content","tablecell","flags","image","TextRenderer","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","Parser","textRenderer","parse","parser","parseInline","l2","l3","cell","itemBody","ret","renderers","unshift","callback","err","pending","setTimeout","_tokens","message","setOptions","use","_len","args","_key","opts","apply","concat","childTokens","hasExtensions","pack","ext","prevRenderer","_len2","_key2","_loop","prop","_len3","_key3","_loop2","prevTokenizer","_len4","_key4","_walkTokens","_loop3","_iterator2","_step2","_iterator3","_step3","_iterator4","_step4","_cell"],"mappings":"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","sourcesContent":["/**\n * marked - a markdown parser\n * Copyright (c) 2011-2022, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n// ESM-uncomment-begin\nlet __marked_exports = {};\n(function() {\n  function define(deps, factory) {\n    factory(__marked_exports);\n  }\n  define.amd = true;\n// ESM-uncomment-end\n\n (function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.marked = {}));\n})(this, (function (exports) { 'use strict';\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n      writable: false\n    });\n    return Constructor;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n    if (it) return (it = it.call(o)).next.bind(it);\n\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  function getDefaults() {\n    return {\n      baseUrl: null,\n      breaks: false,\n      extensions: null,\n      gfm: true,\n      headerIds: true,\n      headerPrefix: '',\n      highlight: null,\n      langPrefix: 'language-',\n      mangle: true,\n      pedantic: false,\n      renderer: null,\n      sanitize: false,\n      sanitizer: null,\n      silent: false,\n      smartLists: false,\n      smartypants: false,\n      tokenizer: null,\n      walkTokens: null,\n      xhtml: false\n    };\n  }\n  exports.defaults = getDefaults();\n  function changeDefaults(newDefaults) {\n    exports.defaults = newDefaults;\n  }\n\n  /**\n   * Helpers\n   */\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n\n  function escape(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n\n    return html;\n  }\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n  var caret = /(^|[^\\[])\\^/g;\n  function edit(regex, opt) {\n    regex = regex.source || regex;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n  function cleanUrl(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n\n      try {\n        prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n  var noopTest = {\n    exec: function noopTest() {}\n  };\n  function merge(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n  function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n          curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n        cells = row.split(/ \\|/);\n    var i = 0; // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n\n    if (!cells[0].trim()) {\n      cells.shift();\n    }\n\n    if (!cells[cells.length - 1].trim()) {\n      cells.pop();\n    }\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  } // Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n  // /c*$/ is vulnerable to REDOS.\n  // invert: Remove suffix of non-c chars instead. Default falsey.\n\n  function rtrim(str, c, invert) {\n    var l = str.length;\n\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.substr(0, l - suffLen);\n  }\n  function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var l = str.length;\n    var level = 0,\n        i = 0;\n\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n  function checkSanitizeDeprecation(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  } // copied from https://stackoverflow.com/a/5450113/806777\n\n  function repeatString(pattern, count) {\n    if (count < 1) {\n      return '';\n    }\n\n    var result = '';\n\n    while (count > 1) {\n      if (count & 1) {\n        result += pattern;\n      }\n\n      count >>= 1;\n      pattern += pattern;\n    }\n\n    return result + pattern;\n  }\n\n  function outputLink(cap, link, raw, lexer) {\n    var href = link.href;\n    var title = link.title ? escape(link.title) : null;\n    var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n    if (cap[0].charAt(0) !== '!') {\n      lexer.state.inLink = true;\n      var token = {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: text,\n        tokens: lexer.inlineTokens(text, [])\n      };\n      lexer.state.inLink = false;\n      return token;\n    } else {\n      return {\n        type: 'image',\n        raw: raw,\n        href: href,\n        title: title,\n        text: escape(text)\n      };\n    }\n  }\n\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n    if (matchIndentToCode === null) {\n      return text;\n    }\n\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      var indentInNode = matchIndentInNode[0];\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    }).join('\\n');\n  }\n  /**\n   * Tokenizer\n   */\n\n\n  var Tokenizer = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || exports.defaults;\n    }\n\n    var _proto = Tokenizer.prototype;\n\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n\n      if (cap && cap[0].length > 0) {\n          return {\n            type: 'space',\n            raw: cap[0]\n          };\n        }\n    };\n\n    _proto.code = function code(src) {\n      var cap = this.rules.block.code.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ {1,4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim(text, '\\n') : text\n        };\n      }\n    };\n\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: text\n        };\n      }\n    };\n\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n\n      if (cap) {\n        var text = cap[2].trim(); // remove trailing #s\n\n        if (/#$/.test(text)) {\n          var trimmed = rtrim(text, '#');\n\n          if (this.options.pedantic) {\n            text = trimmed.trim();\n          } else if (!trimmed || / $/.test(trimmed)) {\n            // CommonMark requires space before trailing #s\n            text = trimmed.trim();\n          }\n        }\n\n        var token = {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: text,\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ *> ?/gm, '');\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          tokens: this.lexer.blockTokens(text, []),\n          text: text\n        };\n      }\n    };\n\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n\n      if (cap) {\n        var raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine, line, nextLine, rawLine, itemContents, endEarly;\n        var bull = cap[1].trim();\n        var isordered = bull.length > 1;\n        var list = {\n          type: 'list',\n          raw: '',\n          ordered: isordered,\n          start: isordered ? +bull.slice(0, -1) : '',\n          loose: false,\n          items: []\n        };\n        bull = isordered ? \"\\\\d{1,9}\\\\\" + bull.slice(-1) : \"\\\\\" + bull;\n\n        if (this.options.pedantic) {\n          bull = isordered ? bull : '[*+-]';\n        } // Get next list item\n\n\n        var itemRegex = new RegExp(\"^( {0,3}\" + bull + \")((?: [^\\\\n]*)?(?:\\\\n|$))\"); // Check if current bullet point can start a new List Item\n\n        while (src) {\n          endEarly = false;\n\n          if (!(cap = itemRegex.exec(src))) {\n            break;\n          }\n\n          if (this.rules.block.hr.test(src)) {\n            // End list if bullet was actually HR (possibly move into itemRegex?)\n            break;\n          }\n\n          raw = cap[0];\n          src = src.substring(raw.length);\n          line = cap[2].split('\\n', 1)[0];\n          nextLine = src.split('\\n', 1)[0];\n\n          if (this.options.pedantic) {\n            indent = 2;\n            itemContents = line.trimLeft();\n          } else {\n            indent = cap[2].search(/[^ ]/); // Find first non-space char\n\n            indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n\n            itemContents = line.slice(indent);\n            indent += cap[1].length;\n          }\n\n          blankLine = false;\n\n          if (!line && /^ *$/.test(nextLine)) {\n            // Items begin with at most one blank line\n            raw += nextLine + '\\n';\n            src = src.substring(nextLine.length + 1);\n            endEarly = true;\n          }\n\n          if (!endEarly) {\n            var nextBulletRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}(?:[*+-]|\\\\d{1,9}[.)])\"); // Check if following lines should be included in List Item\n\n            while (src) {\n              rawLine = src.split('\\n', 1)[0];\n              line = rawLine; // Re-align to follow commonmark nesting rules\n\n            if (this.options.pedantic) {\n              line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            } // End list item if found start of new bullet\n\n\n            if (nextBulletRegex.test(line)) {\n              break;\n              }\n\n            if (line.search(/[^ ]/) >= indent || !line.trim()) {\n                // Dedent if possible\n              itemContents += '\\n' + line.slice(indent);\n              } else if (!blankLine) {\n                // Until blank line, item doesn't need indentation\n                itemContents += '\\n' + line;\n            } else {\n                // Otherwise, improper indentation ends this item\n              break;\n            }\n\n              if (!blankLine && !line.trim()) {\n                // Check if current line is blank\n                blankLine = true;\n              }\n\n              raw += rawLine + '\\n';\n              src = src.substring(rawLine.length + 1);\n            }\n          }\n\n          if (!list.loose) {\n            // If the previous item ended with a blank line, the list is loose\n            if (endsWithBlankLine) {\n              list.loose = true;\n            } else if (/\\n *\\n *$/.test(raw)) {\n              endsWithBlankLine = true;\n            }\n          } // Check for task list items\n\n\n          if (this.options.gfm) {\n            istask = /^\\[[ xX]\\] /.exec(itemContents);\n\n            if (istask) {\n              ischecked = istask[0] !== '[ ] ';\n              itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n            }\n          }\n\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: !!istask,\n            checked: ischecked,\n            loose: false,\n            text: itemContents\n          });\n          list.raw += raw;\n        } // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n\n\n        list.items[list.items.length - 1].raw = raw.trimRight();\n        list.items[list.items.length - 1].text = itemContents.trimRight();\n        list.raw = list.raw.trimRight();\n        var l = list.items.length; // Item child tokens handled here at end because we needed to have the final item to trim it first\n\n        for (i = 0; i < l; i++) {\n          this.lexer.state.top = false;\n          list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n          var spacers = list.items[i].tokens.filter(function (t) {\n            return t.type === 'space';\n          });\n          var hasMultipleLineBreaks = spacers.every(function (t) {\n            var chars = t.raw.split('');\n            var lineBreaks = 0;\n\n            for (var _iterator = _createForOfIteratorHelperLoose(chars), _step; !(_step = _iterator()).done;) {\n              var _char = _step.value;\n\n              if (_char === '\\n') {\n                lineBreaks += 1;\n              }\n\n              if (lineBreaks > 1) {\n                return true;\n              }\n            }\n\n            return false;\n          });\n\n          if (!list.loose && spacers.length && hasMultipleLineBreaks) {\n            // Having a single line break doesn't mean a list is loose. A single line break is terminating the last list item\n            list.loose = true;\n            list.items[i].loose = true;\n          }\n        }\n\n        return list;\n      }\n    };\n\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'html',\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: cap[0]\n        };\n\n        if (this.options.sanitize) {\n          token.type = 'paragraph';\n          token.text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n          token.tokens = [];\n          this.lexer.inline(token.text, token.tokens);\n        }\n\n        return token;\n      }\n    };\n\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n\n      if (cap) {\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        return {\n          type: 'def',\n          tag: tag,\n          raw: cap[0],\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n    };\n\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells(cap[1]).map(function (c) {\n            return {\n              text: c\n            };\n          }),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          rows: cap[3] ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i, j, k, row;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.rows.length;\n\n          for (i = 0; i < l; i++) {\n            item.rows[i] = splitCells(item.rows[i], item.header.length).map(function (c) {\n              return {\n                text: c\n              };\n            });\n          } // parse child tokens inside headers and cells\n          // header child tokens\n\n\n          l = item.header.length;\n\n          for (j = 0; j < l; j++) {\n            item.header[j].tokens = [];\n            this.lexer.inlineTokens(item.header[j].text, item.header[j].tokens);\n          } // cell child tokens\n\n\n          l = item.rows.length;\n\n          for (j = 0; j < l; j++) {\n            row = item.rows[j];\n\n            for (k = 0; k < row.length; k++) {\n              row[k].tokens = [];\n              this.lexer.inlineTokens(row[k].text, row[k].tokens);\n            }\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'paragraph',\n          raw: cap[0],\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.text = function text(src) {\n      var cap = this.rules.block.text.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.escape = function escape$1(src) {\n      var cap = this.rules.inline.escape.exec(src);\n\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: escape(cap[1])\n        };\n      }\n    };\n\n    _proto.tag = function tag(src) {\n      var cap = this.rules.inline.tag.exec(src);\n\n      if (cap) {\n        if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n          this.lexer.state.inLink = true;\n        } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.lexer.state.inLink = false;\n        }\n\n        if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = true;\n        } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = false;\n        }\n\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: this.lexer.state.inLink,\n          inRawBlock: this.lexer.state.inRawBlock,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n\n      if (cap) {\n        var trimmedUrl = cap[2].trim();\n\n        if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n          // commonmark requires matching angle brackets\n          if (!/>$/.test(trimmedUrl)) {\n            return;\n          } // ending angle bracket cannot be escaped\n\n\n          var rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n\n          if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n            return;\n          }\n        } else {\n          // find closing parenthesis\n          var lastParenIndex = findClosingBracket(cap[2], '()');\n\n          if (lastParenIndex > -1) {\n            var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n            var linkLen = start + cap[1].length + lastParenIndex;\n            cap[2] = cap[2].substring(0, lastParenIndex);\n            cap[0] = cap[0].substring(0, linkLen).trim();\n            cap[3] = '';\n          }\n        }\n\n        var href = cap[2];\n        var title = '';\n\n        if (this.options.pedantic) {\n          // split pedantic href and title\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n\n        href = href.trim();\n\n        if (/^</.test(href)) {\n          if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\n            // pedantic allows starting angle bracket without ending angle bracket\n            href = href.slice(1);\n          } else {\n            href = href.slice(1, -1);\n          }\n        }\n\n        return outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0], this.lexer);\n      }\n    };\n\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n\n        return outputLink(cap, link, cap[0], this.lexer);\n      }\n    };\n\n    _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n\n      var match = this.rules.inline.emStrong.lDelim.exec(src);\n      if (!match) return; // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n\n      if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDF70-\\uDF81\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC71\\uDC72\\uDC75\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B\\uDF40-\\uDF46]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEB0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|\\uD80B[\\uDF90-\\uDFF0]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDE70-\\uDEBE\\uDEC0-\\uDEC9\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD82C[\\uDC00-\\uDD22\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD837[\\uDF00-\\uDF1E]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDE90-\\uDEAD\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD839[\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF38\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/)) return;\n      var nextChar = match[1] || match[2] || '';\n\n      if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {\n        var lLength = match[0].length - 1;\n        var rDelim,\n            rLength,\n            delimTotal = lLength,\n            midDelimTotal = 0;\n        var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n        endReg.lastIndex = 0; // Clip maskedSrc to same section of string as src (move to lexer?)\n\n        maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n          if (!rDelim) continue; // skip single * in __abc*abc__\n\n          rLength = rDelim.length;\n\n          if (match[3] || match[4]) {\n            // found another Left Delim\n            delimTotal += rLength;\n            continue;\n          } else if (match[5] || match[6]) {\n            // either Left or Right Delim\n            if (lLength % 3 && !((lLength + rLength) % 3)) {\n              midDelimTotal += rLength;\n              continue; // CommonMark Emphasis Rules 9-10\n            }\n          }\n\n          delimTotal -= rLength;\n          if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n          // Remove extra characters. *a*** -> *a*\n\n          rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal); // Create `em` if smallest delimiter has odd char count. *a***\n\n          if (Math.min(lLength, rLength) % 2) {\n            var _text = src.slice(1, lLength + match.index + rLength);\n\n            return {\n              type: 'em',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: _text,\n              tokens: this.lexer.inlineTokens(_text, [])\n            };\n          } // Create 'strong' if smallest delimiter has even char count. **a***\n\n\n          var text = src.slice(2, lLength + match.index + rLength - 1);\n          return {\n            type: 'strong',\n            raw: src.slice(0, lLength + match.index + rLength + 1),\n            text: text,\n            tokens: this.lexer.inlineTokens(text, [])\n          };\n        }\n      }\n    };\n\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n\n        text = escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[2],\n          tokens: this.lexer.inlineTokens(cap[2], [])\n        };\n      }\n    };\n\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n\n      if (cap) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = escape(cap[1]);\n          href = text;\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.url = function url(src, mangle) {\n      var cap;\n\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n\n          text = escape(cap[0]);\n\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.inlineText = function inlineText(src, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n\n      if (cap) {\n        var text;\n\n        if (this.lexer.state.inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0];\n        } else {\n          text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    return Tokenizer;\n  }();\n\n  /**\n   * Block-Level Grammar\n   */\n\n  var block = {\n    newline: /^(?: *(?:\\n|$))+/,\n    code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n    hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3}bull)( [^\\n]+?)?(?:\\n|$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?<?([^\\s>]+)>?(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n    table: noopTest,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\n  block._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block.def = edit(block.def).replace('label', block._label).replace('title', block._title).getRegex();\n  block.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n  block.listItemStart = edit(/^( *)(bull) */).replace('bull', block.bullet).getRegex();\n  block.list = edit(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\n  block._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n  block.html = edit(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '').replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block.blockquote = edit(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = merge({}, block);\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = merge({}, block.normal, {\n    table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n\n  });\n  block.gfm.table = edit(block.gfm.table).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  block.gfm.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block.pedantic = merge({}, block.normal, {\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest,\n    // fences not supported\n    paragraph: edit(block.normal._paragraph).replace('hr', block.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n    nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    emStrong: {\n      lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n      //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n      //        () Skip orphan delim inside strong    (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n      rDelimAst: /^[^_*]*?\\_\\_[^_*]*?\\*[^_*]*?(?=\\_\\_)|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n      rDelimUnd: /^[^_*]*?\\*\\*[^_*]*?\\_[^_*]*?(?=\\*\\*)|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n\n    },\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^([\\spunctuation])/\n  }; // list of punctuation marks from CommonMark spec\n  // without * and _ to handle the different emphasis markers * and _\n\n  inline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\n  inline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>\n\n  inline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n  inline.escapedEmSt = /\\\\\\*|\\\\_/g;\n  inline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n  inline.emStrong.lDelim = edit(inline.emStrong.lDelim).replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline.autolink = edit(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\n  inline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline.tag = edit(inline.tag).replace('comment', inline._comment).replace('attribute', inline._attribute).getRegex();\n  inline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\n  inline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline.link = edit(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();\n  inline.reflink = edit(inline.reflink).replace('label', inline._label).replace('ref', block._label).getRegex();\n  inline.nolink = edit(inline.nolink).replace('ref', block._label).getRegex();\n  inline.reflinkSearch = edit(inline.reflinkSearch, 'g').replace('reflink', inline.reflink).replace('nolink', inline.nolink).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = merge({}, inline);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = merge({}, inline.normal, {\n    strong: {\n      start: /^__|\\*\\*/,\n      middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n      endAst: /\\*\\*(?!\\*)/g,\n      endUnd: /__(?!_)/g\n    },\n    em: {\n      start: /^_|\\*/,\n      middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n      endAst: /\\*(?!\\*)/g,\n      endUnd: /_(?!_)/g\n    },\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline._label).getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = merge({}, inline.normal, {\n    escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n  });\n  inline.gfm.url = edit(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = merge({}, inline.gfm, {\n    br: edit(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit(inline.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n\n  /**\n   * smartypants text replacement\n   */\n\n  function smartypants(text) {\n    return text // em-dashes\n    .replace(/---/g, \"\\u2014\") // en-dashes\n    .replace(/--/g, \"\\u2013\") // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\") // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n    .replace(/\"/g, \"\\u201D\") // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  }\n  /**\n   * mangle email addresses\n   */\n\n\n  function mangle(text) {\n    var out = '',\n        i,\n        ch;\n    var l = text.length;\n\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n  /**\n   * Block Lexer\n   */\n\n\n  var Lexer = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || exports.defaults;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      this.tokenizer.lexer = this;\n      this.inlineQueue = [];\n      this.state = {\n        inLink: false,\n        inRawBlock: false,\n        top: true\n      };\n      var rules = {\n        block: block.normal,\n        inline: inline.normal\n      };\n\n      if (this.options.pedantic) {\n        rules.block = block.pedantic;\n        rules.inline = inline.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block.gfm;\n\n        if (this.options.breaks) {\n          rules.inline = inline.breaks;\n        } else {\n          rules.inline = inline.gfm;\n        }\n      }\n\n      this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n\n\n    /**\n     * Static Lex Method\n     */\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    ;\n\n    Lexer.lexInline = function lexInline(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    ;\n\n    var _proto = Lexer.prototype;\n\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ');\n      this.blockTokens(src, this.tokens);\n      var next;\n\n      while (next = this.inlineQueue.shift()) {\n        this.inlineTokens(next.src, next.tokens);\n      }\n\n      return this.tokens;\n    }\n    /**\n     * Lexing\n     */\n    ;\n\n    _proto.blockTokens = function blockTokens(src, tokens) {\n      var _this = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (this.options.pedantic) {\n        src = src.replace(/^ +$/gm, '');\n      }\n\n      var token, lastToken, cutSrc, lastParagraphClipped;\n\n      while (src) {\n        if (this.options.extensions && this.options.extensions.block && this.options.extensions.block.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // newline\n\n\n        if (token = this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.length === 1 && tokens.length > 0) {\n            // if there's a single \\n as a spacer, it's terminating the last line,\n            // so move it there so that we don't get unecessary paragraph tags\n            tokens[tokens.length - 1].raw += '\\n';\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.code(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\n\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // fences\n\n\n        if (token = this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // heading\n\n\n        if (token = this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // hr\n\n\n        if (token = this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // blockquote\n\n\n        if (token = this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // list\n\n\n        if (token = this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // html\n\n\n        if (token = this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // def\n\n\n        if (token = this.tokenizer.def(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.raw;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else if (!this.tokens.links[token.tag]) {\n            this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n\n          continue;\n        } // table (gfm)\n\n\n        if (token = this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // lheading\n\n\n        if (token = this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // top-level paragraph\n        // prevent paragraph consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startBlock) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this.options.extensions.startBlock.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastParagraphClipped && lastToken.type === 'paragraph') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          lastParagraphClipped = cutSrc.length !== src.length;\n          src = src.substring(token.raw.length);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.text(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      this.state.top = true;\n      return tokens;\n    };\n\n    _proto.inline = function inline(src, tokens) {\n      this.inlineQueue.push({\n        src: src,\n        tokens: tokens\n      });\n    }\n    /**\n     * Lexing/Compiling\n     */\n    ;\n\n    _proto.inlineTokens = function inlineTokens(src, tokens) {\n      var _this2 = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      var token, lastToken, cutSrc; // String with links masked to avoid interference with em and strong\n\n      var maskedSrc = src;\n      var match;\n      var keepPrevChar, prevChar; // Mask out reflinks\n\n      if (this.tokens.links) {\n        var links = Object.keys(this.tokens.links);\n\n        if (links.length > 0) {\n          while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n            if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n              maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n            }\n          }\n        }\n      } // Mask out other blocks\n\n\n      while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n      } // Mask out escaped em & strong delimiters\n\n\n      while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      }\n\n      while (src) {\n        if (!keepPrevChar) {\n          prevChar = '';\n        }\n\n        keepPrevChar = false; // extensions\n\n        if (this.options.extensions && this.options.extensions.inline && this.options.extensions.inline.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this2\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // escape\n\n\n        if (token = this.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // tag\n\n\n        if (token = this.tokenizer.tag(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // link\n\n\n        if (token = this.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // reflink, nolink\n\n\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // em & strong\n\n\n        if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // br\n\n\n        if (token = this.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // del (gfm)\n\n\n        if (token = this.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // autolink\n\n\n        if (token = this.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // url (gfm)\n\n\n        if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n        // prevent inlineText consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startInline) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this2.options.extensions.startInline.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.slice(-1) !== '_') {\n            // Track prevChar before string of ____ started\n            prevChar = token.raw.slice(-1);\n          }\n\n          keepPrevChar = true;\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block,\n          inline: inline\n        };\n      }\n    }]);\n\n    return Lexer;\n  }();\n\n  /**\n   * Renderer\n   */\n\n  var Renderer = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || exports.defaults;\n    }\n\n    var _proto = Renderer.prototype;\n\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n\n      _code = _code.replace(/\\n$/, '') + '\\n';\n\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n      }\n\n      return '<pre><code class=\"' + this.options.langPrefix + escape(lang, true) + '\">' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n    };\n\n    _proto.blockquote = function blockquote(quote) {\n      return '<blockquote>\\n' + quote + '</blockquote>\\n';\n    };\n\n    _proto.html = function html(_html) {\n      return _html;\n    };\n\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        return '<h' + level + ' id=\"' + this.options.headerPrefix + slugger.slug(raw) + '\">' + text + '</h' + level + '>\\n';\n      } // ignore IDs\n\n\n      return '<h' + level + '>' + text + '</h' + level + '>\\n';\n    };\n\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n          startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    };\n\n    _proto.listitem = function listitem(text) {\n      return '<li>' + text + '</li>\\n';\n    };\n\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    };\n\n    _proto.paragraph = function paragraph(text) {\n      return '<p>' + text + '</p>\\n';\n    };\n\n    _proto.table = function table(header, body) {\n      if (body) body = '<tbody>' + body + '</tbody>';\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    };\n\n    _proto.tablerow = function tablerow(content) {\n      return '<tr>\\n' + content + '</tr>\\n';\n    };\n\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? '<' + type + ' align=\"' + flags.align + '\">' : '<' + type + '>';\n      return tag + content + '</' + type + '>\\n';\n    } // span level renderer\n    ;\n\n    _proto.strong = function strong(text) {\n      return '<strong>' + text + '</strong>';\n    };\n\n    _proto.em = function em(text) {\n      return '<em>' + text + '</em>';\n    };\n\n    _proto.codespan = function codespan(text) {\n      return '<code>' + text + '</code>';\n    };\n\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    };\n\n    _proto.del = function del(text) {\n      return '<del>' + text + '</del>';\n    };\n\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<a href=\"' + escape(href) + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += '>' + text + '</a>';\n      return out;\n    };\n\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    return Renderer;\n  }();\n\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n  var TextRenderer = /*#__PURE__*/function () {\n    function TextRenderer() {}\n\n    var _proto = TextRenderer.prototype;\n\n    // no need for block level renderers\n    _proto.strong = function strong(text) {\n      return text;\n    };\n\n    _proto.em = function em(text) {\n      return text;\n    };\n\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n\n    _proto.del = function del(text) {\n      return text;\n    };\n\n    _proto.html = function html(text) {\n      return text;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.br = function br() {\n      return '';\n    };\n\n    return TextRenderer;\n  }();\n\n  /**\n   * Slugger generates header id\n   */\n  var Slugger = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n\n    var _proto = Slugger.prototype;\n\n    _proto.serialize = function serialize(value) {\n      return value.toLowerCase().trim() // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n    }\n    /**\n     * Finds the next safe (unique) slug to use\n     */\n    ;\n\n    _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n      var slug = originalSlug;\n      var occurenceAccumulator = 0;\n\n      if (this.seen.hasOwnProperty(slug)) {\n        occurenceAccumulator = this.seen[originalSlug];\n\n        do {\n          occurenceAccumulator++;\n          slug = originalSlug + '-' + occurenceAccumulator;\n        } while (this.seen.hasOwnProperty(slug));\n      }\n\n      if (!isDryRun) {\n        this.seen[originalSlug] = occurenceAccumulator;\n        this.seen[slug] = 0;\n      }\n\n      return slug;\n    }\n    /**\n     * Convert string to unique id\n     * @param {object} options\n     * @param {boolean} options.dryrun Generates the next unique slug without updating the internal accumulator.\n     */\n    ;\n\n    _proto.slug = function slug(value, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var slug = this.serialize(value);\n      return this.getNextSafeSlug(slug, options.dryrun);\n    };\n\n    return Slugger;\n  }();\n\n  /**\n   * Parsing & Compiling\n   */\n\n  var Parser = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || exports.defaults;\n      this.options.renderer = this.options.renderer || new Renderer();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer();\n      this.slugger = new Slugger();\n    }\n    /**\n     * Static Parse Method\n     */\n\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    ;\n\n    Parser.parseInline = function parseInline(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    ;\n\n    var _proto = Parser.prototype;\n\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n\n      var out = '',\n          i,\n          j,\n          k,\n          l2,\n          l3,\n          row,\n          cell,\n          header,\n          body,\n          token,\n          ordered,\n          start,\n          loose,\n          itemBody,\n          item,\n          checked,\n          task,\n          checkbox,\n          ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n\n          if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n\n          case 'table':\n            {\n              header = ''; // header\n\n              cell = '';\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.header[j].tokens), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.rows.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.rows[j];\n                cell = '';\n                l3 = row.length;\n\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k].tokens), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n\n                body += this.renderer.tablerow(cell);\n              }\n\n              out += this.renderer.table(header, body);\n              continue;\n            }\n\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n\n          case 'html':\n            {\n              // TODO parse inline content if parameter markdown=1\n              out += this.renderer.html(token.text);\n              continue;\n            }\n\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    ;\n\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n          i,\n          token,\n          ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n\n          if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    };\n\n    return Parser;\n  }();\n\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    if (callback) {\n      var highlight = opt.highlight;\n      var tokens;\n\n      try {\n        tokens = Lexer.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      var done = function done(err) {\n        var out;\n\n        if (!err) {\n          try {\n            if (opt.walkTokens) {\n              marked.walkTokens(tokens, opt.walkTokens);\n            }\n\n            out = Parser.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!tokens.length) return done();\n      var pending = 0;\n      marked.walkTokens(tokens, function (token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(function () {\n            highlight(token.text, token.lang, function (err, code) {\n              if (err) {\n                return done(err);\n              }\n\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    try {\n      var _tokens = Lexer.lex(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(_tokens, opt.walkTokens);\n      }\n\n      return Parser.parse(_tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n  marked.options = marked.setOptions = function (opt) {\n    merge(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n\n  marked.getDefaults = getDefaults;\n  marked.defaults = exports.defaults;\n  /**\n   * Use Extension\n   */\n\n  marked.use = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var opts = merge.apply(void 0, [{}].concat(args));\n    var extensions = marked.defaults.extensions || {\n      renderers: {},\n      childTokens: {}\n    };\n    var hasExtensions;\n    args.forEach(function (pack) {\n      // ==-- Parse \"addon\" extensions --== //\n      if (pack.extensions) {\n        hasExtensions = true;\n        pack.extensions.forEach(function (ext) {\n          if (!ext.name) {\n            throw new Error('extension name required');\n          }\n\n          if (ext.renderer) {\n            // Renderer extensions\n            var prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;\n\n            if (prevRenderer) {\n              // Replace extension with func to run new extension but fall back if false\n              extensions.renderers[ext.name] = function () {\n                for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                  args[_key2] = arguments[_key2];\n                }\n\n                var ret = ext.renderer.apply(this, args);\n\n                if (ret === false) {\n                  ret = prevRenderer.apply(this, args);\n                }\n\n                return ret;\n              };\n            } else {\n              extensions.renderers[ext.name] = ext.renderer;\n            }\n          }\n\n          if (ext.tokenizer) {\n            // Tokenizer Extensions\n            if (!ext.level || ext.level !== 'block' && ext.level !== 'inline') {\n              throw new Error(\"extension level must be 'block' or 'inline'\");\n            }\n\n            if (extensions[ext.level]) {\n              extensions[ext.level].unshift(ext.tokenizer);\n            } else {\n              extensions[ext.level] = [ext.tokenizer];\n            }\n\n            if (ext.start) {\n              // Function to check for start of token\n              if (ext.level === 'block') {\n                if (extensions.startBlock) {\n                  extensions.startBlock.push(ext.start);\n                } else {\n                  extensions.startBlock = [ext.start];\n                }\n              } else if (ext.level === 'inline') {\n                if (extensions.startInline) {\n                  extensions.startInline.push(ext.start);\n                } else {\n                  extensions.startInline = [ext.start];\n                }\n              }\n            }\n          }\n\n          if (ext.childTokens) {\n            // Child tokens to be visited by walkTokens\n            extensions.childTokens[ext.name] = ext.childTokens;\n          }\n        });\n      } // ==-- Parse \"overwrite\" extensions --== //\n\n\n      if (pack.renderer) {\n        (function () {\n          var renderer = marked.defaults.renderer || new Renderer();\n\n          var _loop = function _loop(prop) {\n            var prevRenderer = renderer[prop]; // Replace renderer with func to run extension, but fall back if false\n\n            renderer[prop] = function () {\n              for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                args[_key3] = arguments[_key3];\n              }\n\n              var ret = pack.renderer[prop].apply(renderer, args);\n\n              if (ret === false) {\n                ret = prevRenderer.apply(renderer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.renderer) {\n            _loop(prop);\n          }\n\n          opts.renderer = renderer;\n        })();\n      }\n\n      if (pack.tokenizer) {\n        (function () {\n          var tokenizer = marked.defaults.tokenizer || new Tokenizer();\n\n          var _loop2 = function _loop2(prop) {\n            var prevTokenizer = tokenizer[prop]; // Replace tokenizer with func to run extension, but fall back if false\n\n            tokenizer[prop] = function () {\n              for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n                args[_key4] = arguments[_key4];\n              }\n\n              var ret = pack.tokenizer[prop].apply(tokenizer, args);\n\n              if (ret === false) {\n                ret = prevTokenizer.apply(tokenizer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.tokenizer) {\n            _loop2(prop);\n          }\n\n          opts.tokenizer = tokenizer;\n        })();\n      } // ==-- Parse WalkTokens extensions --== //\n\n\n      if (pack.walkTokens) {\n        var _walkTokens = marked.defaults.walkTokens;\n\n        opts.walkTokens = function (token) {\n          pack.walkTokens.call(this, token);\n\n          if (_walkTokens) {\n            _walkTokens.call(this, token);\n          }\n        };\n      }\n\n      if (hasExtensions) {\n        opts.extensions = extensions;\n      }\n\n      marked.setOptions(opts);\n    });\n  };\n  /**\n   * Run callback for every token\n   */\n\n\n  marked.walkTokens = function (tokens, callback) {\n    var _loop3 = function _loop3() {\n      var token = _step.value;\n      callback.call(marked, token);\n\n      switch (token.type) {\n        case 'table':\n          {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.header), _step2; !(_step2 = _iterator2()).done;) {\n              var cell = _step2.value;\n              marked.walkTokens(cell.tokens, callback);\n            }\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.rows), _step3; !(_step3 = _iterator3()).done;) {\n              var row = _step3.value;\n\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                var _cell = _step4.value;\n                marked.walkTokens(_cell.tokens, callback);\n              }\n            }\n\n            break;\n          }\n\n        case 'list':\n          {\n            marked.walkTokens(token.items, callback);\n            break;\n          }\n\n        default:\n          {\n            if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) {\n              // Walk any extensions\n              marked.defaults.extensions.childTokens[token.type].forEach(function (childTokens) {\n                marked.walkTokens(token[childTokens], callback);\n              });\n            } else if (token.tokens) {\n              marked.walkTokens(token.tokens, callback);\n            }\n          }\n      }\n    };\n\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n      _loop3();\n    }\n  };\n  /**\n   * Parse Inline\n   */\n\n\n  marked.parseInline = function (src, opt) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked.parseInline(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    try {\n      var tokens = Lexer.lexInline(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n\n      return Parser.parseInline(tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  };\n  /**\n   * Expose\n   */\n\n\n  marked.Parser = Parser;\n  marked.parser = Parser.parse;\n  marked.Renderer = Renderer;\n  marked.TextRenderer = TextRenderer;\n  marked.Lexer = Lexer;\n  marked.lexer = Lexer.lex;\n  marked.Tokenizer = Tokenizer;\n  marked.Slugger = Slugger;\n  marked.parse = marked;\n  var options = marked.options;\n  var setOptions = marked.setOptions;\n  var use = marked.use;\n  var walkTokens = marked.walkTokens;\n  var parseInline = marked.parseInline;\n  var parse = marked;\n  var parser = Parser.parse;\n  var lexer = Lexer.lex;\n\n  exports.Lexer = Lexer;\n  exports.Parser = Parser;\n  exports.Renderer = Renderer;\n  exports.Slugger = Slugger;\n  exports.TextRenderer = TextRenderer;\n  exports.Tokenizer = Tokenizer;\n  exports.getDefaults = getDefaults;\n  exports.lexer = lexer;\n  exports.marked = marked;\n  exports.options = options;\n  exports.parse = parse;\n  exports.parseInline = parseInline;\n  exports.parser = parser;\n  exports.setOptions = setOptions;\n  exports.use = use;\n  exports.walkTokens = walkTokens;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n}));\n\n// ESM-uncomment-begin\n})();\nexport var marked = (__marked_exports || exports);\n// ESM-uncomment-end\n"]},"metadata":{},"sourceType":"module"}