{"ast":null,"code":"var _jsxFileName = \"/home/joe/DISSY/flask_test_1/react-flask-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [FunctionOutput, setFunctionOutput] = useState(0);\n  const [SetFunctionOutput, setNewFunctionOutput] = useState(0);\n  const [formEntries, setFormEntries] = useState({\n    meetingcode: \"\",\n    username: \"\",\n    anonymous: false\n  });\n  useEffect(() => {\n    // Simple POST request with a JSON body using fetch\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: 'return(3*2);'\n      })\n    };\n    fetch('/write', requestOptions).then(response => response.json());\n  }, []);\n  useEffect(() => {\n    fetch('/time').then(res => res.json()).then(data => {\n      setFunctionOutput(data.time);\n    });\n  }, []);\n\n  function inputHandler(entryObj) {\n    let tmpForm = formEntries;\n    let value = entryObj.target.value;\n    let name = entryObj.target.name;\n\n    if (name == \"anonymous\") {\n      tmpForm[name] = entryObj.target.checked ? 1 : 0;\n    } else {\n      tmpForm[name] = value;\n    }\n\n    console.log(tmpForm);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Find a Meeting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"name\",\n        name: \"meetingcode\",\n        required: true,\n        onChange: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Meeting Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"name\",\n        name: \"username\",\n        required: true,\n        onChange: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        id: \"AnonymousMessage\",\n        children: \"Remain Anonymous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      id: \"Anonymous\",\n      name: \"anonymous\",\n      onChange: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"green_button\",\n        children: \"Join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"FG2qZAvZqu6NIaGBOSptMsYekGU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/src/App.js"],"names":["React","useState","useEffect","App","FunctionOutput","setFunctionOutput","SetFunctionOutput","setNewFunctionOutput","formEntries","setFormEntries","meetingcode","username","anonymous","requestOptions","method","headers","body","JSON","stringify","title","fetch","then","response","json","res","data","time","inputHandler","entryObj","tmpForm","value","target","name","checked","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n\n  const [FunctionOutput, setFunctionOutput] = useState(0);\n  const [SetFunctionOutput, setNewFunctionOutput] = useState(0);\n\n  const [formEntries, setFormEntries] = useState({\n    meetingcode: \"\",\n    username:\"\",\n    anonymous: false\n  })\n\n  useEffect(() => {\n      // Simple POST request with a JSON body using fetch\n      const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ title: 'return(3*2);' })\n      };\n      fetch('/write', requestOptions)\n          .then(response => response.json());\n  }, []);\n\n\n  useEffect(() => {\n    fetch('/time').then(res => res.json()).then(data => {\n      setFunctionOutput(data.time);\n    });\n  }, []);\n\n\n  function inputHandler(entryObj){\n    let tmpForm = formEntries\n    let value = entryObj.target.value\n    let name = entryObj.target.name\n    \n    if(name==\"anonymous\"){\n        tmpForm[name] = entryObj.target.checked?1:0\n    }else{\n        tmpForm[name] = value\n    }\n\n    console.log(tmpForm)\n  }\n\n\n  return (\n    <div className=\"wrap\">\n        <h1>Find a Meeting</h1>\n            <div className=\"row\">\n                <input type=\"text\" className=\"form-control\" id=\"name\" name=\"meetingcode\" required onChange={inputHandler}/> \n                <label htmlFor=\"name\">Meeting Code</label>\n            </div>\n\n            <div className=\"row\">\n                <input type=\"text\" className=\"form-control\" id=\"name\" name=\"username\" required onChange={inputHandler}/> \n                <label htmlFor=\"name\">Username</label>\n            </div>\n            \n            <span><a id=\"AnonymousMessage\">Remain Anonymous</a></span>\n            <input type=\"checkbox\" id=\"Anonymous\" name=\"anonymous\" onChange={inputHandler}/>\n\n            \n            \n            <div>\n                <button type=\"submit\" className=\"green_button\">Join</button>\n            </div>\n            \n\n    </div>\n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}