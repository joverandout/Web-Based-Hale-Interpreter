{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Token, TokenizationResult, EncodedTokenizationResult } from '../languages.js';\nexport const NullState = new class {\n  clone() {\n    return this;\n  }\n\n  equals(other) {\n    return this === other;\n  }\n\n}();\nexport function nullTokenize(languageId, state) {\n  return new TokenizationResult([new Token(0, '', languageId)], state);\n}\nexport function nullTokenizeEncoded(languageId, state) {\n  const tokens = new Uint32Array(2);\n  tokens[0] = 0;\n  tokens[1] = (languageId << 0\n  /* LANGUAGEID_OFFSET */\n  | 0\n  /* Other */\n  << 8\n  /* TOKEN_TYPE_OFFSET */\n  | 0\n  /* None */\n  << 10\n  /* FONT_STYLE_OFFSET */\n  | 1\n  /* DefaultForeground */\n  << 14\n  /* FOREGROUND_OFFSET */\n  | 2\n  /* DefaultBackground */\n  << 23\n  /* BACKGROUND_OFFSET */\n  ) >>> 0;\n  return new EncodedTokenizationResult(tokens, state === null ? NullState : state);\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/common/languages/nullMode.js"],"names":["Token","TokenizationResult","EncodedTokenizationResult","NullState","clone","equals","other","nullTokenize","languageId","state","nullTokenizeEncoded","tokens","Uint32Array"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,KAAT,EAAgBC,kBAAhB,EAAoCC,yBAApC,QAAqE,iBAArE;AACA,OAAO,MAAMC,SAAS,GAAG,IAAI,MAAM;AAC/BC,EAAAA,KAAK,GAAG;AACJ,WAAO,IAAP;AACH;;AACDC,EAAAA,MAAM,CAACC,KAAD,EAAQ;AACV,WAAQ,SAASA,KAAjB;AACH;;AAN8B,CAAV,EAAlB;AAQP,OAAO,SAASC,YAAT,CAAsBC,UAAtB,EAAkCC,KAAlC,EAAyC;AAC5C,SAAO,IAAIR,kBAAJ,CAAuB,CAAC,IAAID,KAAJ,CAAU,CAAV,EAAa,EAAb,EAAiBQ,UAAjB,CAAD,CAAvB,EAAuDC,KAAvD,CAAP;AACH;AACD,OAAO,SAASC,mBAAT,CAA6BF,UAA7B,EAAyCC,KAAzC,EAAgD;AACnD,QAAME,MAAM,GAAG,IAAIC,WAAJ,CAAgB,CAAhB,CAAf;AACAD,EAAAA,MAAM,CAAC,CAAD,CAAN,GAAY,CAAZ;AACAA,EAAAA,MAAM,CAAC,CAAD,CAAN,GAAY,CAAEH,UAAU,IAAI;AAAE;AAAjB,IACN;AAAE;AAAF,KAAiB;AAAE;AADb,IAEN;AAAE;AAAF,KAAgB;AAAG;AAFb,IAGN;AAAE;AAAF,KAA6B;AAAG;AAH1B,IAIN;AAAE;AAAF,KAA6B;AAAG;AAJ3B,QAIyD,CAJrE;AAKA,SAAO,IAAIN,yBAAJ,CAA8BS,MAA9B,EAAsCF,KAAK,KAAK,IAAV,GAAiBN,SAAjB,GAA6BM,KAAnE,CAAP;AACH","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Token, TokenizationResult, EncodedTokenizationResult } from '../languages.js';\nexport const NullState = new class {\n    clone() {\n        return this;\n    }\n    equals(other) {\n        return (this === other);\n    }\n};\nexport function nullTokenize(languageId, state) {\n    return new TokenizationResult([new Token(0, '', languageId)], state);\n}\nexport function nullTokenizeEncoded(languageId, state) {\n    const tokens = new Uint32Array(2);\n    tokens[0] = 0;\n    tokens[1] = ((languageId << 0 /* LANGUAGEID_OFFSET */)\n        | (0 /* Other */ << 8 /* TOKEN_TYPE_OFFSET */)\n        | (0 /* None */ << 10 /* FONT_STYLE_OFFSET */)\n        | (1 /* DefaultForeground */ << 14 /* FOREGROUND_OFFSET */)\n        | (2 /* DefaultBackground */ << 23 /* BACKGROUND_OFFSET */)) >>> 0;\n    return new EncodedTokenizationResult(tokens, state === null ? NullState : state);\n}\n"]},"metadata":{},"sourceType":"module"}