{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { registerEditorCommand } from '../../../browser/editorExtensions.js';\nimport { WordPartOperations } from '../../../common/cursor/cursorWordOperations.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { DeleteWordCommand, MoveWordCommand } from '../../wordOperations/browser/wordOperations.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nexport class DeleteWordPartLeft extends DeleteWordCommand {\n  constructor() {\n    super({\n      whitespaceHeuristics: true,\n      wordNavigationType: 0\n      /* WordStart */\n      ,\n      id: 'deleteWordPartLeft',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 0,\n        mac: {\n          primary: 256\n          /* WinCtrl */\n          | 512\n          /* Alt */\n          | 1\n          /* Backspace */\n\n        },\n        weight: 100\n        /* EditorContrib */\n\n      }\n    });\n  }\n\n  _delete(ctx, wordNavigationType) {\n    let r = WordPartOperations.deleteWordPartLeft(ctx);\n\n    if (r) {\n      return r;\n    }\n\n    return new Range(1, 1, 1, 1);\n  }\n\n}\nexport class DeleteWordPartRight extends DeleteWordCommand {\n  constructor() {\n    super({\n      whitespaceHeuristics: true,\n      wordNavigationType: 2\n      /* WordEnd */\n      ,\n      id: 'deleteWordPartRight',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 0,\n        mac: {\n          primary: 256\n          /* WinCtrl */\n          | 512\n          /* Alt */\n          | 20\n          /* Delete */\n\n        },\n        weight: 100\n        /* EditorContrib */\n\n      }\n    });\n  }\n\n  _delete(ctx, wordNavigationType) {\n    let r = WordPartOperations.deleteWordPartRight(ctx);\n\n    if (r) {\n      return r;\n    }\n\n    const lineCount = ctx.model.getLineCount();\n    const maxColumn = ctx.model.getLineMaxColumn(lineCount);\n    return new Range(lineCount, maxColumn, lineCount, maxColumn);\n  }\n\n}\nexport class WordPartLeftCommand extends MoveWordCommand {\n  _move(wordSeparators, model, position, wordNavigationType) {\n    return WordPartOperations.moveWordPartLeft(wordSeparators, model, position);\n  }\n\n}\nexport class CursorWordPartLeft extends WordPartLeftCommand {\n  constructor() {\n    super({\n      inSelectionMode: false,\n      wordNavigationType: 0\n      /* WordStart */\n      ,\n      id: 'cursorWordPartLeft',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 0,\n        mac: {\n          primary: 256\n          /* WinCtrl */\n          | 512\n          /* Alt */\n          | 15\n          /* LeftArrow */\n\n        },\n        weight: 100\n        /* EditorContrib */\n\n      }\n    });\n  }\n\n} // Register previous id for compatibility purposes\n\nCommandsRegistry.registerCommandAlias('cursorWordPartStartLeft', 'cursorWordPartLeft');\nexport class CursorWordPartLeftSelect extends WordPartLeftCommand {\n  constructor() {\n    super({\n      inSelectionMode: true,\n      wordNavigationType: 0\n      /* WordStart */\n      ,\n      id: 'cursorWordPartLeftSelect',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 0,\n        mac: {\n          primary: 256\n          /* WinCtrl */\n          | 512\n          /* Alt */\n          | 1024\n          /* Shift */\n          | 15\n          /* LeftArrow */\n\n        },\n        weight: 100\n        /* EditorContrib */\n\n      }\n    });\n  }\n\n} // Register previous id for compatibility purposes\n\nCommandsRegistry.registerCommandAlias('cursorWordPartStartLeftSelect', 'cursorWordPartLeftSelect');\nexport class WordPartRightCommand extends MoveWordCommand {\n  _move(wordSeparators, model, position, wordNavigationType) {\n    return WordPartOperations.moveWordPartRight(wordSeparators, model, position);\n  }\n\n}\nexport class CursorWordPartRight extends WordPartRightCommand {\n  constructor() {\n    super({\n      inSelectionMode: false,\n      wordNavigationType: 2\n      /* WordEnd */\n      ,\n      id: 'cursorWordPartRight',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 0,\n        mac: {\n          primary: 256\n          /* WinCtrl */\n          | 512\n          /* Alt */\n          | 17\n          /* RightArrow */\n\n        },\n        weight: 100\n        /* EditorContrib */\n\n      }\n    });\n  }\n\n}\nexport class CursorWordPartRightSelect extends WordPartRightCommand {\n  constructor() {\n    super({\n      inSelectionMode: true,\n      wordNavigationType: 2\n      /* WordEnd */\n      ,\n      id: 'cursorWordPartRightSelect',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 0,\n        mac: {\n          primary: 256\n          /* WinCtrl */\n          | 512\n          /* Alt */\n          | 1024\n          /* Shift */\n          | 17\n          /* RightArrow */\n\n        },\n        weight: 100\n        /* EditorContrib */\n\n      }\n    });\n  }\n\n}\nregisterEditorCommand(new DeleteWordPartLeft());\nregisterEditorCommand(new DeleteWordPartRight());\nregisterEditorCommand(new CursorWordPartLeft());\nregisterEditorCommand(new CursorWordPartLeftSelect());\nregisterEditorCommand(new CursorWordPartRight());\nregisterEditorCommand(new CursorWordPartRightSelect());","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/contrib/wordPartOperations/browser/wordPartOperations.js"],"names":["registerEditorCommand","WordPartOperations","Range","EditorContextKeys","DeleteWordCommand","MoveWordCommand","CommandsRegistry","DeleteWordPartLeft","constructor","whitespaceHeuristics","wordNavigationType","id","precondition","writable","kbOpts","kbExpr","textInputFocus","primary","mac","weight","_delete","ctx","r","deleteWordPartLeft","DeleteWordPartRight","deleteWordPartRight","lineCount","model","getLineCount","maxColumn","getLineMaxColumn","WordPartLeftCommand","_move","wordSeparators","position","moveWordPartLeft","CursorWordPartLeft","inSelectionMode","undefined","registerCommandAlias","CursorWordPartLeftSelect","WordPartRightCommand","moveWordPartRight","CursorWordPartRight","CursorWordPartRightSelect"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,qBAAT,QAAsC,sCAAtC;AACA,SAASC,kBAAT,QAAmC,gDAAnC;AACA,SAASC,KAAT,QAAsB,+BAAtB;AACA,SAASC,iBAAT,QAAkC,sCAAlC;AACA,SAASC,iBAAT,EAA4BC,eAA5B,QAAmD,gDAAnD;AACA,SAASC,gBAAT,QAAiC,kDAAjC;AACA,OAAO,MAAMC,kBAAN,SAAiCH,iBAAjC,CAAmD;AACtDI,EAAAA,WAAW,GAAG;AACV,UAAM;AACFC,MAAAA,oBAAoB,EAAE,IADpB;AAEFC,MAAAA,kBAAkB,EAAE;AAAE;AAFpB;AAGFC,MAAAA,EAAE,EAAE,oBAHF;AAIFC,MAAAA,YAAY,EAAET,iBAAiB,CAACU,QAJ9B;AAKFC,MAAAA,MAAM,EAAE;AACJC,QAAAA,MAAM,EAAEZ,iBAAiB,CAACa,cADtB;AAEJC,QAAAA,OAAO,EAAE,CAFL;AAGJC,QAAAA,GAAG,EAAE;AAAED,UAAAA,OAAO,EAAE;AAAI;AAAJ,YAAoB;AAAI;AAAxB,YAAoC;AAAE;;AAAjD,SAHD;AAIJE,QAAAA,MAAM,EAAE;AAAI;;AAJR;AALN,KAAN;AAYH;;AACDC,EAAAA,OAAO,CAACC,GAAD,EAAMX,kBAAN,EAA0B;AAC7B,QAAIY,CAAC,GAAGrB,kBAAkB,CAACsB,kBAAnB,CAAsCF,GAAtC,CAAR;;AACA,QAAIC,CAAJ,EAAO;AACH,aAAOA,CAAP;AACH;;AACD,WAAO,IAAIpB,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAP;AACH;;AArBqD;AAuB1D,OAAO,MAAMsB,mBAAN,SAAkCpB,iBAAlC,CAAoD;AACvDI,EAAAA,WAAW,GAAG;AACV,UAAM;AACFC,MAAAA,oBAAoB,EAAE,IADpB;AAEFC,MAAAA,kBAAkB,EAAE;AAAE;AAFpB;AAGFC,MAAAA,EAAE,EAAE,qBAHF;AAIFC,MAAAA,YAAY,EAAET,iBAAiB,CAACU,QAJ9B;AAKFC,MAAAA,MAAM,EAAE;AACJC,QAAAA,MAAM,EAAEZ,iBAAiB,CAACa,cADtB;AAEJC,QAAAA,OAAO,EAAE,CAFL;AAGJC,QAAAA,GAAG,EAAE;AAAED,UAAAA,OAAO,EAAE;AAAI;AAAJ,YAAoB;AAAI;AAAxB,YAAoC;AAAG;;AAAlD,SAHD;AAIJE,QAAAA,MAAM,EAAE;AAAI;;AAJR;AALN,KAAN;AAYH;;AACDC,EAAAA,OAAO,CAACC,GAAD,EAAMX,kBAAN,EAA0B;AAC7B,QAAIY,CAAC,GAAGrB,kBAAkB,CAACwB,mBAAnB,CAAuCJ,GAAvC,CAAR;;AACA,QAAIC,CAAJ,EAAO;AACH,aAAOA,CAAP;AACH;;AACD,UAAMI,SAAS,GAAGL,GAAG,CAACM,KAAJ,CAAUC,YAAV,EAAlB;AACA,UAAMC,SAAS,GAAGR,GAAG,CAACM,KAAJ,CAAUG,gBAAV,CAA2BJ,SAA3B,CAAlB;AACA,WAAO,IAAIxB,KAAJ,CAAUwB,SAAV,EAAqBG,SAArB,EAAgCH,SAAhC,EAA2CG,SAA3C,CAAP;AACH;;AAvBsD;AAyB3D,OAAO,MAAME,mBAAN,SAAkC1B,eAAlC,CAAkD;AACrD2B,EAAAA,KAAK,CAACC,cAAD,EAAiBN,KAAjB,EAAwBO,QAAxB,EAAkCxB,kBAAlC,EAAsD;AACvD,WAAOT,kBAAkB,CAACkC,gBAAnB,CAAoCF,cAApC,EAAoDN,KAApD,EAA2DO,QAA3D,CAAP;AACH;;AAHoD;AAKzD,OAAO,MAAME,kBAAN,SAAiCL,mBAAjC,CAAqD;AACxDvB,EAAAA,WAAW,GAAG;AACV,UAAM;AACF6B,MAAAA,eAAe,EAAE,KADf;AAEF3B,MAAAA,kBAAkB,EAAE;AAAE;AAFpB;AAGFC,MAAAA,EAAE,EAAE,oBAHF;AAIFC,MAAAA,YAAY,EAAE0B,SAJZ;AAKFxB,MAAAA,MAAM,EAAE;AACJC,QAAAA,MAAM,EAAEZ,iBAAiB,CAACa,cADtB;AAEJC,QAAAA,OAAO,EAAE,CAFL;AAGJC,QAAAA,GAAG,EAAE;AAAED,UAAAA,OAAO,EAAE;AAAI;AAAJ,YAAoB;AAAI;AAAxB,YAAoC;AAAG;;AAAlD,SAHD;AAIJE,QAAAA,MAAM,EAAE;AAAI;;AAJR;AALN,KAAN;AAYH;;AAduD,C,CAgB5D;;AACAb,gBAAgB,CAACiC,oBAAjB,CAAsC,yBAAtC,EAAiE,oBAAjE;AACA,OAAO,MAAMC,wBAAN,SAAuCT,mBAAvC,CAA2D;AAC9DvB,EAAAA,WAAW,GAAG;AACV,UAAM;AACF6B,MAAAA,eAAe,EAAE,IADf;AAEF3B,MAAAA,kBAAkB,EAAE;AAAE;AAFpB;AAGFC,MAAAA,EAAE,EAAE,0BAHF;AAIFC,MAAAA,YAAY,EAAE0B,SAJZ;AAKFxB,MAAAA,MAAM,EAAE;AACJC,QAAAA,MAAM,EAAEZ,iBAAiB,CAACa,cADtB;AAEJC,QAAAA,OAAO,EAAE,CAFL;AAGJC,QAAAA,GAAG,EAAE;AAAED,UAAAA,OAAO,EAAE;AAAI;AAAJ,YAAoB;AAAI;AAAxB,YAAoC;AAAK;AAAzC,YAAuD;AAAG;;AAArE,SAHD;AAIJE,QAAAA,MAAM,EAAE;AAAI;;AAJR;AALN,KAAN;AAYH;;AAd6D,C,CAgBlE;;AACAb,gBAAgB,CAACiC,oBAAjB,CAAsC,+BAAtC,EAAuE,0BAAvE;AACA,OAAO,MAAME,oBAAN,SAAmCpC,eAAnC,CAAmD;AACtD2B,EAAAA,KAAK,CAACC,cAAD,EAAiBN,KAAjB,EAAwBO,QAAxB,EAAkCxB,kBAAlC,EAAsD;AACvD,WAAOT,kBAAkB,CAACyC,iBAAnB,CAAqCT,cAArC,EAAqDN,KAArD,EAA4DO,QAA5D,CAAP;AACH;;AAHqD;AAK1D,OAAO,MAAMS,mBAAN,SAAkCF,oBAAlC,CAAuD;AAC1DjC,EAAAA,WAAW,GAAG;AACV,UAAM;AACF6B,MAAAA,eAAe,EAAE,KADf;AAEF3B,MAAAA,kBAAkB,EAAE;AAAE;AAFpB;AAGFC,MAAAA,EAAE,EAAE,qBAHF;AAIFC,MAAAA,YAAY,EAAE0B,SAJZ;AAKFxB,MAAAA,MAAM,EAAE;AACJC,QAAAA,MAAM,EAAEZ,iBAAiB,CAACa,cADtB;AAEJC,QAAAA,OAAO,EAAE,CAFL;AAGJC,QAAAA,GAAG,EAAE;AAAED,UAAAA,OAAO,EAAE;AAAI;AAAJ,YAAoB;AAAI;AAAxB,YAAoC;AAAG;;AAAlD,SAHD;AAIJE,QAAAA,MAAM,EAAE;AAAI;;AAJR;AALN,KAAN;AAYH;;AAdyD;AAgB9D,OAAO,MAAMyB,yBAAN,SAAwCH,oBAAxC,CAA6D;AAChEjC,EAAAA,WAAW,GAAG;AACV,UAAM;AACF6B,MAAAA,eAAe,EAAE,IADf;AAEF3B,MAAAA,kBAAkB,EAAE;AAAE;AAFpB;AAGFC,MAAAA,EAAE,EAAE,2BAHF;AAIFC,MAAAA,YAAY,EAAE0B,SAJZ;AAKFxB,MAAAA,MAAM,EAAE;AACJC,QAAAA,MAAM,EAAEZ,iBAAiB,CAACa,cADtB;AAEJC,QAAAA,OAAO,EAAE,CAFL;AAGJC,QAAAA,GAAG,EAAE;AAAED,UAAAA,OAAO,EAAE;AAAI;AAAJ,YAAoB;AAAI;AAAxB,YAAoC;AAAK;AAAzC,YAAuD;AAAG;;AAArE,SAHD;AAIJE,QAAAA,MAAM,EAAE;AAAI;;AAJR;AALN,KAAN;AAYH;;AAd+D;AAgBpEnB,qBAAqB,CAAC,IAAIO,kBAAJ,EAAD,CAArB;AACAP,qBAAqB,CAAC,IAAIwB,mBAAJ,EAAD,CAArB;AACAxB,qBAAqB,CAAC,IAAIoC,kBAAJ,EAAD,CAArB;AACApC,qBAAqB,CAAC,IAAIwC,wBAAJ,EAAD,CAArB;AACAxC,qBAAqB,CAAC,IAAI2C,mBAAJ,EAAD,CAArB;AACA3C,qBAAqB,CAAC,IAAI4C,yBAAJ,EAAD,CAArB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { registerEditorCommand } from '../../../browser/editorExtensions.js';\nimport { WordPartOperations } from '../../../common/cursor/cursorWordOperations.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { DeleteWordCommand, MoveWordCommand } from '../../wordOperations/browser/wordOperations.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nexport class DeleteWordPartLeft extends DeleteWordCommand {\n    constructor() {\n        super({\n            whitespaceHeuristics: true,\n            wordNavigationType: 0 /* WordStart */,\n            id: 'deleteWordPartLeft',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                mac: { primary: 256 /* WinCtrl */ | 512 /* Alt */ | 1 /* Backspace */ },\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    _delete(ctx, wordNavigationType) {\n        let r = WordPartOperations.deleteWordPartLeft(ctx);\n        if (r) {\n            return r;\n        }\n        return new Range(1, 1, 1, 1);\n    }\n}\nexport class DeleteWordPartRight extends DeleteWordCommand {\n    constructor() {\n        super({\n            whitespaceHeuristics: true,\n            wordNavigationType: 2 /* WordEnd */,\n            id: 'deleteWordPartRight',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                mac: { primary: 256 /* WinCtrl */ | 512 /* Alt */ | 20 /* Delete */ },\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    _delete(ctx, wordNavigationType) {\n        let r = WordPartOperations.deleteWordPartRight(ctx);\n        if (r) {\n            return r;\n        }\n        const lineCount = ctx.model.getLineCount();\n        const maxColumn = ctx.model.getLineMaxColumn(lineCount);\n        return new Range(lineCount, maxColumn, lineCount, maxColumn);\n    }\n}\nexport class WordPartLeftCommand extends MoveWordCommand {\n    _move(wordSeparators, model, position, wordNavigationType) {\n        return WordPartOperations.moveWordPartLeft(wordSeparators, model, position);\n    }\n}\nexport class CursorWordPartLeft extends WordPartLeftCommand {\n    constructor() {\n        super({\n            inSelectionMode: false,\n            wordNavigationType: 0 /* WordStart */,\n            id: 'cursorWordPartLeft',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                mac: { primary: 256 /* WinCtrl */ | 512 /* Alt */ | 15 /* LeftArrow */ },\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n}\n// Register previous id for compatibility purposes\nCommandsRegistry.registerCommandAlias('cursorWordPartStartLeft', 'cursorWordPartLeft');\nexport class CursorWordPartLeftSelect extends WordPartLeftCommand {\n    constructor() {\n        super({\n            inSelectionMode: true,\n            wordNavigationType: 0 /* WordStart */,\n            id: 'cursorWordPartLeftSelect',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                mac: { primary: 256 /* WinCtrl */ | 512 /* Alt */ | 1024 /* Shift */ | 15 /* LeftArrow */ },\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n}\n// Register previous id for compatibility purposes\nCommandsRegistry.registerCommandAlias('cursorWordPartStartLeftSelect', 'cursorWordPartLeftSelect');\nexport class WordPartRightCommand extends MoveWordCommand {\n    _move(wordSeparators, model, position, wordNavigationType) {\n        return WordPartOperations.moveWordPartRight(wordSeparators, model, position);\n    }\n}\nexport class CursorWordPartRight extends WordPartRightCommand {\n    constructor() {\n        super({\n            inSelectionMode: false,\n            wordNavigationType: 2 /* WordEnd */,\n            id: 'cursorWordPartRight',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                mac: { primary: 256 /* WinCtrl */ | 512 /* Alt */ | 17 /* RightArrow */ },\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n}\nexport class CursorWordPartRightSelect extends WordPartRightCommand {\n    constructor() {\n        super({\n            inSelectionMode: true,\n            wordNavigationType: 2 /* WordEnd */,\n            id: 'cursorWordPartRightSelect',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                mac: { primary: 256 /* WinCtrl */ | 512 /* Alt */ | 1024 /* Shift */ | 17 /* RightArrow */ },\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n}\nregisterEditorCommand(new DeleteWordPartLeft());\nregisterEditorCommand(new DeleteWordPartRight());\nregisterEditorCommand(new CursorWordPartLeft());\nregisterEditorCommand(new CursorWordPartLeftSelect());\nregisterEditorCommand(new CursorWordPartRight());\nregisterEditorCommand(new CursorWordPartRightSelect());\n"]},"metadata":{},"sourceType":"module"}