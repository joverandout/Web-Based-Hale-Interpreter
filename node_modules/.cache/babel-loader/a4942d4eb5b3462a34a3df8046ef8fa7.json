{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { illegalArgument } from './errors.js';\nimport { escapeIcons } from './iconLabels.js';\nexport class MarkdownString {\n  constructor(value = '', isTrustedOrOptions = false) {\n    var _a, _b, _c;\n\n    this.value = value;\n\n    if (typeof this.value !== 'string') {\n      throw illegalArgument('value');\n    }\n\n    if (typeof isTrustedOrOptions === 'boolean') {\n      this.isTrusted = isTrustedOrOptions;\n      this.supportThemeIcons = false;\n      this.supportHtml = false;\n    } else {\n      this.isTrusted = (_a = isTrustedOrOptions.isTrusted) !== null && _a !== void 0 ? _a : undefined;\n      this.supportThemeIcons = (_b = isTrustedOrOptions.supportThemeIcons) !== null && _b !== void 0 ? _b : false;\n      this.supportHtml = (_c = isTrustedOrOptions.supportHtml) !== null && _c !== void 0 ? _c : false;\n    }\n  }\n\n  appendText(value, newlineStyle = 0\n  /* Paragraph */\n  ) {\n    this.value += escapeMarkdownSyntaxTokens(this.supportThemeIcons ? escapeIcons(value) : value).replace(/([ \\t]+)/g, (_match, g1) => '&nbsp;'.repeat(g1.length)).replace(/\\>/gm, '\\\\>').replace(/\\n/g, newlineStyle === 1\n    /* Break */\n    ? '\\\\\\n' : '\\n\\n');\n    return this;\n  }\n\n  appendMarkdown(value) {\n    this.value += value;\n    return this;\n  }\n\n  appendCodeblock(langId, code) {\n    this.value += '\\n```';\n    this.value += langId;\n    this.value += '\\n';\n    this.value += code;\n    this.value += '\\n```\\n';\n    return this;\n  }\n\n}\nexport function isEmptyMarkdownString(oneOrMany) {\n  if (isMarkdownString(oneOrMany)) {\n    return !oneOrMany.value;\n  } else if (Array.isArray(oneOrMany)) {\n    return oneOrMany.every(isEmptyMarkdownString);\n  } else {\n    return true;\n  }\n}\nexport function isMarkdownString(thing) {\n  if (thing instanceof MarkdownString) {\n    return true;\n  } else if (thing && typeof thing === 'object') {\n    return typeof thing.value === 'string' && (typeof thing.isTrusted === 'boolean' || thing.isTrusted === undefined) && (typeof thing.supportThemeIcons === 'boolean' || thing.supportThemeIcons === undefined);\n  }\n\n  return false;\n}\nexport function escapeMarkdownSyntaxTokens(text) {\n  // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n  return text.replace(/[\\\\`*_{}[\\]()#+\\-!]/g, '\\\\$&');\n}\nexport function removeMarkdownEscapes(text) {\n  if (!text) {\n    return text;\n  }\n\n  return text.replace(/\\\\([\\\\`*_{}[\\]()#+\\-.!])/g, '$1');\n}\nexport function parseHrefAndDimensions(href) {\n  const dimensions = [];\n  const splitted = href.split('|').map(s => s.trim());\n  href = splitted[0];\n  const parameters = splitted[1];\n\n  if (parameters) {\n    const heightFromParams = /height=(\\d+)/.exec(parameters);\n    const widthFromParams = /width=(\\d+)/.exec(parameters);\n    const height = heightFromParams ? heightFromParams[1] : '';\n    const width = widthFromParams ? widthFromParams[1] : '';\n    const widthIsFinite = isFinite(parseInt(width));\n    const heightIsFinite = isFinite(parseInt(height));\n\n    if (widthIsFinite) {\n      dimensions.push(`width=\"${width}\"`);\n    }\n\n    if (heightIsFinite) {\n      dimensions.push(`height=\"${height}\"`);\n    }\n  }\n\n  return {\n    href,\n    dimensions\n  };\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/base/common/htmlContent.js"],"names":["illegalArgument","escapeIcons","MarkdownString","constructor","value","isTrustedOrOptions","_a","_b","_c","isTrusted","supportThemeIcons","supportHtml","undefined","appendText","newlineStyle","escapeMarkdownSyntaxTokens","replace","_match","g1","repeat","length","appendMarkdown","appendCodeblock","langId","code","isEmptyMarkdownString","oneOrMany","isMarkdownString","Array","isArray","every","thing","text","removeMarkdownEscapes","parseHrefAndDimensions","href","dimensions","splitted","split","map","s","trim","parameters","heightFromParams","exec","widthFromParams","height","width","widthIsFinite","isFinite","parseInt","heightIsFinite","push"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { illegalArgument } from './errors.js';\nimport { escapeIcons } from './iconLabels.js';\nexport class MarkdownString {\n    constructor(value = '', isTrustedOrOptions = false) {\n        var _a, _b, _c;\n        this.value = value;\n        if (typeof this.value !== 'string') {\n            throw illegalArgument('value');\n        }\n        if (typeof isTrustedOrOptions === 'boolean') {\n            this.isTrusted = isTrustedOrOptions;\n            this.supportThemeIcons = false;\n            this.supportHtml = false;\n        }\n        else {\n            this.isTrusted = (_a = isTrustedOrOptions.isTrusted) !== null && _a !== void 0 ? _a : undefined;\n            this.supportThemeIcons = (_b = isTrustedOrOptions.supportThemeIcons) !== null && _b !== void 0 ? _b : false;\n            this.supportHtml = (_c = isTrustedOrOptions.supportHtml) !== null && _c !== void 0 ? _c : false;\n        }\n    }\n    appendText(value, newlineStyle = 0 /* Paragraph */) {\n        this.value += escapeMarkdownSyntaxTokens(this.supportThemeIcons ? escapeIcons(value) : value)\n            .replace(/([ \\t]+)/g, (_match, g1) => '&nbsp;'.repeat(g1.length))\n            .replace(/\\>/gm, '\\\\>')\n            .replace(/\\n/g, newlineStyle === 1 /* Break */ ? '\\\\\\n' : '\\n\\n');\n        return this;\n    }\n    appendMarkdown(value) {\n        this.value += value;\n        return this;\n    }\n    appendCodeblock(langId, code) {\n        this.value += '\\n```';\n        this.value += langId;\n        this.value += '\\n';\n        this.value += code;\n        this.value += '\\n```\\n';\n        return this;\n    }\n}\nexport function isEmptyMarkdownString(oneOrMany) {\n    if (isMarkdownString(oneOrMany)) {\n        return !oneOrMany.value;\n    }\n    else if (Array.isArray(oneOrMany)) {\n        return oneOrMany.every(isEmptyMarkdownString);\n    }\n    else {\n        return true;\n    }\n}\nexport function isMarkdownString(thing) {\n    if (thing instanceof MarkdownString) {\n        return true;\n    }\n    else if (thing && typeof thing === 'object') {\n        return typeof thing.value === 'string'\n            && (typeof thing.isTrusted === 'boolean' || thing.isTrusted === undefined)\n            && (typeof thing.supportThemeIcons === 'boolean' || thing.supportThemeIcons === undefined);\n    }\n    return false;\n}\nexport function escapeMarkdownSyntaxTokens(text) {\n    // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    return text.replace(/[\\\\`*_{}[\\]()#+\\-!]/g, '\\\\$&');\n}\nexport function removeMarkdownEscapes(text) {\n    if (!text) {\n        return text;\n    }\n    return text.replace(/\\\\([\\\\`*_{}[\\]()#+\\-.!])/g, '$1');\n}\nexport function parseHrefAndDimensions(href) {\n    const dimensions = [];\n    const splitted = href.split('|').map(s => s.trim());\n    href = splitted[0];\n    const parameters = splitted[1];\n    if (parameters) {\n        const heightFromParams = /height=(\\d+)/.exec(parameters);\n        const widthFromParams = /width=(\\d+)/.exec(parameters);\n        const height = heightFromParams ? heightFromParams[1] : '';\n        const width = widthFromParams ? widthFromParams[1] : '';\n        const widthIsFinite = isFinite(parseInt(width));\n        const heightIsFinite = isFinite(parseInt(height));\n        if (widthIsFinite) {\n            dimensions.push(`width=\"${width}\"`);\n        }\n        if (heightIsFinite) {\n            dimensions.push(`height=\"${height}\"`);\n        }\n    }\n    return { href, dimensions };\n}\n"]},"metadata":{},"sourceType":"module"}