{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../base/common/lifecycle.js';\nexport class ViewEventHandler extends Disposable {\n  constructor() {\n    super();\n    this._shouldRender = true;\n  }\n\n  shouldRender() {\n    return this._shouldRender;\n  }\n\n  forceShouldRender() {\n    this._shouldRender = true;\n  }\n\n  setShouldRender() {\n    this._shouldRender = true;\n  }\n\n  onDidRender() {\n    this._shouldRender = false;\n  } // --- begin event handlers\n\n\n  onCompositionStart(e) {\n    return false;\n  }\n\n  onCompositionEnd(e) {\n    return false;\n  }\n\n  onConfigurationChanged(e) {\n    return false;\n  }\n\n  onCursorStateChanged(e) {\n    return false;\n  }\n\n  onDecorationsChanged(e) {\n    return false;\n  }\n\n  onFlushed(e) {\n    return false;\n  }\n\n  onFocusChanged(e) {\n    return false;\n  }\n\n  onLanguageConfigurationChanged(e) {\n    return false;\n  }\n\n  onLineMappingChanged(e) {\n    return false;\n  }\n\n  onLinesChanged(e) {\n    return false;\n  }\n\n  onLinesDeleted(e) {\n    return false;\n  }\n\n  onLinesInserted(e) {\n    return false;\n  }\n\n  onRevealRangeRequest(e) {\n    return false;\n  }\n\n  onScrollChanged(e) {\n    return false;\n  }\n\n  onThemeChanged(e) {\n    return false;\n  }\n\n  onTokensChanged(e) {\n    return false;\n  }\n\n  onTokensColorsChanged(e) {\n    return false;\n  }\n\n  onZonesChanged(e) {\n    return false;\n  } // --- end event handlers\n\n\n  handleEvents(events) {\n    let shouldRender = false;\n\n    for (let i = 0, len = events.length; i < len; i++) {\n      const e = events[i];\n\n      switch (e.type) {\n        case 0\n        /* ViewCompositionStart */\n        :\n          if (this.onCompositionStart(e)) {\n            shouldRender = true;\n          }\n\n          break;\n\n        case 1\n        /* ViewCompositionEnd */\n        :\n          if (this.onCompositionEnd(e)) {\n            shouldRender = true;\n          }\n\n          break;\n\n        case 2\n        /* ViewConfigurationChanged */\n        :\n          if (this.onConfigurationChanged(e)) {\n            shouldRender = true;\n          }\n\n          break;\n\n        case 3\n        /* ViewCursorStateChanged */\n        :\n          if (this.onCursorStateChanged(e)) {\n            shouldRender = true;\n          }\n\n          break;\n\n        case 4\n        /* ViewDecorationsChanged */\n        :\n          if (this.onDecorationsChanged(e)) {\n            shouldRender = true;\n          }\n\n          break;\n\n        case 5\n        /* ViewFlushed */\n        :\n          if (this.onFlushed(e)) {\n            shouldRender = true;\n          }\n\n          break;\n\n        case 6\n        /* ViewFocusChanged */\n        :\n          if (this.onFocusChanged(e)) {\n            shouldRender = true;\n          }\n\n          break;\n\n        case 7\n        /* ViewLanguageConfigurationChanged */\n        :\n          if (this.onLanguageConfigurationChanged(e)) {\n            shouldRender = true;\n          }\n\n          break;\n\n        case 8\n        /* ViewLineMappingChanged */\n        :\n          if (this.onLineMappingChanged(e)) {\n            shouldRender = true;\n          }\n\n          break;\n\n        case 9\n        /* ViewLinesChanged */\n        :\n          if (this.onLinesChanged(e)) {\n            shouldRender = true;\n          }\n\n          break;\n\n        case 10\n        /* ViewLinesDeleted */\n        :\n          if (this.onLinesDeleted(e)) {\n            shouldRender = true;\n          }\n\n          break;\n\n        case 11\n        /* ViewLinesInserted */\n        :\n          if (this.onLinesInserted(e)) {\n            shouldRender = true;\n          }\n\n          break;\n\n        case 12\n        /* ViewRevealRangeRequest */\n        :\n          if (this.onRevealRangeRequest(e)) {\n            shouldRender = true;\n          }\n\n          break;\n\n        case 13\n        /* ViewScrollChanged */\n        :\n          if (this.onScrollChanged(e)) {\n            shouldRender = true;\n          }\n\n          break;\n\n        case 15\n        /* ViewTokensChanged */\n        :\n          if (this.onTokensChanged(e)) {\n            shouldRender = true;\n          }\n\n          break;\n\n        case 14\n        /* ViewThemeChanged */\n        :\n          if (this.onThemeChanged(e)) {\n            shouldRender = true;\n          }\n\n          break;\n\n        case 16\n        /* ViewTokensColorsChanged */\n        :\n          if (this.onTokensColorsChanged(e)) {\n            shouldRender = true;\n          }\n\n          break;\n\n        case 17\n        /* ViewZonesChanged */\n        :\n          if (this.onZonesChanged(e)) {\n            shouldRender = true;\n          }\n\n          break;\n\n        default:\n          console.info('View received unknown event: ');\n          console.info(e);\n      }\n    }\n\n    if (shouldRender) {\n      this._shouldRender = true;\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/common/viewModel/viewEventHandler.js"],"names":["Disposable","ViewEventHandler","constructor","_shouldRender","shouldRender","forceShouldRender","setShouldRender","onDidRender","onCompositionStart","e","onCompositionEnd","onConfigurationChanged","onCursorStateChanged","onDecorationsChanged","onFlushed","onFocusChanged","onLanguageConfigurationChanged","onLineMappingChanged","onLinesChanged","onLinesDeleted","onLinesInserted","onRevealRangeRequest","onScrollChanged","onThemeChanged","onTokensChanged","onTokensColorsChanged","onZonesChanged","handleEvents","events","i","len","length","type","console","info"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../base/common/lifecycle.js';\nexport class ViewEventHandler extends Disposable {\n    constructor() {\n        super();\n        this._shouldRender = true;\n    }\n    shouldRender() {\n        return this._shouldRender;\n    }\n    forceShouldRender() {\n        this._shouldRender = true;\n    }\n    setShouldRender() {\n        this._shouldRender = true;\n    }\n    onDidRender() {\n        this._shouldRender = false;\n    }\n    // --- begin event handlers\n    onCompositionStart(e) {\n        return false;\n    }\n    onCompositionEnd(e) {\n        return false;\n    }\n    onConfigurationChanged(e) {\n        return false;\n    }\n    onCursorStateChanged(e) {\n        return false;\n    }\n    onDecorationsChanged(e) {\n        return false;\n    }\n    onFlushed(e) {\n        return false;\n    }\n    onFocusChanged(e) {\n        return false;\n    }\n    onLanguageConfigurationChanged(e) {\n        return false;\n    }\n    onLineMappingChanged(e) {\n        return false;\n    }\n    onLinesChanged(e) {\n        return false;\n    }\n    onLinesDeleted(e) {\n        return false;\n    }\n    onLinesInserted(e) {\n        return false;\n    }\n    onRevealRangeRequest(e) {\n        return false;\n    }\n    onScrollChanged(e) {\n        return false;\n    }\n    onThemeChanged(e) {\n        return false;\n    }\n    onTokensChanged(e) {\n        return false;\n    }\n    onTokensColorsChanged(e) {\n        return false;\n    }\n    onZonesChanged(e) {\n        return false;\n    }\n    // --- end event handlers\n    handleEvents(events) {\n        let shouldRender = false;\n        for (let i = 0, len = events.length; i < len; i++) {\n            const e = events[i];\n            switch (e.type) {\n                case 0 /* ViewCompositionStart */:\n                    if (this.onCompositionStart(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 1 /* ViewCompositionEnd */:\n                    if (this.onCompositionEnd(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 2 /* ViewConfigurationChanged */:\n                    if (this.onConfigurationChanged(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 3 /* ViewCursorStateChanged */:\n                    if (this.onCursorStateChanged(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 4 /* ViewDecorationsChanged */:\n                    if (this.onDecorationsChanged(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 5 /* ViewFlushed */:\n                    if (this.onFlushed(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 6 /* ViewFocusChanged */:\n                    if (this.onFocusChanged(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 7 /* ViewLanguageConfigurationChanged */:\n                    if (this.onLanguageConfigurationChanged(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 8 /* ViewLineMappingChanged */:\n                    if (this.onLineMappingChanged(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 9 /* ViewLinesChanged */:\n                    if (this.onLinesChanged(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 10 /* ViewLinesDeleted */:\n                    if (this.onLinesDeleted(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 11 /* ViewLinesInserted */:\n                    if (this.onLinesInserted(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 12 /* ViewRevealRangeRequest */:\n                    if (this.onRevealRangeRequest(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 13 /* ViewScrollChanged */:\n                    if (this.onScrollChanged(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 15 /* ViewTokensChanged */:\n                    if (this.onTokensChanged(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 14 /* ViewThemeChanged */:\n                    if (this.onThemeChanged(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 16 /* ViewTokensColorsChanged */:\n                    if (this.onTokensColorsChanged(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 17 /* ViewZonesChanged */:\n                    if (this.onZonesChanged(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                default:\n                    console.info('View received unknown event: ');\n                    console.info(e);\n            }\n        }\n        if (shouldRender) {\n            this._shouldRender = true;\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}