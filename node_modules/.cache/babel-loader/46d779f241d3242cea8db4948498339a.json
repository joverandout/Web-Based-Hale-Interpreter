{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { DomEmitter } from '../../event.js';\nimport { renderFormattedText, renderText } from '../../formattedTextRenderer.js';\nimport { ActionBar } from '../actionbar/actionbar.js';\nimport * as aria from '../aria/aria.js';\nimport { ScrollableElement } from '../scrollbar/scrollableElement.js';\nimport { Widget } from '../widget.js';\nimport { Color } from '../../../common/color.js';\nimport { Emitter, Event } from '../../../common/event.js';\nimport { HistoryNavigator } from '../../../common/history.js';\nimport { mixin } from '../../../common/objects.js';\nimport './inputBox.css';\nimport * as nls from '../../../../nls.js';\nconst $ = dom.$;\nconst defaultOpts = {\n  inputBackground: Color.fromHex('#3C3C3C'),\n  inputForeground: Color.fromHex('#CCCCCC'),\n  inputValidationInfoBorder: Color.fromHex('#55AAFF'),\n  inputValidationInfoBackground: Color.fromHex('#063B49'),\n  inputValidationWarningBorder: Color.fromHex('#B89500'),\n  inputValidationWarningBackground: Color.fromHex('#352A05'),\n  inputValidationErrorBorder: Color.fromHex('#BE1100'),\n  inputValidationErrorBackground: Color.fromHex('#5A1D1D')\n};\nexport class InputBox extends Widget {\n  constructor(container, contextViewProvider, options) {\n    var _a;\n\n    super();\n    this.state = 'idle';\n    this.maxHeight = Number.POSITIVE_INFINITY;\n    this._onDidChange = this._register(new Emitter());\n    this.onDidChange = this._onDidChange.event;\n    this._onDidHeightChange = this._register(new Emitter());\n    this.onDidHeightChange = this._onDidHeightChange.event;\n    this.contextViewProvider = contextViewProvider;\n    this.options = options || Object.create(null);\n    mixin(this.options, defaultOpts, false);\n    this.message = null;\n    this.placeholder = this.options.placeholder || '';\n    this.tooltip = (_a = this.options.tooltip) !== null && _a !== void 0 ? _a : this.placeholder || '';\n    this.ariaLabel = this.options.ariaLabel || '';\n    this.inputBackground = this.options.inputBackground;\n    this.inputForeground = this.options.inputForeground;\n    this.inputBorder = this.options.inputBorder;\n    this.inputValidationInfoBorder = this.options.inputValidationInfoBorder;\n    this.inputValidationInfoBackground = this.options.inputValidationInfoBackground;\n    this.inputValidationInfoForeground = this.options.inputValidationInfoForeground;\n    this.inputValidationWarningBorder = this.options.inputValidationWarningBorder;\n    this.inputValidationWarningBackground = this.options.inputValidationWarningBackground;\n    this.inputValidationWarningForeground = this.options.inputValidationWarningForeground;\n    this.inputValidationErrorBorder = this.options.inputValidationErrorBorder;\n    this.inputValidationErrorBackground = this.options.inputValidationErrorBackground;\n    this.inputValidationErrorForeground = this.options.inputValidationErrorForeground;\n\n    if (this.options.validationOptions) {\n      this.validation = this.options.validationOptions.validation;\n    }\n\n    this.element = dom.append(container, $('.monaco-inputbox.idle'));\n    let tagName = this.options.flexibleHeight ? 'textarea' : 'input';\n    let wrapper = dom.append(this.element, $('.ibwrapper'));\n    this.input = dom.append(wrapper, $(tagName + '.input.empty'));\n    this.input.setAttribute('autocorrect', 'off');\n    this.input.setAttribute('autocapitalize', 'off');\n    this.input.setAttribute('spellcheck', 'false');\n    this.onfocus(this.input, () => this.element.classList.add('synthetic-focus'));\n    this.onblur(this.input, () => this.element.classList.remove('synthetic-focus'));\n\n    if (this.options.flexibleHeight) {\n      this.maxHeight = typeof this.options.flexibleMaxHeight === 'number' ? this.options.flexibleMaxHeight : Number.POSITIVE_INFINITY;\n      this.mirror = dom.append(wrapper, $('div.mirror'));\n      this.mirror.innerText = '\\u00a0';\n      this.scrollableElement = new ScrollableElement(this.element, {\n        vertical: 1\n        /* Auto */\n\n      });\n\n      if (this.options.flexibleWidth) {\n        this.input.setAttribute('wrap', 'off');\n        this.mirror.style.whiteSpace = 'pre';\n        this.mirror.style.wordWrap = 'initial';\n      }\n\n      dom.append(container, this.scrollableElement.getDomNode());\n\n      this._register(this.scrollableElement); // from ScrollableElement to DOM\n\n\n      this._register(this.scrollableElement.onScroll(e => this.input.scrollTop = e.scrollTop));\n\n      const onSelectionChange = this._register(new DomEmitter(document, 'selectionchange'));\n\n      const onAnchoredSelectionChange = Event.filter(onSelectionChange.event, () => {\n        const selection = document.getSelection();\n        return (selection === null || selection === void 0 ? void 0 : selection.anchorNode) === wrapper;\n      }); // from DOM to ScrollableElement\n\n      this._register(onAnchoredSelectionChange(this.updateScrollDimensions, this));\n\n      this._register(this.onDidHeightChange(this.updateScrollDimensions, this));\n    } else {\n      this.input.type = this.options.type || 'text';\n      this.input.setAttribute('wrap', 'off');\n    }\n\n    if (this.ariaLabel) {\n      this.input.setAttribute('aria-label', this.ariaLabel);\n    }\n\n    if (this.placeholder && !this.options.showPlaceholderOnFocus) {\n      this.setPlaceHolder(this.placeholder);\n    }\n\n    if (this.tooltip) {\n      this.setTooltip(this.tooltip);\n    }\n\n    this.oninput(this.input, () => this.onValueChange());\n    this.onblur(this.input, () => this.onBlur());\n    this.onfocus(this.input, () => this.onFocus());\n    this.ignoreGesture(this.input);\n    setTimeout(() => this.updateMirror(), 0); // Support actions\n\n    if (this.options.actions) {\n      this.actionbar = this._register(new ActionBar(this.element));\n      this.actionbar.push(this.options.actions, {\n        icon: true,\n        label: false\n      });\n    }\n\n    this.applyStyles();\n  }\n\n  onBlur() {\n    this._hideMessage();\n\n    if (this.options.showPlaceholderOnFocus) {\n      this.input.setAttribute('placeholder', '');\n    }\n  }\n\n  onFocus() {\n    this._showMessage();\n\n    if (this.options.showPlaceholderOnFocus) {\n      this.input.setAttribute('placeholder', this.placeholder || '');\n    }\n  }\n\n  setPlaceHolder(placeHolder) {\n    this.placeholder = placeHolder;\n    this.input.setAttribute('placeholder', placeHolder);\n  }\n\n  setTooltip(tooltip) {\n    this.tooltip = tooltip;\n    this.input.title = tooltip;\n  }\n\n  setAriaLabel(label) {\n    this.ariaLabel = label;\n\n    if (label) {\n      this.input.setAttribute('aria-label', this.ariaLabel);\n    } else {\n      this.input.removeAttribute('aria-label');\n    }\n  }\n\n  getAriaLabel() {\n    return this.ariaLabel;\n  }\n\n  get inputElement() {\n    return this.input;\n  }\n\n  get value() {\n    return this.input.value;\n  }\n\n  set value(newValue) {\n    if (this.input.value !== newValue) {\n      this.input.value = newValue;\n      this.onValueChange();\n    }\n  }\n\n  get height() {\n    return typeof this.cachedHeight === 'number' ? this.cachedHeight : dom.getTotalHeight(this.element);\n  }\n\n  focus() {\n    this.input.focus();\n  }\n\n  blur() {\n    this.input.blur();\n  }\n\n  hasFocus() {\n    return document.activeElement === this.input;\n  }\n\n  select(range = null) {\n    this.input.select();\n\n    if (range) {\n      this.input.setSelectionRange(range.start, range.end);\n\n      if (range.end === this.input.value.length) {\n        this.input.scrollLeft = this.input.scrollWidth;\n      }\n    }\n  }\n\n  isSelectionAtEnd() {\n    return this.input.selectionEnd === this.input.value.length && this.input.selectionStart === this.input.selectionEnd;\n  }\n\n  enable() {\n    this.input.removeAttribute('disabled');\n  }\n\n  disable() {\n    this.blur();\n    this.input.disabled = true;\n\n    this._hideMessage();\n  }\n\n  get width() {\n    return dom.getTotalWidth(this.input);\n  }\n\n  set width(width) {\n    if (this.options.flexibleHeight && this.options.flexibleWidth) {\n      // textarea with horizontal scrolling\n      let horizontalPadding = 0;\n\n      if (this.mirror) {\n        const paddingLeft = parseFloat(this.mirror.style.paddingLeft || '') || 0;\n        const paddingRight = parseFloat(this.mirror.style.paddingRight || '') || 0;\n        horizontalPadding = paddingLeft + paddingRight;\n      }\n\n      this.input.style.width = width - horizontalPadding + 'px';\n    } else {\n      this.input.style.width = width + 'px';\n    }\n\n    if (this.mirror) {\n      this.mirror.style.width = width + 'px';\n    }\n  }\n\n  set paddingRight(paddingRight) {\n    // Set width to avoid hint text overlapping buttons\n    this.input.style.width = `calc(100% - ${paddingRight}px)`;\n\n    if (this.mirror) {\n      this.mirror.style.paddingRight = paddingRight + 'px';\n    }\n  }\n\n  updateScrollDimensions() {\n    if (typeof this.cachedContentHeight !== 'number' || typeof this.cachedHeight !== 'number' || !this.scrollableElement) {\n      return;\n    }\n\n    const scrollHeight = this.cachedContentHeight;\n    const height = this.cachedHeight;\n    const scrollTop = this.input.scrollTop;\n    this.scrollableElement.setScrollDimensions({\n      scrollHeight,\n      height\n    });\n    this.scrollableElement.setScrollPosition({\n      scrollTop\n    });\n  }\n\n  showMessage(message, force) {\n    this.message = message;\n    this.element.classList.remove('idle');\n    this.element.classList.remove('info');\n    this.element.classList.remove('warning');\n    this.element.classList.remove('error');\n    this.element.classList.add(this.classForType(message.type));\n    const styles = this.stylesForType(this.message.type);\n    this.element.style.border = styles.border ? `1px solid ${styles.border}` : '';\n\n    if (this.hasFocus() || force) {\n      this._showMessage();\n    }\n  }\n\n  hideMessage() {\n    this.message = null;\n    this.element.classList.remove('info');\n    this.element.classList.remove('warning');\n    this.element.classList.remove('error');\n    this.element.classList.add('idle');\n\n    this._hideMessage();\n\n    this.applyStyles();\n  }\n\n  validate() {\n    let errorMsg = null;\n\n    if (this.validation) {\n      errorMsg = this.validation(this.value);\n\n      if (errorMsg) {\n        this.inputElement.setAttribute('aria-invalid', 'true');\n        this.showMessage(errorMsg);\n      } else if (this.inputElement.hasAttribute('aria-invalid')) {\n        this.inputElement.removeAttribute('aria-invalid');\n        this.hideMessage();\n      }\n    }\n\n    return errorMsg === null || errorMsg === void 0 ? void 0 : errorMsg.type;\n  }\n\n  stylesForType(type) {\n    switch (type) {\n      case 1\n      /* INFO */\n      :\n        return {\n          border: this.inputValidationInfoBorder,\n          background: this.inputValidationInfoBackground,\n          foreground: this.inputValidationInfoForeground\n        };\n\n      case 2\n      /* WARNING */\n      :\n        return {\n          border: this.inputValidationWarningBorder,\n          background: this.inputValidationWarningBackground,\n          foreground: this.inputValidationWarningForeground\n        };\n\n      default:\n        return {\n          border: this.inputValidationErrorBorder,\n          background: this.inputValidationErrorBackground,\n          foreground: this.inputValidationErrorForeground\n        };\n    }\n  }\n\n  classForType(type) {\n    switch (type) {\n      case 1\n      /* INFO */\n      :\n        return 'info';\n\n      case 2\n      /* WARNING */\n      :\n        return 'warning';\n\n      default:\n        return 'error';\n    }\n  }\n\n  _showMessage() {\n    if (!this.contextViewProvider || !this.message) {\n      return;\n    }\n\n    let div;\n\n    let layout = () => div.style.width = dom.getTotalWidth(this.element) + 'px';\n\n    this.contextViewProvider.showContextView({\n      getAnchor: () => this.element,\n      anchorAlignment: 1\n      /* RIGHT */\n      ,\n      render: container => {\n        if (!this.message) {\n          return null;\n        }\n\n        div = dom.append(container, $('.monaco-inputbox-container'));\n        layout();\n        const renderOptions = {\n          inline: true,\n          className: 'monaco-inputbox-message'\n        };\n        const spanElement = this.message.formatContent ? renderFormattedText(this.message.content, renderOptions) : renderText(this.message.content, renderOptions);\n        spanElement.classList.add(this.classForType(this.message.type));\n        const styles = this.stylesForType(this.message.type);\n        spanElement.style.backgroundColor = styles.background ? styles.background.toString() : '';\n        spanElement.style.color = styles.foreground ? styles.foreground.toString() : '';\n        spanElement.style.border = styles.border ? `1px solid ${styles.border}` : '';\n        dom.append(div, spanElement);\n        return null;\n      },\n      onHide: () => {\n        this.state = 'closed';\n      },\n      layout: layout\n    }); // ARIA Support\n\n    let alertText;\n\n    if (this.message.type === 3\n    /* ERROR */\n    ) {\n      alertText = nls.localize('alertErrorMessage', \"Error: {0}\", this.message.content);\n    } else if (this.message.type === 2\n    /* WARNING */\n    ) {\n      alertText = nls.localize('alertWarningMessage', \"Warning: {0}\", this.message.content);\n    } else {\n      alertText = nls.localize('alertInfoMessage', \"Info: {0}\", this.message.content);\n    }\n\n    aria.alert(alertText);\n    this.state = 'open';\n  }\n\n  _hideMessage() {\n    if (!this.contextViewProvider) {\n      return;\n    }\n\n    if (this.state === 'open') {\n      this.contextViewProvider.hideContextView();\n    }\n\n    this.state = 'idle';\n  }\n\n  onValueChange() {\n    this._onDidChange.fire(this.value);\n\n    this.validate();\n    this.updateMirror();\n    this.input.classList.toggle('empty', !this.value);\n\n    if (this.state === 'open' && this.contextViewProvider) {\n      this.contextViewProvider.layout();\n    }\n  }\n\n  updateMirror() {\n    if (!this.mirror) {\n      return;\n    }\n\n    const value = this.value;\n    const lastCharCode = value.charCodeAt(value.length - 1);\n    const suffix = lastCharCode === 10 ? ' ' : '';\n    const mirrorTextContent = (value + suffix).replace(/\\u000c/g, ''); // Don't measure with the form feed character, which messes up sizing\n\n    if (mirrorTextContent) {\n      this.mirror.textContent = value + suffix;\n    } else {\n      this.mirror.innerText = '\\u00a0';\n    }\n\n    this.layout();\n  }\n\n  style(styles) {\n    this.inputBackground = styles.inputBackground;\n    this.inputForeground = styles.inputForeground;\n    this.inputBorder = styles.inputBorder;\n    this.inputValidationInfoBackground = styles.inputValidationInfoBackground;\n    this.inputValidationInfoForeground = styles.inputValidationInfoForeground;\n    this.inputValidationInfoBorder = styles.inputValidationInfoBorder;\n    this.inputValidationWarningBackground = styles.inputValidationWarningBackground;\n    this.inputValidationWarningForeground = styles.inputValidationWarningForeground;\n    this.inputValidationWarningBorder = styles.inputValidationWarningBorder;\n    this.inputValidationErrorBackground = styles.inputValidationErrorBackground;\n    this.inputValidationErrorForeground = styles.inputValidationErrorForeground;\n    this.inputValidationErrorBorder = styles.inputValidationErrorBorder;\n    this.applyStyles();\n  }\n\n  applyStyles() {\n    const background = this.inputBackground ? this.inputBackground.toString() : '';\n    const foreground = this.inputForeground ? this.inputForeground.toString() : '';\n    const border = this.inputBorder ? this.inputBorder.toString() : '';\n    this.element.style.backgroundColor = background;\n    this.element.style.color = foreground;\n    this.input.style.backgroundColor = 'inherit';\n    this.input.style.color = foreground;\n    this.element.style.borderWidth = border ? '1px' : '';\n    this.element.style.borderStyle = border ? 'solid' : '';\n    this.element.style.borderColor = border;\n  }\n\n  layout() {\n    if (!this.mirror) {\n      return;\n    }\n\n    const previousHeight = this.cachedContentHeight;\n    this.cachedContentHeight = dom.getTotalHeight(this.mirror);\n\n    if (previousHeight !== this.cachedContentHeight) {\n      this.cachedHeight = Math.min(this.cachedContentHeight, this.maxHeight);\n      this.input.style.height = this.cachedHeight + 'px';\n\n      this._onDidHeightChange.fire(this.cachedContentHeight);\n    }\n  }\n\n  insertAtCursor(text) {\n    const inputElement = this.inputElement;\n    const start = inputElement.selectionStart;\n    const end = inputElement.selectionEnd;\n    const content = inputElement.value;\n\n    if (start !== null && end !== null) {\n      this.value = content.substr(0, start) + text + content.substr(end);\n      inputElement.setSelectionRange(start + 1, start + 1);\n      this.layout();\n    }\n  }\n\n  dispose() {\n    this._hideMessage();\n\n    this.message = null;\n\n    if (this.actionbar) {\n      this.actionbar.dispose();\n    }\n\n    super.dispose();\n  }\n\n}\nexport class HistoryInputBox extends InputBox {\n  constructor(container, contextViewProvider, options) {\n    const NLS_PLACEHOLDER_HISTORY_HINT = nls.localize({\n      key: 'history.inputbox.hint',\n      comment: ['Text will be prefixed with \\u21C5 plus a single space, then used as a hint where input field keeps history']\n    }, \"for history\");\n    const NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX = ` or \\u21C5 ${NLS_PLACEHOLDER_HISTORY_HINT}`;\n    const NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX_IN_PARENS = ` (\\u21C5 ${NLS_PLACEHOLDER_HISTORY_HINT})`;\n    super(container, contextViewProvider, options);\n    this.history = new HistoryNavigator(options.history, 100); // Function to append the history suffix to the placeholder if necessary\n\n    const addSuffix = () => {\n      if (options.showHistoryHint && options.showHistoryHint() && !this.placeholder.endsWith(NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX) && !this.placeholder.endsWith(NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX_IN_PARENS) && this.history.getHistory().length) {\n        const suffix = this.placeholder.endsWith(')') ? NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX : NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX_IN_PARENS;\n        const suffixedPlaceholder = this.placeholder + suffix;\n\n        if (options.showPlaceholderOnFocus && document.activeElement !== this.input) {\n          this.placeholder = suffixedPlaceholder;\n        } else {\n          this.setPlaceHolder(suffixedPlaceholder);\n        }\n      }\n    }; // Spot the change to the textarea class attribute which occurs when it changes between non-empty and empty,\n    // and add the history suffix to the placeholder if not yet present\n\n\n    this.observer = new MutationObserver((mutationList, observer) => {\n      mutationList.forEach(mutation => {\n        if (!mutation.target.textContent) {\n          addSuffix();\n        }\n      });\n    });\n    this.observer.observe(this.input, {\n      attributeFilter: ['class']\n    });\n    this.onfocus(this.input, () => addSuffix());\n    this.onblur(this.input, () => {\n      const resetPlaceholder = historyHint => {\n        if (!this.placeholder.endsWith(historyHint)) {\n          return false;\n        } else {\n          const revertedPlaceholder = this.placeholder.slice(0, this.placeholder.length - historyHint.length);\n\n          if (options.showPlaceholderOnFocus) {\n            this.placeholder = revertedPlaceholder;\n          } else {\n            this.setPlaceHolder(revertedPlaceholder);\n          }\n\n          return true;\n        }\n      };\n\n      if (!resetPlaceholder(NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX_IN_PARENS)) {\n        resetPlaceholder(NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX);\n      }\n    });\n  }\n\n  dispose() {\n    super.dispose();\n\n    if (this.observer) {\n      this.observer.disconnect();\n      this.observer = undefined;\n    }\n  }\n\n  addToHistory() {\n    if (this.value && this.value !== this.getCurrentValue()) {\n      this.history.add(this.value);\n    }\n  }\n\n  showNextValue() {\n    if (!this.history.has(this.value)) {\n      this.addToHistory();\n    }\n\n    let next = this.getNextValue();\n\n    if (next) {\n      next = next === this.value ? this.getNextValue() : next;\n    }\n\n    if (next) {\n      this.value = next;\n      aria.status(this.value);\n    }\n  }\n\n  showPreviousValue() {\n    if (!this.history.has(this.value)) {\n      this.addToHistory();\n    }\n\n    let previous = this.getPreviousValue();\n\n    if (previous) {\n      previous = previous === this.value ? this.getPreviousValue() : previous;\n    }\n\n    if (previous) {\n      this.value = previous;\n      aria.status(this.value);\n    }\n  }\n\n  getCurrentValue() {\n    let currentValue = this.history.current();\n\n    if (!currentValue) {\n      currentValue = this.history.last();\n      this.history.next();\n    }\n\n    return currentValue;\n  }\n\n  getPreviousValue() {\n    return this.history.previous() || this.history.first();\n  }\n\n  getNextValue() {\n    return this.history.next() || this.history.last();\n  }\n\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/base/browser/ui/inputbox/inputBox.js"],"names":["dom","DomEmitter","renderFormattedText","renderText","ActionBar","aria","ScrollableElement","Widget","Color","Emitter","Event","HistoryNavigator","mixin","nls","$","defaultOpts","inputBackground","fromHex","inputForeground","inputValidationInfoBorder","inputValidationInfoBackground","inputValidationWarningBorder","inputValidationWarningBackground","inputValidationErrorBorder","inputValidationErrorBackground","InputBox","constructor","container","contextViewProvider","options","_a","state","maxHeight","Number","POSITIVE_INFINITY","_onDidChange","_register","onDidChange","event","_onDidHeightChange","onDidHeightChange","Object","create","message","placeholder","tooltip","ariaLabel","inputBorder","inputValidationInfoForeground","inputValidationWarningForeground","inputValidationErrorForeground","validationOptions","validation","element","append","tagName","flexibleHeight","wrapper","input","setAttribute","onfocus","classList","add","onblur","remove","flexibleMaxHeight","mirror","innerText","scrollableElement","vertical","flexibleWidth","style","whiteSpace","wordWrap","getDomNode","onScroll","e","scrollTop","onSelectionChange","document","onAnchoredSelectionChange","filter","selection","getSelection","anchorNode","updateScrollDimensions","type","showPlaceholderOnFocus","setPlaceHolder","setTooltip","oninput","onValueChange","onBlur","onFocus","ignoreGesture","setTimeout","updateMirror","actions","actionbar","push","icon","label","applyStyles","_hideMessage","_showMessage","placeHolder","title","setAriaLabel","removeAttribute","getAriaLabel","inputElement","value","newValue","height","cachedHeight","getTotalHeight","focus","blur","hasFocus","activeElement","select","range","setSelectionRange","start","end","length","scrollLeft","scrollWidth","isSelectionAtEnd","selectionEnd","selectionStart","enable","disable","disabled","width","getTotalWidth","horizontalPadding","paddingLeft","parseFloat","paddingRight","cachedContentHeight","scrollHeight","setScrollDimensions","setScrollPosition","showMessage","force","classForType","styles","stylesForType","border","hideMessage","validate","errorMsg","hasAttribute","background","foreground","div","layout","showContextView","getAnchor","anchorAlignment","render","renderOptions","inline","className","spanElement","formatContent","content","backgroundColor","toString","color","onHide","alertText","localize","alert","hideContextView","fire","toggle","lastCharCode","charCodeAt","suffix","mirrorTextContent","replace","textContent","borderWidth","borderStyle","borderColor","previousHeight","Math","min","insertAtCursor","text","substr","dispose","HistoryInputBox","NLS_PLACEHOLDER_HISTORY_HINT","key","comment","NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX","NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX_IN_PARENS","history","addSuffix","showHistoryHint","endsWith","getHistory","suffixedPlaceholder","observer","MutationObserver","mutationList","forEach","mutation","target","observe","attributeFilter","resetPlaceholder","historyHint","revertedPlaceholder","slice","disconnect","undefined","addToHistory","getCurrentValue","showNextValue","has","next","getNextValue","status","showPreviousValue","previous","getPreviousValue","currentValue","current","last","first"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,KAAKA,GAAZ,MAAqB,cAArB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,mBAAT,EAA8BC,UAA9B,QAAgD,gCAAhD;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,OAAO,KAAKC,IAAZ,MAAsB,iBAAtB;AACA,SAASC,iBAAT,QAAkC,mCAAlC;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,KAAT,QAAsB,0BAAtB;AACA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,0BAA/B;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AACA,SAASC,KAAT,QAAsB,4BAAtB;AACA,OAAO,gBAAP;AACA,OAAO,KAAKC,GAAZ,MAAqB,oBAArB;AACA,MAAMC,CAAC,GAAGd,GAAG,CAACc,CAAd;AACA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,eAAe,EAAER,KAAK,CAACS,OAAN,CAAc,SAAd,CADD;AAEhBC,EAAAA,eAAe,EAAEV,KAAK,CAACS,OAAN,CAAc,SAAd,CAFD;AAGhBE,EAAAA,yBAAyB,EAAEX,KAAK,CAACS,OAAN,CAAc,SAAd,CAHX;AAIhBG,EAAAA,6BAA6B,EAAEZ,KAAK,CAACS,OAAN,CAAc,SAAd,CAJf;AAKhBI,EAAAA,4BAA4B,EAAEb,KAAK,CAACS,OAAN,CAAc,SAAd,CALd;AAMhBK,EAAAA,gCAAgC,EAAEd,KAAK,CAACS,OAAN,CAAc,SAAd,CANlB;AAOhBM,EAAAA,0BAA0B,EAAEf,KAAK,CAACS,OAAN,CAAc,SAAd,CAPZ;AAQhBO,EAAAA,8BAA8B,EAAEhB,KAAK,CAACS,OAAN,CAAc,SAAd;AARhB,CAApB;AAUA,OAAO,MAAMQ,QAAN,SAAuBlB,MAAvB,CAA8B;AACjCmB,EAAAA,WAAW,CAACC,SAAD,EAAYC,mBAAZ,EAAiCC,OAAjC,EAA0C;AACjD,QAAIC,EAAJ;;AACA;AACA,SAAKC,KAAL,GAAa,MAAb;AACA,SAAKC,SAAL,GAAiBC,MAAM,CAACC,iBAAxB;AACA,SAAKC,YAAL,GAAoB,KAAKC,SAAL,CAAe,IAAI3B,OAAJ,EAAf,CAApB;AACA,SAAK4B,WAAL,GAAmB,KAAKF,YAAL,CAAkBG,KAArC;AACA,SAAKC,kBAAL,GAA0B,KAAKH,SAAL,CAAe,IAAI3B,OAAJ,EAAf,CAA1B;AACA,SAAK+B,iBAAL,GAAyB,KAAKD,kBAAL,CAAwBD,KAAjD;AACA,SAAKV,mBAAL,GAA2BA,mBAA3B;AACA,SAAKC,OAAL,GAAeA,OAAO,IAAIY,MAAM,CAACC,MAAP,CAAc,IAAd,CAA1B;AACA9B,IAAAA,KAAK,CAAC,KAAKiB,OAAN,EAAed,WAAf,EAA4B,KAA5B,CAAL;AACA,SAAK4B,OAAL,GAAe,IAAf;AACA,SAAKC,WAAL,GAAmB,KAAKf,OAAL,CAAae,WAAb,IAA4B,EAA/C;AACA,SAAKC,OAAL,GAAe,CAACf,EAAE,GAAG,KAAKD,OAAL,CAAagB,OAAnB,MAAgC,IAAhC,IAAwCf,EAAE,KAAK,KAAK,CAApD,GAAwDA,EAAxD,GAA8D,KAAKc,WAAL,IAAoB,EAAjG;AACA,SAAKE,SAAL,GAAiB,KAAKjB,OAAL,CAAaiB,SAAb,IAA0B,EAA3C;AACA,SAAK9B,eAAL,GAAuB,KAAKa,OAAL,CAAab,eAApC;AACA,SAAKE,eAAL,GAAuB,KAAKW,OAAL,CAAaX,eAApC;AACA,SAAK6B,WAAL,GAAmB,KAAKlB,OAAL,CAAakB,WAAhC;AACA,SAAK5B,yBAAL,GAAiC,KAAKU,OAAL,CAAaV,yBAA9C;AACA,SAAKC,6BAAL,GAAqC,KAAKS,OAAL,CAAaT,6BAAlD;AACA,SAAK4B,6BAAL,GAAqC,KAAKnB,OAAL,CAAamB,6BAAlD;AACA,SAAK3B,4BAAL,GAAoC,KAAKQ,OAAL,CAAaR,4BAAjD;AACA,SAAKC,gCAAL,GAAwC,KAAKO,OAAL,CAAaP,gCAArD;AACA,SAAK2B,gCAAL,GAAwC,KAAKpB,OAAL,CAAaoB,gCAArD;AACA,SAAK1B,0BAAL,GAAkC,KAAKM,OAAL,CAAaN,0BAA/C;AACA,SAAKC,8BAAL,GAAsC,KAAKK,OAAL,CAAaL,8BAAnD;AACA,SAAK0B,8BAAL,GAAsC,KAAKrB,OAAL,CAAaqB,8BAAnD;;AACA,QAAI,KAAKrB,OAAL,CAAasB,iBAAjB,EAAoC;AAChC,WAAKC,UAAL,GAAkB,KAAKvB,OAAL,CAAasB,iBAAb,CAA+BC,UAAjD;AACH;;AACD,SAAKC,OAAL,GAAerD,GAAG,CAACsD,MAAJ,CAAW3B,SAAX,EAAsBb,CAAC,CAAC,uBAAD,CAAvB,CAAf;AACA,QAAIyC,OAAO,GAAG,KAAK1B,OAAL,CAAa2B,cAAb,GAA8B,UAA9B,GAA2C,OAAzD;AACA,QAAIC,OAAO,GAAGzD,GAAG,CAACsD,MAAJ,CAAW,KAAKD,OAAhB,EAAyBvC,CAAC,CAAC,YAAD,CAA1B,CAAd;AACA,SAAK4C,KAAL,GAAa1D,GAAG,CAACsD,MAAJ,CAAWG,OAAX,EAAoB3C,CAAC,CAACyC,OAAO,GAAG,cAAX,CAArB,CAAb;AACA,SAAKG,KAAL,CAAWC,YAAX,CAAwB,aAAxB,EAAuC,KAAvC;AACA,SAAKD,KAAL,CAAWC,YAAX,CAAwB,gBAAxB,EAA0C,KAA1C;AACA,SAAKD,KAAL,CAAWC,YAAX,CAAwB,YAAxB,EAAsC,OAAtC;AACA,SAAKC,OAAL,CAAa,KAAKF,KAAlB,EAAyB,MAAM,KAAKL,OAAL,CAAaQ,SAAb,CAAuBC,GAAvB,CAA2B,iBAA3B,CAA/B;AACA,SAAKC,MAAL,CAAY,KAAKL,KAAjB,EAAwB,MAAM,KAAKL,OAAL,CAAaQ,SAAb,CAAuBG,MAAvB,CAA8B,iBAA9B,CAA9B;;AACA,QAAI,KAAKnC,OAAL,CAAa2B,cAAjB,EAAiC;AAC7B,WAAKxB,SAAL,GAAiB,OAAO,KAAKH,OAAL,CAAaoC,iBAApB,KAA0C,QAA1C,GAAqD,KAAKpC,OAAL,CAAaoC,iBAAlE,GAAsFhC,MAAM,CAACC,iBAA9G;AACA,WAAKgC,MAAL,GAAclE,GAAG,CAACsD,MAAJ,CAAWG,OAAX,EAAoB3C,CAAC,CAAC,YAAD,CAArB,CAAd;AACA,WAAKoD,MAAL,CAAYC,SAAZ,GAAwB,QAAxB;AACA,WAAKC,iBAAL,GAAyB,IAAI9D,iBAAJ,CAAsB,KAAK+C,OAA3B,EAAoC;AAAEgB,QAAAA,QAAQ,EAAE;AAAE;;AAAd,OAApC,CAAzB;;AACA,UAAI,KAAKxC,OAAL,CAAayC,aAAjB,EAAgC;AAC5B,aAAKZ,KAAL,CAAWC,YAAX,CAAwB,MAAxB,EAAgC,KAAhC;AACA,aAAKO,MAAL,CAAYK,KAAZ,CAAkBC,UAAlB,GAA+B,KAA/B;AACA,aAAKN,MAAL,CAAYK,KAAZ,CAAkBE,QAAlB,GAA6B,SAA7B;AACH;;AACDzE,MAAAA,GAAG,CAACsD,MAAJ,CAAW3B,SAAX,EAAsB,KAAKyC,iBAAL,CAAuBM,UAAvB,EAAtB;;AACA,WAAKtC,SAAL,CAAe,KAAKgC,iBAApB,EAX6B,CAY7B;;;AACA,WAAKhC,SAAL,CAAe,KAAKgC,iBAAL,CAAuBO,QAAvB,CAAgCC,CAAC,IAAI,KAAKlB,KAAL,CAAWmB,SAAX,GAAuBD,CAAC,CAACC,SAA9D,CAAf;;AACA,YAAMC,iBAAiB,GAAG,KAAK1C,SAAL,CAAe,IAAInC,UAAJ,CAAe8E,QAAf,EAAyB,iBAAzB,CAAf,CAA1B;;AACA,YAAMC,yBAAyB,GAAGtE,KAAK,CAACuE,MAAN,CAAaH,iBAAiB,CAACxC,KAA/B,EAAsC,MAAM;AAC1E,cAAM4C,SAAS,GAAGH,QAAQ,CAACI,YAAT,EAAlB;AACA,eAAO,CAACD,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,GAA6C,KAAK,CAAlD,GAAsDA,SAAS,CAACE,UAAjE,MAAiF3B,OAAxF;AACH,OAHiC,CAAlC,CAf6B,CAmB7B;;AACA,WAAKrB,SAAL,CAAe4C,yBAAyB,CAAC,KAAKK,sBAAN,EAA8B,IAA9B,CAAxC;;AACA,WAAKjD,SAAL,CAAe,KAAKI,iBAAL,CAAuB,KAAK6C,sBAA5B,EAAoD,IAApD,CAAf;AACH,KAtBD,MAuBK;AACD,WAAK3B,KAAL,CAAW4B,IAAX,GAAkB,KAAKzD,OAAL,CAAayD,IAAb,IAAqB,MAAvC;AACA,WAAK5B,KAAL,CAAWC,YAAX,CAAwB,MAAxB,EAAgC,KAAhC;AACH;;AACD,QAAI,KAAKb,SAAT,EAAoB;AAChB,WAAKY,KAAL,CAAWC,YAAX,CAAwB,YAAxB,EAAsC,KAAKb,SAA3C;AACH;;AACD,QAAI,KAAKF,WAAL,IAAoB,CAAC,KAAKf,OAAL,CAAa0D,sBAAtC,EAA8D;AAC1D,WAAKC,cAAL,CAAoB,KAAK5C,WAAzB;AACH;;AACD,QAAI,KAAKC,OAAT,EAAkB;AACd,WAAK4C,UAAL,CAAgB,KAAK5C,OAArB;AACH;;AACD,SAAK6C,OAAL,CAAa,KAAKhC,KAAlB,EAAyB,MAAM,KAAKiC,aAAL,EAA/B;AACA,SAAK5B,MAAL,CAAY,KAAKL,KAAjB,EAAwB,MAAM,KAAKkC,MAAL,EAA9B;AACA,SAAKhC,OAAL,CAAa,KAAKF,KAAlB,EAAyB,MAAM,KAAKmC,OAAL,EAA/B;AACA,SAAKC,aAAL,CAAmB,KAAKpC,KAAxB;AACAqC,IAAAA,UAAU,CAAC,MAAM,KAAKC,YAAL,EAAP,EAA4B,CAA5B,CAAV,CAhFiD,CAiFjD;;AACA,QAAI,KAAKnE,OAAL,CAAaoE,OAAjB,EAA0B;AACtB,WAAKC,SAAL,GAAiB,KAAK9D,SAAL,CAAe,IAAIhC,SAAJ,CAAc,KAAKiD,OAAnB,CAAf,CAAjB;AACA,WAAK6C,SAAL,CAAeC,IAAf,CAAoB,KAAKtE,OAAL,CAAaoE,OAAjC,EAA0C;AAAEG,QAAAA,IAAI,EAAE,IAAR;AAAcC,QAAAA,KAAK,EAAE;AAArB,OAA1C;AACH;;AACD,SAAKC,WAAL;AACH;;AACDV,EAAAA,MAAM,GAAG;AACL,SAAKW,YAAL;;AACA,QAAI,KAAK1E,OAAL,CAAa0D,sBAAjB,EAAyC;AACrC,WAAK7B,KAAL,CAAWC,YAAX,CAAwB,aAAxB,EAAuC,EAAvC;AACH;AACJ;;AACDkC,EAAAA,OAAO,GAAG;AACN,SAAKW,YAAL;;AACA,QAAI,KAAK3E,OAAL,CAAa0D,sBAAjB,EAAyC;AACrC,WAAK7B,KAAL,CAAWC,YAAX,CAAwB,aAAxB,EAAuC,KAAKf,WAAL,IAAoB,EAA3D;AACH;AACJ;;AACD4C,EAAAA,cAAc,CAACiB,WAAD,EAAc;AACxB,SAAK7D,WAAL,GAAmB6D,WAAnB;AACA,SAAK/C,KAAL,CAAWC,YAAX,CAAwB,aAAxB,EAAuC8C,WAAvC;AACH;;AACDhB,EAAAA,UAAU,CAAC5C,OAAD,EAAU;AAChB,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKa,KAAL,CAAWgD,KAAX,GAAmB7D,OAAnB;AACH;;AACD8D,EAAAA,YAAY,CAACN,KAAD,EAAQ;AAChB,SAAKvD,SAAL,GAAiBuD,KAAjB;;AACA,QAAIA,KAAJ,EAAW;AACP,WAAK3C,KAAL,CAAWC,YAAX,CAAwB,YAAxB,EAAsC,KAAKb,SAA3C;AACH,KAFD,MAGK;AACD,WAAKY,KAAL,CAAWkD,eAAX,CAA2B,YAA3B;AACH;AACJ;;AACDC,EAAAA,YAAY,GAAG;AACX,WAAO,KAAK/D,SAAZ;AACH;;AACe,MAAZgE,YAAY,GAAG;AACf,WAAO,KAAKpD,KAAZ;AACH;;AACQ,MAALqD,KAAK,GAAG;AACR,WAAO,KAAKrD,KAAL,CAAWqD,KAAlB;AACH;;AACQ,MAALA,KAAK,CAACC,QAAD,EAAW;AAChB,QAAI,KAAKtD,KAAL,CAAWqD,KAAX,KAAqBC,QAAzB,EAAmC;AAC/B,WAAKtD,KAAL,CAAWqD,KAAX,GAAmBC,QAAnB;AACA,WAAKrB,aAAL;AACH;AACJ;;AACS,MAANsB,MAAM,GAAG;AACT,WAAO,OAAO,KAAKC,YAAZ,KAA6B,QAA7B,GAAwC,KAAKA,YAA7C,GAA4DlH,GAAG,CAACmH,cAAJ,CAAmB,KAAK9D,OAAxB,CAAnE;AACH;;AACD+D,EAAAA,KAAK,GAAG;AACJ,SAAK1D,KAAL,CAAW0D,KAAX;AACH;;AACDC,EAAAA,IAAI,GAAG;AACH,SAAK3D,KAAL,CAAW2D,IAAX;AACH;;AACDC,EAAAA,QAAQ,GAAG;AACP,WAAOvC,QAAQ,CAACwC,aAAT,KAA2B,KAAK7D,KAAvC;AACH;;AACD8D,EAAAA,MAAM,CAACC,KAAK,GAAG,IAAT,EAAe;AACjB,SAAK/D,KAAL,CAAW8D,MAAX;;AACA,QAAIC,KAAJ,EAAW;AACP,WAAK/D,KAAL,CAAWgE,iBAAX,CAA6BD,KAAK,CAACE,KAAnC,EAA0CF,KAAK,CAACG,GAAhD;;AACA,UAAIH,KAAK,CAACG,GAAN,KAAc,KAAKlE,KAAL,CAAWqD,KAAX,CAAiBc,MAAnC,EAA2C;AACvC,aAAKnE,KAAL,CAAWoE,UAAX,GAAwB,KAAKpE,KAAL,CAAWqE,WAAnC;AACH;AACJ;AACJ;;AACDC,EAAAA,gBAAgB,GAAG;AACf,WAAO,KAAKtE,KAAL,CAAWuE,YAAX,KAA4B,KAAKvE,KAAL,CAAWqD,KAAX,CAAiBc,MAA7C,IAAuD,KAAKnE,KAAL,CAAWwE,cAAX,KAA8B,KAAKxE,KAAL,CAAWuE,YAAvG;AACH;;AACDE,EAAAA,MAAM,GAAG;AACL,SAAKzE,KAAL,CAAWkD,eAAX,CAA2B,UAA3B;AACH;;AACDwB,EAAAA,OAAO,GAAG;AACN,SAAKf,IAAL;AACA,SAAK3D,KAAL,CAAW2E,QAAX,GAAsB,IAAtB;;AACA,SAAK9B,YAAL;AACH;;AACQ,MAAL+B,KAAK,GAAG;AACR,WAAOtI,GAAG,CAACuI,aAAJ,CAAkB,KAAK7E,KAAvB,CAAP;AACH;;AACQ,MAAL4E,KAAK,CAACA,KAAD,EAAQ;AACb,QAAI,KAAKzG,OAAL,CAAa2B,cAAb,IAA+B,KAAK3B,OAAL,CAAayC,aAAhD,EAA+D;AAC3D;AACA,UAAIkE,iBAAiB,GAAG,CAAxB;;AACA,UAAI,KAAKtE,MAAT,EAAiB;AACb,cAAMuE,WAAW,GAAGC,UAAU,CAAC,KAAKxE,MAAL,CAAYK,KAAZ,CAAkBkE,WAAlB,IAAiC,EAAlC,CAAV,IAAmD,CAAvE;AACA,cAAME,YAAY,GAAGD,UAAU,CAAC,KAAKxE,MAAL,CAAYK,KAAZ,CAAkBoE,YAAlB,IAAkC,EAAnC,CAAV,IAAoD,CAAzE;AACAH,QAAAA,iBAAiB,GAAGC,WAAW,GAAGE,YAAlC;AACH;;AACD,WAAKjF,KAAL,CAAWa,KAAX,CAAiB+D,KAAjB,GAA0BA,KAAK,GAAGE,iBAAT,GAA8B,IAAvD;AACH,KATD,MAUK;AACD,WAAK9E,KAAL,CAAWa,KAAX,CAAiB+D,KAAjB,GAAyBA,KAAK,GAAG,IAAjC;AACH;;AACD,QAAI,KAAKpE,MAAT,EAAiB;AACb,WAAKA,MAAL,CAAYK,KAAZ,CAAkB+D,KAAlB,GAA0BA,KAAK,GAAG,IAAlC;AACH;AACJ;;AACe,MAAZK,YAAY,CAACA,YAAD,EAAe;AAC3B;AACA,SAAKjF,KAAL,CAAWa,KAAX,CAAiB+D,KAAjB,GAA0B,eAAcK,YAAa,KAArD;;AACA,QAAI,KAAKzE,MAAT,EAAiB;AACb,WAAKA,MAAL,CAAYK,KAAZ,CAAkBoE,YAAlB,GAAiCA,YAAY,GAAG,IAAhD;AACH;AACJ;;AACDtD,EAAAA,sBAAsB,GAAG;AACrB,QAAI,OAAO,KAAKuD,mBAAZ,KAAoC,QAApC,IAAgD,OAAO,KAAK1B,YAAZ,KAA6B,QAA7E,IAAyF,CAAC,KAAK9C,iBAAnG,EAAsH;AAClH;AACH;;AACD,UAAMyE,YAAY,GAAG,KAAKD,mBAA1B;AACA,UAAM3B,MAAM,GAAG,KAAKC,YAApB;AACA,UAAMrC,SAAS,GAAG,KAAKnB,KAAL,CAAWmB,SAA7B;AACA,SAAKT,iBAAL,CAAuB0E,mBAAvB,CAA2C;AAAED,MAAAA,YAAF;AAAgB5B,MAAAA;AAAhB,KAA3C;AACA,SAAK7C,iBAAL,CAAuB2E,iBAAvB,CAAyC;AAAElE,MAAAA;AAAF,KAAzC;AACH;;AACDmE,EAAAA,WAAW,CAACrG,OAAD,EAAUsG,KAAV,EAAiB;AACxB,SAAKtG,OAAL,GAAeA,OAAf;AACA,SAAKU,OAAL,CAAaQ,SAAb,CAAuBG,MAAvB,CAA8B,MAA9B;AACA,SAAKX,OAAL,CAAaQ,SAAb,CAAuBG,MAAvB,CAA8B,MAA9B;AACA,SAAKX,OAAL,CAAaQ,SAAb,CAAuBG,MAAvB,CAA8B,SAA9B;AACA,SAAKX,OAAL,CAAaQ,SAAb,CAAuBG,MAAvB,CAA8B,OAA9B;AACA,SAAKX,OAAL,CAAaQ,SAAb,CAAuBC,GAAvB,CAA2B,KAAKoF,YAAL,CAAkBvG,OAAO,CAAC2C,IAA1B,CAA3B;AACA,UAAM6D,MAAM,GAAG,KAAKC,aAAL,CAAmB,KAAKzG,OAAL,CAAa2C,IAAhC,CAAf;AACA,SAAKjC,OAAL,CAAakB,KAAb,CAAmB8E,MAAnB,GAA4BF,MAAM,CAACE,MAAP,GAAiB,aAAYF,MAAM,CAACE,MAAO,EAA3C,GAA+C,EAA3E;;AACA,QAAI,KAAK/B,QAAL,MAAmB2B,KAAvB,EAA8B;AAC1B,WAAKzC,YAAL;AACH;AACJ;;AACD8C,EAAAA,WAAW,GAAG;AACV,SAAK3G,OAAL,GAAe,IAAf;AACA,SAAKU,OAAL,CAAaQ,SAAb,CAAuBG,MAAvB,CAA8B,MAA9B;AACA,SAAKX,OAAL,CAAaQ,SAAb,CAAuBG,MAAvB,CAA8B,SAA9B;AACA,SAAKX,OAAL,CAAaQ,SAAb,CAAuBG,MAAvB,CAA8B,OAA9B;AACA,SAAKX,OAAL,CAAaQ,SAAb,CAAuBC,GAAvB,CAA2B,MAA3B;;AACA,SAAKyC,YAAL;;AACA,SAAKD,WAAL;AACH;;AACDiD,EAAAA,QAAQ,GAAG;AACP,QAAIC,QAAQ,GAAG,IAAf;;AACA,QAAI,KAAKpG,UAAT,EAAqB;AACjBoG,MAAAA,QAAQ,GAAG,KAAKpG,UAAL,CAAgB,KAAK2D,KAArB,CAAX;;AACA,UAAIyC,QAAJ,EAAc;AACV,aAAK1C,YAAL,CAAkBnD,YAAlB,CAA+B,cAA/B,EAA+C,MAA/C;AACA,aAAKqF,WAAL,CAAiBQ,QAAjB;AACH,OAHD,MAIK,IAAI,KAAK1C,YAAL,CAAkB2C,YAAlB,CAA+B,cAA/B,CAAJ,EAAoD;AACrD,aAAK3C,YAAL,CAAkBF,eAAlB,CAAkC,cAAlC;AACA,aAAK0C,WAAL;AACH;AACJ;;AACD,WAAOE,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAAClE,IAApE;AACH;;AACD8D,EAAAA,aAAa,CAAC9D,IAAD,EAAO;AAChB,YAAQA,IAAR;AACI,WAAK;AAAE;AAAP;AAAmB,eAAO;AAAE+D,UAAAA,MAAM,EAAE,KAAKlI,yBAAf;AAA0CuI,UAAAA,UAAU,EAAE,KAAKtI,6BAA3D;AAA0FuI,UAAAA,UAAU,EAAE,KAAK3G;AAA3G,SAAP;;AACnB,WAAK;AAAE;AAAP;AAAsB,eAAO;AAAEqG,UAAAA,MAAM,EAAE,KAAKhI,4BAAf;AAA6CqI,UAAAA,UAAU,EAAE,KAAKpI,gCAA9D;AAAgGqI,UAAAA,UAAU,EAAE,KAAK1G;AAAjH,SAAP;;AACtB;AAAS,eAAO;AAAEoG,UAAAA,MAAM,EAAE,KAAK9H,0BAAf;AAA2CmI,UAAAA,UAAU,EAAE,KAAKlI,8BAA5D;AAA4FmI,UAAAA,UAAU,EAAE,KAAKzG;AAA7G,SAAP;AAHb;AAKH;;AACDgG,EAAAA,YAAY,CAAC5D,IAAD,EAAO;AACf,YAAQA,IAAR;AACI,WAAK;AAAE;AAAP;AAAmB,eAAO,MAAP;;AACnB,WAAK;AAAE;AAAP;AAAsB,eAAO,SAAP;;AACtB;AAAS,eAAO,OAAP;AAHb;AAKH;;AACDkB,EAAAA,YAAY,GAAG;AACX,QAAI,CAAC,KAAK5E,mBAAN,IAA6B,CAAC,KAAKe,OAAvC,EAAgD;AAC5C;AACH;;AACD,QAAIiH,GAAJ;;AACA,QAAIC,MAAM,GAAG,MAAMD,GAAG,CAACrF,KAAJ,CAAU+D,KAAV,GAAkBtI,GAAG,CAACuI,aAAJ,CAAkB,KAAKlF,OAAvB,IAAkC,IAAvE;;AACA,SAAKzB,mBAAL,CAAyBkI,eAAzB,CAAyC;AACrCC,MAAAA,SAAS,EAAE,MAAM,KAAK1G,OADe;AAErC2G,MAAAA,eAAe,EAAE;AAAE;AAFkB;AAGrCC,MAAAA,MAAM,EAAGtI,SAAD,IAAe;AACnB,YAAI,CAAC,KAAKgB,OAAV,EAAmB;AACf,iBAAO,IAAP;AACH;;AACDiH,QAAAA,GAAG,GAAG5J,GAAG,CAACsD,MAAJ,CAAW3B,SAAX,EAAsBb,CAAC,CAAC,4BAAD,CAAvB,CAAN;AACA+I,QAAAA,MAAM;AACN,cAAMK,aAAa,GAAG;AAClBC,UAAAA,MAAM,EAAE,IADU;AAElBC,UAAAA,SAAS,EAAE;AAFO,SAAtB;AAIA,cAAMC,WAAW,GAAI,KAAK1H,OAAL,CAAa2H,aAAb,GACfpK,mBAAmB,CAAC,KAAKyC,OAAL,CAAa4H,OAAd,EAAuBL,aAAvB,CADJ,GAEf/J,UAAU,CAAC,KAAKwC,OAAL,CAAa4H,OAAd,EAAuBL,aAAvB,CAFhB;AAGAG,QAAAA,WAAW,CAACxG,SAAZ,CAAsBC,GAAtB,CAA0B,KAAKoF,YAAL,CAAkB,KAAKvG,OAAL,CAAa2C,IAA/B,CAA1B;AACA,cAAM6D,MAAM,GAAG,KAAKC,aAAL,CAAmB,KAAKzG,OAAL,CAAa2C,IAAhC,CAAf;AACA+E,QAAAA,WAAW,CAAC9F,KAAZ,CAAkBiG,eAAlB,GAAoCrB,MAAM,CAACO,UAAP,GAAoBP,MAAM,CAACO,UAAP,CAAkBe,QAAlB,EAApB,GAAmD,EAAvF;AACAJ,QAAAA,WAAW,CAAC9F,KAAZ,CAAkBmG,KAAlB,GAA0BvB,MAAM,CAACQ,UAAP,GAAoBR,MAAM,CAACQ,UAAP,CAAkBc,QAAlB,EAApB,GAAmD,EAA7E;AACAJ,QAAAA,WAAW,CAAC9F,KAAZ,CAAkB8E,MAAlB,GAA2BF,MAAM,CAACE,MAAP,GAAiB,aAAYF,MAAM,CAACE,MAAO,EAA3C,GAA+C,EAA1E;AACArJ,QAAAA,GAAG,CAACsD,MAAJ,CAAWsG,GAAX,EAAgBS,WAAhB;AACA,eAAO,IAAP;AACH,OAvBoC;AAwBrCM,MAAAA,MAAM,EAAE,MAAM;AACV,aAAK5I,KAAL,GAAa,QAAb;AACH,OA1BoC;AA2BrC8H,MAAAA,MAAM,EAAEA;AA3B6B,KAAzC,EANW,CAmCX;;AACA,QAAIe,SAAJ;;AACA,QAAI,KAAKjI,OAAL,CAAa2C,IAAb,KAAsB;AAAE;AAA5B,MAAyC;AACrCsF,MAAAA,SAAS,GAAG/J,GAAG,CAACgK,QAAJ,CAAa,mBAAb,EAAkC,YAAlC,EAAgD,KAAKlI,OAAL,CAAa4H,OAA7D,CAAZ;AACH,KAFD,MAGK,IAAI,KAAK5H,OAAL,CAAa2C,IAAb,KAAsB;AAAE;AAA5B,MAA2C;AAC5CsF,MAAAA,SAAS,GAAG/J,GAAG,CAACgK,QAAJ,CAAa,qBAAb,EAAoC,cAApC,EAAoD,KAAKlI,OAAL,CAAa4H,OAAjE,CAAZ;AACH,KAFI,MAGA;AACDK,MAAAA,SAAS,GAAG/J,GAAG,CAACgK,QAAJ,CAAa,kBAAb,EAAiC,WAAjC,EAA8C,KAAKlI,OAAL,CAAa4H,OAA3D,CAAZ;AACH;;AACDlK,IAAAA,IAAI,CAACyK,KAAL,CAAWF,SAAX;AACA,SAAK7I,KAAL,GAAa,MAAb;AACH;;AACDwE,EAAAA,YAAY,GAAG;AACX,QAAI,CAAC,KAAK3E,mBAAV,EAA+B;AAC3B;AACH;;AACD,QAAI,KAAKG,KAAL,KAAe,MAAnB,EAA2B;AACvB,WAAKH,mBAAL,CAAyBmJ,eAAzB;AACH;;AACD,SAAKhJ,KAAL,GAAa,MAAb;AACH;;AACD4D,EAAAA,aAAa,GAAG;AACZ,SAAKxD,YAAL,CAAkB6I,IAAlB,CAAuB,KAAKjE,KAA5B;;AACA,SAAKwC,QAAL;AACA,SAAKvD,YAAL;AACA,SAAKtC,KAAL,CAAWG,SAAX,CAAqBoH,MAArB,CAA4B,OAA5B,EAAqC,CAAC,KAAKlE,KAA3C;;AACA,QAAI,KAAKhF,KAAL,KAAe,MAAf,IAAyB,KAAKH,mBAAlC,EAAuD;AACnD,WAAKA,mBAAL,CAAyBiI,MAAzB;AACH;AACJ;;AACD7D,EAAAA,YAAY,GAAG;AACX,QAAI,CAAC,KAAK9B,MAAV,EAAkB;AACd;AACH;;AACD,UAAM6C,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAMmE,YAAY,GAAGnE,KAAK,CAACoE,UAAN,CAAiBpE,KAAK,CAACc,MAAN,GAAe,CAAhC,CAArB;AACA,UAAMuD,MAAM,GAAGF,YAAY,KAAK,EAAjB,GAAsB,GAAtB,GAA4B,EAA3C;AACA,UAAMG,iBAAiB,GAAG,CAACtE,KAAK,GAAGqE,MAAT,EACrBE,OADqB,CACb,SADa,EACF,EADE,CAA1B,CAPW,CAQkB;;AAC7B,QAAID,iBAAJ,EAAuB;AACnB,WAAKnH,MAAL,CAAYqH,WAAZ,GAA0BxE,KAAK,GAAGqE,MAAlC;AACH,KAFD,MAGK;AACD,WAAKlH,MAAL,CAAYC,SAAZ,GAAwB,QAAxB;AACH;;AACD,SAAK0F,MAAL;AACH;;AACDtF,EAAAA,KAAK,CAAC4E,MAAD,EAAS;AACV,SAAKnI,eAAL,GAAuBmI,MAAM,CAACnI,eAA9B;AACA,SAAKE,eAAL,GAAuBiI,MAAM,CAACjI,eAA9B;AACA,SAAK6B,WAAL,GAAmBoG,MAAM,CAACpG,WAA1B;AACA,SAAK3B,6BAAL,GAAqC+H,MAAM,CAAC/H,6BAA5C;AACA,SAAK4B,6BAAL,GAAqCmG,MAAM,CAACnG,6BAA5C;AACA,SAAK7B,yBAAL,GAAiCgI,MAAM,CAAChI,yBAAxC;AACA,SAAKG,gCAAL,GAAwC6H,MAAM,CAAC7H,gCAA/C;AACA,SAAK2B,gCAAL,GAAwCkG,MAAM,CAAClG,gCAA/C;AACA,SAAK5B,4BAAL,GAAoC8H,MAAM,CAAC9H,4BAA3C;AACA,SAAKG,8BAAL,GAAsC2H,MAAM,CAAC3H,8BAA7C;AACA,SAAK0B,8BAAL,GAAsCiG,MAAM,CAACjG,8BAA7C;AACA,SAAK3B,0BAAL,GAAkC4H,MAAM,CAAC5H,0BAAzC;AACA,SAAK+E,WAAL;AACH;;AACDA,EAAAA,WAAW,GAAG;AACV,UAAMoD,UAAU,GAAG,KAAK1I,eAAL,GAAuB,KAAKA,eAAL,CAAqByJ,QAArB,EAAvB,GAAyD,EAA5E;AACA,UAAMd,UAAU,GAAG,KAAKzI,eAAL,GAAuB,KAAKA,eAAL,CAAqBuJ,QAArB,EAAvB,GAAyD,EAA5E;AACA,UAAMpB,MAAM,GAAG,KAAKtG,WAAL,GAAmB,KAAKA,WAAL,CAAiB0H,QAAjB,EAAnB,GAAiD,EAAhE;AACA,SAAKpH,OAAL,CAAakB,KAAb,CAAmBiG,eAAnB,GAAqCd,UAArC;AACA,SAAKrG,OAAL,CAAakB,KAAb,CAAmBmG,KAAnB,GAA2Bf,UAA3B;AACA,SAAKjG,KAAL,CAAWa,KAAX,CAAiBiG,eAAjB,GAAmC,SAAnC;AACA,SAAK9G,KAAL,CAAWa,KAAX,CAAiBmG,KAAjB,GAAyBf,UAAzB;AACA,SAAKtG,OAAL,CAAakB,KAAb,CAAmBiH,WAAnB,GAAiCnC,MAAM,GAAG,KAAH,GAAW,EAAlD;AACA,SAAKhG,OAAL,CAAakB,KAAb,CAAmBkH,WAAnB,GAAiCpC,MAAM,GAAG,OAAH,GAAa,EAApD;AACA,SAAKhG,OAAL,CAAakB,KAAb,CAAmBmH,WAAnB,GAAiCrC,MAAjC;AACH;;AACDQ,EAAAA,MAAM,GAAG;AACL,QAAI,CAAC,KAAK3F,MAAV,EAAkB;AACd;AACH;;AACD,UAAMyH,cAAc,GAAG,KAAK/C,mBAA5B;AACA,SAAKA,mBAAL,GAA2B5I,GAAG,CAACmH,cAAJ,CAAmB,KAAKjD,MAAxB,CAA3B;;AACA,QAAIyH,cAAc,KAAK,KAAK/C,mBAA5B,EAAiD;AAC7C,WAAK1B,YAAL,GAAoB0E,IAAI,CAACC,GAAL,CAAS,KAAKjD,mBAAd,EAAmC,KAAK5G,SAAxC,CAApB;AACA,WAAK0B,KAAL,CAAWa,KAAX,CAAiB0C,MAAjB,GAA0B,KAAKC,YAAL,GAAoB,IAA9C;;AACA,WAAK3E,kBAAL,CAAwByI,IAAxB,CAA6B,KAAKpC,mBAAlC;AACH;AACJ;;AACDkD,EAAAA,cAAc,CAACC,IAAD,EAAO;AACjB,UAAMjF,YAAY,GAAG,KAAKA,YAA1B;AACA,UAAMa,KAAK,GAAGb,YAAY,CAACoB,cAA3B;AACA,UAAMN,GAAG,GAAGd,YAAY,CAACmB,YAAzB;AACA,UAAMsC,OAAO,GAAGzD,YAAY,CAACC,KAA7B;;AACA,QAAIY,KAAK,KAAK,IAAV,IAAkBC,GAAG,KAAK,IAA9B,EAAoC;AAChC,WAAKb,KAAL,GAAawD,OAAO,CAACyB,MAAR,CAAe,CAAf,EAAkBrE,KAAlB,IAA2BoE,IAA3B,GAAkCxB,OAAO,CAACyB,MAAR,CAAepE,GAAf,CAA/C;AACAd,MAAAA,YAAY,CAACY,iBAAb,CAA+BC,KAAK,GAAG,CAAvC,EAA0CA,KAAK,GAAG,CAAlD;AACA,WAAKkC,MAAL;AACH;AACJ;;AACDoC,EAAAA,OAAO,GAAG;AACN,SAAK1F,YAAL;;AACA,SAAK5D,OAAL,GAAe,IAAf;;AACA,QAAI,KAAKuD,SAAT,EAAoB;AAChB,WAAKA,SAAL,CAAe+F,OAAf;AACH;;AACD,UAAMA,OAAN;AACH;;AA3YgC;AA6YrC,OAAO,MAAMC,eAAN,SAA8BzK,QAA9B,CAAuC;AAC1CC,EAAAA,WAAW,CAACC,SAAD,EAAYC,mBAAZ,EAAiCC,OAAjC,EAA0C;AACjD,UAAMsK,4BAA4B,GAAGtL,GAAG,CAACgK,QAAJ,CAAa;AAAEuB,MAAAA,GAAG,EAAE,uBAAP;AAAgCC,MAAAA,OAAO,EAAE,CAAC,4GAAD;AAAzC,KAAb,EAAwK,aAAxK,CAArC;AACA,UAAMC,mCAAmC,GAAI,cAAaH,4BAA6B,EAAvF;AACA,UAAMI,6CAA6C,GAAI,YAAWJ,4BAA6B,GAA/F;AACA,UAAMxK,SAAN,EAAiBC,mBAAjB,EAAsCC,OAAtC;AACA,SAAK2K,OAAL,GAAe,IAAI7L,gBAAJ,CAAqBkB,OAAO,CAAC2K,OAA7B,EAAsC,GAAtC,CAAf,CALiD,CAMjD;;AACA,UAAMC,SAAS,GAAG,MAAM;AACpB,UAAI5K,OAAO,CAAC6K,eAAR,IAA2B7K,OAAO,CAAC6K,eAAR,EAA3B,IAAwD,CAAC,KAAK9J,WAAL,CAAiB+J,QAAjB,CAA0BL,mCAA1B,CAAzD,IAA2H,CAAC,KAAK1J,WAAL,CAAiB+J,QAAjB,CAA0BJ,6CAA1B,CAA5H,IAAwM,KAAKC,OAAL,CAAaI,UAAb,GAA0B/E,MAAtO,EAA8O;AAC1O,cAAMuD,MAAM,GAAG,KAAKxI,WAAL,CAAiB+J,QAAjB,CAA0B,GAA1B,IAAiCL,mCAAjC,GAAuEC,6CAAtF;AACA,cAAMM,mBAAmB,GAAG,KAAKjK,WAAL,GAAmBwI,MAA/C;;AACA,YAAIvJ,OAAO,CAAC0D,sBAAR,IAAkCR,QAAQ,CAACwC,aAAT,KAA2B,KAAK7D,KAAtE,EAA6E;AACzE,eAAKd,WAAL,GAAmBiK,mBAAnB;AACH,SAFD,MAGK;AACD,eAAKrH,cAAL,CAAoBqH,mBAApB;AACH;AACJ;AACJ,KAXD,CAPiD,CAmBjD;AACA;;;AACA,SAAKC,QAAL,GAAgB,IAAIC,gBAAJ,CAAqB,CAACC,YAAD,EAAeF,QAAf,KAA4B;AAC7DE,MAAAA,YAAY,CAACC,OAAb,CAAsBC,QAAD,IAAc;AAC/B,YAAI,CAACA,QAAQ,CAACC,MAAT,CAAgB5B,WAArB,EAAkC;AAC9BkB,UAAAA,SAAS;AACZ;AACJ,OAJD;AAKH,KANe,CAAhB;AAOA,SAAKK,QAAL,CAAcM,OAAd,CAAsB,KAAK1J,KAA3B,EAAkC;AAAE2J,MAAAA,eAAe,EAAE,CAAC,OAAD;AAAnB,KAAlC;AACA,SAAKzJ,OAAL,CAAa,KAAKF,KAAlB,EAAyB,MAAM+I,SAAS,EAAxC;AACA,SAAK1I,MAAL,CAAY,KAAKL,KAAjB,EAAwB,MAAM;AAC1B,YAAM4J,gBAAgB,GAAIC,WAAD,IAAiB;AACtC,YAAI,CAAC,KAAK3K,WAAL,CAAiB+J,QAAjB,CAA0BY,WAA1B,CAAL,EAA6C;AACzC,iBAAO,KAAP;AACH,SAFD,MAGK;AACD,gBAAMC,mBAAmB,GAAG,KAAK5K,WAAL,CAAiB6K,KAAjB,CAAuB,CAAvB,EAA0B,KAAK7K,WAAL,CAAiBiF,MAAjB,GAA0B0F,WAAW,CAAC1F,MAAhE,CAA5B;;AACA,cAAIhG,OAAO,CAAC0D,sBAAZ,EAAoC;AAChC,iBAAK3C,WAAL,GAAmB4K,mBAAnB;AACH,WAFD,MAGK;AACD,iBAAKhI,cAAL,CAAoBgI,mBAApB;AACH;;AACD,iBAAO,IAAP;AACH;AACJ,OAdD;;AAeA,UAAI,CAACF,gBAAgB,CAACf,6CAAD,CAArB,EAAsE;AAClEe,QAAAA,gBAAgB,CAAChB,mCAAD,CAAhB;AACH;AACJ,KAnBD;AAoBH;;AACDL,EAAAA,OAAO,GAAG;AACN,UAAMA,OAAN;;AACA,QAAI,KAAKa,QAAT,EAAmB;AACf,WAAKA,QAAL,CAAcY,UAAd;AACA,WAAKZ,QAAL,GAAgBa,SAAhB;AACH;AACJ;;AACDC,EAAAA,YAAY,GAAG;AACX,QAAI,KAAK7G,KAAL,IAAc,KAAKA,KAAL,KAAe,KAAK8G,eAAL,EAAjC,EAAyD;AACrD,WAAKrB,OAAL,CAAa1I,GAAb,CAAiB,KAAKiD,KAAtB;AACH;AACJ;;AACD+G,EAAAA,aAAa,GAAG;AACZ,QAAI,CAAC,KAAKtB,OAAL,CAAauB,GAAb,CAAiB,KAAKhH,KAAtB,CAAL,EAAmC;AAC/B,WAAK6G,YAAL;AACH;;AACD,QAAII,IAAI,GAAG,KAAKC,YAAL,EAAX;;AACA,QAAID,IAAJ,EAAU;AACNA,MAAAA,IAAI,GAAGA,IAAI,KAAK,KAAKjH,KAAd,GAAsB,KAAKkH,YAAL,EAAtB,GAA4CD,IAAnD;AACH;;AACD,QAAIA,IAAJ,EAAU;AACN,WAAKjH,KAAL,GAAaiH,IAAb;AACA3N,MAAAA,IAAI,CAAC6N,MAAL,CAAY,KAAKnH,KAAjB;AACH;AACJ;;AACDoH,EAAAA,iBAAiB,GAAG;AAChB,QAAI,CAAC,KAAK3B,OAAL,CAAauB,GAAb,CAAiB,KAAKhH,KAAtB,CAAL,EAAmC;AAC/B,WAAK6G,YAAL;AACH;;AACD,QAAIQ,QAAQ,GAAG,KAAKC,gBAAL,EAAf;;AACA,QAAID,QAAJ,EAAc;AACVA,MAAAA,QAAQ,GAAGA,QAAQ,KAAK,KAAKrH,KAAlB,GAA0B,KAAKsH,gBAAL,EAA1B,GAAoDD,QAA/D;AACH;;AACD,QAAIA,QAAJ,EAAc;AACV,WAAKrH,KAAL,GAAaqH,QAAb;AACA/N,MAAAA,IAAI,CAAC6N,MAAL,CAAY,KAAKnH,KAAjB;AACH;AACJ;;AACD8G,EAAAA,eAAe,GAAG;AACd,QAAIS,YAAY,GAAG,KAAK9B,OAAL,CAAa+B,OAAb,EAAnB;;AACA,QAAI,CAACD,YAAL,EAAmB;AACfA,MAAAA,YAAY,GAAG,KAAK9B,OAAL,CAAagC,IAAb,EAAf;AACA,WAAKhC,OAAL,CAAawB,IAAb;AACH;;AACD,WAAOM,YAAP;AACH;;AACDD,EAAAA,gBAAgB,GAAG;AACf,WAAO,KAAK7B,OAAL,CAAa4B,QAAb,MAA2B,KAAK5B,OAAL,CAAaiC,KAAb,EAAlC;AACH;;AACDR,EAAAA,YAAY,GAAG;AACX,WAAO,KAAKzB,OAAL,CAAawB,IAAb,MAAuB,KAAKxB,OAAL,CAAagC,IAAb,EAA9B;AACH;;AAvGyC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { DomEmitter } from '../../event.js';\nimport { renderFormattedText, renderText } from '../../formattedTextRenderer.js';\nimport { ActionBar } from '../actionbar/actionbar.js';\nimport * as aria from '../aria/aria.js';\nimport { ScrollableElement } from '../scrollbar/scrollableElement.js';\nimport { Widget } from '../widget.js';\nimport { Color } from '../../../common/color.js';\nimport { Emitter, Event } from '../../../common/event.js';\nimport { HistoryNavigator } from '../../../common/history.js';\nimport { mixin } from '../../../common/objects.js';\nimport './inputBox.css';\nimport * as nls from '../../../../nls.js';\nconst $ = dom.$;\nconst defaultOpts = {\n    inputBackground: Color.fromHex('#3C3C3C'),\n    inputForeground: Color.fromHex('#CCCCCC'),\n    inputValidationInfoBorder: Color.fromHex('#55AAFF'),\n    inputValidationInfoBackground: Color.fromHex('#063B49'),\n    inputValidationWarningBorder: Color.fromHex('#B89500'),\n    inputValidationWarningBackground: Color.fromHex('#352A05'),\n    inputValidationErrorBorder: Color.fromHex('#BE1100'),\n    inputValidationErrorBackground: Color.fromHex('#5A1D1D')\n};\nexport class InputBox extends Widget {\n    constructor(container, contextViewProvider, options) {\n        var _a;\n        super();\n        this.state = 'idle';\n        this.maxHeight = Number.POSITIVE_INFINITY;\n        this._onDidChange = this._register(new Emitter());\n        this.onDidChange = this._onDidChange.event;\n        this._onDidHeightChange = this._register(new Emitter());\n        this.onDidHeightChange = this._onDidHeightChange.event;\n        this.contextViewProvider = contextViewProvider;\n        this.options = options || Object.create(null);\n        mixin(this.options, defaultOpts, false);\n        this.message = null;\n        this.placeholder = this.options.placeholder || '';\n        this.tooltip = (_a = this.options.tooltip) !== null && _a !== void 0 ? _a : (this.placeholder || '');\n        this.ariaLabel = this.options.ariaLabel || '';\n        this.inputBackground = this.options.inputBackground;\n        this.inputForeground = this.options.inputForeground;\n        this.inputBorder = this.options.inputBorder;\n        this.inputValidationInfoBorder = this.options.inputValidationInfoBorder;\n        this.inputValidationInfoBackground = this.options.inputValidationInfoBackground;\n        this.inputValidationInfoForeground = this.options.inputValidationInfoForeground;\n        this.inputValidationWarningBorder = this.options.inputValidationWarningBorder;\n        this.inputValidationWarningBackground = this.options.inputValidationWarningBackground;\n        this.inputValidationWarningForeground = this.options.inputValidationWarningForeground;\n        this.inputValidationErrorBorder = this.options.inputValidationErrorBorder;\n        this.inputValidationErrorBackground = this.options.inputValidationErrorBackground;\n        this.inputValidationErrorForeground = this.options.inputValidationErrorForeground;\n        if (this.options.validationOptions) {\n            this.validation = this.options.validationOptions.validation;\n        }\n        this.element = dom.append(container, $('.monaco-inputbox.idle'));\n        let tagName = this.options.flexibleHeight ? 'textarea' : 'input';\n        let wrapper = dom.append(this.element, $('.ibwrapper'));\n        this.input = dom.append(wrapper, $(tagName + '.input.empty'));\n        this.input.setAttribute('autocorrect', 'off');\n        this.input.setAttribute('autocapitalize', 'off');\n        this.input.setAttribute('spellcheck', 'false');\n        this.onfocus(this.input, () => this.element.classList.add('synthetic-focus'));\n        this.onblur(this.input, () => this.element.classList.remove('synthetic-focus'));\n        if (this.options.flexibleHeight) {\n            this.maxHeight = typeof this.options.flexibleMaxHeight === 'number' ? this.options.flexibleMaxHeight : Number.POSITIVE_INFINITY;\n            this.mirror = dom.append(wrapper, $('div.mirror'));\n            this.mirror.innerText = '\\u00a0';\n            this.scrollableElement = new ScrollableElement(this.element, { vertical: 1 /* Auto */ });\n            if (this.options.flexibleWidth) {\n                this.input.setAttribute('wrap', 'off');\n                this.mirror.style.whiteSpace = 'pre';\n                this.mirror.style.wordWrap = 'initial';\n            }\n            dom.append(container, this.scrollableElement.getDomNode());\n            this._register(this.scrollableElement);\n            // from ScrollableElement to DOM\n            this._register(this.scrollableElement.onScroll(e => this.input.scrollTop = e.scrollTop));\n            const onSelectionChange = this._register(new DomEmitter(document, 'selectionchange'));\n            const onAnchoredSelectionChange = Event.filter(onSelectionChange.event, () => {\n                const selection = document.getSelection();\n                return (selection === null || selection === void 0 ? void 0 : selection.anchorNode) === wrapper;\n            });\n            // from DOM to ScrollableElement\n            this._register(onAnchoredSelectionChange(this.updateScrollDimensions, this));\n            this._register(this.onDidHeightChange(this.updateScrollDimensions, this));\n        }\n        else {\n            this.input.type = this.options.type || 'text';\n            this.input.setAttribute('wrap', 'off');\n        }\n        if (this.ariaLabel) {\n            this.input.setAttribute('aria-label', this.ariaLabel);\n        }\n        if (this.placeholder && !this.options.showPlaceholderOnFocus) {\n            this.setPlaceHolder(this.placeholder);\n        }\n        if (this.tooltip) {\n            this.setTooltip(this.tooltip);\n        }\n        this.oninput(this.input, () => this.onValueChange());\n        this.onblur(this.input, () => this.onBlur());\n        this.onfocus(this.input, () => this.onFocus());\n        this.ignoreGesture(this.input);\n        setTimeout(() => this.updateMirror(), 0);\n        // Support actions\n        if (this.options.actions) {\n            this.actionbar = this._register(new ActionBar(this.element));\n            this.actionbar.push(this.options.actions, { icon: true, label: false });\n        }\n        this.applyStyles();\n    }\n    onBlur() {\n        this._hideMessage();\n        if (this.options.showPlaceholderOnFocus) {\n            this.input.setAttribute('placeholder', '');\n        }\n    }\n    onFocus() {\n        this._showMessage();\n        if (this.options.showPlaceholderOnFocus) {\n            this.input.setAttribute('placeholder', this.placeholder || '');\n        }\n    }\n    setPlaceHolder(placeHolder) {\n        this.placeholder = placeHolder;\n        this.input.setAttribute('placeholder', placeHolder);\n    }\n    setTooltip(tooltip) {\n        this.tooltip = tooltip;\n        this.input.title = tooltip;\n    }\n    setAriaLabel(label) {\n        this.ariaLabel = label;\n        if (label) {\n            this.input.setAttribute('aria-label', this.ariaLabel);\n        }\n        else {\n            this.input.removeAttribute('aria-label');\n        }\n    }\n    getAriaLabel() {\n        return this.ariaLabel;\n    }\n    get inputElement() {\n        return this.input;\n    }\n    get value() {\n        return this.input.value;\n    }\n    set value(newValue) {\n        if (this.input.value !== newValue) {\n            this.input.value = newValue;\n            this.onValueChange();\n        }\n    }\n    get height() {\n        return typeof this.cachedHeight === 'number' ? this.cachedHeight : dom.getTotalHeight(this.element);\n    }\n    focus() {\n        this.input.focus();\n    }\n    blur() {\n        this.input.blur();\n    }\n    hasFocus() {\n        return document.activeElement === this.input;\n    }\n    select(range = null) {\n        this.input.select();\n        if (range) {\n            this.input.setSelectionRange(range.start, range.end);\n            if (range.end === this.input.value.length) {\n                this.input.scrollLeft = this.input.scrollWidth;\n            }\n        }\n    }\n    isSelectionAtEnd() {\n        return this.input.selectionEnd === this.input.value.length && this.input.selectionStart === this.input.selectionEnd;\n    }\n    enable() {\n        this.input.removeAttribute('disabled');\n    }\n    disable() {\n        this.blur();\n        this.input.disabled = true;\n        this._hideMessage();\n    }\n    get width() {\n        return dom.getTotalWidth(this.input);\n    }\n    set width(width) {\n        if (this.options.flexibleHeight && this.options.flexibleWidth) {\n            // textarea with horizontal scrolling\n            let horizontalPadding = 0;\n            if (this.mirror) {\n                const paddingLeft = parseFloat(this.mirror.style.paddingLeft || '') || 0;\n                const paddingRight = parseFloat(this.mirror.style.paddingRight || '') || 0;\n                horizontalPadding = paddingLeft + paddingRight;\n            }\n            this.input.style.width = (width - horizontalPadding) + 'px';\n        }\n        else {\n            this.input.style.width = width + 'px';\n        }\n        if (this.mirror) {\n            this.mirror.style.width = width + 'px';\n        }\n    }\n    set paddingRight(paddingRight) {\n        // Set width to avoid hint text overlapping buttons\n        this.input.style.width = `calc(100% - ${paddingRight}px)`;\n        if (this.mirror) {\n            this.mirror.style.paddingRight = paddingRight + 'px';\n        }\n    }\n    updateScrollDimensions() {\n        if (typeof this.cachedContentHeight !== 'number' || typeof this.cachedHeight !== 'number' || !this.scrollableElement) {\n            return;\n        }\n        const scrollHeight = this.cachedContentHeight;\n        const height = this.cachedHeight;\n        const scrollTop = this.input.scrollTop;\n        this.scrollableElement.setScrollDimensions({ scrollHeight, height });\n        this.scrollableElement.setScrollPosition({ scrollTop });\n    }\n    showMessage(message, force) {\n        this.message = message;\n        this.element.classList.remove('idle');\n        this.element.classList.remove('info');\n        this.element.classList.remove('warning');\n        this.element.classList.remove('error');\n        this.element.classList.add(this.classForType(message.type));\n        const styles = this.stylesForType(this.message.type);\n        this.element.style.border = styles.border ? `1px solid ${styles.border}` : '';\n        if (this.hasFocus() || force) {\n            this._showMessage();\n        }\n    }\n    hideMessage() {\n        this.message = null;\n        this.element.classList.remove('info');\n        this.element.classList.remove('warning');\n        this.element.classList.remove('error');\n        this.element.classList.add('idle');\n        this._hideMessage();\n        this.applyStyles();\n    }\n    validate() {\n        let errorMsg = null;\n        if (this.validation) {\n            errorMsg = this.validation(this.value);\n            if (errorMsg) {\n                this.inputElement.setAttribute('aria-invalid', 'true');\n                this.showMessage(errorMsg);\n            }\n            else if (this.inputElement.hasAttribute('aria-invalid')) {\n                this.inputElement.removeAttribute('aria-invalid');\n                this.hideMessage();\n            }\n        }\n        return errorMsg === null || errorMsg === void 0 ? void 0 : errorMsg.type;\n    }\n    stylesForType(type) {\n        switch (type) {\n            case 1 /* INFO */: return { border: this.inputValidationInfoBorder, background: this.inputValidationInfoBackground, foreground: this.inputValidationInfoForeground };\n            case 2 /* WARNING */: return { border: this.inputValidationWarningBorder, background: this.inputValidationWarningBackground, foreground: this.inputValidationWarningForeground };\n            default: return { border: this.inputValidationErrorBorder, background: this.inputValidationErrorBackground, foreground: this.inputValidationErrorForeground };\n        }\n    }\n    classForType(type) {\n        switch (type) {\n            case 1 /* INFO */: return 'info';\n            case 2 /* WARNING */: return 'warning';\n            default: return 'error';\n        }\n    }\n    _showMessage() {\n        if (!this.contextViewProvider || !this.message) {\n            return;\n        }\n        let div;\n        let layout = () => div.style.width = dom.getTotalWidth(this.element) + 'px';\n        this.contextViewProvider.showContextView({\n            getAnchor: () => this.element,\n            anchorAlignment: 1 /* RIGHT */,\n            render: (container) => {\n                if (!this.message) {\n                    return null;\n                }\n                div = dom.append(container, $('.monaco-inputbox-container'));\n                layout();\n                const renderOptions = {\n                    inline: true,\n                    className: 'monaco-inputbox-message'\n                };\n                const spanElement = (this.message.formatContent\n                    ? renderFormattedText(this.message.content, renderOptions)\n                    : renderText(this.message.content, renderOptions));\n                spanElement.classList.add(this.classForType(this.message.type));\n                const styles = this.stylesForType(this.message.type);\n                spanElement.style.backgroundColor = styles.background ? styles.background.toString() : '';\n                spanElement.style.color = styles.foreground ? styles.foreground.toString() : '';\n                spanElement.style.border = styles.border ? `1px solid ${styles.border}` : '';\n                dom.append(div, spanElement);\n                return null;\n            },\n            onHide: () => {\n                this.state = 'closed';\n            },\n            layout: layout\n        });\n        // ARIA Support\n        let alertText;\n        if (this.message.type === 3 /* ERROR */) {\n            alertText = nls.localize('alertErrorMessage', \"Error: {0}\", this.message.content);\n        }\n        else if (this.message.type === 2 /* WARNING */) {\n            alertText = nls.localize('alertWarningMessage', \"Warning: {0}\", this.message.content);\n        }\n        else {\n            alertText = nls.localize('alertInfoMessage', \"Info: {0}\", this.message.content);\n        }\n        aria.alert(alertText);\n        this.state = 'open';\n    }\n    _hideMessage() {\n        if (!this.contextViewProvider) {\n            return;\n        }\n        if (this.state === 'open') {\n            this.contextViewProvider.hideContextView();\n        }\n        this.state = 'idle';\n    }\n    onValueChange() {\n        this._onDidChange.fire(this.value);\n        this.validate();\n        this.updateMirror();\n        this.input.classList.toggle('empty', !this.value);\n        if (this.state === 'open' && this.contextViewProvider) {\n            this.contextViewProvider.layout();\n        }\n    }\n    updateMirror() {\n        if (!this.mirror) {\n            return;\n        }\n        const value = this.value;\n        const lastCharCode = value.charCodeAt(value.length - 1);\n        const suffix = lastCharCode === 10 ? ' ' : '';\n        const mirrorTextContent = (value + suffix)\n            .replace(/\\u000c/g, ''); // Don't measure with the form feed character, which messes up sizing\n        if (mirrorTextContent) {\n            this.mirror.textContent = value + suffix;\n        }\n        else {\n            this.mirror.innerText = '\\u00a0';\n        }\n        this.layout();\n    }\n    style(styles) {\n        this.inputBackground = styles.inputBackground;\n        this.inputForeground = styles.inputForeground;\n        this.inputBorder = styles.inputBorder;\n        this.inputValidationInfoBackground = styles.inputValidationInfoBackground;\n        this.inputValidationInfoForeground = styles.inputValidationInfoForeground;\n        this.inputValidationInfoBorder = styles.inputValidationInfoBorder;\n        this.inputValidationWarningBackground = styles.inputValidationWarningBackground;\n        this.inputValidationWarningForeground = styles.inputValidationWarningForeground;\n        this.inputValidationWarningBorder = styles.inputValidationWarningBorder;\n        this.inputValidationErrorBackground = styles.inputValidationErrorBackground;\n        this.inputValidationErrorForeground = styles.inputValidationErrorForeground;\n        this.inputValidationErrorBorder = styles.inputValidationErrorBorder;\n        this.applyStyles();\n    }\n    applyStyles() {\n        const background = this.inputBackground ? this.inputBackground.toString() : '';\n        const foreground = this.inputForeground ? this.inputForeground.toString() : '';\n        const border = this.inputBorder ? this.inputBorder.toString() : '';\n        this.element.style.backgroundColor = background;\n        this.element.style.color = foreground;\n        this.input.style.backgroundColor = 'inherit';\n        this.input.style.color = foreground;\n        this.element.style.borderWidth = border ? '1px' : '';\n        this.element.style.borderStyle = border ? 'solid' : '';\n        this.element.style.borderColor = border;\n    }\n    layout() {\n        if (!this.mirror) {\n            return;\n        }\n        const previousHeight = this.cachedContentHeight;\n        this.cachedContentHeight = dom.getTotalHeight(this.mirror);\n        if (previousHeight !== this.cachedContentHeight) {\n            this.cachedHeight = Math.min(this.cachedContentHeight, this.maxHeight);\n            this.input.style.height = this.cachedHeight + 'px';\n            this._onDidHeightChange.fire(this.cachedContentHeight);\n        }\n    }\n    insertAtCursor(text) {\n        const inputElement = this.inputElement;\n        const start = inputElement.selectionStart;\n        const end = inputElement.selectionEnd;\n        const content = inputElement.value;\n        if (start !== null && end !== null) {\n            this.value = content.substr(0, start) + text + content.substr(end);\n            inputElement.setSelectionRange(start + 1, start + 1);\n            this.layout();\n        }\n    }\n    dispose() {\n        this._hideMessage();\n        this.message = null;\n        if (this.actionbar) {\n            this.actionbar.dispose();\n        }\n        super.dispose();\n    }\n}\nexport class HistoryInputBox extends InputBox {\n    constructor(container, contextViewProvider, options) {\n        const NLS_PLACEHOLDER_HISTORY_HINT = nls.localize({ key: 'history.inputbox.hint', comment: ['Text will be prefixed with \\u21C5 plus a single space, then used as a hint where input field keeps history'] }, \"for history\");\n        const NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX = ` or \\u21C5 ${NLS_PLACEHOLDER_HISTORY_HINT}`;\n        const NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX_IN_PARENS = ` (\\u21C5 ${NLS_PLACEHOLDER_HISTORY_HINT})`;\n        super(container, contextViewProvider, options);\n        this.history = new HistoryNavigator(options.history, 100);\n        // Function to append the history suffix to the placeholder if necessary\n        const addSuffix = () => {\n            if (options.showHistoryHint && options.showHistoryHint() && !this.placeholder.endsWith(NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX) && !this.placeholder.endsWith(NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX_IN_PARENS) && this.history.getHistory().length) {\n                const suffix = this.placeholder.endsWith(')') ? NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX : NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX_IN_PARENS;\n                const suffixedPlaceholder = this.placeholder + suffix;\n                if (options.showPlaceholderOnFocus && document.activeElement !== this.input) {\n                    this.placeholder = suffixedPlaceholder;\n                }\n                else {\n                    this.setPlaceHolder(suffixedPlaceholder);\n                }\n            }\n        };\n        // Spot the change to the textarea class attribute which occurs when it changes between non-empty and empty,\n        // and add the history suffix to the placeholder if not yet present\n        this.observer = new MutationObserver((mutationList, observer) => {\n            mutationList.forEach((mutation) => {\n                if (!mutation.target.textContent) {\n                    addSuffix();\n                }\n            });\n        });\n        this.observer.observe(this.input, { attributeFilter: ['class'] });\n        this.onfocus(this.input, () => addSuffix());\n        this.onblur(this.input, () => {\n            const resetPlaceholder = (historyHint) => {\n                if (!this.placeholder.endsWith(historyHint)) {\n                    return false;\n                }\n                else {\n                    const revertedPlaceholder = this.placeholder.slice(0, this.placeholder.length - historyHint.length);\n                    if (options.showPlaceholderOnFocus) {\n                        this.placeholder = revertedPlaceholder;\n                    }\n                    else {\n                        this.setPlaceHolder(revertedPlaceholder);\n                    }\n                    return true;\n                }\n            };\n            if (!resetPlaceholder(NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX_IN_PARENS)) {\n                resetPlaceholder(NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX);\n            }\n        });\n    }\n    dispose() {\n        super.dispose();\n        if (this.observer) {\n            this.observer.disconnect();\n            this.observer = undefined;\n        }\n    }\n    addToHistory() {\n        if (this.value && this.value !== this.getCurrentValue()) {\n            this.history.add(this.value);\n        }\n    }\n    showNextValue() {\n        if (!this.history.has(this.value)) {\n            this.addToHistory();\n        }\n        let next = this.getNextValue();\n        if (next) {\n            next = next === this.value ? this.getNextValue() : next;\n        }\n        if (next) {\n            this.value = next;\n            aria.status(this.value);\n        }\n    }\n    showPreviousValue() {\n        if (!this.history.has(this.value)) {\n            this.addToHistory();\n        }\n        let previous = this.getPreviousValue();\n        if (previous) {\n            previous = previous === this.value ? this.getPreviousValue() : previous;\n        }\n        if (previous) {\n            this.value = previous;\n            aria.status(this.value);\n        }\n    }\n    getCurrentValue() {\n        let currentValue = this.history.current();\n        if (!currentValue) {\n            currentValue = this.history.last();\n            this.history.next();\n        }\n        return currentValue;\n    }\n    getPreviousValue() {\n        return this.history.previous() || this.history.first();\n    }\n    getNextValue() {\n        return this.history.next() || this.history.last();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}