{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Widget } from '../widget.js';\nimport { CSSIcon } from '../../../common/codicons.js';\nimport { Color } from '../../../common/color.js';\nimport { Emitter } from '../../../common/event.js';\nimport './checkbox.css';\nconst defaultOpts = {\n  inputActiveOptionBorder: Color.fromHex('#007ACC00'),\n  inputActiveOptionForeground: Color.fromHex('#FFFFFF'),\n  inputActiveOptionBackground: Color.fromHex('#0E639C50')\n};\nexport class Checkbox extends Widget {\n  constructor(opts) {\n    super();\n    this._onChange = this._register(new Emitter());\n    this.onChange = this._onChange.event;\n    this._onKeyDown = this._register(new Emitter());\n    this.onKeyDown = this._onKeyDown.event;\n    this._opts = Object.assign(Object.assign({}, defaultOpts), opts);\n    this._checked = this._opts.isChecked;\n    const classes = ['monaco-custom-checkbox'];\n\n    if (this._opts.icon) {\n      classes.push(...CSSIcon.asClassNameArray(this._opts.icon));\n    }\n\n    if (this._opts.actionClassName) {\n      classes.push(...this._opts.actionClassName.split(' '));\n    }\n\n    if (this._checked) {\n      classes.push('checked');\n    }\n\n    this.domNode = document.createElement('div');\n    this.domNode.title = this._opts.title;\n    this.domNode.classList.add(...classes);\n\n    if (!this._opts.notFocusable) {\n      this.domNode.tabIndex = 0;\n    }\n\n    this.domNode.setAttribute('role', 'checkbox');\n    this.domNode.setAttribute('aria-checked', String(this._checked));\n    this.domNode.setAttribute('aria-label', this._opts.title);\n    this.applyStyles();\n    this.onclick(this.domNode, ev => {\n      if (this.enabled) {\n        this.checked = !this._checked;\n\n        this._onChange.fire(false);\n\n        ev.preventDefault();\n      }\n    });\n    this.ignoreGesture(this.domNode);\n    this.onkeydown(this.domNode, keyboardEvent => {\n      if (keyboardEvent.keyCode === 10\n      /* Space */\n      || keyboardEvent.keyCode === 3\n      /* Enter */\n      ) {\n        this.checked = !this._checked;\n\n        this._onChange.fire(true);\n\n        keyboardEvent.preventDefault();\n        return;\n      }\n\n      this._onKeyDown.fire(keyboardEvent);\n    });\n  }\n\n  get enabled() {\n    return this.domNode.getAttribute('aria-disabled') !== 'true';\n  }\n\n  focus() {\n    this.domNode.focus();\n  }\n\n  get checked() {\n    return this._checked;\n  }\n\n  set checked(newIsChecked) {\n    this._checked = newIsChecked;\n    this.domNode.setAttribute('aria-checked', String(this._checked));\n    this.domNode.classList.toggle('checked', this._checked);\n    this.applyStyles();\n  }\n\n  width() {\n    return 2\n    /*margin left*/\n    + 2\n    /*border*/\n    + 2\n    /*padding*/\n    + 16\n    /* icon width */\n    ;\n  }\n\n  style(styles) {\n    if (styles.inputActiveOptionBorder) {\n      this._opts.inputActiveOptionBorder = styles.inputActiveOptionBorder;\n    }\n\n    if (styles.inputActiveOptionForeground) {\n      this._opts.inputActiveOptionForeground = styles.inputActiveOptionForeground;\n    }\n\n    if (styles.inputActiveOptionBackground) {\n      this._opts.inputActiveOptionBackground = styles.inputActiveOptionBackground;\n    }\n\n    this.applyStyles();\n  }\n\n  applyStyles() {\n    if (this.domNode) {\n      this.domNode.style.borderColor = this._checked && this._opts.inputActiveOptionBorder ? this._opts.inputActiveOptionBorder.toString() : '';\n      this.domNode.style.color = this._checked && this._opts.inputActiveOptionForeground ? this._opts.inputActiveOptionForeground.toString() : 'inherit';\n      this.domNode.style.backgroundColor = this._checked && this._opts.inputActiveOptionBackground ? this._opts.inputActiveOptionBackground.toString() : '';\n    }\n  }\n\n  enable() {\n    this.domNode.setAttribute('aria-disabled', String(false));\n  }\n\n  disable() {\n    this.domNode.setAttribute('aria-disabled', String(true));\n  }\n\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/base/browser/ui/checkbox/checkbox.js"],"names":["Widget","CSSIcon","Color","Emitter","defaultOpts","inputActiveOptionBorder","fromHex","inputActiveOptionForeground","inputActiveOptionBackground","Checkbox","constructor","opts","_onChange","_register","onChange","event","_onKeyDown","onKeyDown","_opts","Object","assign","_checked","isChecked","classes","icon","push","asClassNameArray","actionClassName","split","domNode","document","createElement","title","classList","add","notFocusable","tabIndex","setAttribute","String","applyStyles","onclick","ev","enabled","checked","fire","preventDefault","ignoreGesture","onkeydown","keyboardEvent","keyCode","getAttribute","focus","newIsChecked","toggle","width","style","styles","borderColor","toString","color","backgroundColor","enable","disable"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Widget } from '../widget.js';\nimport { CSSIcon } from '../../../common/codicons.js';\nimport { Color } from '../../../common/color.js';\nimport { Emitter } from '../../../common/event.js';\nimport './checkbox.css';\nconst defaultOpts = {\n    inputActiveOptionBorder: Color.fromHex('#007ACC00'),\n    inputActiveOptionForeground: Color.fromHex('#FFFFFF'),\n    inputActiveOptionBackground: Color.fromHex('#0E639C50')\n};\nexport class Checkbox extends Widget {\n    constructor(opts) {\n        super();\n        this._onChange = this._register(new Emitter());\n        this.onChange = this._onChange.event;\n        this._onKeyDown = this._register(new Emitter());\n        this.onKeyDown = this._onKeyDown.event;\n        this._opts = Object.assign(Object.assign({}, defaultOpts), opts);\n        this._checked = this._opts.isChecked;\n        const classes = ['monaco-custom-checkbox'];\n        if (this._opts.icon) {\n            classes.push(...CSSIcon.asClassNameArray(this._opts.icon));\n        }\n        if (this._opts.actionClassName) {\n            classes.push(...this._opts.actionClassName.split(' '));\n        }\n        if (this._checked) {\n            classes.push('checked');\n        }\n        this.domNode = document.createElement('div');\n        this.domNode.title = this._opts.title;\n        this.domNode.classList.add(...classes);\n        if (!this._opts.notFocusable) {\n            this.domNode.tabIndex = 0;\n        }\n        this.domNode.setAttribute('role', 'checkbox');\n        this.domNode.setAttribute('aria-checked', String(this._checked));\n        this.domNode.setAttribute('aria-label', this._opts.title);\n        this.applyStyles();\n        this.onclick(this.domNode, (ev) => {\n            if (this.enabled) {\n                this.checked = !this._checked;\n                this._onChange.fire(false);\n                ev.preventDefault();\n            }\n        });\n        this.ignoreGesture(this.domNode);\n        this.onkeydown(this.domNode, (keyboardEvent) => {\n            if (keyboardEvent.keyCode === 10 /* Space */ || keyboardEvent.keyCode === 3 /* Enter */) {\n                this.checked = !this._checked;\n                this._onChange.fire(true);\n                keyboardEvent.preventDefault();\n                return;\n            }\n            this._onKeyDown.fire(keyboardEvent);\n        });\n    }\n    get enabled() {\n        return this.domNode.getAttribute('aria-disabled') !== 'true';\n    }\n    focus() {\n        this.domNode.focus();\n    }\n    get checked() {\n        return this._checked;\n    }\n    set checked(newIsChecked) {\n        this._checked = newIsChecked;\n        this.domNode.setAttribute('aria-checked', String(this._checked));\n        this.domNode.classList.toggle('checked', this._checked);\n        this.applyStyles();\n    }\n    width() {\n        return 2 /*margin left*/ + 2 /*border*/ + 2 /*padding*/ + 16 /* icon width */;\n    }\n    style(styles) {\n        if (styles.inputActiveOptionBorder) {\n            this._opts.inputActiveOptionBorder = styles.inputActiveOptionBorder;\n        }\n        if (styles.inputActiveOptionForeground) {\n            this._opts.inputActiveOptionForeground = styles.inputActiveOptionForeground;\n        }\n        if (styles.inputActiveOptionBackground) {\n            this._opts.inputActiveOptionBackground = styles.inputActiveOptionBackground;\n        }\n        this.applyStyles();\n    }\n    applyStyles() {\n        if (this.domNode) {\n            this.domNode.style.borderColor = this._checked && this._opts.inputActiveOptionBorder ? this._opts.inputActiveOptionBorder.toString() : '';\n            this.domNode.style.color = this._checked && this._opts.inputActiveOptionForeground ? this._opts.inputActiveOptionForeground.toString() : 'inherit';\n            this.domNode.style.backgroundColor = this._checked && this._opts.inputActiveOptionBackground ? this._opts.inputActiveOptionBackground.toString() : '';\n        }\n    }\n    enable() {\n        this.domNode.setAttribute('aria-disabled', String(false));\n    }\n    disable() {\n        this.domNode.setAttribute('aria-disabled', String(true));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}