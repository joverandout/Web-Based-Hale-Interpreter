{"ast":null,"code":"// prep-work\nconst _data = new Uint8Array(16);\n\nconst _hex = [];\n\nfor (let i = 0; i < 256; i++) {\n  _hex.push(i.toString(16).padStart(2, '0'));\n} // todo@jrieken - with node@15 crypto#getRandomBytes is available everywhere, https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues#browser_compatibility\n\n\nlet _fillRandomValues;\n\nif (typeof crypto === 'object' && typeof crypto.getRandomValues === 'function') {\n  // browser\n  _fillRandomValues = crypto.getRandomValues.bind(crypto);\n} else {\n  _fillRandomValues = function (bucket) {\n    for (let i = 0; i < bucket.length; i++) {\n      bucket[i] = Math.floor(Math.random() * 256);\n    }\n\n    return bucket;\n  };\n}\n\nexport function generateUuid() {\n  // get data\n  _fillRandomValues(_data); // set version bits\n\n\n  _data[6] = _data[6] & 0x0f | 0x40;\n  _data[8] = _data[8] & 0x3f | 0x80; // print as string\n\n  let i = 0;\n  let result = '';\n  result += _hex[_data[i++]];\n  result += _hex[_data[i++]];\n  result += _hex[_data[i++]];\n  result += _hex[_data[i++]];\n  result += '-';\n  result += _hex[_data[i++]];\n  result += _hex[_data[i++]];\n  result += '-';\n  result += _hex[_data[i++]];\n  result += _hex[_data[i++]];\n  result += '-';\n  result += _hex[_data[i++]];\n  result += _hex[_data[i++]];\n  result += '-';\n  result += _hex[_data[i++]];\n  result += _hex[_data[i++]];\n  result += _hex[_data[i++]];\n  result += _hex[_data[i++]];\n  result += _hex[_data[i++]];\n  result += _hex[_data[i++]];\n  return result;\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/base/common/uuid.js"],"names":["_data","Uint8Array","_hex","i","push","toString","padStart","_fillRandomValues","crypto","getRandomValues","bind","bucket","length","Math","floor","random","generateUuid","result"],"mappings":"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","sourcesContent":["// prep-work\nconst _data = new Uint8Array(16);\nconst _hex = [];\nfor (let i = 0; i < 256; i++) {\n    _hex.push(i.toString(16).padStart(2, '0'));\n}\n// todo@jrieken - with node@15 crypto#getRandomBytes is available everywhere, https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues#browser_compatibility\nlet _fillRandomValues;\nif (typeof crypto === 'object' && typeof crypto.getRandomValues === 'function') {\n    // browser\n    _fillRandomValues = crypto.getRandomValues.bind(crypto);\n}\nelse {\n    _fillRandomValues = function (bucket) {\n        for (let i = 0; i < bucket.length; i++) {\n            bucket[i] = Math.floor(Math.random() * 256);\n        }\n        return bucket;\n    };\n}\nexport function generateUuid() {\n    // get data\n    _fillRandomValues(_data);\n    // set version bits\n    _data[6] = (_data[6] & 0x0f) | 0x40;\n    _data[8] = (_data[8] & 0x3f) | 0x80;\n    // print as string\n    let i = 0;\n    let result = '';\n    result += _hex[_data[i++]];\n    result += _hex[_data[i++]];\n    result += _hex[_data[i++]];\n    result += _hex[_data[i++]];\n    result += '-';\n    result += _hex[_data[i++]];\n    result += _hex[_data[i++]];\n    result += '-';\n    result += _hex[_data[i++]];\n    result += _hex[_data[i++]];\n    result += '-';\n    result += _hex[_data[i++]];\n    result += _hex[_data[i++]];\n    result += '-';\n    result += _hex[_data[i++]];\n    result += _hex[_data[i++]];\n    result += _hex[_data[i++]];\n    result += _hex[_data[i++]];\n    result += _hex[_data[i++]];\n    result += _hex[_data[i++]];\n    return result;\n}\n"]},"metadata":{},"sourceType":"module"}