{"ast":null,"code":"/**\n * Represents contiguous tokens over a contiguous range of lines.\n */\nexport class ContiguousMultilineTokens {\n  constructor(startLineNumber, tokens) {\n    this._startLineNumber = startLineNumber;\n    this._tokens = tokens;\n  }\n  /**\n   * (Inclusive) start line number for these tokens.\n   */\n\n\n  get startLineNumber() {\n    return this._startLineNumber;\n  }\n  /**\n   * (Inclusive) end line number for these tokens.\n   */\n\n\n  get endLineNumber() {\n    return this._startLineNumber + this._tokens.length - 1;\n  }\n  /**\n   * @see {@link _tokens}\n   */\n\n\n  getLineTokens(lineNumber) {\n    return this._tokens[lineNumber - this._startLineNumber];\n  }\n\n  appendLineTokens(lineTokens) {\n    this._tokens.push(lineTokens);\n  }\n\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/common/tokens/contiguousMultilineTokens.js"],"names":["ContiguousMultilineTokens","constructor","startLineNumber","tokens","_startLineNumber","_tokens","endLineNumber","length","getLineTokens","lineNumber","appendLineTokens","lineTokens","push"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,MAAMA,yBAAN,CAAgC;AACnCC,EAAAA,WAAW,CAACC,eAAD,EAAkBC,MAAlB,EAA0B;AACjC,SAAKC,gBAAL,GAAwBF,eAAxB;AACA,SAAKG,OAAL,GAAeF,MAAf;AACH;AACD;AACJ;AACA;;;AACuB,MAAfD,eAAe,GAAG;AAClB,WAAO,KAAKE,gBAAZ;AACH;AACD;AACJ;AACA;;;AACqB,MAAbE,aAAa,GAAG;AAChB,WAAO,KAAKF,gBAAL,GAAwB,KAAKC,OAAL,CAAaE,MAArC,GAA8C,CAArD;AACH;AACD;AACJ;AACA;;;AACIC,EAAAA,aAAa,CAACC,UAAD,EAAa;AACtB,WAAO,KAAKJ,OAAL,CAAaI,UAAU,GAAG,KAAKL,gBAA/B,CAAP;AACH;;AACDM,EAAAA,gBAAgB,CAACC,UAAD,EAAa;AACzB,SAAKN,OAAL,CAAaO,IAAb,CAAkBD,UAAlB;AACH;;AAzBkC","sourcesContent":["/**\n * Represents contiguous tokens over a contiguous range of lines.\n */\nexport class ContiguousMultilineTokens {\n    constructor(startLineNumber, tokens) {\n        this._startLineNumber = startLineNumber;\n        this._tokens = tokens;\n    }\n    /**\n     * (Inclusive) start line number for these tokens.\n     */\n    get startLineNumber() {\n        return this._startLineNumber;\n    }\n    /**\n     * (Inclusive) end line number for these tokens.\n     */\n    get endLineNumber() {\n        return this._startLineNumber + this._tokens.length - 1;\n    }\n    /**\n     * @see {@link _tokens}\n     */\n    getLineTokens(lineNumber) {\n        return this._tokens[lineNumber - this._startLineNumber];\n    }\n    appendLineTokens(lineTokens) {\n        this._tokens.push(lineTokens);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}