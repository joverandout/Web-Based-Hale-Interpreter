{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable, DisposableStore, dispose } from '../../../base/common/lifecycle.js';\nimport * as platform from '../../../base/common/platform.js';\nimport * as errors from '../../../base/common/errors.js';\nimport { TextModel } from '../model/textModel.js';\nimport { EDITOR_MODEL_DEFAULTS } from '../core/textModelDefaults.js';\nimport { DocumentSemanticTokensProviderRegistry } from '../languages.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../languages/modesRegistry.js';\nimport { ILanguageService } from './language.js';\nimport { IModelService } from './model.js';\nimport { ITextResourcePropertiesService } from './textResourceConfiguration.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { IUndoRedoService } from '../../../platform/undoRedo/common/undoRedo.js';\nimport { StringSHA1 } from '../../../base/common/hash.js';\nimport { isEditStackElement } from '../model/editStack.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { SemanticTokensProviderStyling, toMultilineTokens2 } from './semanticTokensProviderStyling.js';\nimport { getDocumentSemanticTokens, hasDocumentSemanticTokensProvider, isSemanticTokens, isSemanticTokensEdits } from './getSemanticTokens.js';\nimport { equals } from '../../../base/common/objects.js';\nimport { ILanguageConfigurationService } from '../languages/languageConfigurationRegistry.js';\nimport { ILanguageFeatureDebounceService } from './languageFeatureDebounce.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\n\nfunction MODEL_ID(resource) {\n  return resource.toString();\n}\n\nfunction computeModelSha1(model) {\n  // compute the sha1\n  const shaComputer = new StringSHA1();\n  const snapshot = model.createSnapshot();\n  let text;\n\n  while (text = snapshot.read()) {\n    shaComputer.update(text);\n  }\n\n  return shaComputer.digest();\n}\n\nclass ModelData {\n  constructor(model, onWillDispose, onDidChangeLanguage) {\n    this._modelEventListeners = new DisposableStore();\n    this.model = model;\n    this._languageSelection = null;\n    this._languageSelectionListener = null;\n\n    this._modelEventListeners.add(model.onWillDispose(() => onWillDispose(model)));\n\n    this._modelEventListeners.add(model.onDidChangeLanguage(e => onDidChangeLanguage(model, e)));\n  }\n\n  _disposeLanguageSelection() {\n    if (this._languageSelectionListener) {\n      this._languageSelectionListener.dispose();\n\n      this._languageSelectionListener = null;\n    }\n  }\n\n  dispose() {\n    this._modelEventListeners.dispose();\n\n    this._disposeLanguageSelection();\n  }\n\n  setLanguage(languageSelection) {\n    this._disposeLanguageSelection();\n\n    this._languageSelection = languageSelection;\n    this._languageSelectionListener = this._languageSelection.onDidChange(() => this.model.setMode(languageSelection.languageId));\n    this.model.setMode(languageSelection.languageId);\n  }\n\n}\n\nconst DEFAULT_EOL = platform.isLinux || platform.isMacintosh ? 1\n/* LF */\n: 2\n/* CRLF */\n;\n\nclass DisposedModelInfo {\n  constructor(uri, initialUndoRedoSnapshot, time, sharesUndoRedoStack, heapSize, sha1, versionId, alternativeVersionId) {\n    this.uri = uri;\n    this.initialUndoRedoSnapshot = initialUndoRedoSnapshot;\n    this.time = time;\n    this.sharesUndoRedoStack = sharesUndoRedoStack;\n    this.heapSize = heapSize;\n    this.sha1 = sha1;\n    this.versionId = versionId;\n    this.alternativeVersionId = alternativeVersionId;\n  }\n\n}\n\nlet ModelService = class ModelService extends Disposable {\n  constructor(_configurationService, _resourcePropertiesService, _themeService, _logService, _undoRedoService, _languageService, _languageConfigurationService, _languageFeatureDebounceService) {\n    super();\n    this._configurationService = _configurationService;\n    this._resourcePropertiesService = _resourcePropertiesService;\n    this._themeService = _themeService;\n    this._logService = _logService;\n    this._undoRedoService = _undoRedoService;\n    this._languageService = _languageService;\n    this._languageConfigurationService = _languageConfigurationService;\n    this._languageFeatureDebounceService = _languageFeatureDebounceService;\n    this._onModelAdded = this._register(new Emitter());\n    this.onModelAdded = this._onModelAdded.event;\n    this._onModelRemoved = this._register(new Emitter());\n    this.onModelRemoved = this._onModelRemoved.event;\n    this._onModelModeChanged = this._register(new Emitter());\n    this.onModelLanguageChanged = this._onModelModeChanged.event;\n    this._modelCreationOptionsByLanguageAndResource = Object.create(null);\n    this._models = {};\n    this._disposedModels = new Map();\n    this._disposedModelsHeapSize = 0;\n    this._semanticStyling = this._register(new SemanticStyling(this._themeService, this._languageService, this._logService));\n\n    this._register(this._configurationService.onDidChangeConfiguration(() => this._updateModelOptions()));\n\n    this._updateModelOptions();\n\n    this._register(new SemanticColoringFeature(this._semanticStyling, this, this._themeService, this._configurationService, this._languageFeatureDebounceService));\n  }\n\n  static _readModelOptions(config, isForSimpleWidget) {\n    var _a;\n\n    let tabSize = EDITOR_MODEL_DEFAULTS.tabSize;\n\n    if (config.editor && typeof config.editor.tabSize !== 'undefined') {\n      const parsedTabSize = parseInt(config.editor.tabSize, 10);\n\n      if (!isNaN(parsedTabSize)) {\n        tabSize = parsedTabSize;\n      }\n\n      if (tabSize < 1) {\n        tabSize = 1;\n      }\n    }\n\n    let indentSize = tabSize;\n\n    if (config.editor && typeof config.editor.indentSize !== 'undefined' && config.editor.indentSize !== 'tabSize') {\n      const parsedIndentSize = parseInt(config.editor.indentSize, 10);\n\n      if (!isNaN(parsedIndentSize)) {\n        indentSize = parsedIndentSize;\n      }\n\n      if (indentSize < 1) {\n        indentSize = 1;\n      }\n    }\n\n    let insertSpaces = EDITOR_MODEL_DEFAULTS.insertSpaces;\n\n    if (config.editor && typeof config.editor.insertSpaces !== 'undefined') {\n      insertSpaces = config.editor.insertSpaces === 'false' ? false : Boolean(config.editor.insertSpaces);\n    }\n\n    let newDefaultEOL = DEFAULT_EOL;\n    const eol = config.eol;\n\n    if (eol === '\\r\\n') {\n      newDefaultEOL = 2\n      /* CRLF */\n      ;\n    } else if (eol === '\\n') {\n      newDefaultEOL = 1\n      /* LF */\n      ;\n    }\n\n    let trimAutoWhitespace = EDITOR_MODEL_DEFAULTS.trimAutoWhitespace;\n\n    if (config.editor && typeof config.editor.trimAutoWhitespace !== 'undefined') {\n      trimAutoWhitespace = config.editor.trimAutoWhitespace === 'false' ? false : Boolean(config.editor.trimAutoWhitespace);\n    }\n\n    let detectIndentation = EDITOR_MODEL_DEFAULTS.detectIndentation;\n\n    if (config.editor && typeof config.editor.detectIndentation !== 'undefined') {\n      detectIndentation = config.editor.detectIndentation === 'false' ? false : Boolean(config.editor.detectIndentation);\n    }\n\n    let largeFileOptimizations = EDITOR_MODEL_DEFAULTS.largeFileOptimizations;\n\n    if (config.editor && typeof config.editor.largeFileOptimizations !== 'undefined') {\n      largeFileOptimizations = config.editor.largeFileOptimizations === 'false' ? false : Boolean(config.editor.largeFileOptimizations);\n    }\n\n    let bracketPairColorizationOptions = EDITOR_MODEL_DEFAULTS.bracketPairColorizationOptions;\n\n    if (((_a = config.editor) === null || _a === void 0 ? void 0 : _a.bracketPairColorization) && typeof config.editor.bracketPairColorization === 'object') {\n      bracketPairColorizationOptions = {\n        enabled: !!config.editor.bracketPairColorization.enabled\n      };\n    }\n\n    return {\n      isForSimpleWidget: isForSimpleWidget,\n      tabSize: tabSize,\n      indentSize: indentSize,\n      insertSpaces: insertSpaces,\n      detectIndentation: detectIndentation,\n      defaultEOL: newDefaultEOL,\n      trimAutoWhitespace: trimAutoWhitespace,\n      largeFileOptimizations: largeFileOptimizations,\n      bracketPairColorizationOptions\n    };\n  }\n\n  _getEOL(resource, language) {\n    if (resource) {\n      return this._resourcePropertiesService.getEOL(resource, language);\n    }\n\n    const eol = this._configurationService.getValue('files.eol', {\n      overrideIdentifier: language\n    });\n\n    if (eol && typeof eol === 'string' && eol !== 'auto') {\n      return eol;\n    }\n\n    return platform.OS === 3\n    /* Linux */\n    || platform.OS === 2\n    /* Macintosh */\n    ? '\\n' : '\\r\\n';\n  }\n\n  _shouldRestoreUndoStack() {\n    const result = this._configurationService.getValue('files.restoreUndoStack');\n\n    if (typeof result === 'boolean') {\n      return result;\n    }\n\n    return true;\n  }\n\n  getCreationOptions(language, resource, isForSimpleWidget) {\n    let creationOptions = this._modelCreationOptionsByLanguageAndResource[language + resource];\n\n    if (!creationOptions) {\n      const editor = this._configurationService.getValue('editor', {\n        overrideIdentifier: language,\n        resource\n      });\n\n      const eol = this._getEOL(resource, language);\n\n      creationOptions = ModelService._readModelOptions({\n        editor,\n        eol\n      }, isForSimpleWidget);\n      this._modelCreationOptionsByLanguageAndResource[language + resource] = creationOptions;\n    }\n\n    return creationOptions;\n  }\n\n  _updateModelOptions() {\n    const oldOptionsByLanguageAndResource = this._modelCreationOptionsByLanguageAndResource;\n    this._modelCreationOptionsByLanguageAndResource = Object.create(null); // Update options on all models\n\n    const keys = Object.keys(this._models);\n\n    for (let i = 0, len = keys.length; i < len; i++) {\n      const modelId = keys[i];\n      const modelData = this._models[modelId];\n      const language = modelData.model.getLanguageId();\n      const uri = modelData.model.uri;\n      const oldOptions = oldOptionsByLanguageAndResource[language + uri];\n      const newOptions = this.getCreationOptions(language, uri, modelData.model.isForSimpleWidget);\n\n      ModelService._setModelOptionsForModel(modelData.model, newOptions, oldOptions);\n    }\n  }\n\n  static _setModelOptionsForModel(model, newOptions, currentOptions) {\n    if (currentOptions && currentOptions.defaultEOL !== newOptions.defaultEOL && model.getLineCount() === 1) {\n      model.setEOL(newOptions.defaultEOL === 1\n      /* LF */\n      ? 0\n      /* LF */\n      : 1\n      /* CRLF */\n      );\n    }\n\n    if (currentOptions && currentOptions.detectIndentation === newOptions.detectIndentation && currentOptions.insertSpaces === newOptions.insertSpaces && currentOptions.tabSize === newOptions.tabSize && currentOptions.indentSize === newOptions.indentSize && currentOptions.trimAutoWhitespace === newOptions.trimAutoWhitespace && equals(currentOptions.bracketPairColorizationOptions, newOptions.bracketPairColorizationOptions)) {\n      // Same indent opts, no need to touch the model\n      return;\n    }\n\n    if (newOptions.detectIndentation) {\n      model.detectIndentation(newOptions.insertSpaces, newOptions.tabSize);\n      model.updateOptions({\n        trimAutoWhitespace: newOptions.trimAutoWhitespace,\n        bracketColorizationOptions: newOptions.bracketPairColorizationOptions\n      });\n    } else {\n      model.updateOptions({\n        insertSpaces: newOptions.insertSpaces,\n        tabSize: newOptions.tabSize,\n        indentSize: newOptions.indentSize,\n        trimAutoWhitespace: newOptions.trimAutoWhitespace,\n        bracketColorizationOptions: newOptions.bracketPairColorizationOptions\n      });\n    }\n  } // --- begin IModelService\n\n\n  _insertDisposedModel(disposedModelData) {\n    this._disposedModels.set(MODEL_ID(disposedModelData.uri), disposedModelData);\n\n    this._disposedModelsHeapSize += disposedModelData.heapSize;\n  }\n\n  _removeDisposedModel(resource) {\n    const disposedModelData = this._disposedModels.get(MODEL_ID(resource));\n\n    if (disposedModelData) {\n      this._disposedModelsHeapSize -= disposedModelData.heapSize;\n    }\n\n    this._disposedModels.delete(MODEL_ID(resource));\n\n    return disposedModelData;\n  }\n\n  _ensureDisposedModelsHeapSize(maxModelsHeapSize) {\n    if (this._disposedModelsHeapSize > maxModelsHeapSize) {\n      // we must remove some old undo stack elements to free up some memory\n      const disposedModels = [];\n\n      this._disposedModels.forEach(entry => {\n        if (!entry.sharesUndoRedoStack) {\n          disposedModels.push(entry);\n        }\n      });\n\n      disposedModels.sort((a, b) => a.time - b.time);\n\n      while (disposedModels.length > 0 && this._disposedModelsHeapSize > maxModelsHeapSize) {\n        const disposedModel = disposedModels.shift();\n\n        this._removeDisposedModel(disposedModel.uri);\n\n        if (disposedModel.initialUndoRedoSnapshot !== null) {\n          this._undoRedoService.restoreSnapshot(disposedModel.initialUndoRedoSnapshot);\n        }\n      }\n    }\n  }\n\n  _createModelData(value, languageId, resource, isForSimpleWidget) {\n    // create & save the model\n    const options = this.getCreationOptions(languageId, resource, isForSimpleWidget);\n    const model = new TextModel(value, languageId, options, resource, this._undoRedoService, this._languageService, this._languageConfigurationService);\n\n    if (resource && this._disposedModels.has(MODEL_ID(resource))) {\n      const disposedModelData = this._removeDisposedModel(resource);\n\n      const elements = this._undoRedoService.getElements(resource);\n\n      const sha1IsEqual = computeModelSha1(model) === disposedModelData.sha1;\n\n      if (sha1IsEqual || disposedModelData.sharesUndoRedoStack) {\n        for (const element of elements.past) {\n          if (isEditStackElement(element) && element.matchesResource(resource)) {\n            element.setModel(model);\n          }\n        }\n\n        for (const element of elements.future) {\n          if (isEditStackElement(element) && element.matchesResource(resource)) {\n            element.setModel(model);\n          }\n        }\n\n        this._undoRedoService.setElementsValidFlag(resource, true, element => isEditStackElement(element) && element.matchesResource(resource));\n\n        if (sha1IsEqual) {\n          model._overwriteVersionId(disposedModelData.versionId);\n\n          model._overwriteAlternativeVersionId(disposedModelData.alternativeVersionId);\n\n          model._overwriteInitialUndoRedoSnapshot(disposedModelData.initialUndoRedoSnapshot);\n        }\n      } else {\n        if (disposedModelData.initialUndoRedoSnapshot !== null) {\n          this._undoRedoService.restoreSnapshot(disposedModelData.initialUndoRedoSnapshot);\n        }\n      }\n    }\n\n    const modelId = MODEL_ID(model.uri);\n\n    if (this._models[modelId]) {\n      // There already exists a model with this id => this is a programmer error\n      throw new Error('ModelService: Cannot add model because it already exists!');\n    }\n\n    const modelData = new ModelData(model, model => this._onWillDispose(model), (model, e) => this._onDidChangeLanguage(model, e));\n    this._models[modelId] = modelData;\n    return modelData;\n  }\n\n  createModel(value, languageSelection, resource, isForSimpleWidget = false) {\n    let modelData;\n\n    if (languageSelection) {\n      modelData = this._createModelData(value, languageSelection.languageId, resource, isForSimpleWidget);\n      this.setMode(modelData.model, languageSelection);\n    } else {\n      modelData = this._createModelData(value, PLAINTEXT_LANGUAGE_ID, resource, isForSimpleWidget);\n    }\n\n    this._onModelAdded.fire(modelData.model);\n\n    return modelData.model;\n  }\n\n  setMode(model, languageSelection) {\n    if (!languageSelection) {\n      return;\n    }\n\n    const modelData = this._models[MODEL_ID(model.uri)];\n\n    if (!modelData) {\n      return;\n    }\n\n    modelData.setLanguage(languageSelection);\n  }\n\n  getModels() {\n    const ret = [];\n    const keys = Object.keys(this._models);\n\n    for (let i = 0, len = keys.length; i < len; i++) {\n      const modelId = keys[i];\n      ret.push(this._models[modelId].model);\n    }\n\n    return ret;\n  }\n\n  getModel(resource) {\n    const modelId = MODEL_ID(resource);\n    const modelData = this._models[modelId];\n\n    if (!modelData) {\n      return null;\n    }\n\n    return modelData.model;\n  }\n\n  getSemanticTokensProviderStyling(provider) {\n    return this._semanticStyling.get(provider);\n  } // --- end IModelService\n\n\n  _schemaShouldMaintainUndoRedoElements(resource) {\n    return resource.scheme === Schemas.file || resource.scheme === Schemas.vscodeRemote || resource.scheme === Schemas.userData || resource.scheme === Schemas.vscodeNotebookCell || resource.scheme === 'fake-fs' // for tests\n    ;\n  }\n\n  _onWillDispose(model) {\n    const modelId = MODEL_ID(model.uri);\n    const modelData = this._models[modelId];\n    const sharesUndoRedoStack = this._undoRedoService.getUriComparisonKey(model.uri) !== model.uri.toString();\n    let maintainUndoRedoStack = false;\n    let heapSize = 0;\n\n    if (sharesUndoRedoStack || this._shouldRestoreUndoStack() && this._schemaShouldMaintainUndoRedoElements(model.uri)) {\n      const elements = this._undoRedoService.getElements(model.uri);\n\n      if (elements.past.length > 0 || elements.future.length > 0) {\n        for (const element of elements.past) {\n          if (isEditStackElement(element) && element.matchesResource(model.uri)) {\n            maintainUndoRedoStack = true;\n            heapSize += element.heapSize(model.uri);\n            element.setModel(model.uri); // remove reference from text buffer instance\n          }\n        }\n\n        for (const element of elements.future) {\n          if (isEditStackElement(element) && element.matchesResource(model.uri)) {\n            maintainUndoRedoStack = true;\n            heapSize += element.heapSize(model.uri);\n            element.setModel(model.uri); // remove reference from text buffer instance\n          }\n        }\n      }\n    }\n\n    const maxMemory = ModelService.MAX_MEMORY_FOR_CLOSED_FILES_UNDO_STACK;\n\n    if (!maintainUndoRedoStack) {\n      if (!sharesUndoRedoStack) {\n        const initialUndoRedoSnapshot = modelData.model.getInitialUndoRedoSnapshot();\n\n        if (initialUndoRedoSnapshot !== null) {\n          this._undoRedoService.restoreSnapshot(initialUndoRedoSnapshot);\n        }\n      }\n    } else if (!sharesUndoRedoStack && heapSize > maxMemory) {\n      // the undo stack for this file would never fit in the configured memory, so don't bother with it.\n      const initialUndoRedoSnapshot = modelData.model.getInitialUndoRedoSnapshot();\n\n      if (initialUndoRedoSnapshot !== null) {\n        this._undoRedoService.restoreSnapshot(initialUndoRedoSnapshot);\n      }\n    } else {\n      this._ensureDisposedModelsHeapSize(maxMemory - heapSize); // We only invalidate the elements, but they remain in the undo-redo service.\n\n\n      this._undoRedoService.setElementsValidFlag(model.uri, false, element => isEditStackElement(element) && element.matchesResource(model.uri));\n\n      this._insertDisposedModel(new DisposedModelInfo(model.uri, modelData.model.getInitialUndoRedoSnapshot(), Date.now(), sharesUndoRedoStack, heapSize, computeModelSha1(model), model.getVersionId(), model.getAlternativeVersionId()));\n    }\n\n    delete this._models[modelId];\n    modelData.dispose(); // clean up cache\n\n    delete this._modelCreationOptionsByLanguageAndResource[model.getLanguageId() + model.uri];\n\n    this._onModelRemoved.fire(model);\n  }\n\n  _onDidChangeLanguage(model, e) {\n    const oldLanguageId = e.oldLanguage;\n    const newLanguageId = model.getLanguageId();\n    const oldOptions = this.getCreationOptions(oldLanguageId, model.uri, model.isForSimpleWidget);\n    const newOptions = this.getCreationOptions(newLanguageId, model.uri, model.isForSimpleWidget);\n\n    ModelService._setModelOptionsForModel(model, newOptions, oldOptions);\n\n    this._onModelModeChanged.fire({\n      model,\n      oldLanguageId: oldLanguageId\n    });\n  }\n\n};\nModelService.MAX_MEMORY_FOR_CLOSED_FILES_UNDO_STACK = 20 * 1024 * 1024;\nModelService = __decorate([__param(0, IConfigurationService), __param(1, ITextResourcePropertiesService), __param(2, IThemeService), __param(3, ILogService), __param(4, IUndoRedoService), __param(5, ILanguageService), __param(6, ILanguageConfigurationService), __param(7, ILanguageFeatureDebounceService)], ModelService);\nexport { ModelService };\nexport const SEMANTIC_HIGHLIGHTING_SETTING_ID = 'editor.semanticHighlighting';\nexport function isSemanticColoringEnabled(model, themeService, configurationService) {\n  var _a;\n\n  const setting = (_a = configurationService.getValue(SEMANTIC_HIGHLIGHTING_SETTING_ID, {\n    overrideIdentifier: model.getLanguageId(),\n    resource: model.uri\n  })) === null || _a === void 0 ? void 0 : _a.enabled;\n\n  if (typeof setting === 'boolean') {\n    return setting;\n  }\n\n  return themeService.getColorTheme().semanticHighlighting;\n}\nlet SemanticColoringFeature = class SemanticColoringFeature extends Disposable {\n  constructor(semanticStyling, modelService, themeService, configurationService, languageFeatureDebounceService) {\n    super();\n    this._watchers = Object.create(null);\n    this._semanticStyling = semanticStyling;\n\n    const register = model => {\n      this._watchers[model.uri.toString()] = new ModelSemanticColoring(model, this._semanticStyling, themeService, languageFeatureDebounceService);\n    };\n\n    const deregister = (model, modelSemanticColoring) => {\n      modelSemanticColoring.dispose();\n      delete this._watchers[model.uri.toString()];\n    };\n\n    const handleSettingOrThemeChange = () => {\n      for (let model of modelService.getModels()) {\n        const curr = this._watchers[model.uri.toString()];\n\n        if (isSemanticColoringEnabled(model, themeService, configurationService)) {\n          if (!curr) {\n            register(model);\n          }\n        } else {\n          if (curr) {\n            deregister(model, curr);\n          }\n        }\n      }\n    };\n\n    this._register(modelService.onModelAdded(model => {\n      if (isSemanticColoringEnabled(model, themeService, configurationService)) {\n        register(model);\n      }\n    }));\n\n    this._register(modelService.onModelRemoved(model => {\n      const curr = this._watchers[model.uri.toString()];\n\n      if (curr) {\n        deregister(model, curr);\n      }\n    }));\n\n    this._register(configurationService.onDidChangeConfiguration(e => {\n      if (e.affectsConfiguration(SEMANTIC_HIGHLIGHTING_SETTING_ID)) {\n        handleSettingOrThemeChange();\n      }\n    }));\n\n    this._register(themeService.onDidColorThemeChange(handleSettingOrThemeChange));\n  }\n\n};\nSemanticColoringFeature = __decorate([__param(1, IModelService), __param(2, IThemeService), __param(3, IConfigurationService), __param(4, ILanguageFeatureDebounceService)], SemanticColoringFeature);\n\nclass SemanticStyling extends Disposable {\n  constructor(_themeService, _languageService, _logService) {\n    super();\n    this._themeService = _themeService;\n    this._languageService = _languageService;\n    this._logService = _logService;\n    this._caches = new WeakMap();\n\n    this._register(this._themeService.onDidColorThemeChange(() => {\n      this._caches = new WeakMap();\n    }));\n  }\n\n  get(provider) {\n    if (!this._caches.has(provider)) {\n      this._caches.set(provider, new SemanticTokensProviderStyling(provider.getLegend(), this._themeService, this._languageService, this._logService));\n    }\n\n    return this._caches.get(provider);\n  }\n\n}\n\nclass SemanticTokensResponse {\n  constructor(provider, resultId, data) {\n    this.provider = provider;\n    this.resultId = resultId;\n    this.data = data;\n  }\n\n  dispose() {\n    this.provider.releaseDocumentSemanticTokens(this.resultId);\n  }\n\n}\n\nlet ModelSemanticColoring = class ModelSemanticColoring extends Disposable {\n  constructor(model, stylingProvider, themeService, languageFeatureDebounceService) {\n    super();\n    this._isDisposed = false;\n    this._model = model;\n    this._semanticStyling = stylingProvider;\n    this._debounceInformation = languageFeatureDebounceService.for(DocumentSemanticTokensProviderRegistry, 'DocumentSemanticTokens', {\n      min: ModelSemanticColoring.REQUEST_MIN_DELAY,\n      max: ModelSemanticColoring.REQUEST_MAX_DELAY\n    });\n    this._fetchDocumentSemanticTokens = this._register(new RunOnceScheduler(() => this._fetchDocumentSemanticTokensNow(), ModelSemanticColoring.REQUEST_MIN_DELAY));\n    this._currentDocumentResponse = null;\n    this._currentDocumentRequestCancellationTokenSource = null;\n    this._documentProvidersChangeListeners = [];\n\n    this._register(this._model.onDidChangeContent(() => {\n      if (!this._fetchDocumentSemanticTokens.isScheduled()) {\n        this._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model));\n      }\n    }));\n\n    this._register(this._model.onDidChangeLanguage(() => {\n      // clear any outstanding state\n      if (this._currentDocumentResponse) {\n        this._currentDocumentResponse.dispose();\n\n        this._currentDocumentResponse = null;\n      }\n\n      if (this._currentDocumentRequestCancellationTokenSource) {\n        this._currentDocumentRequestCancellationTokenSource.cancel();\n\n        this._currentDocumentRequestCancellationTokenSource = null;\n      }\n\n      this._setDocumentSemanticTokens(null, null, null, []);\n\n      this._fetchDocumentSemanticTokens.schedule(0);\n    }));\n\n    const bindDocumentChangeListeners = () => {\n      dispose(this._documentProvidersChangeListeners);\n      this._documentProvidersChangeListeners = [];\n\n      for (const provider of DocumentSemanticTokensProviderRegistry.all(model)) {\n        if (typeof provider.onDidChange === 'function') {\n          this._documentProvidersChangeListeners.push(provider.onDidChange(() => this._fetchDocumentSemanticTokens.schedule(0)));\n        }\n      }\n    };\n\n    bindDocumentChangeListeners();\n\n    this._register(DocumentSemanticTokensProviderRegistry.onDidChange(() => {\n      bindDocumentChangeListeners();\n\n      this._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model));\n    }));\n\n    this._register(themeService.onDidColorThemeChange(_ => {\n      // clear out existing tokens\n      this._setDocumentSemanticTokens(null, null, null, []);\n\n      this._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model));\n    }));\n\n    this._fetchDocumentSemanticTokens.schedule(0);\n  }\n\n  dispose() {\n    if (this._currentDocumentResponse) {\n      this._currentDocumentResponse.dispose();\n\n      this._currentDocumentResponse = null;\n    }\n\n    if (this._currentDocumentRequestCancellationTokenSource) {\n      this._currentDocumentRequestCancellationTokenSource.cancel();\n\n      this._currentDocumentRequestCancellationTokenSource = null;\n    }\n\n    this._setDocumentSemanticTokens(null, null, null, []);\n\n    this._isDisposed = true;\n    super.dispose();\n  }\n\n  _fetchDocumentSemanticTokensNow() {\n    if (this._currentDocumentRequestCancellationTokenSource) {\n      // there is already a request running, let it finish...\n      return;\n    }\n\n    if (!hasDocumentSemanticTokensProvider(this._model)) {\n      // there is no provider\n      if (this._currentDocumentResponse) {\n        // there are semantic tokens set\n        this._model.setSemanticTokens(null, false);\n      }\n\n      return;\n    }\n\n    const cancellationTokenSource = new CancellationTokenSource();\n    const lastProvider = this._currentDocumentResponse ? this._currentDocumentResponse.provider : null;\n    const lastResultId = this._currentDocumentResponse ? this._currentDocumentResponse.resultId || null : null;\n    const request = getDocumentSemanticTokens(this._model, lastProvider, lastResultId, cancellationTokenSource.token);\n    this._currentDocumentRequestCancellationTokenSource = cancellationTokenSource;\n    const pendingChanges = [];\n\n    const contentChangeListener = this._model.onDidChangeContent(e => {\n      pendingChanges.push(e);\n    });\n\n    const sw = new StopWatch(false);\n    request.then(res => {\n      this._debounceInformation.update(this._model, sw.elapsed());\n\n      this._currentDocumentRequestCancellationTokenSource = null;\n      contentChangeListener.dispose();\n\n      if (!res) {\n        this._setDocumentSemanticTokens(null, null, null, pendingChanges);\n      } else {\n        const {\n          provider,\n          tokens\n        } = res;\n\n        const styling = this._semanticStyling.get(provider);\n\n        this._setDocumentSemanticTokens(provider, tokens || null, styling, pendingChanges);\n      }\n    }, err => {\n      const isExpectedError = err && (errors.isCancellationError(err) || typeof err.message === 'string' && err.message.indexOf('busy') !== -1);\n\n      if (!isExpectedError) {\n        errors.onUnexpectedError(err);\n      } // Semantic tokens eats up all errors and considers errors to mean that the result is temporarily not available\n      // The API does not have a special error kind to express this...\n\n\n      this._currentDocumentRequestCancellationTokenSource = null;\n      contentChangeListener.dispose();\n\n      if (pendingChanges.length > 0) {\n        // More changes occurred while the request was running\n        if (!this._fetchDocumentSemanticTokens.isScheduled()) {\n          this._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model));\n        }\n      }\n    });\n  }\n\n  static _copy(src, srcOffset, dest, destOffset, length) {\n    for (let i = 0; i < length; i++) {\n      dest[destOffset + i] = src[srcOffset + i];\n    }\n  }\n\n  _setDocumentSemanticTokens(provider, tokens, styling, pendingChanges) {\n    const currentResponse = this._currentDocumentResponse;\n\n    const rescheduleIfNeeded = () => {\n      if (pendingChanges.length > 0 && !this._fetchDocumentSemanticTokens.isScheduled()) {\n        this._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model));\n      }\n    };\n\n    if (this._currentDocumentResponse) {\n      this._currentDocumentResponse.dispose();\n\n      this._currentDocumentResponse = null;\n    }\n\n    if (this._isDisposed) {\n      // disposed!\n      if (provider && tokens) {\n        provider.releaseDocumentSemanticTokens(tokens.resultId);\n      }\n\n      return;\n    }\n\n    if (!provider || !styling) {\n      this._model.setSemanticTokens(null, false);\n\n      return;\n    }\n\n    if (!tokens) {\n      this._model.setSemanticTokens(null, true);\n\n      rescheduleIfNeeded();\n      return;\n    }\n\n    if (isSemanticTokensEdits(tokens)) {\n      if (!currentResponse) {\n        // not possible!\n        this._model.setSemanticTokens(null, true);\n\n        return;\n      }\n\n      if (tokens.edits.length === 0) {\n        // nothing to do!\n        tokens = {\n          resultId: tokens.resultId,\n          data: currentResponse.data\n        };\n      } else {\n        let deltaLength = 0;\n\n        for (const edit of tokens.edits) {\n          deltaLength += (edit.data ? edit.data.length : 0) - edit.deleteCount;\n        }\n\n        const srcData = currentResponse.data;\n        const destData = new Uint32Array(srcData.length + deltaLength);\n        let srcLastStart = srcData.length;\n        let destLastStart = destData.length;\n\n        for (let i = tokens.edits.length - 1; i >= 0; i--) {\n          const edit = tokens.edits[i];\n          const copyCount = srcLastStart - (edit.start + edit.deleteCount);\n\n          if (copyCount > 0) {\n            ModelSemanticColoring._copy(srcData, srcLastStart - copyCount, destData, destLastStart - copyCount, copyCount);\n\n            destLastStart -= copyCount;\n          }\n\n          if (edit.data) {\n            ModelSemanticColoring._copy(edit.data, 0, destData, destLastStart - edit.data.length, edit.data.length);\n\n            destLastStart -= edit.data.length;\n          }\n\n          srcLastStart = edit.start;\n        }\n\n        if (srcLastStart > 0) {\n          ModelSemanticColoring._copy(srcData, 0, destData, 0, srcLastStart);\n        }\n\n        tokens = {\n          resultId: tokens.resultId,\n          data: destData\n        };\n      }\n    }\n\n    if (isSemanticTokens(tokens)) {\n      this._currentDocumentResponse = new SemanticTokensResponse(provider, tokens.resultId, tokens.data);\n      const result = toMultilineTokens2(tokens, styling, this._model.getLanguageId()); // Adjust incoming semantic tokens\n\n      if (pendingChanges.length > 0) {\n        // More changes occurred while the request was running\n        // We need to:\n        // 1. Adjust incoming semantic tokens\n        // 2. Request them again\n        for (const change of pendingChanges) {\n          for (const area of result) {\n            for (const singleChange of change.changes) {\n              area.applyEdit(singleChange.range, singleChange.text);\n            }\n          }\n        }\n      }\n\n      this._model.setSemanticTokens(result, true);\n    } else {\n      this._model.setSemanticTokens(null, true);\n    }\n\n    rescheduleIfNeeded();\n  }\n\n};\nModelSemanticColoring.REQUEST_MIN_DELAY = 300;\nModelSemanticColoring.REQUEST_MAX_DELAY = 2000;\nModelSemanticColoring = __decorate([__param(2, IThemeService), __param(3, ILanguageFeatureDebounceService)], ModelSemanticColoring);\nexport { ModelSemanticColoring };","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/common/services/modelService.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","Emitter","Disposable","DisposableStore","dispose","platform","errors","TextModel","EDITOR_MODEL_DEFAULTS","DocumentSemanticTokensProviderRegistry","PLAINTEXT_LANGUAGE_ID","ILanguageService","IModelService","ITextResourcePropertiesService","IConfigurationService","RunOnceScheduler","CancellationTokenSource","IThemeService","ILogService","IUndoRedoService","StringSHA1","isEditStackElement","Schemas","SemanticTokensProviderStyling","toMultilineTokens2","getDocumentSemanticTokens","hasDocumentSemanticTokensProvider","isSemanticTokens","isSemanticTokensEdits","equals","ILanguageConfigurationService","ILanguageFeatureDebounceService","StopWatch","MODEL_ID","resource","toString","computeModelSha1","model","shaComputer","snapshot","createSnapshot","text","read","update","digest","ModelData","constructor","onWillDispose","onDidChangeLanguage","_modelEventListeners","_languageSelection","_languageSelectionListener","add","e","_disposeLanguageSelection","setLanguage","languageSelection","onDidChange","setMode","languageId","DEFAULT_EOL","isLinux","isMacintosh","DisposedModelInfo","uri","initialUndoRedoSnapshot","time","sharesUndoRedoStack","heapSize","sha1","versionId","alternativeVersionId","ModelService","_configurationService","_resourcePropertiesService","_themeService","_logService","_undoRedoService","_languageService","_languageConfigurationService","_languageFeatureDebounceService","_onModelAdded","_register","onModelAdded","event","_onModelRemoved","onModelRemoved","_onModelModeChanged","onModelLanguageChanged","_modelCreationOptionsByLanguageAndResource","create","_models","_disposedModels","Map","_disposedModelsHeapSize","_semanticStyling","SemanticStyling","onDidChangeConfiguration","_updateModelOptions","SemanticColoringFeature","_readModelOptions","config","isForSimpleWidget","_a","tabSize","editor","parsedTabSize","parseInt","isNaN","indentSize","parsedIndentSize","insertSpaces","Boolean","newDefaultEOL","eol","trimAutoWhitespace","detectIndentation","largeFileOptimizations","bracketPairColorizationOptions","bracketPairColorization","enabled","defaultEOL","_getEOL","language","getEOL","getValue","overrideIdentifier","OS","_shouldRestoreUndoStack","result","getCreationOptions","creationOptions","oldOptionsByLanguageAndResource","keys","len","modelId","modelData","getLanguageId","oldOptions","newOptions","_setModelOptionsForModel","currentOptions","getLineCount","setEOL","updateOptions","bracketColorizationOptions","_insertDisposedModel","disposedModelData","set","_removeDisposedModel","get","delete","_ensureDisposedModelsHeapSize","maxModelsHeapSize","disposedModels","forEach","entry","push","sort","a","b","disposedModel","shift","restoreSnapshot","_createModelData","value","options","has","elements","getElements","sha1IsEqual","element","past","matchesResource","setModel","future","setElementsValidFlag","_overwriteVersionId","_overwriteAlternativeVersionId","_overwriteInitialUndoRedoSnapshot","Error","_onWillDispose","_onDidChangeLanguage","createModel","fire","getModels","ret","getModel","getSemanticTokensProviderStyling","provider","_schemaShouldMaintainUndoRedoElements","scheme","file","vscodeRemote","userData","vscodeNotebookCell","getUriComparisonKey","maintainUndoRedoStack","maxMemory","MAX_MEMORY_FOR_CLOSED_FILES_UNDO_STACK","getInitialUndoRedoSnapshot","Date","now","getVersionId","getAlternativeVersionId","oldLanguageId","oldLanguage","newLanguageId","SEMANTIC_HIGHLIGHTING_SETTING_ID","isSemanticColoringEnabled","themeService","configurationService","setting","getColorTheme","semanticHighlighting","semanticStyling","modelService","languageFeatureDebounceService","_watchers","register","ModelSemanticColoring","deregister","modelSemanticColoring","handleSettingOrThemeChange","curr","affectsConfiguration","onDidColorThemeChange","_caches","WeakMap","getLegend","SemanticTokensResponse","resultId","data","releaseDocumentSemanticTokens","stylingProvider","_isDisposed","_model","_debounceInformation","for","min","REQUEST_MIN_DELAY","max","REQUEST_MAX_DELAY","_fetchDocumentSemanticTokens","_fetchDocumentSemanticTokensNow","_currentDocumentResponse","_currentDocumentRequestCancellationTokenSource","_documentProvidersChangeListeners","onDidChangeContent","isScheduled","schedule","cancel","_setDocumentSemanticTokens","bindDocumentChangeListeners","all","_","setSemanticTokens","cancellationTokenSource","lastProvider","lastResultId","request","token","pendingChanges","contentChangeListener","sw","then","res","elapsed","tokens","styling","err","isExpectedError","isCancellationError","message","indexOf","onUnexpectedError","_copy","src","srcOffset","dest","destOffset","currentResponse","rescheduleIfNeeded","edits","deltaLength","edit","deleteCount","srcData","destData","Uint32Array","srcLastStart","destLastStart","copyCount","start","change","area","singleChange","changes","applyEdit","range"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable, DisposableStore, dispose } from '../../../base/common/lifecycle.js';\nimport * as platform from '../../../base/common/platform.js';\nimport * as errors from '../../../base/common/errors.js';\nimport { TextModel } from '../model/textModel.js';\nimport { EDITOR_MODEL_DEFAULTS } from '../core/textModelDefaults.js';\nimport { DocumentSemanticTokensProviderRegistry } from '../languages.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../languages/modesRegistry.js';\nimport { ILanguageService } from './language.js';\nimport { IModelService } from './model.js';\nimport { ITextResourcePropertiesService } from './textResourceConfiguration.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { IUndoRedoService } from '../../../platform/undoRedo/common/undoRedo.js';\nimport { StringSHA1 } from '../../../base/common/hash.js';\nimport { isEditStackElement } from '../model/editStack.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { SemanticTokensProviderStyling, toMultilineTokens2 } from './semanticTokensProviderStyling.js';\nimport { getDocumentSemanticTokens, hasDocumentSemanticTokensProvider, isSemanticTokens, isSemanticTokensEdits } from './getSemanticTokens.js';\nimport { equals } from '../../../base/common/objects.js';\nimport { ILanguageConfigurationService } from '../languages/languageConfigurationRegistry.js';\nimport { ILanguageFeatureDebounceService } from './languageFeatureDebounce.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\nfunction MODEL_ID(resource) {\n    return resource.toString();\n}\nfunction computeModelSha1(model) {\n    // compute the sha1\n    const shaComputer = new StringSHA1();\n    const snapshot = model.createSnapshot();\n    let text;\n    while ((text = snapshot.read())) {\n        shaComputer.update(text);\n    }\n    return shaComputer.digest();\n}\nclass ModelData {\n    constructor(model, onWillDispose, onDidChangeLanguage) {\n        this._modelEventListeners = new DisposableStore();\n        this.model = model;\n        this._languageSelection = null;\n        this._languageSelectionListener = null;\n        this._modelEventListeners.add(model.onWillDispose(() => onWillDispose(model)));\n        this._modelEventListeners.add(model.onDidChangeLanguage((e) => onDidChangeLanguage(model, e)));\n    }\n    _disposeLanguageSelection() {\n        if (this._languageSelectionListener) {\n            this._languageSelectionListener.dispose();\n            this._languageSelectionListener = null;\n        }\n    }\n    dispose() {\n        this._modelEventListeners.dispose();\n        this._disposeLanguageSelection();\n    }\n    setLanguage(languageSelection) {\n        this._disposeLanguageSelection();\n        this._languageSelection = languageSelection;\n        this._languageSelectionListener = this._languageSelection.onDidChange(() => this.model.setMode(languageSelection.languageId));\n        this.model.setMode(languageSelection.languageId);\n    }\n}\nconst DEFAULT_EOL = (platform.isLinux || platform.isMacintosh) ? 1 /* LF */ : 2 /* CRLF */;\nclass DisposedModelInfo {\n    constructor(uri, initialUndoRedoSnapshot, time, sharesUndoRedoStack, heapSize, sha1, versionId, alternativeVersionId) {\n        this.uri = uri;\n        this.initialUndoRedoSnapshot = initialUndoRedoSnapshot;\n        this.time = time;\n        this.sharesUndoRedoStack = sharesUndoRedoStack;\n        this.heapSize = heapSize;\n        this.sha1 = sha1;\n        this.versionId = versionId;\n        this.alternativeVersionId = alternativeVersionId;\n    }\n}\nlet ModelService = class ModelService extends Disposable {\n    constructor(_configurationService, _resourcePropertiesService, _themeService, _logService, _undoRedoService, _languageService, _languageConfigurationService, _languageFeatureDebounceService) {\n        super();\n        this._configurationService = _configurationService;\n        this._resourcePropertiesService = _resourcePropertiesService;\n        this._themeService = _themeService;\n        this._logService = _logService;\n        this._undoRedoService = _undoRedoService;\n        this._languageService = _languageService;\n        this._languageConfigurationService = _languageConfigurationService;\n        this._languageFeatureDebounceService = _languageFeatureDebounceService;\n        this._onModelAdded = this._register(new Emitter());\n        this.onModelAdded = this._onModelAdded.event;\n        this._onModelRemoved = this._register(new Emitter());\n        this.onModelRemoved = this._onModelRemoved.event;\n        this._onModelModeChanged = this._register(new Emitter());\n        this.onModelLanguageChanged = this._onModelModeChanged.event;\n        this._modelCreationOptionsByLanguageAndResource = Object.create(null);\n        this._models = {};\n        this._disposedModels = new Map();\n        this._disposedModelsHeapSize = 0;\n        this._semanticStyling = this._register(new SemanticStyling(this._themeService, this._languageService, this._logService));\n        this._register(this._configurationService.onDidChangeConfiguration(() => this._updateModelOptions()));\n        this._updateModelOptions();\n        this._register(new SemanticColoringFeature(this._semanticStyling, this, this._themeService, this._configurationService, this._languageFeatureDebounceService));\n    }\n    static _readModelOptions(config, isForSimpleWidget) {\n        var _a;\n        let tabSize = EDITOR_MODEL_DEFAULTS.tabSize;\n        if (config.editor && typeof config.editor.tabSize !== 'undefined') {\n            const parsedTabSize = parseInt(config.editor.tabSize, 10);\n            if (!isNaN(parsedTabSize)) {\n                tabSize = parsedTabSize;\n            }\n            if (tabSize < 1) {\n                tabSize = 1;\n            }\n        }\n        let indentSize = tabSize;\n        if (config.editor && typeof config.editor.indentSize !== 'undefined' && config.editor.indentSize !== 'tabSize') {\n            const parsedIndentSize = parseInt(config.editor.indentSize, 10);\n            if (!isNaN(parsedIndentSize)) {\n                indentSize = parsedIndentSize;\n            }\n            if (indentSize < 1) {\n                indentSize = 1;\n            }\n        }\n        let insertSpaces = EDITOR_MODEL_DEFAULTS.insertSpaces;\n        if (config.editor && typeof config.editor.insertSpaces !== 'undefined') {\n            insertSpaces = (config.editor.insertSpaces === 'false' ? false : Boolean(config.editor.insertSpaces));\n        }\n        let newDefaultEOL = DEFAULT_EOL;\n        const eol = config.eol;\n        if (eol === '\\r\\n') {\n            newDefaultEOL = 2 /* CRLF */;\n        }\n        else if (eol === '\\n') {\n            newDefaultEOL = 1 /* LF */;\n        }\n        let trimAutoWhitespace = EDITOR_MODEL_DEFAULTS.trimAutoWhitespace;\n        if (config.editor && typeof config.editor.trimAutoWhitespace !== 'undefined') {\n            trimAutoWhitespace = (config.editor.trimAutoWhitespace === 'false' ? false : Boolean(config.editor.trimAutoWhitespace));\n        }\n        let detectIndentation = EDITOR_MODEL_DEFAULTS.detectIndentation;\n        if (config.editor && typeof config.editor.detectIndentation !== 'undefined') {\n            detectIndentation = (config.editor.detectIndentation === 'false' ? false : Boolean(config.editor.detectIndentation));\n        }\n        let largeFileOptimizations = EDITOR_MODEL_DEFAULTS.largeFileOptimizations;\n        if (config.editor && typeof config.editor.largeFileOptimizations !== 'undefined') {\n            largeFileOptimizations = (config.editor.largeFileOptimizations === 'false' ? false : Boolean(config.editor.largeFileOptimizations));\n        }\n        let bracketPairColorizationOptions = EDITOR_MODEL_DEFAULTS.bracketPairColorizationOptions;\n        if (((_a = config.editor) === null || _a === void 0 ? void 0 : _a.bracketPairColorization) && typeof config.editor.bracketPairColorization === 'object') {\n            bracketPairColorizationOptions = {\n                enabled: !!config.editor.bracketPairColorization.enabled\n            };\n        }\n        return {\n            isForSimpleWidget: isForSimpleWidget,\n            tabSize: tabSize,\n            indentSize: indentSize,\n            insertSpaces: insertSpaces,\n            detectIndentation: detectIndentation,\n            defaultEOL: newDefaultEOL,\n            trimAutoWhitespace: trimAutoWhitespace,\n            largeFileOptimizations: largeFileOptimizations,\n            bracketPairColorizationOptions\n        };\n    }\n    _getEOL(resource, language) {\n        if (resource) {\n            return this._resourcePropertiesService.getEOL(resource, language);\n        }\n        const eol = this._configurationService.getValue('files.eol', { overrideIdentifier: language });\n        if (eol && typeof eol === 'string' && eol !== 'auto') {\n            return eol;\n        }\n        return platform.OS === 3 /* Linux */ || platform.OS === 2 /* Macintosh */ ? '\\n' : '\\r\\n';\n    }\n    _shouldRestoreUndoStack() {\n        const result = this._configurationService.getValue('files.restoreUndoStack');\n        if (typeof result === 'boolean') {\n            return result;\n        }\n        return true;\n    }\n    getCreationOptions(language, resource, isForSimpleWidget) {\n        let creationOptions = this._modelCreationOptionsByLanguageAndResource[language + resource];\n        if (!creationOptions) {\n            const editor = this._configurationService.getValue('editor', { overrideIdentifier: language, resource });\n            const eol = this._getEOL(resource, language);\n            creationOptions = ModelService._readModelOptions({ editor, eol }, isForSimpleWidget);\n            this._modelCreationOptionsByLanguageAndResource[language + resource] = creationOptions;\n        }\n        return creationOptions;\n    }\n    _updateModelOptions() {\n        const oldOptionsByLanguageAndResource = this._modelCreationOptionsByLanguageAndResource;\n        this._modelCreationOptionsByLanguageAndResource = Object.create(null);\n        // Update options on all models\n        const keys = Object.keys(this._models);\n        for (let i = 0, len = keys.length; i < len; i++) {\n            const modelId = keys[i];\n            const modelData = this._models[modelId];\n            const language = modelData.model.getLanguageId();\n            const uri = modelData.model.uri;\n            const oldOptions = oldOptionsByLanguageAndResource[language + uri];\n            const newOptions = this.getCreationOptions(language, uri, modelData.model.isForSimpleWidget);\n            ModelService._setModelOptionsForModel(modelData.model, newOptions, oldOptions);\n        }\n    }\n    static _setModelOptionsForModel(model, newOptions, currentOptions) {\n        if (currentOptions && currentOptions.defaultEOL !== newOptions.defaultEOL && model.getLineCount() === 1) {\n            model.setEOL(newOptions.defaultEOL === 1 /* LF */ ? 0 /* LF */ : 1 /* CRLF */);\n        }\n        if (currentOptions\n            && (currentOptions.detectIndentation === newOptions.detectIndentation)\n            && (currentOptions.insertSpaces === newOptions.insertSpaces)\n            && (currentOptions.tabSize === newOptions.tabSize)\n            && (currentOptions.indentSize === newOptions.indentSize)\n            && (currentOptions.trimAutoWhitespace === newOptions.trimAutoWhitespace)\n            && equals(currentOptions.bracketPairColorizationOptions, newOptions.bracketPairColorizationOptions)) {\n            // Same indent opts, no need to touch the model\n            return;\n        }\n        if (newOptions.detectIndentation) {\n            model.detectIndentation(newOptions.insertSpaces, newOptions.tabSize);\n            model.updateOptions({\n                trimAutoWhitespace: newOptions.trimAutoWhitespace,\n                bracketColorizationOptions: newOptions.bracketPairColorizationOptions\n            });\n        }\n        else {\n            model.updateOptions({\n                insertSpaces: newOptions.insertSpaces,\n                tabSize: newOptions.tabSize,\n                indentSize: newOptions.indentSize,\n                trimAutoWhitespace: newOptions.trimAutoWhitespace,\n                bracketColorizationOptions: newOptions.bracketPairColorizationOptions\n            });\n        }\n    }\n    // --- begin IModelService\n    _insertDisposedModel(disposedModelData) {\n        this._disposedModels.set(MODEL_ID(disposedModelData.uri), disposedModelData);\n        this._disposedModelsHeapSize += disposedModelData.heapSize;\n    }\n    _removeDisposedModel(resource) {\n        const disposedModelData = this._disposedModels.get(MODEL_ID(resource));\n        if (disposedModelData) {\n            this._disposedModelsHeapSize -= disposedModelData.heapSize;\n        }\n        this._disposedModels.delete(MODEL_ID(resource));\n        return disposedModelData;\n    }\n    _ensureDisposedModelsHeapSize(maxModelsHeapSize) {\n        if (this._disposedModelsHeapSize > maxModelsHeapSize) {\n            // we must remove some old undo stack elements to free up some memory\n            const disposedModels = [];\n            this._disposedModels.forEach(entry => {\n                if (!entry.sharesUndoRedoStack) {\n                    disposedModels.push(entry);\n                }\n            });\n            disposedModels.sort((a, b) => a.time - b.time);\n            while (disposedModels.length > 0 && this._disposedModelsHeapSize > maxModelsHeapSize) {\n                const disposedModel = disposedModels.shift();\n                this._removeDisposedModel(disposedModel.uri);\n                if (disposedModel.initialUndoRedoSnapshot !== null) {\n                    this._undoRedoService.restoreSnapshot(disposedModel.initialUndoRedoSnapshot);\n                }\n            }\n        }\n    }\n    _createModelData(value, languageId, resource, isForSimpleWidget) {\n        // create & save the model\n        const options = this.getCreationOptions(languageId, resource, isForSimpleWidget);\n        const model = new TextModel(value, languageId, options, resource, this._undoRedoService, this._languageService, this._languageConfigurationService);\n        if (resource && this._disposedModels.has(MODEL_ID(resource))) {\n            const disposedModelData = this._removeDisposedModel(resource);\n            const elements = this._undoRedoService.getElements(resource);\n            const sha1IsEqual = (computeModelSha1(model) === disposedModelData.sha1);\n            if (sha1IsEqual || disposedModelData.sharesUndoRedoStack) {\n                for (const element of elements.past) {\n                    if (isEditStackElement(element) && element.matchesResource(resource)) {\n                        element.setModel(model);\n                    }\n                }\n                for (const element of elements.future) {\n                    if (isEditStackElement(element) && element.matchesResource(resource)) {\n                        element.setModel(model);\n                    }\n                }\n                this._undoRedoService.setElementsValidFlag(resource, true, (element) => (isEditStackElement(element) && element.matchesResource(resource)));\n                if (sha1IsEqual) {\n                    model._overwriteVersionId(disposedModelData.versionId);\n                    model._overwriteAlternativeVersionId(disposedModelData.alternativeVersionId);\n                    model._overwriteInitialUndoRedoSnapshot(disposedModelData.initialUndoRedoSnapshot);\n                }\n            }\n            else {\n                if (disposedModelData.initialUndoRedoSnapshot !== null) {\n                    this._undoRedoService.restoreSnapshot(disposedModelData.initialUndoRedoSnapshot);\n                }\n            }\n        }\n        const modelId = MODEL_ID(model.uri);\n        if (this._models[modelId]) {\n            // There already exists a model with this id => this is a programmer error\n            throw new Error('ModelService: Cannot add model because it already exists!');\n        }\n        const modelData = new ModelData(model, (model) => this._onWillDispose(model), (model, e) => this._onDidChangeLanguage(model, e));\n        this._models[modelId] = modelData;\n        return modelData;\n    }\n    createModel(value, languageSelection, resource, isForSimpleWidget = false) {\n        let modelData;\n        if (languageSelection) {\n            modelData = this._createModelData(value, languageSelection.languageId, resource, isForSimpleWidget);\n            this.setMode(modelData.model, languageSelection);\n        }\n        else {\n            modelData = this._createModelData(value, PLAINTEXT_LANGUAGE_ID, resource, isForSimpleWidget);\n        }\n        this._onModelAdded.fire(modelData.model);\n        return modelData.model;\n    }\n    setMode(model, languageSelection) {\n        if (!languageSelection) {\n            return;\n        }\n        const modelData = this._models[MODEL_ID(model.uri)];\n        if (!modelData) {\n            return;\n        }\n        modelData.setLanguage(languageSelection);\n    }\n    getModels() {\n        const ret = [];\n        const keys = Object.keys(this._models);\n        for (let i = 0, len = keys.length; i < len; i++) {\n            const modelId = keys[i];\n            ret.push(this._models[modelId].model);\n        }\n        return ret;\n    }\n    getModel(resource) {\n        const modelId = MODEL_ID(resource);\n        const modelData = this._models[modelId];\n        if (!modelData) {\n            return null;\n        }\n        return modelData.model;\n    }\n    getSemanticTokensProviderStyling(provider) {\n        return this._semanticStyling.get(provider);\n    }\n    // --- end IModelService\n    _schemaShouldMaintainUndoRedoElements(resource) {\n        return (resource.scheme === Schemas.file\n            || resource.scheme === Schemas.vscodeRemote\n            || resource.scheme === Schemas.userData\n            || resource.scheme === Schemas.vscodeNotebookCell\n            || resource.scheme === 'fake-fs' // for tests\n        );\n    }\n    _onWillDispose(model) {\n        const modelId = MODEL_ID(model.uri);\n        const modelData = this._models[modelId];\n        const sharesUndoRedoStack = (this._undoRedoService.getUriComparisonKey(model.uri) !== model.uri.toString());\n        let maintainUndoRedoStack = false;\n        let heapSize = 0;\n        if (sharesUndoRedoStack || (this._shouldRestoreUndoStack() && this._schemaShouldMaintainUndoRedoElements(model.uri))) {\n            const elements = this._undoRedoService.getElements(model.uri);\n            if (elements.past.length > 0 || elements.future.length > 0) {\n                for (const element of elements.past) {\n                    if (isEditStackElement(element) && element.matchesResource(model.uri)) {\n                        maintainUndoRedoStack = true;\n                        heapSize += element.heapSize(model.uri);\n                        element.setModel(model.uri); // remove reference from text buffer instance\n                    }\n                }\n                for (const element of elements.future) {\n                    if (isEditStackElement(element) && element.matchesResource(model.uri)) {\n                        maintainUndoRedoStack = true;\n                        heapSize += element.heapSize(model.uri);\n                        element.setModel(model.uri); // remove reference from text buffer instance\n                    }\n                }\n            }\n        }\n        const maxMemory = ModelService.MAX_MEMORY_FOR_CLOSED_FILES_UNDO_STACK;\n        if (!maintainUndoRedoStack) {\n            if (!sharesUndoRedoStack) {\n                const initialUndoRedoSnapshot = modelData.model.getInitialUndoRedoSnapshot();\n                if (initialUndoRedoSnapshot !== null) {\n                    this._undoRedoService.restoreSnapshot(initialUndoRedoSnapshot);\n                }\n            }\n        }\n        else if (!sharesUndoRedoStack && heapSize > maxMemory) {\n            // the undo stack for this file would never fit in the configured memory, so don't bother with it.\n            const initialUndoRedoSnapshot = modelData.model.getInitialUndoRedoSnapshot();\n            if (initialUndoRedoSnapshot !== null) {\n                this._undoRedoService.restoreSnapshot(initialUndoRedoSnapshot);\n            }\n        }\n        else {\n            this._ensureDisposedModelsHeapSize(maxMemory - heapSize);\n            // We only invalidate the elements, but they remain in the undo-redo service.\n            this._undoRedoService.setElementsValidFlag(model.uri, false, (element) => (isEditStackElement(element) && element.matchesResource(model.uri)));\n            this._insertDisposedModel(new DisposedModelInfo(model.uri, modelData.model.getInitialUndoRedoSnapshot(), Date.now(), sharesUndoRedoStack, heapSize, computeModelSha1(model), model.getVersionId(), model.getAlternativeVersionId()));\n        }\n        delete this._models[modelId];\n        modelData.dispose();\n        // clean up cache\n        delete this._modelCreationOptionsByLanguageAndResource[model.getLanguageId() + model.uri];\n        this._onModelRemoved.fire(model);\n    }\n    _onDidChangeLanguage(model, e) {\n        const oldLanguageId = e.oldLanguage;\n        const newLanguageId = model.getLanguageId();\n        const oldOptions = this.getCreationOptions(oldLanguageId, model.uri, model.isForSimpleWidget);\n        const newOptions = this.getCreationOptions(newLanguageId, model.uri, model.isForSimpleWidget);\n        ModelService._setModelOptionsForModel(model, newOptions, oldOptions);\n        this._onModelModeChanged.fire({ model, oldLanguageId: oldLanguageId });\n    }\n};\nModelService.MAX_MEMORY_FOR_CLOSED_FILES_UNDO_STACK = 20 * 1024 * 1024;\nModelService = __decorate([\n    __param(0, IConfigurationService),\n    __param(1, ITextResourcePropertiesService),\n    __param(2, IThemeService),\n    __param(3, ILogService),\n    __param(4, IUndoRedoService),\n    __param(5, ILanguageService),\n    __param(6, ILanguageConfigurationService),\n    __param(7, ILanguageFeatureDebounceService)\n], ModelService);\nexport { ModelService };\nexport const SEMANTIC_HIGHLIGHTING_SETTING_ID = 'editor.semanticHighlighting';\nexport function isSemanticColoringEnabled(model, themeService, configurationService) {\n    var _a;\n    const setting = (_a = configurationService.getValue(SEMANTIC_HIGHLIGHTING_SETTING_ID, { overrideIdentifier: model.getLanguageId(), resource: model.uri })) === null || _a === void 0 ? void 0 : _a.enabled;\n    if (typeof setting === 'boolean') {\n        return setting;\n    }\n    return themeService.getColorTheme().semanticHighlighting;\n}\nlet SemanticColoringFeature = class SemanticColoringFeature extends Disposable {\n    constructor(semanticStyling, modelService, themeService, configurationService, languageFeatureDebounceService) {\n        super();\n        this._watchers = Object.create(null);\n        this._semanticStyling = semanticStyling;\n        const register = (model) => {\n            this._watchers[model.uri.toString()] = new ModelSemanticColoring(model, this._semanticStyling, themeService, languageFeatureDebounceService);\n        };\n        const deregister = (model, modelSemanticColoring) => {\n            modelSemanticColoring.dispose();\n            delete this._watchers[model.uri.toString()];\n        };\n        const handleSettingOrThemeChange = () => {\n            for (let model of modelService.getModels()) {\n                const curr = this._watchers[model.uri.toString()];\n                if (isSemanticColoringEnabled(model, themeService, configurationService)) {\n                    if (!curr) {\n                        register(model);\n                    }\n                }\n                else {\n                    if (curr) {\n                        deregister(model, curr);\n                    }\n                }\n            }\n        };\n        this._register(modelService.onModelAdded((model) => {\n            if (isSemanticColoringEnabled(model, themeService, configurationService)) {\n                register(model);\n            }\n        }));\n        this._register(modelService.onModelRemoved((model) => {\n            const curr = this._watchers[model.uri.toString()];\n            if (curr) {\n                deregister(model, curr);\n            }\n        }));\n        this._register(configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration(SEMANTIC_HIGHLIGHTING_SETTING_ID)) {\n                handleSettingOrThemeChange();\n            }\n        }));\n        this._register(themeService.onDidColorThemeChange(handleSettingOrThemeChange));\n    }\n};\nSemanticColoringFeature = __decorate([\n    __param(1, IModelService),\n    __param(2, IThemeService),\n    __param(3, IConfigurationService),\n    __param(4, ILanguageFeatureDebounceService)\n], SemanticColoringFeature);\nclass SemanticStyling extends Disposable {\n    constructor(_themeService, _languageService, _logService) {\n        super();\n        this._themeService = _themeService;\n        this._languageService = _languageService;\n        this._logService = _logService;\n        this._caches = new WeakMap();\n        this._register(this._themeService.onDidColorThemeChange(() => {\n            this._caches = new WeakMap();\n        }));\n    }\n    get(provider) {\n        if (!this._caches.has(provider)) {\n            this._caches.set(provider, new SemanticTokensProviderStyling(provider.getLegend(), this._themeService, this._languageService, this._logService));\n        }\n        return this._caches.get(provider);\n    }\n}\nclass SemanticTokensResponse {\n    constructor(provider, resultId, data) {\n        this.provider = provider;\n        this.resultId = resultId;\n        this.data = data;\n    }\n    dispose() {\n        this.provider.releaseDocumentSemanticTokens(this.resultId);\n    }\n}\nlet ModelSemanticColoring = class ModelSemanticColoring extends Disposable {\n    constructor(model, stylingProvider, themeService, languageFeatureDebounceService) {\n        super();\n        this._isDisposed = false;\n        this._model = model;\n        this._semanticStyling = stylingProvider;\n        this._debounceInformation = languageFeatureDebounceService.for(DocumentSemanticTokensProviderRegistry, 'DocumentSemanticTokens', { min: ModelSemanticColoring.REQUEST_MIN_DELAY, max: ModelSemanticColoring.REQUEST_MAX_DELAY });\n        this._fetchDocumentSemanticTokens = this._register(new RunOnceScheduler(() => this._fetchDocumentSemanticTokensNow(), ModelSemanticColoring.REQUEST_MIN_DELAY));\n        this._currentDocumentResponse = null;\n        this._currentDocumentRequestCancellationTokenSource = null;\n        this._documentProvidersChangeListeners = [];\n        this._register(this._model.onDidChangeContent(() => {\n            if (!this._fetchDocumentSemanticTokens.isScheduled()) {\n                this._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model));\n            }\n        }));\n        this._register(this._model.onDidChangeLanguage(() => {\n            // clear any outstanding state\n            if (this._currentDocumentResponse) {\n                this._currentDocumentResponse.dispose();\n                this._currentDocumentResponse = null;\n            }\n            if (this._currentDocumentRequestCancellationTokenSource) {\n                this._currentDocumentRequestCancellationTokenSource.cancel();\n                this._currentDocumentRequestCancellationTokenSource = null;\n            }\n            this._setDocumentSemanticTokens(null, null, null, []);\n            this._fetchDocumentSemanticTokens.schedule(0);\n        }));\n        const bindDocumentChangeListeners = () => {\n            dispose(this._documentProvidersChangeListeners);\n            this._documentProvidersChangeListeners = [];\n            for (const provider of DocumentSemanticTokensProviderRegistry.all(model)) {\n                if (typeof provider.onDidChange === 'function') {\n                    this._documentProvidersChangeListeners.push(provider.onDidChange(() => this._fetchDocumentSemanticTokens.schedule(0)));\n                }\n            }\n        };\n        bindDocumentChangeListeners();\n        this._register(DocumentSemanticTokensProviderRegistry.onDidChange(() => {\n            bindDocumentChangeListeners();\n            this._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model));\n        }));\n        this._register(themeService.onDidColorThemeChange(_ => {\n            // clear out existing tokens\n            this._setDocumentSemanticTokens(null, null, null, []);\n            this._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model));\n        }));\n        this._fetchDocumentSemanticTokens.schedule(0);\n    }\n    dispose() {\n        if (this._currentDocumentResponse) {\n            this._currentDocumentResponse.dispose();\n            this._currentDocumentResponse = null;\n        }\n        if (this._currentDocumentRequestCancellationTokenSource) {\n            this._currentDocumentRequestCancellationTokenSource.cancel();\n            this._currentDocumentRequestCancellationTokenSource = null;\n        }\n        this._setDocumentSemanticTokens(null, null, null, []);\n        this._isDisposed = true;\n        super.dispose();\n    }\n    _fetchDocumentSemanticTokensNow() {\n        if (this._currentDocumentRequestCancellationTokenSource) {\n            // there is already a request running, let it finish...\n            return;\n        }\n        if (!hasDocumentSemanticTokensProvider(this._model)) {\n            // there is no provider\n            if (this._currentDocumentResponse) {\n                // there are semantic tokens set\n                this._model.setSemanticTokens(null, false);\n            }\n            return;\n        }\n        const cancellationTokenSource = new CancellationTokenSource();\n        const lastProvider = this._currentDocumentResponse ? this._currentDocumentResponse.provider : null;\n        const lastResultId = this._currentDocumentResponse ? this._currentDocumentResponse.resultId || null : null;\n        const request = getDocumentSemanticTokens(this._model, lastProvider, lastResultId, cancellationTokenSource.token);\n        this._currentDocumentRequestCancellationTokenSource = cancellationTokenSource;\n        const pendingChanges = [];\n        const contentChangeListener = this._model.onDidChangeContent((e) => {\n            pendingChanges.push(e);\n        });\n        const sw = new StopWatch(false);\n        request.then((res) => {\n            this._debounceInformation.update(this._model, sw.elapsed());\n            this._currentDocumentRequestCancellationTokenSource = null;\n            contentChangeListener.dispose();\n            if (!res) {\n                this._setDocumentSemanticTokens(null, null, null, pendingChanges);\n            }\n            else {\n                const { provider, tokens } = res;\n                const styling = this._semanticStyling.get(provider);\n                this._setDocumentSemanticTokens(provider, tokens || null, styling, pendingChanges);\n            }\n        }, (err) => {\n            const isExpectedError = err && (errors.isCancellationError(err) || (typeof err.message === 'string' && err.message.indexOf('busy') !== -1));\n            if (!isExpectedError) {\n                errors.onUnexpectedError(err);\n            }\n            // Semantic tokens eats up all errors and considers errors to mean that the result is temporarily not available\n            // The API does not have a special error kind to express this...\n            this._currentDocumentRequestCancellationTokenSource = null;\n            contentChangeListener.dispose();\n            if (pendingChanges.length > 0) {\n                // More changes occurred while the request was running\n                if (!this._fetchDocumentSemanticTokens.isScheduled()) {\n                    this._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model));\n                }\n            }\n        });\n    }\n    static _copy(src, srcOffset, dest, destOffset, length) {\n        for (let i = 0; i < length; i++) {\n            dest[destOffset + i] = src[srcOffset + i];\n        }\n    }\n    _setDocumentSemanticTokens(provider, tokens, styling, pendingChanges) {\n        const currentResponse = this._currentDocumentResponse;\n        const rescheduleIfNeeded = () => {\n            if (pendingChanges.length > 0 && !this._fetchDocumentSemanticTokens.isScheduled()) {\n                this._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model));\n            }\n        };\n        if (this._currentDocumentResponse) {\n            this._currentDocumentResponse.dispose();\n            this._currentDocumentResponse = null;\n        }\n        if (this._isDisposed) {\n            // disposed!\n            if (provider && tokens) {\n                provider.releaseDocumentSemanticTokens(tokens.resultId);\n            }\n            return;\n        }\n        if (!provider || !styling) {\n            this._model.setSemanticTokens(null, false);\n            return;\n        }\n        if (!tokens) {\n            this._model.setSemanticTokens(null, true);\n            rescheduleIfNeeded();\n            return;\n        }\n        if (isSemanticTokensEdits(tokens)) {\n            if (!currentResponse) {\n                // not possible!\n                this._model.setSemanticTokens(null, true);\n                return;\n            }\n            if (tokens.edits.length === 0) {\n                // nothing to do!\n                tokens = {\n                    resultId: tokens.resultId,\n                    data: currentResponse.data\n                };\n            }\n            else {\n                let deltaLength = 0;\n                for (const edit of tokens.edits) {\n                    deltaLength += (edit.data ? edit.data.length : 0) - edit.deleteCount;\n                }\n                const srcData = currentResponse.data;\n                const destData = new Uint32Array(srcData.length + deltaLength);\n                let srcLastStart = srcData.length;\n                let destLastStart = destData.length;\n                for (let i = tokens.edits.length - 1; i >= 0; i--) {\n                    const edit = tokens.edits[i];\n                    const copyCount = srcLastStart - (edit.start + edit.deleteCount);\n                    if (copyCount > 0) {\n                        ModelSemanticColoring._copy(srcData, srcLastStart - copyCount, destData, destLastStart - copyCount, copyCount);\n                        destLastStart -= copyCount;\n                    }\n                    if (edit.data) {\n                        ModelSemanticColoring._copy(edit.data, 0, destData, destLastStart - edit.data.length, edit.data.length);\n                        destLastStart -= edit.data.length;\n                    }\n                    srcLastStart = edit.start;\n                }\n                if (srcLastStart > 0) {\n                    ModelSemanticColoring._copy(srcData, 0, destData, 0, srcLastStart);\n                }\n                tokens = {\n                    resultId: tokens.resultId,\n                    data: destData\n                };\n            }\n        }\n        if (isSemanticTokens(tokens)) {\n            this._currentDocumentResponse = new SemanticTokensResponse(provider, tokens.resultId, tokens.data);\n            const result = toMultilineTokens2(tokens, styling, this._model.getLanguageId());\n            // Adjust incoming semantic tokens\n            if (pendingChanges.length > 0) {\n                // More changes occurred while the request was running\n                // We need to:\n                // 1. Adjust incoming semantic tokens\n                // 2. Request them again\n                for (const change of pendingChanges) {\n                    for (const area of result) {\n                        for (const singleChange of change.changes) {\n                            area.applyEdit(singleChange.range, singleChange.text);\n                        }\n                    }\n                }\n            }\n            this._model.setSemanticTokens(result, true);\n        }\n        else {\n            this._model.setSemanticTokens(null, true);\n        }\n        rescheduleIfNeeded();\n    }\n};\nModelSemanticColoring.REQUEST_MIN_DELAY = 300;\nModelSemanticColoring.REQUEST_MAX_DELAY = 2000;\nModelSemanticColoring = __decorate([\n    __param(2, IThemeService),\n    __param(3, ILanguageFeatureDebounceService)\n], ModelSemanticColoring);\nexport { ModelSemanticColoring };\n"]},"metadata":{},"sourceType":"module"}