{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { IdleValue } from '../../../../base/common/async.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { SimpleKeybinding } from '../../../../base/common/keybindings.js';\nimport { DisposableStore, dispose, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport { assertType, isObject } from '../../../../base/common/types.js';\nimport { StableEditorScrollState } from '../../../browser/stableEditorScroll.js';\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { SnippetController2 } from '../../snippet/browser/snippetController2.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { ISuggestMemoryService } from './suggestMemory.js';\nimport { WordContextKey } from './wordContextKey.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuRegistry } from '../../../../platform/actions/common/actions.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { KeybindingsRegistry } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { Context as SuggestContext, suggestWidgetStatusbarMenu } from './suggest.js';\nimport { SuggestAlternatives } from './suggestAlternatives.js';\nimport { CommitCharacterController } from './suggestCommitCharacters.js';\nimport { SuggestModel } from './suggestModel.js';\nimport { OvertypingCapturer } from './suggestOvertypingCapturer.js';\nimport { SuggestWidget } from './suggestWidget.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { basename, extname } from '../../../../base/common/resources.js';\nimport { hash } from '../../../../base/common/hash.js'; // sticky suggest widget which doesn't disappear on focus out and such\n\nlet _sticky = false; // _sticky = Boolean(\"true\"); // done \"weirdly\" so that a lint warning prevents you from pushing this\n\nclass LineSuffix {\n  constructor(_model, _position) {\n    this._model = _model;\n    this._position = _position; // spy on what's happening right of the cursor. two cases:\n    // 1. end of line -> check that it's still end of line\n    // 2. mid of line -> add a marker and compute the delta\n\n    const maxColumn = _model.getLineMaxColumn(_position.lineNumber);\n\n    if (maxColumn !== _position.column) {\n      const offset = _model.getOffsetAt(_position);\n\n      const end = _model.getPositionAt(offset + 1);\n\n      this._marker = _model.deltaDecorations([], [{\n        range: Range.fromPositions(_position, end),\n        options: {\n          description: 'suggest-line-suffix',\n          stickiness: 1\n          /* NeverGrowsWhenTypingAtEdges */\n\n        }\n      }]);\n    }\n  }\n\n  dispose() {\n    if (this._marker && !this._model.isDisposed()) {\n      this._model.deltaDecorations(this._marker, []);\n    }\n  }\n\n  delta(position) {\n    if (this._model.isDisposed() || this._position.lineNumber !== position.lineNumber) {\n      // bail out early if things seems fishy\n      return 0;\n    } // read the marker (in case suggest was triggered at line end) or compare\n    // the cursor to the line end.\n\n\n    if (this._marker) {\n      const range = this._model.getDecorationRange(this._marker[0]);\n\n      const end = this._model.getOffsetAt(range.getStartPosition());\n\n      return end - this._model.getOffsetAt(position);\n    } else {\n      return this._model.getLineMaxColumn(position.lineNumber) - position.column;\n    }\n  }\n\n}\n\nlet SuggestController = class SuggestController {\n  constructor(editor, _memoryService, _commandService, _contextKeyService, _instantiationService, _logService, _telemetryService) {\n    this._memoryService = _memoryService;\n    this._commandService = _commandService;\n    this._contextKeyService = _contextKeyService;\n    this._instantiationService = _instantiationService;\n    this._logService = _logService;\n    this._telemetryService = _telemetryService;\n    this._lineSuffix = new MutableDisposable();\n    this._toDispose = new DisposableStore();\n    this._selectors = new PriorityRegistry(s => s.priority);\n    this._telemetryGate = 0;\n    this.editor = editor;\n    this.model = _instantiationService.createInstance(SuggestModel, this.editor); // context key: update insert/replace mode\n\n    const ctxInsertMode = SuggestContext.InsertMode.bindTo(_contextKeyService);\n    ctxInsertMode.set(editor.getOption(106\n    /* suggest */\n    ).insertMode);\n    this.model.onDidTrigger(() => ctxInsertMode.set(editor.getOption(106\n    /* suggest */\n    ).insertMode));\n    this.widget = this._toDispose.add(new IdleValue(() => {\n      const widget = this._instantiationService.createInstance(SuggestWidget, this.editor);\n\n      this._toDispose.add(widget);\n\n      this._toDispose.add(widget.onDidSelect(item => this._insertSuggestion(item, 0), this)); // Wire up logic to accept a suggestion on certain characters\n\n\n      const commitCharacterController = new CommitCharacterController(this.editor, widget, item => this._insertSuggestion(item, 2\n      /* NoAfterUndoStop */\n      ));\n\n      this._toDispose.add(commitCharacterController);\n\n      this._toDispose.add(this.model.onDidSuggest(e => {\n        if (e.completionModel.items.length === 0) {\n          commitCharacterController.reset();\n        }\n      })); // Wire up makes text edit context key\n\n\n      const ctxMakesTextEdit = SuggestContext.MakesTextEdit.bindTo(this._contextKeyService);\n      const ctxHasInsertAndReplace = SuggestContext.HasInsertAndReplaceRange.bindTo(this._contextKeyService);\n      const ctxCanResolve = SuggestContext.CanResolve.bindTo(this._contextKeyService);\n\n      this._toDispose.add(toDisposable(() => {\n        ctxMakesTextEdit.reset();\n        ctxHasInsertAndReplace.reset();\n        ctxCanResolve.reset();\n      }));\n\n      this._toDispose.add(widget.onDidFocus(({\n        item\n      }) => {\n        // (ctx: makesTextEdit)\n        const position = this.editor.getPosition();\n        const startColumn = item.editStart.column;\n        const endColumn = position.column;\n        let value = true;\n\n        if (this.editor.getOption(1\n        /* acceptSuggestionOnEnter */\n        ) === 'smart' && this.model.state === 2\n        /* Auto */\n        && !item.completion.additionalTextEdits && !(item.completion.insertTextRules & 4\n        /* InsertAsSnippet */\n        ) && endColumn - startColumn === item.completion.insertText.length) {\n          const oldText = this.editor.getModel().getValueInRange({\n            startLineNumber: position.lineNumber,\n            startColumn,\n            endLineNumber: position.lineNumber,\n            endColumn\n          });\n          value = oldText !== item.completion.insertText;\n        }\n\n        ctxMakesTextEdit.set(value); // (ctx: hasInsertAndReplaceRange)\n\n        ctxHasInsertAndReplace.set(!Position.equals(item.editInsertEnd, item.editReplaceEnd)); // (ctx: canResolve)\n\n        ctxCanResolve.set(Boolean(item.provider.resolveCompletionItem) || Boolean(item.completion.documentation) || item.completion.detail !== item.completion.label);\n      }));\n\n      this._toDispose.add(widget.onDetailsKeyDown(e => {\n        // cmd + c on macOS, ctrl + c on Win / Linux\n        if (e.toKeybinding().equals(new SimpleKeybinding(true, false, false, false, 33\n        /* KeyC */\n        )) || platform.isMacintosh && e.toKeybinding().equals(new SimpleKeybinding(false, false, false, true, 33\n        /* KeyC */\n        ))) {\n          e.stopPropagation();\n          return;\n        }\n\n        if (!e.toKeybinding().isModifierKey()) {\n          this.editor.focus();\n        }\n      }));\n\n      return widget;\n    })); // Wire up text overtyping capture\n\n    this._overtypingCapturer = this._toDispose.add(new IdleValue(() => {\n      return this._toDispose.add(new OvertypingCapturer(this.editor, this.model));\n    }));\n    this._alternatives = this._toDispose.add(new IdleValue(() => {\n      return this._toDispose.add(new SuggestAlternatives(this.editor, this._contextKeyService));\n    }));\n\n    this._toDispose.add(_instantiationService.createInstance(WordContextKey, editor));\n\n    this._toDispose.add(this.model.onDidTrigger(e => {\n      this.widget.value.showTriggered(e.auto, e.shy ? 250 : 50);\n      this._lineSuffix.value = new LineSuffix(this.editor.getModel(), e.position);\n    }));\n\n    this._toDispose.add(this.model.onDidSuggest(e => {\n      if (!e.shy) {\n        let index = -1;\n\n        for (const selector of this._selectors.itemsOrderedByPriorityDesc) {\n          index = selector.select(this.editor.getModel(), this.editor.getPosition(), e.completionModel.items);\n\n          if (index !== -1) {\n            break;\n          }\n        }\n\n        if (index === -1) {\n          index = this._memoryService.select(this.editor.getModel(), this.editor.getPosition(), e.completionModel.items);\n        }\n\n        this.widget.value.showSuggestions(e.completionModel, index, e.isFrozen, e.auto);\n      }\n    }));\n\n    this._toDispose.add(this.model.onDidCancel(e => {\n      if (!e.retrigger) {\n        this.widget.value.hideWidget();\n      }\n    }));\n\n    this._toDispose.add(this.editor.onDidBlurEditorWidget(() => {\n      if (!_sticky) {\n        this.model.cancel();\n        this.model.clear();\n      }\n    })); // Manage the acceptSuggestionsOnEnter context key\n\n\n    let acceptSuggestionsOnEnter = SuggestContext.AcceptSuggestionsOnEnter.bindTo(_contextKeyService);\n\n    let updateFromConfig = () => {\n      const acceptSuggestionOnEnter = this.editor.getOption(1\n      /* acceptSuggestionOnEnter */\n      );\n      acceptSuggestionsOnEnter.set(acceptSuggestionOnEnter === 'on' || acceptSuggestionOnEnter === 'smart');\n    };\n\n    this._toDispose.add(this.editor.onDidChangeConfiguration(() => updateFromConfig()));\n\n    updateFromConfig();\n  }\n\n  static get(editor) {\n    return editor.getContribution(SuggestController.ID);\n  }\n\n  dispose() {\n    this._alternatives.dispose();\n\n    this._toDispose.dispose();\n\n    this.widget.dispose();\n    this.model.dispose();\n\n    this._lineSuffix.dispose();\n  }\n\n  _insertSuggestion(event, flags) {\n    if (!event || !event.item) {\n      this._alternatives.value.reset();\n\n      this.model.cancel();\n      this.model.clear();\n      return;\n    }\n\n    if (!this.editor.hasModel()) {\n      return;\n    }\n\n    const snippetController = SnippetController2.get(this.editor);\n\n    if (!snippetController) {\n      return;\n    }\n\n    const model = this.editor.getModel();\n    const modelVersionNow = model.getAlternativeVersionId();\n    const {\n      item\n    } = event; //\n\n    const tasks = [];\n    const cts = new CancellationTokenSource(); // pushing undo stops *before* additional text edits and\n    // *after* the main edit\n\n    if (!(flags & 1\n    /* NoBeforeUndoStop */\n    )) {\n      this.editor.pushUndoStop();\n    } // compute overwrite[Before|After] deltas BEFORE applying extra edits\n\n\n    const info = this.getOverwriteInfo(item, Boolean(flags & 8\n    /* AlternativeOverwriteConfig */\n    )); // keep item in memory\n\n    this._memoryService.memorize(model, this.editor.getPosition(), item);\n\n    if (Array.isArray(item.completion.additionalTextEdits)) {\n      // sync additional edits\n      const scrollState = StableEditorScrollState.capture(this.editor);\n      this.editor.executeEdits('suggestController.additionalTextEdits.sync', item.completion.additionalTextEdits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text)));\n      scrollState.restoreRelativeVerticalPositionOfCursor(this.editor);\n    } else if (!item.isResolved) {\n      // async additional edits\n      const sw = new StopWatch(true);\n      let position;\n      const docListener = model.onDidChangeContent(e => {\n        if (e.isFlush) {\n          cts.cancel();\n          docListener.dispose();\n          return;\n        }\n\n        for (let change of e.changes) {\n          const thisPosition = Range.getEndPosition(change.range);\n\n          if (!position || Position.isBefore(thisPosition, position)) {\n            position = thisPosition;\n          }\n        }\n      });\n      let oldFlags = flags;\n      flags |= 2\n      /* NoAfterUndoStop */\n      ;\n      let didType = false;\n      let typeListener = this.editor.onWillType(() => {\n        typeListener.dispose();\n        didType = true;\n\n        if (!(oldFlags & 2\n        /* NoAfterUndoStop */\n        )) {\n          this.editor.pushUndoStop();\n        }\n      });\n      tasks.push(item.resolve(cts.token).then(() => {\n        if (!item.completion.additionalTextEdits || cts.token.isCancellationRequested) {\n          return false;\n        }\n\n        if (position && item.completion.additionalTextEdits.some(edit => Position.isBefore(position, Range.getStartPosition(edit.range)))) {\n          return false;\n        }\n\n        if (didType) {\n          this.editor.pushUndoStop();\n        }\n\n        const scrollState = StableEditorScrollState.capture(this.editor);\n        this.editor.executeEdits('suggestController.additionalTextEdits.async', item.completion.additionalTextEdits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text)));\n        scrollState.restoreRelativeVerticalPositionOfCursor(this.editor);\n\n        if (didType || !(oldFlags & 2\n        /* NoAfterUndoStop */\n        )) {\n          this.editor.pushUndoStop();\n        }\n\n        return true;\n      }).then(applied => {\n        this._logService.trace('[suggest] async resolving of edits DONE (ms, applied?)', sw.elapsed(), applied);\n\n        docListener.dispose();\n        typeListener.dispose();\n      }));\n    }\n\n    let {\n      insertText\n    } = item.completion;\n\n    if (!(item.completion.insertTextRules & 4\n    /* InsertAsSnippet */\n    )) {\n      insertText = SnippetParser.escape(insertText);\n    }\n\n    snippetController.insert(insertText, {\n      overwriteBefore: info.overwriteBefore,\n      overwriteAfter: info.overwriteAfter,\n      undoStopBefore: false,\n      undoStopAfter: false,\n      adjustWhitespace: !(item.completion.insertTextRules & 1\n      /* KeepWhitespace */\n      ),\n      clipboardText: event.model.clipboardText,\n      overtypingCapturer: this._overtypingCapturer.value\n    });\n\n    if (!(flags & 2\n    /* NoAfterUndoStop */\n    )) {\n      this.editor.pushUndoStop();\n    }\n\n    if (!item.completion.command) {\n      // done\n      this.model.cancel();\n    } else if (item.completion.command.id === TriggerSuggestAction.id) {\n      // retigger\n      this.model.trigger({\n        auto: true,\n        shy: false\n      }, true);\n    } else {\n      // exec command, done\n      tasks.push(this._commandService.executeCommand(item.completion.command.id, ...(item.completion.command.arguments ? [...item.completion.command.arguments] : [])).catch(onUnexpectedError));\n      this.model.cancel();\n    }\n\n    if (flags & 4\n    /* KeepAlternativeSuggestions */\n    ) {\n      this._alternatives.value.set(event, next => {\n        // cancel resolving of additional edits\n        cts.cancel(); // this is not so pretty. when inserting the 'next'\n        // suggestion we undo until we are at the state at\n        // which we were before inserting the previous suggestion...\n\n        while (model.canUndo()) {\n          if (modelVersionNow !== model.getAlternativeVersionId()) {\n            model.undo();\n          }\n\n          this._insertSuggestion(next, 1\n          /* NoBeforeUndoStop */\n          | 2\n          /* NoAfterUndoStop */\n          | (flags & 8\n          /* AlternativeOverwriteConfig */\n          ? 8\n          /* AlternativeOverwriteConfig */\n          : 0));\n\n          break;\n        }\n      });\n    }\n\n    this._alertCompletionItem(item); // clear only now - after all tasks are done\n\n\n    Promise.all(tasks).finally(() => {\n      this._reportSuggestionAcceptedTelemetry(model, event);\n\n      this.model.clear();\n      cts.dispose();\n    });\n  }\n\n  _reportSuggestionAcceptedTelemetry(model, acceptedSuggestion) {\n    var _a;\n\n    if (this._telemetryGate++ % 100 !== 0) {\n      return;\n    } // _debugDisplayName looks like `vscode.css-language-features(/-:)`, where the last bit is the trigger chars\n    // normalize it to just the extension ID and lowercase\n\n\n    const providerId = ((_a = acceptedSuggestion.item.provider._debugDisplayName) !== null && _a !== void 0 ? _a : 'unknown').split('(', 1)[0].toLowerCase();\n\n    this._telemetryService.publicLog2('suggest.acceptedSuggestion', {\n      providerId,\n      basenameHash: hash(basename(model.uri)).toString(16),\n      languageId: model.getLanguageId(),\n      fileExtension: extname(model.uri)\n    });\n  }\n\n  getOverwriteInfo(item, toggleMode) {\n    assertType(this.editor.hasModel());\n    let replace = this.editor.getOption(106\n    /* suggest */\n    ).insertMode === 'replace';\n\n    if (toggleMode) {\n      replace = !replace;\n    }\n\n    const overwriteBefore = item.position.column - item.editStart.column;\n    const overwriteAfter = (replace ? item.editReplaceEnd.column : item.editInsertEnd.column) - item.position.column;\n    const columnDelta = this.editor.getPosition().column - item.position.column;\n    const suffixDelta = this._lineSuffix.value ? this._lineSuffix.value.delta(this.editor.getPosition()) : 0;\n    return {\n      overwriteBefore: overwriteBefore + columnDelta,\n      overwriteAfter: overwriteAfter + suffixDelta\n    };\n  }\n\n  _alertCompletionItem(item) {\n    if (isNonEmptyArray(item.completion.additionalTextEdits)) {\n      let msg = nls.localize('aria.alert.snippet', \"Accepting '{0}' made {1} additional edits\", item.textLabel, item.completion.additionalTextEdits.length);\n      alert(msg);\n    }\n  }\n\n  triggerSuggest(onlyFrom, auto) {\n    if (this.editor.hasModel()) {\n      this.model.trigger({\n        auto: auto !== null && auto !== void 0 ? auto : false,\n        shy: false\n      }, false, onlyFrom);\n      this.editor.revealPosition(this.editor.getPosition(), 0\n      /* Smooth */\n      );\n      this.editor.focus();\n    }\n  }\n\n  triggerSuggestAndAcceptBest(arg) {\n    if (!this.editor.hasModel()) {\n      return;\n    }\n\n    const positionNow = this.editor.getPosition();\n\n    const fallback = () => {\n      if (positionNow.equals(this.editor.getPosition())) {\n        this._commandService.executeCommand(arg.fallback);\n      }\n    };\n\n    const makesTextEdit = item => {\n      if (item.completion.insertTextRules & 4\n      /* InsertAsSnippet */\n      || item.completion.additionalTextEdits) {\n        // snippet, other editor -> makes edit\n        return true;\n      }\n\n      const position = this.editor.getPosition();\n      const startColumn = item.editStart.column;\n      const endColumn = position.column;\n\n      if (endColumn - startColumn !== item.completion.insertText.length) {\n        // unequal lengths -> makes edit\n        return true;\n      }\n\n      const textNow = this.editor.getModel().getValueInRange({\n        startLineNumber: position.lineNumber,\n        startColumn,\n        endLineNumber: position.lineNumber,\n        endColumn\n      }); // unequal text -> makes edit\n\n      return textNow !== item.completion.insertText;\n    };\n\n    Event.once(this.model.onDidTrigger)(_ => {\n      // wait for trigger because only then the cancel-event is trustworthy\n      let listener = [];\n      Event.any(this.model.onDidTrigger, this.model.onDidCancel)(() => {\n        // retrigger or cancel -> try to type default text\n        dispose(listener);\n        fallback();\n      }, undefined, listener);\n      this.model.onDidSuggest(({\n        completionModel\n      }) => {\n        dispose(listener);\n\n        if (completionModel.items.length === 0) {\n          fallback();\n          return;\n        }\n\n        const index = this._memoryService.select(this.editor.getModel(), this.editor.getPosition(), completionModel.items);\n\n        const item = completionModel.items[index];\n\n        if (!makesTextEdit(item)) {\n          fallback();\n          return;\n        }\n\n        this.editor.pushUndoStop();\n\n        this._insertSuggestion({\n          index,\n          item,\n          model: completionModel\n        }, 4\n        /* KeepAlternativeSuggestions */\n        | 1\n        /* NoBeforeUndoStop */\n        | 2\n        /* NoAfterUndoStop */\n        );\n      }, undefined, listener);\n    });\n    this.model.trigger({\n      auto: false,\n      shy: true\n    });\n    this.editor.revealPosition(positionNow, 0\n    /* Smooth */\n    );\n    this.editor.focus();\n  }\n\n  acceptSelectedSuggestion(keepAlternativeSuggestions, alternativeOverwriteConfig) {\n    const item = this.widget.value.getFocusedItem();\n    let flags = 0;\n\n    if (keepAlternativeSuggestions) {\n      flags |= 4\n      /* KeepAlternativeSuggestions */\n      ;\n    }\n\n    if (alternativeOverwriteConfig) {\n      flags |= 8\n      /* AlternativeOverwriteConfig */\n      ;\n    }\n\n    this._insertSuggestion(item, flags);\n  }\n\n  acceptNextSuggestion() {\n    this._alternatives.value.next();\n  }\n\n  acceptPrevSuggestion() {\n    this._alternatives.value.prev();\n  }\n\n  cancelSuggestWidget() {\n    this.model.cancel();\n    this.model.clear();\n    this.widget.value.hideWidget();\n  }\n\n  selectNextSuggestion() {\n    this.widget.value.selectNext();\n  }\n\n  selectNextPageSuggestion() {\n    this.widget.value.selectNextPage();\n  }\n\n  selectLastSuggestion() {\n    this.widget.value.selectLast();\n  }\n\n  selectPrevSuggestion() {\n    this.widget.value.selectPrevious();\n  }\n\n  selectPrevPageSuggestion() {\n    this.widget.value.selectPreviousPage();\n  }\n\n  selectFirstSuggestion() {\n    this.widget.value.selectFirst();\n  }\n\n  toggleSuggestionDetails() {\n    this.widget.value.toggleDetails();\n  }\n\n  toggleExplainMode() {\n    this.widget.value.toggleExplainMode();\n  }\n\n  toggleSuggestionFocus() {\n    this.widget.value.toggleDetailsFocus();\n  }\n\n  resetWidgetSize() {\n    this.widget.value.resetPersistedSize();\n  }\n\n  forceRenderingAbove() {\n    this.widget.value.forceRenderingAbove();\n  }\n\n  stopForceRenderingAbove() {\n    if (!this.widget.isInitialized) {\n      // This method has no effect if the widget is not initialized yet.\n      return;\n    }\n\n    this.widget.value.stopForceRenderingAbove();\n  }\n\n  registerSelector(selector) {\n    return this._selectors.register(selector);\n  }\n\n};\nSuggestController.ID = 'editor.contrib.suggestController';\nSuggestController = __decorate([__param(1, ISuggestMemoryService), __param(2, ICommandService), __param(3, IContextKeyService), __param(4, IInstantiationService), __param(5, ILogService), __param(6, ITelemetryService)], SuggestController);\nexport { SuggestController };\n\nclass PriorityRegistry {\n  constructor(prioritySelector) {\n    this.prioritySelector = prioritySelector;\n    this._items = new Array();\n  }\n\n  register(value) {\n    if (this._items.indexOf(value) !== -1) {\n      throw new Error('Value is already registered');\n    }\n\n    this._items.push(value);\n\n    this._items.sort((s1, s2) => this.prioritySelector(s2) - this.prioritySelector(s1));\n\n    return {\n      dispose: () => {\n        const idx = this._items.indexOf(value);\n\n        if (idx >= 0) {\n          this._items.splice(idx, 1);\n        }\n      }\n    };\n  }\n\n  get itemsOrderedByPriorityDesc() {\n    return this._items;\n  }\n\n}\n\nexport class TriggerSuggestAction extends EditorAction {\n  constructor() {\n    super({\n      id: TriggerSuggestAction.id,\n      label: nls.localize('suggest.trigger.label', \"Trigger Suggest\"),\n      alias: 'Trigger Suggest',\n      precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCompletionItemProvider),\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2048\n        /* CtrlCmd */\n        | 10\n        /* Space */\n        ,\n        secondary: [2048\n        /* CtrlCmd */\n        | 39\n        /* KeyI */\n        ],\n        mac: {\n          primary: 256\n          /* WinCtrl */\n          | 10\n          /* Space */\n          ,\n          secondary: [512\n          /* Alt */\n          | 9\n          /* Escape */\n          , 2048\n          /* CtrlCmd */\n          | 39\n          /* KeyI */\n          ]\n        },\n        weight: 100\n        /* EditorContrib */\n\n      }\n    });\n  }\n\n  run(_accessor, editor, args) {\n    const controller = SuggestController.get(editor);\n\n    if (!controller) {\n      return;\n    }\n\n    let auto;\n\n    if (args && typeof args === 'object') {\n      if (args.auto === true) {\n        auto = true;\n      }\n    }\n\n    controller.triggerSuggest(undefined, auto);\n  }\n\n}\nTriggerSuggestAction.id = 'editor.action.triggerSuggest';\nregisterEditorContribution(SuggestController.ID, SuggestController);\nregisterEditorAction(TriggerSuggestAction);\nconst weight = 100\n/* EditorContrib */\n+ 90;\nconst SuggestCommand = EditorCommand.bindToContribution(SuggestController.get);\nregisterEditorCommand(new SuggestCommand({\n  id: 'acceptSelectedSuggestion',\n  precondition: SuggestContext.Visible,\n\n  handler(x) {\n    x.acceptSelectedSuggestion(true, false);\n  }\n\n})); // normal tab\n\nKeybindingsRegistry.registerKeybindingRule({\n  id: 'acceptSelectedSuggestion',\n  when: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus),\n  primary: 2\n  /* Tab */\n  ,\n  weight\n}); // accept on enter has special rules\n\nKeybindingsRegistry.registerKeybindingRule({\n  id: 'acceptSelectedSuggestion',\n  when: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus, SuggestContext.AcceptSuggestionsOnEnter, SuggestContext.MakesTextEdit),\n  primary: 3\n  /* Enter */\n  ,\n  weight\n});\nMenuRegistry.appendMenuItem(suggestWidgetStatusbarMenu, {\n  command: {\n    id: 'acceptSelectedSuggestion',\n    title: nls.localize('accept.insert', \"Insert\")\n  },\n  group: 'left',\n  order: 1,\n  when: SuggestContext.HasInsertAndReplaceRange.toNegated()\n});\nMenuRegistry.appendMenuItem(suggestWidgetStatusbarMenu, {\n  command: {\n    id: 'acceptSelectedSuggestion',\n    title: nls.localize('accept.insert', \"Insert\")\n  },\n  group: 'left',\n  order: 1,\n  when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('insert'))\n});\nMenuRegistry.appendMenuItem(suggestWidgetStatusbarMenu, {\n  command: {\n    id: 'acceptSelectedSuggestion',\n    title: nls.localize('accept.replace', \"Replace\")\n  },\n  group: 'left',\n  order: 1,\n  when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('replace'))\n});\nregisterEditorCommand(new SuggestCommand({\n  id: 'acceptAlternativeSelectedSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 1024\n    /* Shift */\n    | 3\n    /* Enter */\n    ,\n    secondary: [1024\n    /* Shift */\n    | 2\n    /* Tab */\n    ]\n  },\n\n  handler(x) {\n    x.acceptSelectedSuggestion(false, true);\n  },\n\n  menuOpts: [{\n    menuId: suggestWidgetStatusbarMenu,\n    group: 'left',\n    order: 2,\n    when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('insert')),\n    title: nls.localize('accept.replace', \"Replace\")\n  }, {\n    menuId: suggestWidgetStatusbarMenu,\n    group: 'left',\n    order: 2,\n    when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('replace')),\n    title: nls.localize('accept.insert', \"Insert\")\n  }]\n})); // continue to support the old command\n\nCommandsRegistry.registerCommandAlias('acceptSelectedSuggestionOnEnter', 'acceptSelectedSuggestion');\nregisterEditorCommand(new SuggestCommand({\n  id: 'hideSuggestWidget',\n  precondition: SuggestContext.Visible,\n  handler: x => x.cancelSuggestWidget(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 9\n    /* Escape */\n    ,\n    secondary: [1024\n    /* Shift */\n    | 9\n    /* Escape */\n    ]\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'selectNextSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\n  handler: c => c.selectNextSuggestion(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 18\n    /* DownArrow */\n    ,\n    secondary: [2048\n    /* CtrlCmd */\n    | 18\n    /* DownArrow */\n    ],\n    mac: {\n      primary: 18\n      /* DownArrow */\n      ,\n      secondary: [2048\n      /* CtrlCmd */\n      | 18\n      /* DownArrow */\n      , 256\n      /* WinCtrl */\n      | 44\n      /* KeyN */\n      ]\n    }\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'selectNextPageSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\n  handler: c => c.selectNextPageSuggestion(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 12\n    /* PageDown */\n    ,\n    secondary: [2048\n    /* CtrlCmd */\n    | 12\n    /* PageDown */\n    ]\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'selectLastSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\n  handler: c => c.selectLastSuggestion()\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'selectPrevSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\n  handler: c => c.selectPrevSuggestion(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 16\n    /* UpArrow */\n    ,\n    secondary: [2048\n    /* CtrlCmd */\n    | 16\n    /* UpArrow */\n    ],\n    mac: {\n      primary: 16\n      /* UpArrow */\n      ,\n      secondary: [2048\n      /* CtrlCmd */\n      | 16\n      /* UpArrow */\n      , 256\n      /* WinCtrl */\n      | 46\n      /* KeyP */\n      ]\n    }\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'selectPrevPageSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\n  handler: c => c.selectPrevPageSuggestion(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 11\n    /* PageUp */\n    ,\n    secondary: [2048\n    /* CtrlCmd */\n    | 11\n    /* PageUp */\n    ]\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'selectFirstSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\n  handler: c => c.selectFirstSuggestion()\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'toggleSuggestionDetails',\n  precondition: SuggestContext.Visible,\n  handler: x => x.toggleSuggestionDetails(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 2048\n    /* CtrlCmd */\n    | 10\n    /* Space */\n    ,\n    secondary: [2048\n    /* CtrlCmd */\n    | 39\n    /* KeyI */\n    ],\n    mac: {\n      primary: 256\n      /* WinCtrl */\n      | 10\n      /* Space */\n      ,\n      secondary: [2048\n      /* CtrlCmd */\n      | 39\n      /* KeyI */\n      ]\n    }\n  },\n  menuOpts: [{\n    menuId: suggestWidgetStatusbarMenu,\n    group: 'right',\n    order: 1,\n    when: ContextKeyExpr.and(SuggestContext.DetailsVisible, SuggestContext.CanResolve),\n    title: nls.localize('detail.more', \"show less\")\n  }, {\n    menuId: suggestWidgetStatusbarMenu,\n    group: 'right',\n    order: 1,\n    when: ContextKeyExpr.and(SuggestContext.DetailsVisible.toNegated(), SuggestContext.CanResolve),\n    title: nls.localize('detail.less', \"show more\")\n  }]\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'toggleExplainMode',\n  precondition: SuggestContext.Visible,\n  handler: x => x.toggleExplainMode(),\n  kbOpts: {\n    weight: 100\n    /* EditorContrib */\n    ,\n    primary: 2048\n    /* CtrlCmd */\n    | 85\n    /* Slash */\n\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'toggleSuggestionFocus',\n  precondition: SuggestContext.Visible,\n  handler: x => x.toggleSuggestionFocus(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 2048\n    /* CtrlCmd */\n    | 512\n    /* Alt */\n    | 10\n    /* Space */\n    ,\n    mac: {\n      primary: 256\n      /* WinCtrl */\n      | 512\n      /* Alt */\n      | 10\n      /* Space */\n\n    }\n  }\n})); //#region tab completions\n\nregisterEditorCommand(new SuggestCommand({\n  id: 'insertBestCompletion',\n  precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), WordContextKey.AtEnd, SuggestContext.Visible.toNegated(), SuggestAlternatives.OtherSuggestions.toNegated(), SnippetController2.InSnippetMode.toNegated()),\n  handler: (x, arg) => {\n    x.triggerSuggestAndAcceptBest(isObject(arg) ? Object.assign({\n      fallback: 'tab'\n    }, arg) : {\n      fallback: 'tab'\n    });\n  },\n  kbOpts: {\n    weight,\n    primary: 2\n    /* Tab */\n\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'insertNextSuggestion',\n  precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), SuggestAlternatives.OtherSuggestions, SuggestContext.Visible.toNegated(), SnippetController2.InSnippetMode.toNegated()),\n  handler: x => x.acceptNextSuggestion(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 2\n    /* Tab */\n\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'insertPrevSuggestion',\n  precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), SuggestAlternatives.OtherSuggestions, SuggestContext.Visible.toNegated(), SnippetController2.InSnippetMode.toNegated()),\n  handler: x => x.acceptPrevSuggestion(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 1024\n    /* Shift */\n    | 2\n    /* Tab */\n\n  }\n}));\nregisterEditorAction(class extends EditorAction {\n  constructor() {\n    super({\n      id: 'editor.action.resetSuggestSize',\n      label: nls.localize('suggest.reset.label', \"Reset Suggest Widget Size\"),\n      alias: 'Reset Suggest Widget Size',\n      precondition: undefined\n    });\n  }\n\n  run(_accessor, editor) {\n    var _a;\n\n    (_a = SuggestController.get(editor)) === null || _a === void 0 ? void 0 : _a.resetWidgetSize();\n  }\n\n});","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/contrib/suggest/browser/suggestController.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","alert","isNonEmptyArray","IdleValue","CancellationTokenSource","onUnexpectedError","Event","SimpleKeybinding","DisposableStore","dispose","MutableDisposable","toDisposable","platform","StopWatch","assertType","isObject","StableEditorScrollState","EditorAction","EditorCommand","registerEditorAction","registerEditorCommand","registerEditorContribution","EditOperation","Position","Range","EditorContextKeys","SnippetController2","SnippetParser","ISuggestMemoryService","WordContextKey","nls","MenuRegistry","CommandsRegistry","ICommandService","ContextKeyExpr","IContextKeyService","IInstantiationService","KeybindingsRegistry","ILogService","Context","SuggestContext","suggestWidgetStatusbarMenu","SuggestAlternatives","CommitCharacterController","SuggestModel","OvertypingCapturer","SuggestWidget","ITelemetryService","basename","extname","hash","_sticky","LineSuffix","constructor","_model","_position","maxColumn","getLineMaxColumn","lineNumber","column","offset","getOffsetAt","end","getPositionAt","_marker","deltaDecorations","range","fromPositions","options","description","stickiness","isDisposed","delta","position","getDecorationRange","getStartPosition","SuggestController","editor","_memoryService","_commandService","_contextKeyService","_instantiationService","_logService","_telemetryService","_lineSuffix","_toDispose","_selectors","PriorityRegistry","s","priority","_telemetryGate","model","createInstance","ctxInsertMode","InsertMode","bindTo","set","getOption","insertMode","onDidTrigger","widget","add","onDidSelect","item","_insertSuggestion","commitCharacterController","onDidSuggest","e","completionModel","items","reset","ctxMakesTextEdit","MakesTextEdit","ctxHasInsertAndReplace","HasInsertAndReplaceRange","ctxCanResolve","CanResolve","onDidFocus","getPosition","startColumn","editStart","endColumn","value","state","completion","additionalTextEdits","insertTextRules","insertText","oldText","getModel","getValueInRange","startLineNumber","endLineNumber","equals","editInsertEnd","editReplaceEnd","Boolean","provider","resolveCompletionItem","documentation","detail","label","onDetailsKeyDown","toKeybinding","isMacintosh","stopPropagation","isModifierKey","focus","_overtypingCapturer","_alternatives","showTriggered","auto","shy","index","selector","itemsOrderedByPriorityDesc","select","showSuggestions","isFrozen","onDidCancel","retrigger","hideWidget","onDidBlurEditorWidget","cancel","clear","acceptSuggestionsOnEnter","AcceptSuggestionsOnEnter","updateFromConfig","acceptSuggestionOnEnter","onDidChangeConfiguration","get","getContribution","ID","event","flags","hasModel","snippetController","modelVersionNow","getAlternativeVersionId","tasks","cts","pushUndoStop","info","getOverwriteInfo","memorize","Array","isArray","scrollState","capture","executeEdits","map","edit","replace","lift","text","restoreRelativeVerticalPositionOfCursor","isResolved","sw","docListener","onDidChangeContent","isFlush","change","changes","thisPosition","getEndPosition","isBefore","oldFlags","didType","typeListener","onWillType","push","resolve","token","then","isCancellationRequested","some","applied","trace","elapsed","escape","insert","overwriteBefore","overwriteAfter","undoStopBefore","undoStopAfter","adjustWhitespace","clipboardText","overtypingCapturer","command","id","TriggerSuggestAction","trigger","executeCommand","catch","next","canUndo","undo","_alertCompletionItem","Promise","all","finally","_reportSuggestionAcceptedTelemetry","acceptedSuggestion","_a","providerId","_debugDisplayName","split","toLowerCase","publicLog2","basenameHash","uri","toString","languageId","getLanguageId","fileExtension","toggleMode","columnDelta","suffixDelta","msg","localize","textLabel","triggerSuggest","onlyFrom","revealPosition","triggerSuggestAndAcceptBest","arg","positionNow","fallback","makesTextEdit","textNow","once","_","listener","any","undefined","acceptSelectedSuggestion","keepAlternativeSuggestions","alternativeOverwriteConfig","getFocusedItem","acceptNextSuggestion","acceptPrevSuggestion","prev","cancelSuggestWidget","selectNextSuggestion","selectNext","selectNextPageSuggestion","selectNextPage","selectLastSuggestion","selectLast","selectPrevSuggestion","selectPrevious","selectPrevPageSuggestion","selectPreviousPage","selectFirstSuggestion","selectFirst","toggleSuggestionDetails","toggleDetails","toggleExplainMode","toggleSuggestionFocus","toggleDetailsFocus","resetWidgetSize","resetPersistedSize","forceRenderingAbove","stopForceRenderingAbove","isInitialized","registerSelector","register","prioritySelector","_items","indexOf","Error","sort","s1","s2","idx","splice","alias","precondition","and","writable","hasCompletionItemProvider","kbOpts","kbExpr","textInputFocus","primary","secondary","mac","weight","run","_accessor","args","controller","SuggestCommand","bindToContribution","Visible","handler","x","registerKeybindingRule","when","appendMenuItem","title","group","order","toNegated","isEqualTo","menuOpts","menuId","registerCommandAlias","MultipleSuggestions","DetailsVisible","AtEnd","OtherSuggestions","InSnippetMode","assign"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { IdleValue } from '../../../../base/common/async.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { SimpleKeybinding } from '../../../../base/common/keybindings.js';\nimport { DisposableStore, dispose, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport { assertType, isObject } from '../../../../base/common/types.js';\nimport { StableEditorScrollState } from '../../../browser/stableEditorScroll.js';\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { SnippetController2 } from '../../snippet/browser/snippetController2.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { ISuggestMemoryService } from './suggestMemory.js';\nimport { WordContextKey } from './wordContextKey.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuRegistry } from '../../../../platform/actions/common/actions.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { KeybindingsRegistry } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { Context as SuggestContext, suggestWidgetStatusbarMenu } from './suggest.js';\nimport { SuggestAlternatives } from './suggestAlternatives.js';\nimport { CommitCharacterController } from './suggestCommitCharacters.js';\nimport { SuggestModel } from './suggestModel.js';\nimport { OvertypingCapturer } from './suggestOvertypingCapturer.js';\nimport { SuggestWidget } from './suggestWidget.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { basename, extname } from '../../../../base/common/resources.js';\nimport { hash } from '../../../../base/common/hash.js';\n// sticky suggest widget which doesn't disappear on focus out and such\nlet _sticky = false;\n// _sticky = Boolean(\"true\"); // done \"weirdly\" so that a lint warning prevents you from pushing this\nclass LineSuffix {\n    constructor(_model, _position) {\n        this._model = _model;\n        this._position = _position;\n        // spy on what's happening right of the cursor. two cases:\n        // 1. end of line -> check that it's still end of line\n        // 2. mid of line -> add a marker and compute the delta\n        const maxColumn = _model.getLineMaxColumn(_position.lineNumber);\n        if (maxColumn !== _position.column) {\n            const offset = _model.getOffsetAt(_position);\n            const end = _model.getPositionAt(offset + 1);\n            this._marker = _model.deltaDecorations([], [{\n                    range: Range.fromPositions(_position, end),\n                    options: { description: 'suggest-line-suffix', stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ }\n                }]);\n        }\n    }\n    dispose() {\n        if (this._marker && !this._model.isDisposed()) {\n            this._model.deltaDecorations(this._marker, []);\n        }\n    }\n    delta(position) {\n        if (this._model.isDisposed() || this._position.lineNumber !== position.lineNumber) {\n            // bail out early if things seems fishy\n            return 0;\n        }\n        // read the marker (in case suggest was triggered at line end) or compare\n        // the cursor to the line end.\n        if (this._marker) {\n            const range = this._model.getDecorationRange(this._marker[0]);\n            const end = this._model.getOffsetAt(range.getStartPosition());\n            return end - this._model.getOffsetAt(position);\n        }\n        else {\n            return this._model.getLineMaxColumn(position.lineNumber) - position.column;\n        }\n    }\n}\nlet SuggestController = class SuggestController {\n    constructor(editor, _memoryService, _commandService, _contextKeyService, _instantiationService, _logService, _telemetryService) {\n        this._memoryService = _memoryService;\n        this._commandService = _commandService;\n        this._contextKeyService = _contextKeyService;\n        this._instantiationService = _instantiationService;\n        this._logService = _logService;\n        this._telemetryService = _telemetryService;\n        this._lineSuffix = new MutableDisposable();\n        this._toDispose = new DisposableStore();\n        this._selectors = new PriorityRegistry(s => s.priority);\n        this._telemetryGate = 0;\n        this.editor = editor;\n        this.model = _instantiationService.createInstance(SuggestModel, this.editor);\n        // context key: update insert/replace mode\n        const ctxInsertMode = SuggestContext.InsertMode.bindTo(_contextKeyService);\n        ctxInsertMode.set(editor.getOption(106 /* suggest */).insertMode);\n        this.model.onDidTrigger(() => ctxInsertMode.set(editor.getOption(106 /* suggest */).insertMode));\n        this.widget = this._toDispose.add(new IdleValue(() => {\n            const widget = this._instantiationService.createInstance(SuggestWidget, this.editor);\n            this._toDispose.add(widget);\n            this._toDispose.add(widget.onDidSelect(item => this._insertSuggestion(item, 0), this));\n            // Wire up logic to accept a suggestion on certain characters\n            const commitCharacterController = new CommitCharacterController(this.editor, widget, item => this._insertSuggestion(item, 2 /* NoAfterUndoStop */));\n            this._toDispose.add(commitCharacterController);\n            this._toDispose.add(this.model.onDidSuggest(e => {\n                if (e.completionModel.items.length === 0) {\n                    commitCharacterController.reset();\n                }\n            }));\n            // Wire up makes text edit context key\n            const ctxMakesTextEdit = SuggestContext.MakesTextEdit.bindTo(this._contextKeyService);\n            const ctxHasInsertAndReplace = SuggestContext.HasInsertAndReplaceRange.bindTo(this._contextKeyService);\n            const ctxCanResolve = SuggestContext.CanResolve.bindTo(this._contextKeyService);\n            this._toDispose.add(toDisposable(() => {\n                ctxMakesTextEdit.reset();\n                ctxHasInsertAndReplace.reset();\n                ctxCanResolve.reset();\n            }));\n            this._toDispose.add(widget.onDidFocus(({ item }) => {\n                // (ctx: makesTextEdit)\n                const position = this.editor.getPosition();\n                const startColumn = item.editStart.column;\n                const endColumn = position.column;\n                let value = true;\n                if (this.editor.getOption(1 /* acceptSuggestionOnEnter */) === 'smart'\n                    && this.model.state === 2 /* Auto */\n                    && !item.completion.additionalTextEdits\n                    && !(item.completion.insertTextRules & 4 /* InsertAsSnippet */)\n                    && endColumn - startColumn === item.completion.insertText.length) {\n                    const oldText = this.editor.getModel().getValueInRange({\n                        startLineNumber: position.lineNumber,\n                        startColumn,\n                        endLineNumber: position.lineNumber,\n                        endColumn\n                    });\n                    value = oldText !== item.completion.insertText;\n                }\n                ctxMakesTextEdit.set(value);\n                // (ctx: hasInsertAndReplaceRange)\n                ctxHasInsertAndReplace.set(!Position.equals(item.editInsertEnd, item.editReplaceEnd));\n                // (ctx: canResolve)\n                ctxCanResolve.set(Boolean(item.provider.resolveCompletionItem) || Boolean(item.completion.documentation) || item.completion.detail !== item.completion.label);\n            }));\n            this._toDispose.add(widget.onDetailsKeyDown(e => {\n                // cmd + c on macOS, ctrl + c on Win / Linux\n                if (e.toKeybinding().equals(new SimpleKeybinding(true, false, false, false, 33 /* KeyC */)) ||\n                    (platform.isMacintosh && e.toKeybinding().equals(new SimpleKeybinding(false, false, false, true, 33 /* KeyC */)))) {\n                    e.stopPropagation();\n                    return;\n                }\n                if (!e.toKeybinding().isModifierKey()) {\n                    this.editor.focus();\n                }\n            }));\n            return widget;\n        }));\n        // Wire up text overtyping capture\n        this._overtypingCapturer = this._toDispose.add(new IdleValue(() => {\n            return this._toDispose.add(new OvertypingCapturer(this.editor, this.model));\n        }));\n        this._alternatives = this._toDispose.add(new IdleValue(() => {\n            return this._toDispose.add(new SuggestAlternatives(this.editor, this._contextKeyService));\n        }));\n        this._toDispose.add(_instantiationService.createInstance(WordContextKey, editor));\n        this._toDispose.add(this.model.onDidTrigger(e => {\n            this.widget.value.showTriggered(e.auto, e.shy ? 250 : 50);\n            this._lineSuffix.value = new LineSuffix(this.editor.getModel(), e.position);\n        }));\n        this._toDispose.add(this.model.onDidSuggest(e => {\n            if (!e.shy) {\n                let index = -1;\n                for (const selector of this._selectors.itemsOrderedByPriorityDesc) {\n                    index = selector.select(this.editor.getModel(), this.editor.getPosition(), e.completionModel.items);\n                    if (index !== -1) {\n                        break;\n                    }\n                }\n                if (index === -1) {\n                    index = this._memoryService.select(this.editor.getModel(), this.editor.getPosition(), e.completionModel.items);\n                }\n                this.widget.value.showSuggestions(e.completionModel, index, e.isFrozen, e.auto);\n            }\n        }));\n        this._toDispose.add(this.model.onDidCancel(e => {\n            if (!e.retrigger) {\n                this.widget.value.hideWidget();\n            }\n        }));\n        this._toDispose.add(this.editor.onDidBlurEditorWidget(() => {\n            if (!_sticky) {\n                this.model.cancel();\n                this.model.clear();\n            }\n        }));\n        // Manage the acceptSuggestionsOnEnter context key\n        let acceptSuggestionsOnEnter = SuggestContext.AcceptSuggestionsOnEnter.bindTo(_contextKeyService);\n        let updateFromConfig = () => {\n            const acceptSuggestionOnEnter = this.editor.getOption(1 /* acceptSuggestionOnEnter */);\n            acceptSuggestionsOnEnter.set(acceptSuggestionOnEnter === 'on' || acceptSuggestionOnEnter === 'smart');\n        };\n        this._toDispose.add(this.editor.onDidChangeConfiguration(() => updateFromConfig()));\n        updateFromConfig();\n    }\n    static get(editor) {\n        return editor.getContribution(SuggestController.ID);\n    }\n    dispose() {\n        this._alternatives.dispose();\n        this._toDispose.dispose();\n        this.widget.dispose();\n        this.model.dispose();\n        this._lineSuffix.dispose();\n    }\n    _insertSuggestion(event, flags) {\n        if (!event || !event.item) {\n            this._alternatives.value.reset();\n            this.model.cancel();\n            this.model.clear();\n            return;\n        }\n        if (!this.editor.hasModel()) {\n            return;\n        }\n        const snippetController = SnippetController2.get(this.editor);\n        if (!snippetController) {\n            return;\n        }\n        const model = this.editor.getModel();\n        const modelVersionNow = model.getAlternativeVersionId();\n        const { item } = event;\n        //\n        const tasks = [];\n        const cts = new CancellationTokenSource();\n        // pushing undo stops *before* additional text edits and\n        // *after* the main edit\n        if (!(flags & 1 /* NoBeforeUndoStop */)) {\n            this.editor.pushUndoStop();\n        }\n        // compute overwrite[Before|After] deltas BEFORE applying extra edits\n        const info = this.getOverwriteInfo(item, Boolean(flags & 8 /* AlternativeOverwriteConfig */));\n        // keep item in memory\n        this._memoryService.memorize(model, this.editor.getPosition(), item);\n        if (Array.isArray(item.completion.additionalTextEdits)) {\n            // sync additional edits\n            const scrollState = StableEditorScrollState.capture(this.editor);\n            this.editor.executeEdits('suggestController.additionalTextEdits.sync', item.completion.additionalTextEdits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text)));\n            scrollState.restoreRelativeVerticalPositionOfCursor(this.editor);\n        }\n        else if (!item.isResolved) {\n            // async additional edits\n            const sw = new StopWatch(true);\n            let position;\n            const docListener = model.onDidChangeContent(e => {\n                if (e.isFlush) {\n                    cts.cancel();\n                    docListener.dispose();\n                    return;\n                }\n                for (let change of e.changes) {\n                    const thisPosition = Range.getEndPosition(change.range);\n                    if (!position || Position.isBefore(thisPosition, position)) {\n                        position = thisPosition;\n                    }\n                }\n            });\n            let oldFlags = flags;\n            flags |= 2 /* NoAfterUndoStop */;\n            let didType = false;\n            let typeListener = this.editor.onWillType(() => {\n                typeListener.dispose();\n                didType = true;\n                if (!(oldFlags & 2 /* NoAfterUndoStop */)) {\n                    this.editor.pushUndoStop();\n                }\n            });\n            tasks.push(item.resolve(cts.token).then(() => {\n                if (!item.completion.additionalTextEdits || cts.token.isCancellationRequested) {\n                    return false;\n                }\n                if (position && item.completion.additionalTextEdits.some(edit => Position.isBefore(position, Range.getStartPosition(edit.range)))) {\n                    return false;\n                }\n                if (didType) {\n                    this.editor.pushUndoStop();\n                }\n                const scrollState = StableEditorScrollState.capture(this.editor);\n                this.editor.executeEdits('suggestController.additionalTextEdits.async', item.completion.additionalTextEdits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text)));\n                scrollState.restoreRelativeVerticalPositionOfCursor(this.editor);\n                if (didType || !(oldFlags & 2 /* NoAfterUndoStop */)) {\n                    this.editor.pushUndoStop();\n                }\n                return true;\n            }).then(applied => {\n                this._logService.trace('[suggest] async resolving of edits DONE (ms, applied?)', sw.elapsed(), applied);\n                docListener.dispose();\n                typeListener.dispose();\n            }));\n        }\n        let { insertText } = item.completion;\n        if (!(item.completion.insertTextRules & 4 /* InsertAsSnippet */)) {\n            insertText = SnippetParser.escape(insertText);\n        }\n        snippetController.insert(insertText, {\n            overwriteBefore: info.overwriteBefore,\n            overwriteAfter: info.overwriteAfter,\n            undoStopBefore: false,\n            undoStopAfter: false,\n            adjustWhitespace: !(item.completion.insertTextRules & 1 /* KeepWhitespace */),\n            clipboardText: event.model.clipboardText,\n            overtypingCapturer: this._overtypingCapturer.value\n        });\n        if (!(flags & 2 /* NoAfterUndoStop */)) {\n            this.editor.pushUndoStop();\n        }\n        if (!item.completion.command) {\n            // done\n            this.model.cancel();\n        }\n        else if (item.completion.command.id === TriggerSuggestAction.id) {\n            // retigger\n            this.model.trigger({ auto: true, shy: false }, true);\n        }\n        else {\n            // exec command, done\n            tasks.push(this._commandService.executeCommand(item.completion.command.id, ...(item.completion.command.arguments ? [...item.completion.command.arguments] : [])).catch(onUnexpectedError));\n            this.model.cancel();\n        }\n        if (flags & 4 /* KeepAlternativeSuggestions */) {\n            this._alternatives.value.set(event, next => {\n                // cancel resolving of additional edits\n                cts.cancel();\n                // this is not so pretty. when inserting the 'next'\n                // suggestion we undo until we are at the state at\n                // which we were before inserting the previous suggestion...\n                while (model.canUndo()) {\n                    if (modelVersionNow !== model.getAlternativeVersionId()) {\n                        model.undo();\n                    }\n                    this._insertSuggestion(next, 1 /* NoBeforeUndoStop */ | 2 /* NoAfterUndoStop */ | (flags & 8 /* AlternativeOverwriteConfig */ ? 8 /* AlternativeOverwriteConfig */ : 0));\n                    break;\n                }\n            });\n        }\n        this._alertCompletionItem(item);\n        // clear only now - after all tasks are done\n        Promise.all(tasks).finally(() => {\n            this._reportSuggestionAcceptedTelemetry(model, event);\n            this.model.clear();\n            cts.dispose();\n        });\n    }\n    _reportSuggestionAcceptedTelemetry(model, acceptedSuggestion) {\n        var _a;\n        if (this._telemetryGate++ % 100 !== 0) {\n            return;\n        }\n        // _debugDisplayName looks like `vscode.css-language-features(/-:)`, where the last bit is the trigger chars\n        // normalize it to just the extension ID and lowercase\n        const providerId = ((_a = acceptedSuggestion.item.provider._debugDisplayName) !== null && _a !== void 0 ? _a : 'unknown').split('(', 1)[0].toLowerCase();\n        this._telemetryService.publicLog2('suggest.acceptedSuggestion', {\n            providerId,\n            basenameHash: hash(basename(model.uri)).toString(16),\n            languageId: model.getLanguageId(),\n            fileExtension: extname(model.uri),\n        });\n    }\n    getOverwriteInfo(item, toggleMode) {\n        assertType(this.editor.hasModel());\n        let replace = this.editor.getOption(106 /* suggest */).insertMode === 'replace';\n        if (toggleMode) {\n            replace = !replace;\n        }\n        const overwriteBefore = item.position.column - item.editStart.column;\n        const overwriteAfter = (replace ? item.editReplaceEnd.column : item.editInsertEnd.column) - item.position.column;\n        const columnDelta = this.editor.getPosition().column - item.position.column;\n        const suffixDelta = this._lineSuffix.value ? this._lineSuffix.value.delta(this.editor.getPosition()) : 0;\n        return {\n            overwriteBefore: overwriteBefore + columnDelta,\n            overwriteAfter: overwriteAfter + suffixDelta\n        };\n    }\n    _alertCompletionItem(item) {\n        if (isNonEmptyArray(item.completion.additionalTextEdits)) {\n            let msg = nls.localize('aria.alert.snippet', \"Accepting '{0}' made {1} additional edits\", item.textLabel, item.completion.additionalTextEdits.length);\n            alert(msg);\n        }\n    }\n    triggerSuggest(onlyFrom, auto) {\n        if (this.editor.hasModel()) {\n            this.model.trigger({ auto: auto !== null && auto !== void 0 ? auto : false, shy: false }, false, onlyFrom);\n            this.editor.revealPosition(this.editor.getPosition(), 0 /* Smooth */);\n            this.editor.focus();\n        }\n    }\n    triggerSuggestAndAcceptBest(arg) {\n        if (!this.editor.hasModel()) {\n            return;\n        }\n        const positionNow = this.editor.getPosition();\n        const fallback = () => {\n            if (positionNow.equals(this.editor.getPosition())) {\n                this._commandService.executeCommand(arg.fallback);\n            }\n        };\n        const makesTextEdit = (item) => {\n            if (item.completion.insertTextRules & 4 /* InsertAsSnippet */ || item.completion.additionalTextEdits) {\n                // snippet, other editor -> makes edit\n                return true;\n            }\n            const position = this.editor.getPosition();\n            const startColumn = item.editStart.column;\n            const endColumn = position.column;\n            if (endColumn - startColumn !== item.completion.insertText.length) {\n                // unequal lengths -> makes edit\n                return true;\n            }\n            const textNow = this.editor.getModel().getValueInRange({\n                startLineNumber: position.lineNumber,\n                startColumn,\n                endLineNumber: position.lineNumber,\n                endColumn\n            });\n            // unequal text -> makes edit\n            return textNow !== item.completion.insertText;\n        };\n        Event.once(this.model.onDidTrigger)(_ => {\n            // wait for trigger because only then the cancel-event is trustworthy\n            let listener = [];\n            Event.any(this.model.onDidTrigger, this.model.onDidCancel)(() => {\n                // retrigger or cancel -> try to type default text\n                dispose(listener);\n                fallback();\n            }, undefined, listener);\n            this.model.onDidSuggest(({ completionModel }) => {\n                dispose(listener);\n                if (completionModel.items.length === 0) {\n                    fallback();\n                    return;\n                }\n                const index = this._memoryService.select(this.editor.getModel(), this.editor.getPosition(), completionModel.items);\n                const item = completionModel.items[index];\n                if (!makesTextEdit(item)) {\n                    fallback();\n                    return;\n                }\n                this.editor.pushUndoStop();\n                this._insertSuggestion({ index, item, model: completionModel }, 4 /* KeepAlternativeSuggestions */ | 1 /* NoBeforeUndoStop */ | 2 /* NoAfterUndoStop */);\n            }, undefined, listener);\n        });\n        this.model.trigger({ auto: false, shy: true });\n        this.editor.revealPosition(positionNow, 0 /* Smooth */);\n        this.editor.focus();\n    }\n    acceptSelectedSuggestion(keepAlternativeSuggestions, alternativeOverwriteConfig) {\n        const item = this.widget.value.getFocusedItem();\n        let flags = 0;\n        if (keepAlternativeSuggestions) {\n            flags |= 4 /* KeepAlternativeSuggestions */;\n        }\n        if (alternativeOverwriteConfig) {\n            flags |= 8 /* AlternativeOverwriteConfig */;\n        }\n        this._insertSuggestion(item, flags);\n    }\n    acceptNextSuggestion() {\n        this._alternatives.value.next();\n    }\n    acceptPrevSuggestion() {\n        this._alternatives.value.prev();\n    }\n    cancelSuggestWidget() {\n        this.model.cancel();\n        this.model.clear();\n        this.widget.value.hideWidget();\n    }\n    selectNextSuggestion() {\n        this.widget.value.selectNext();\n    }\n    selectNextPageSuggestion() {\n        this.widget.value.selectNextPage();\n    }\n    selectLastSuggestion() {\n        this.widget.value.selectLast();\n    }\n    selectPrevSuggestion() {\n        this.widget.value.selectPrevious();\n    }\n    selectPrevPageSuggestion() {\n        this.widget.value.selectPreviousPage();\n    }\n    selectFirstSuggestion() {\n        this.widget.value.selectFirst();\n    }\n    toggleSuggestionDetails() {\n        this.widget.value.toggleDetails();\n    }\n    toggleExplainMode() {\n        this.widget.value.toggleExplainMode();\n    }\n    toggleSuggestionFocus() {\n        this.widget.value.toggleDetailsFocus();\n    }\n    resetWidgetSize() {\n        this.widget.value.resetPersistedSize();\n    }\n    forceRenderingAbove() {\n        this.widget.value.forceRenderingAbove();\n    }\n    stopForceRenderingAbove() {\n        if (!this.widget.isInitialized) {\n            // This method has no effect if the widget is not initialized yet.\n            return;\n        }\n        this.widget.value.stopForceRenderingAbove();\n    }\n    registerSelector(selector) {\n        return this._selectors.register(selector);\n    }\n};\nSuggestController.ID = 'editor.contrib.suggestController';\nSuggestController = __decorate([\n    __param(1, ISuggestMemoryService),\n    __param(2, ICommandService),\n    __param(3, IContextKeyService),\n    __param(4, IInstantiationService),\n    __param(5, ILogService),\n    __param(6, ITelemetryService)\n], SuggestController);\nexport { SuggestController };\nclass PriorityRegistry {\n    constructor(prioritySelector) {\n        this.prioritySelector = prioritySelector;\n        this._items = new Array();\n    }\n    register(value) {\n        if (this._items.indexOf(value) !== -1) {\n            throw new Error('Value is already registered');\n        }\n        this._items.push(value);\n        this._items.sort((s1, s2) => this.prioritySelector(s2) - this.prioritySelector(s1));\n        return {\n            dispose: () => {\n                const idx = this._items.indexOf(value);\n                if (idx >= 0) {\n                    this._items.splice(idx, 1);\n                }\n            }\n        };\n    }\n    get itemsOrderedByPriorityDesc() {\n        return this._items;\n    }\n}\nexport class TriggerSuggestAction extends EditorAction {\n    constructor() {\n        super({\n            id: TriggerSuggestAction.id,\n            label: nls.localize('suggest.trigger.label', \"Trigger Suggest\"),\n            alias: 'Trigger Suggest',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCompletionItemProvider),\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 2048 /* CtrlCmd */ | 10 /* Space */,\n                secondary: [2048 /* CtrlCmd */ | 39 /* KeyI */],\n                mac: { primary: 256 /* WinCtrl */ | 10 /* Space */, secondary: [512 /* Alt */ | 9 /* Escape */, 2048 /* CtrlCmd */ | 39 /* KeyI */] },\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor, args) {\n        const controller = SuggestController.get(editor);\n        if (!controller) {\n            return;\n        }\n        let auto;\n        if (args && typeof args === 'object') {\n            if (args.auto === true) {\n                auto = true;\n            }\n        }\n        controller.triggerSuggest(undefined, auto);\n    }\n}\nTriggerSuggestAction.id = 'editor.action.triggerSuggest';\nregisterEditorContribution(SuggestController.ID, SuggestController);\nregisterEditorAction(TriggerSuggestAction);\nconst weight = 100 /* EditorContrib */ + 90;\nconst SuggestCommand = EditorCommand.bindToContribution(SuggestController.get);\nregisterEditorCommand(new SuggestCommand({\n    id: 'acceptSelectedSuggestion',\n    precondition: SuggestContext.Visible,\n    handler(x) {\n        x.acceptSelectedSuggestion(true, false);\n    }\n}));\n// normal tab\nKeybindingsRegistry.registerKeybindingRule({\n    id: 'acceptSelectedSuggestion',\n    when: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus),\n    primary: 2 /* Tab */,\n    weight\n});\n// accept on enter has special rules\nKeybindingsRegistry.registerKeybindingRule({\n    id: 'acceptSelectedSuggestion',\n    when: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus, SuggestContext.AcceptSuggestionsOnEnter, SuggestContext.MakesTextEdit),\n    primary: 3 /* Enter */,\n    weight,\n});\nMenuRegistry.appendMenuItem(suggestWidgetStatusbarMenu, {\n    command: { id: 'acceptSelectedSuggestion', title: nls.localize('accept.insert', \"Insert\") },\n    group: 'left',\n    order: 1,\n    when: SuggestContext.HasInsertAndReplaceRange.toNegated()\n});\nMenuRegistry.appendMenuItem(suggestWidgetStatusbarMenu, {\n    command: { id: 'acceptSelectedSuggestion', title: nls.localize('accept.insert', \"Insert\") },\n    group: 'left',\n    order: 1,\n    when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('insert'))\n});\nMenuRegistry.appendMenuItem(suggestWidgetStatusbarMenu, {\n    command: { id: 'acceptSelectedSuggestion', title: nls.localize('accept.replace', \"Replace\") },\n    group: 'left',\n    order: 1,\n    when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('replace'))\n});\nregisterEditorCommand(new SuggestCommand({\n    id: 'acceptAlternativeSelectedSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 1024 /* Shift */ | 3 /* Enter */,\n        secondary: [1024 /* Shift */ | 2 /* Tab */],\n    },\n    handler(x) {\n        x.acceptSelectedSuggestion(false, true);\n    },\n    menuOpts: [{\n            menuId: suggestWidgetStatusbarMenu,\n            group: 'left',\n            order: 2,\n            when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('insert')),\n            title: nls.localize('accept.replace', \"Replace\")\n        }, {\n            menuId: suggestWidgetStatusbarMenu,\n            group: 'left',\n            order: 2,\n            when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('replace')),\n            title: nls.localize('accept.insert', \"Insert\")\n        }]\n}));\n// continue to support the old command\nCommandsRegistry.registerCommandAlias('acceptSelectedSuggestionOnEnter', 'acceptSelectedSuggestion');\nregisterEditorCommand(new SuggestCommand({\n    id: 'hideSuggestWidget',\n    precondition: SuggestContext.Visible,\n    handler: x => x.cancelSuggestWidget(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 9 /* Escape */,\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'selectNextSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\n    handler: c => c.selectNextSuggestion(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 18 /* DownArrow */,\n        secondary: [2048 /* CtrlCmd */ | 18 /* DownArrow */],\n        mac: { primary: 18 /* DownArrow */, secondary: [2048 /* CtrlCmd */ | 18 /* DownArrow */, 256 /* WinCtrl */ | 44 /* KeyN */] }\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'selectNextPageSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\n    handler: c => c.selectNextPageSuggestion(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 12 /* PageDown */,\n        secondary: [2048 /* CtrlCmd */ | 12 /* PageDown */]\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'selectLastSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\n    handler: c => c.selectLastSuggestion()\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'selectPrevSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\n    handler: c => c.selectPrevSuggestion(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 16 /* UpArrow */,\n        secondary: [2048 /* CtrlCmd */ | 16 /* UpArrow */],\n        mac: { primary: 16 /* UpArrow */, secondary: [2048 /* CtrlCmd */ | 16 /* UpArrow */, 256 /* WinCtrl */ | 46 /* KeyP */] }\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'selectPrevPageSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\n    handler: c => c.selectPrevPageSuggestion(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 11 /* PageUp */,\n        secondary: [2048 /* CtrlCmd */ | 11 /* PageUp */]\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'selectFirstSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\n    handler: c => c.selectFirstSuggestion()\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'toggleSuggestionDetails',\n    precondition: SuggestContext.Visible,\n    handler: x => x.toggleSuggestionDetails(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2048 /* CtrlCmd */ | 10 /* Space */,\n        secondary: [2048 /* CtrlCmd */ | 39 /* KeyI */],\n        mac: { primary: 256 /* WinCtrl */ | 10 /* Space */, secondary: [2048 /* CtrlCmd */ | 39 /* KeyI */] }\n    },\n    menuOpts: [{\n            menuId: suggestWidgetStatusbarMenu,\n            group: 'right',\n            order: 1,\n            when: ContextKeyExpr.and(SuggestContext.DetailsVisible, SuggestContext.CanResolve),\n            title: nls.localize('detail.more', \"show less\")\n        }, {\n            menuId: suggestWidgetStatusbarMenu,\n            group: 'right',\n            order: 1,\n            when: ContextKeyExpr.and(SuggestContext.DetailsVisible.toNegated(), SuggestContext.CanResolve),\n            title: nls.localize('detail.less', \"show more\")\n        }]\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'toggleExplainMode',\n    precondition: SuggestContext.Visible,\n    handler: x => x.toggleExplainMode(),\n    kbOpts: {\n        weight: 100 /* EditorContrib */,\n        primary: 2048 /* CtrlCmd */ | 85 /* Slash */,\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'toggleSuggestionFocus',\n    precondition: SuggestContext.Visible,\n    handler: x => x.toggleSuggestionFocus(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 10 /* Space */,\n        mac: { primary: 256 /* WinCtrl */ | 512 /* Alt */ | 10 /* Space */ }\n    }\n}));\n//#region tab completions\nregisterEditorCommand(new SuggestCommand({\n    id: 'insertBestCompletion',\n    precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), WordContextKey.AtEnd, SuggestContext.Visible.toNegated(), SuggestAlternatives.OtherSuggestions.toNegated(), SnippetController2.InSnippetMode.toNegated()),\n    handler: (x, arg) => {\n        x.triggerSuggestAndAcceptBest(isObject(arg) ? Object.assign({ fallback: 'tab' }, arg) : { fallback: 'tab' });\n    },\n    kbOpts: {\n        weight,\n        primary: 2 /* Tab */\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'insertNextSuggestion',\n    precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), SuggestAlternatives.OtherSuggestions, SuggestContext.Visible.toNegated(), SnippetController2.InSnippetMode.toNegated()),\n    handler: x => x.acceptNextSuggestion(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2 /* Tab */\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'insertPrevSuggestion',\n    precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), SuggestAlternatives.OtherSuggestions, SuggestContext.Visible.toNegated(), SnippetController2.InSnippetMode.toNegated()),\n    handler: x => x.acceptPrevSuggestion(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 1024 /* Shift */ | 2 /* Tab */\n    }\n}));\nregisterEditorAction(class extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.resetSuggestSize',\n            label: nls.localize('suggest.reset.label', \"Reset Suggest Widget Size\"),\n            alias: 'Reset Suggest Widget Size',\n            precondition: undefined\n        });\n    }\n    run(_accessor, editor) {\n        var _a;\n        (_a = SuggestController.get(editor)) === null || _a === void 0 ? void 0 : _a.resetWidgetSize();\n    }\n});\n"]},"metadata":{},"sourceType":"module"}