{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport * as dom from '../../dom.js';\nimport { TimeoutTimer } from '../../../common/async.js';\nimport { CancellationTokenSource } from '../../../common/cancellation.js';\nimport { isMarkdownString } from '../../../common/htmlContent.js';\nimport { stripIcons } from '../../../common/iconLabels.js';\nimport { DisposableStore } from '../../../common/lifecycle.js';\nimport { isFunction, isString } from '../../../common/types.js';\nimport { localize } from '../../../../nls.js';\nexport function setupNativeHover(htmlElement, tooltip) {\n  if (isString(tooltip)) {\n    // Icons don't render in the native hover so we strip them out\n    htmlElement.title = stripIcons(tooltip);\n  } else if (tooltip === null || tooltip === void 0 ? void 0 : tooltip.markdownNotSupportedFallback) {\n    htmlElement.title = tooltip.markdownNotSupportedFallback;\n  } else {\n    htmlElement.removeAttribute('title');\n  }\n}\n\nclass UpdatableHoverWidget {\n  constructor(hoverDelegate, target, fadeInAnimation) {\n    this.hoverDelegate = hoverDelegate;\n    this.target = target;\n    this.fadeInAnimation = fadeInAnimation;\n  }\n\n  update(markdownTooltip, focus) {\n    var _a;\n\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this._cancellationTokenSource) {\n        // there's an computation ongoing, cancel it\n        this._cancellationTokenSource.dispose(true);\n\n        this._cancellationTokenSource = undefined;\n      }\n\n      if (this.isDisposed) {\n        return;\n      }\n\n      let resolvedContent;\n\n      if (markdownTooltip === undefined || isString(markdownTooltip) || markdownTooltip instanceof HTMLElement) {\n        resolvedContent = markdownTooltip;\n      } else if (!isFunction(markdownTooltip.markdown)) {\n        resolvedContent = (_a = markdownTooltip.markdown) !== null && _a !== void 0 ? _a : markdownTooltip.markdownNotSupportedFallback;\n      } else {\n        // compute the content, potentially long-running\n        // show 'Loading' if no hover is up yet\n        if (!this._hoverWidget) {\n          this.show(localize('iconLabel.loading', \"Loading...\"), focus);\n        } // compute the content\n\n\n        this._cancellationTokenSource = new CancellationTokenSource();\n        const token = this._cancellationTokenSource.token;\n        resolvedContent = yield markdownTooltip.markdown(token);\n\n        if (this.isDisposed || token.isCancellationRequested) {\n          // either the widget has been closed in the meantime\n          // or there has been a new call to `update`\n          return;\n        }\n      }\n\n      this.show(resolvedContent, focus);\n    });\n  }\n\n  show(content, focus) {\n    const oldHoverWidget = this._hoverWidget;\n\n    if (this.hasContent(content)) {\n      const hoverOptions = {\n        content,\n        target: this.target,\n        showPointer: this.hoverDelegate.placement === 'element',\n        hoverPosition: 2\n        /* BELOW */\n        ,\n        skipFadeInAnimation: !this.fadeInAnimation || !!oldHoverWidget // do not fade in if the hover is already showing\n\n      };\n      this._hoverWidget = this.hoverDelegate.showHover(hoverOptions, focus);\n    }\n\n    oldHoverWidget === null || oldHoverWidget === void 0 ? void 0 : oldHoverWidget.dispose();\n  }\n\n  hasContent(content) {\n    if (!content) {\n      return false;\n    }\n\n    if (isMarkdownString(content)) {\n      return !!content.value;\n    }\n\n    return true;\n  }\n\n  get isDisposed() {\n    var _a;\n\n    return (_a = this._hoverWidget) === null || _a === void 0 ? void 0 : _a.isDisposed;\n  }\n\n  dispose() {\n    var _a, _b;\n\n    (_a = this._hoverWidget) === null || _a === void 0 ? void 0 : _a.dispose();\n    (_b = this._cancellationTokenSource) === null || _b === void 0 ? void 0 : _b.dispose(true);\n    this._cancellationTokenSource = undefined;\n  }\n\n}\n\nexport function setupCustomHover(hoverDelegate, htmlElement, markdownTooltip) {\n  let hoverPreparation;\n  let hoverWidget;\n\n  const hideHover = (disposeWidget, disposePreparation) => {\n    var _a;\n\n    if (disposeWidget) {\n      hoverWidget === null || hoverWidget === void 0 ? void 0 : hoverWidget.dispose();\n      hoverWidget = undefined;\n    }\n\n    if (disposePreparation) {\n      hoverPreparation === null || hoverPreparation === void 0 ? void 0 : hoverPreparation.dispose();\n      hoverPreparation = undefined;\n    }\n\n    (_a = hoverDelegate.onDidHideHover) === null || _a === void 0 ? void 0 : _a.call(hoverDelegate);\n  };\n\n  const triggerShowHover = (delay, focus, target) => {\n    return new TimeoutTimer(() => __awaiter(this, void 0, void 0, function* () {\n      if (!hoverWidget || hoverWidget.isDisposed) {\n        hoverWidget = new UpdatableHoverWidget(hoverDelegate, target || htmlElement, delay > 0);\n        yield hoverWidget.update(markdownTooltip, focus);\n      }\n    }), delay);\n  };\n\n  const onMouseOver = () => {\n    if (hoverPreparation) {\n      return;\n    }\n\n    const toDispose = new DisposableStore();\n\n    const onMouseLeave = e => hideHover(false, e.fromElement === htmlElement);\n\n    toDispose.add(dom.addDisposableListener(htmlElement, dom.EventType.MOUSE_LEAVE, onMouseLeave, true));\n\n    const onMouseDown = () => hideHover(true, true);\n\n    toDispose.add(dom.addDisposableListener(htmlElement, dom.EventType.MOUSE_DOWN, onMouseDown, true));\n    const target = {\n      targetElements: [htmlElement],\n      dispose: () => {}\n    };\n\n    if (hoverDelegate.placement === undefined || hoverDelegate.placement === 'mouse') {\n      // track the mouse position\n      const onMouseMove = e => target.x = e.x + 10;\n\n      toDispose.add(dom.addDisposableListener(htmlElement, dom.EventType.MOUSE_MOVE, onMouseMove, true));\n    }\n\n    toDispose.add(triggerShowHover(hoverDelegate.delay, false, target));\n    hoverPreparation = toDispose;\n  };\n\n  const mouseOverDomEmitter = dom.addDisposableListener(htmlElement, dom.EventType.MOUSE_OVER, onMouseOver, true);\n  const hover = {\n    show: focus => {\n      hideHover(false, true); // terminate a ongoing mouse over preparation\n\n      triggerShowHover(0, focus); // show hover immediately\n    },\n    hide: () => {\n      hideHover(true, true);\n    },\n    update: newTooltip => __awaiter(this, void 0, void 0, function* () {\n      markdownTooltip = newTooltip;\n      yield hoverWidget === null || hoverWidget === void 0 ? void 0 : hoverWidget.update(markdownTooltip);\n    }),\n    dispose: () => {\n      mouseOverDomEmitter.dispose();\n      hideHover(true, true);\n    }\n  };\n  return hover;\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/base/browser/ui/iconLabel/iconLabelHover.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","dom","TimeoutTimer","CancellationTokenSource","isMarkdownString","stripIcons","DisposableStore","isFunction","isString","localize","setupNativeHover","htmlElement","tooltip","title","markdownNotSupportedFallback","removeAttribute","UpdatableHoverWidget","constructor","hoverDelegate","target","fadeInAnimation","update","markdownTooltip","focus","_a","_cancellationTokenSource","dispose","undefined","isDisposed","resolvedContent","HTMLElement","markdown","_hoverWidget","show","token","isCancellationRequested","content","oldHoverWidget","hasContent","hoverOptions","showPointer","placement","hoverPosition","skipFadeInAnimation","showHover","_b","setupCustomHover","hoverPreparation","hoverWidget","hideHover","disposeWidget","disposePreparation","onDidHideHover","call","triggerShowHover","delay","onMouseOver","toDispose","onMouseLeave","fromElement","add","addDisposableListener","EventType","MOUSE_LEAVE","onMouseDown","MOUSE_DOWN","targetElements","onMouseMove","x","MOUSE_MOVE","mouseOverDomEmitter","MOUSE_OVER","hover","hide","newTooltip"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as dom from '../../dom.js';\nimport { TimeoutTimer } from '../../../common/async.js';\nimport { CancellationTokenSource } from '../../../common/cancellation.js';\nimport { isMarkdownString } from '../../../common/htmlContent.js';\nimport { stripIcons } from '../../../common/iconLabels.js';\nimport { DisposableStore } from '../../../common/lifecycle.js';\nimport { isFunction, isString } from '../../../common/types.js';\nimport { localize } from '../../../../nls.js';\nexport function setupNativeHover(htmlElement, tooltip) {\n    if (isString(tooltip)) {\n        // Icons don't render in the native hover so we strip them out\n        htmlElement.title = stripIcons(tooltip);\n    }\n    else if (tooltip === null || tooltip === void 0 ? void 0 : tooltip.markdownNotSupportedFallback) {\n        htmlElement.title = tooltip.markdownNotSupportedFallback;\n    }\n    else {\n        htmlElement.removeAttribute('title');\n    }\n}\nclass UpdatableHoverWidget {\n    constructor(hoverDelegate, target, fadeInAnimation) {\n        this.hoverDelegate = hoverDelegate;\n        this.target = target;\n        this.fadeInAnimation = fadeInAnimation;\n    }\n    update(markdownTooltip, focus) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._cancellationTokenSource) {\n                // there's an computation ongoing, cancel it\n                this._cancellationTokenSource.dispose(true);\n                this._cancellationTokenSource = undefined;\n            }\n            if (this.isDisposed) {\n                return;\n            }\n            let resolvedContent;\n            if (markdownTooltip === undefined || isString(markdownTooltip) || markdownTooltip instanceof HTMLElement) {\n                resolvedContent = markdownTooltip;\n            }\n            else if (!isFunction(markdownTooltip.markdown)) {\n                resolvedContent = (_a = markdownTooltip.markdown) !== null && _a !== void 0 ? _a : markdownTooltip.markdownNotSupportedFallback;\n            }\n            else {\n                // compute the content, potentially long-running\n                // show 'Loading' if no hover is up yet\n                if (!this._hoverWidget) {\n                    this.show(localize('iconLabel.loading', \"Loading...\"), focus);\n                }\n                // compute the content\n                this._cancellationTokenSource = new CancellationTokenSource();\n                const token = this._cancellationTokenSource.token;\n                resolvedContent = yield markdownTooltip.markdown(token);\n                if (this.isDisposed || token.isCancellationRequested) {\n                    // either the widget has been closed in the meantime\n                    // or there has been a new call to `update`\n                    return;\n                }\n            }\n            this.show(resolvedContent, focus);\n        });\n    }\n    show(content, focus) {\n        const oldHoverWidget = this._hoverWidget;\n        if (this.hasContent(content)) {\n            const hoverOptions = {\n                content,\n                target: this.target,\n                showPointer: this.hoverDelegate.placement === 'element',\n                hoverPosition: 2 /* BELOW */,\n                skipFadeInAnimation: !this.fadeInAnimation || !!oldHoverWidget // do not fade in if the hover is already showing\n            };\n            this._hoverWidget = this.hoverDelegate.showHover(hoverOptions, focus);\n        }\n        oldHoverWidget === null || oldHoverWidget === void 0 ? void 0 : oldHoverWidget.dispose();\n    }\n    hasContent(content) {\n        if (!content) {\n            return false;\n        }\n        if (isMarkdownString(content)) {\n            return !!content.value;\n        }\n        return true;\n    }\n    get isDisposed() {\n        var _a;\n        return (_a = this._hoverWidget) === null || _a === void 0 ? void 0 : _a.isDisposed;\n    }\n    dispose() {\n        var _a, _b;\n        (_a = this._hoverWidget) === null || _a === void 0 ? void 0 : _a.dispose();\n        (_b = this._cancellationTokenSource) === null || _b === void 0 ? void 0 : _b.dispose(true);\n        this._cancellationTokenSource = undefined;\n    }\n}\nexport function setupCustomHover(hoverDelegate, htmlElement, markdownTooltip) {\n    let hoverPreparation;\n    let hoverWidget;\n    const hideHover = (disposeWidget, disposePreparation) => {\n        var _a;\n        if (disposeWidget) {\n            hoverWidget === null || hoverWidget === void 0 ? void 0 : hoverWidget.dispose();\n            hoverWidget = undefined;\n        }\n        if (disposePreparation) {\n            hoverPreparation === null || hoverPreparation === void 0 ? void 0 : hoverPreparation.dispose();\n            hoverPreparation = undefined;\n        }\n        (_a = hoverDelegate.onDidHideHover) === null || _a === void 0 ? void 0 : _a.call(hoverDelegate);\n    };\n    const triggerShowHover = (delay, focus, target) => {\n        return new TimeoutTimer(() => __awaiter(this, void 0, void 0, function* () {\n            if (!hoverWidget || hoverWidget.isDisposed) {\n                hoverWidget = new UpdatableHoverWidget(hoverDelegate, target || htmlElement, delay > 0);\n                yield hoverWidget.update(markdownTooltip, focus);\n            }\n        }), delay);\n    };\n    const onMouseOver = () => {\n        if (hoverPreparation) {\n            return;\n        }\n        const toDispose = new DisposableStore();\n        const onMouseLeave = (e) => hideHover(false, e.fromElement === htmlElement);\n        toDispose.add(dom.addDisposableListener(htmlElement, dom.EventType.MOUSE_LEAVE, onMouseLeave, true));\n        const onMouseDown = () => hideHover(true, true);\n        toDispose.add(dom.addDisposableListener(htmlElement, dom.EventType.MOUSE_DOWN, onMouseDown, true));\n        const target = {\n            targetElements: [htmlElement],\n            dispose: () => { }\n        };\n        if (hoverDelegate.placement === undefined || hoverDelegate.placement === 'mouse') {\n            // track the mouse position\n            const onMouseMove = (e) => target.x = e.x + 10;\n            toDispose.add(dom.addDisposableListener(htmlElement, dom.EventType.MOUSE_MOVE, onMouseMove, true));\n        }\n        toDispose.add(triggerShowHover(hoverDelegate.delay, false, target));\n        hoverPreparation = toDispose;\n    };\n    const mouseOverDomEmitter = dom.addDisposableListener(htmlElement, dom.EventType.MOUSE_OVER, onMouseOver, true);\n    const hover = {\n        show: focus => {\n            hideHover(false, true); // terminate a ongoing mouse over preparation\n            triggerShowHover(0, focus); // show hover immediately\n        },\n        hide: () => {\n            hideHover(true, true);\n        },\n        update: (newTooltip) => __awaiter(this, void 0, void 0, function* () {\n            markdownTooltip = newTooltip;\n            yield (hoverWidget === null || hoverWidget === void 0 ? void 0 : hoverWidget.update(markdownTooltip));\n        }),\n        dispose: () => {\n            mouseOverDomEmitter.dispose();\n            hideHover(true, true);\n        }\n    };\n    return hover;\n}\n"]},"metadata":{},"sourceType":"module"}