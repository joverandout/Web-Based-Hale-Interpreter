{"ast":null,"code":"/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n// src/basic-languages/css/css.ts\nvar conf = {\n  wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|((::|[@#.!:])?[\\w-?]+%?)|::|[@#.!:]/g,\n  comments: {\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\",\n    notIn: [\"string\", \"comment\"]\n  }, {\n    open: \"[\",\n    close: \"]\",\n    notIn: [\"string\", \"comment\"]\n  }, {\n    open: \"(\",\n    close: \")\",\n    notIn: [\"string\", \"comment\"]\n  }, {\n    open: '\"',\n    close: '\"',\n    notIn: [\"string\", \"comment\"]\n  }, {\n    open: \"'\",\n    close: \"'\",\n    notIn: [\"string\", \"comment\"]\n  }],\n  surroundingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/\"),\n      end: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".css\",\n  ws: \"[ \t\\n\\r\\f]*\",\n  identifier: \"-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*\",\n  brackets: [{\n    open: \"{\",\n    close: \"}\",\n    token: \"delimiter.bracket\"\n  }, {\n    open: \"[\",\n    close: \"]\",\n    token: \"delimiter.bracket\"\n  }, {\n    open: \"(\",\n    close: \")\",\n    token: \"delimiter.parenthesis\"\n  }, {\n    open: \"<\",\n    close: \">\",\n    token: \"delimiter.angle\"\n  }],\n  tokenizer: {\n    root: [{\n      include: \"@selector\"\n    }],\n    selector: [{\n      include: \"@comments\"\n    }, {\n      include: \"@import\"\n    }, {\n      include: \"@strings\"\n    }, [\"[@](keyframes|-webkit-keyframes|-moz-keyframes|-o-keyframes)\", {\n      token: \"keyword\",\n      next: \"@keyframedeclaration\"\n    }], [\"[@](page|content|font-face|-moz-document)\", {\n      token: \"keyword\"\n    }], [\"[@](charset|namespace)\", {\n      token: \"keyword\",\n      next: \"@declarationbody\"\n    }], [\"(url-prefix)(\\\\()\", [\"attribute.value\", {\n      token: \"delimiter.parenthesis\",\n      next: \"@urldeclaration\"\n    }]], [\"(url)(\\\\()\", [\"attribute.value\", {\n      token: \"delimiter.parenthesis\",\n      next: \"@urldeclaration\"\n    }]], {\n      include: \"@selectorname\"\n    }, [\"[\\\\*]\", \"tag\"], [\"[>\\\\+,]\", \"delimiter\"], [\"\\\\[\", {\n      token: \"delimiter.bracket\",\n      next: \"@selectorattribute\"\n    }], [\"{\", {\n      token: \"delimiter.bracket\",\n      next: \"@selectorbody\"\n    }]],\n    selectorbody: [{\n      include: \"@comments\"\n    }, [\"[*_]?@identifier@ws:(?=(\\\\s|\\\\d|[^{;}]*[;}]))\", \"attribute.name\", \"@rulevalue\"], [\"}\", {\n      token: \"delimiter.bracket\",\n      next: \"@pop\"\n    }]],\n    selectorname: [[\"(\\\\.|#(?=[^{])|%|(@identifier)|:)+\", \"tag\"]],\n    selectorattribute: [{\n      include: \"@term\"\n    }, [\"]\", {\n      token: \"delimiter.bracket\",\n      next: \"@pop\"\n    }]],\n    term: [{\n      include: \"@comments\"\n    }, [\"(url-prefix)(\\\\()\", [\"attribute.value\", {\n      token: \"delimiter.parenthesis\",\n      next: \"@urldeclaration\"\n    }]], [\"(url)(\\\\()\", [\"attribute.value\", {\n      token: \"delimiter.parenthesis\",\n      next: \"@urldeclaration\"\n    }]], {\n      include: \"@functioninvocation\"\n    }, {\n      include: \"@numbers\"\n    }, {\n      include: \"@name\"\n    }, {\n      include: \"@strings\"\n    }, [\"([<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,])\", \"delimiter\"], [\",\", \"delimiter\"]],\n    rulevalue: [{\n      include: \"@comments\"\n    }, {\n      include: \"@strings\"\n    }, {\n      include: \"@term\"\n    }, [\"!important\", \"keyword\"], [\";\", \"delimiter\", \"@pop\"], [\"(?=})\", {\n      token: \"\",\n      next: \"@pop\"\n    }]],\n    warndebug: [[\"[@](warn|debug)\", {\n      token: \"keyword\",\n      next: \"@declarationbody\"\n    }]],\n    import: [[\"[@](import)\", {\n      token: \"keyword\",\n      next: \"@declarationbody\"\n    }]],\n    urldeclaration: [{\n      include: \"@strings\"\n    }, [\"[^)\\r\\n]+\", \"string\"], [\"\\\\)\", {\n      token: \"delimiter.parenthesis\",\n      next: \"@pop\"\n    }]],\n    parenthizedterm: [{\n      include: \"@term\"\n    }, [\"\\\\)\", {\n      token: \"delimiter.parenthesis\",\n      next: \"@pop\"\n    }]],\n    declarationbody: [{\n      include: \"@term\"\n    }, [\";\", \"delimiter\", \"@pop\"], [\"(?=})\", {\n      token: \"\",\n      next: \"@pop\"\n    }]],\n    comments: [[\"\\\\/\\\\*\", \"comment\", \"@comment\"], [\"\\\\/\\\\/+.*\", \"comment\"]],\n    comment: [[\"\\\\*\\\\/\", \"comment\", \"@pop\"], [/[^*/]+/, \"comment\"], [/./, \"comment\"]],\n    name: [[\"@identifier\", \"attribute.value\"]],\n    numbers: [[\"-?(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?\", {\n      token: \"attribute.value.number\",\n      next: \"@units\"\n    }], [\"#[0-9a-fA-F_]+(?!\\\\w)\", \"attribute.value.hex\"]],\n    units: [[\"(em|ex|ch|rem|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?\", \"attribute.value.unit\", \"@pop\"]],\n    keyframedeclaration: [[\"@identifier\", \"attribute.value\"], [\"{\", {\n      token: \"delimiter.bracket\",\n      switchTo: \"@keyframebody\"\n    }]],\n    keyframebody: [{\n      include: \"@term\"\n    }, [\"{\", {\n      token: \"delimiter.bracket\",\n      next: \"@selectorbody\"\n    }], [\"}\", {\n      token: \"delimiter.bracket\",\n      next: \"@pop\"\n    }]],\n    functioninvocation: [[\"@identifier\\\\(\", {\n      token: \"attribute.value\",\n      next: \"@functionarguments\"\n    }]],\n    functionarguments: [[\"\\\\$@identifier@ws:\", \"attribute.name\"], [\"[,]\", \"delimiter\"], {\n      include: \"@term\"\n    }, [\"\\\\)\", {\n      token: \"attribute.value\",\n      next: \"@pop\"\n    }]],\n    strings: [['~?\"', {\n      token: \"string\",\n      next: \"@stringenddoublequote\"\n    }], [\"~?'\", {\n      token: \"string\",\n      next: \"@stringendquote\"\n    }]],\n    stringenddoublequote: [[\"\\\\\\\\.\", \"string\"], ['\"', {\n      token: \"string\",\n      next: \"@pop\"\n    }], [/[^\\\\\"]+/, \"string\"], [\".\", \"string\"]],\n    stringendquote: [[\"\\\\\\\\.\", \"string\"], [\"'\", {\n      token: \"string\",\n      next: \"@pop\"\n    }], [/[^\\\\']+/, \"string\"], [\".\", \"string\"]]\n  }\n};\nexport { conf, language };","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/basic-languages/css/css.js"],"names":["conf","wordPattern","comments","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","ws","identifier","token","tokenizer","root","include","selector","next","selectorbody","selectorname","selectorattribute","term","rulevalue","warndebug","import","urldeclaration","parenthizedterm","declarationbody","comment","name","numbers","units","keyframedeclaration","switchTo","keyframebody","functioninvocation","functionarguments","strings","stringenddoublequote","stringendquote"],"mappings":"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","sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/css/css.ts\nvar conf = {\n  wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|((::|[@#.!:])?[\\w-?]+%?)|::|[@#.!:]/g,\n  comments: {\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\", notIn: [\"string\", \"comment\"] },\n    { open: \"[\", close: \"]\", notIn: [\"string\", \"comment\"] },\n    { open: \"(\", close: \")\", notIn: [\"string\", \"comment\"] },\n    { open: '\"', close: '\"', notIn: [\"string\", \"comment\"] },\n    { open: \"'\", close: \"'\", notIn: [\"string\", \"comment\"] }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/\"),\n      end: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".css\",\n  ws: \"[ \t\\n\\r\\f]*\",\n  identifier: \"-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*\",\n  brackets: [\n    { open: \"{\", close: \"}\", token: \"delimiter.bracket\" },\n    { open: \"[\", close: \"]\", token: \"delimiter.bracket\" },\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" },\n    { open: \"<\", close: \">\", token: \"delimiter.angle\" }\n  ],\n  tokenizer: {\n    root: [{ include: \"@selector\" }],\n    selector: [\n      { include: \"@comments\" },\n      { include: \"@import\" },\n      { include: \"@strings\" },\n      [\n        \"[@](keyframes|-webkit-keyframes|-moz-keyframes|-o-keyframes)\",\n        { token: \"keyword\", next: \"@keyframedeclaration\" }\n      ],\n      [\"[@](page|content|font-face|-moz-document)\", { token: \"keyword\" }],\n      [\"[@](charset|namespace)\", { token: \"keyword\", next: \"@declarationbody\" }],\n      [\n        \"(url-prefix)(\\\\()\",\n        [\"attribute.value\", { token: \"delimiter.parenthesis\", next: \"@urldeclaration\" }]\n      ],\n      [\n        \"(url)(\\\\()\",\n        [\"attribute.value\", { token: \"delimiter.parenthesis\", next: \"@urldeclaration\" }]\n      ],\n      { include: \"@selectorname\" },\n      [\"[\\\\*]\", \"tag\"],\n      [\"[>\\\\+,]\", \"delimiter\"],\n      [\"\\\\[\", { token: \"delimiter.bracket\", next: \"@selectorattribute\" }],\n      [\"{\", { token: \"delimiter.bracket\", next: \"@selectorbody\" }]\n    ],\n    selectorbody: [\n      { include: \"@comments\" },\n      [\"[*_]?@identifier@ws:(?=(\\\\s|\\\\d|[^{;}]*[;}]))\", \"attribute.name\", \"@rulevalue\"],\n      [\"}\", { token: \"delimiter.bracket\", next: \"@pop\" }]\n    ],\n    selectorname: [\n      [\"(\\\\.|#(?=[^{])|%|(@identifier)|:)+\", \"tag\"]\n    ],\n    selectorattribute: [{ include: \"@term\" }, [\"]\", { token: \"delimiter.bracket\", next: \"@pop\" }]],\n    term: [\n      { include: \"@comments\" },\n      [\n        \"(url-prefix)(\\\\()\",\n        [\"attribute.value\", { token: \"delimiter.parenthesis\", next: \"@urldeclaration\" }]\n      ],\n      [\n        \"(url)(\\\\()\",\n        [\"attribute.value\", { token: \"delimiter.parenthesis\", next: \"@urldeclaration\" }]\n      ],\n      { include: \"@functioninvocation\" },\n      { include: \"@numbers\" },\n      { include: \"@name\" },\n      { include: \"@strings\" },\n      [\"([<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,])\", \"delimiter\"],\n      [\",\", \"delimiter\"]\n    ],\n    rulevalue: [\n      { include: \"@comments\" },\n      { include: \"@strings\" },\n      { include: \"@term\" },\n      [\"!important\", \"keyword\"],\n      [\";\", \"delimiter\", \"@pop\"],\n      [\"(?=})\", { token: \"\", next: \"@pop\" }]\n    ],\n    warndebug: [[\"[@](warn|debug)\", { token: \"keyword\", next: \"@declarationbody\" }]],\n    import: [[\"[@](import)\", { token: \"keyword\", next: \"@declarationbody\" }]],\n    urldeclaration: [\n      { include: \"@strings\" },\n      [\"[^)\\r\\n]+\", \"string\"],\n      [\"\\\\)\", { token: \"delimiter.parenthesis\", next: \"@pop\" }]\n    ],\n    parenthizedterm: [\n      { include: \"@term\" },\n      [\"\\\\)\", { token: \"delimiter.parenthesis\", next: \"@pop\" }]\n    ],\n    declarationbody: [\n      { include: \"@term\" },\n      [\";\", \"delimiter\", \"@pop\"],\n      [\"(?=})\", { token: \"\", next: \"@pop\" }]\n    ],\n    comments: [\n      [\"\\\\/\\\\*\", \"comment\", \"@comment\"],\n      [\"\\\\/\\\\/+.*\", \"comment\"]\n    ],\n    comment: [\n      [\"\\\\*\\\\/\", \"comment\", \"@pop\"],\n      [/[^*/]+/, \"comment\"],\n      [/./, \"comment\"]\n    ],\n    name: [[\"@identifier\", \"attribute.value\"]],\n    numbers: [\n      [\"-?(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?\", { token: \"attribute.value.number\", next: \"@units\" }],\n      [\"#[0-9a-fA-F_]+(?!\\\\w)\", \"attribute.value.hex\"]\n    ],\n    units: [\n      [\n        \"(em|ex|ch|rem|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?\",\n        \"attribute.value.unit\",\n        \"@pop\"\n      ]\n    ],\n    keyframedeclaration: [\n      [\"@identifier\", \"attribute.value\"],\n      [\"{\", { token: \"delimiter.bracket\", switchTo: \"@keyframebody\" }]\n    ],\n    keyframebody: [\n      { include: \"@term\" },\n      [\"{\", { token: \"delimiter.bracket\", next: \"@selectorbody\" }],\n      [\"}\", { token: \"delimiter.bracket\", next: \"@pop\" }]\n    ],\n    functioninvocation: [\n      [\"@identifier\\\\(\", { token: \"attribute.value\", next: \"@functionarguments\" }]\n    ],\n    functionarguments: [\n      [\"\\\\$@identifier@ws:\", \"attribute.name\"],\n      [\"[,]\", \"delimiter\"],\n      { include: \"@term\" },\n      [\"\\\\)\", { token: \"attribute.value\", next: \"@pop\" }]\n    ],\n    strings: [\n      ['~?\"', { token: \"string\", next: \"@stringenddoublequote\" }],\n      [\"~?'\", { token: \"string\", next: \"@stringendquote\" }]\n    ],\n    stringenddoublequote: [\n      [\"\\\\\\\\.\", \"string\"],\n      ['\"', { token: \"string\", next: \"@pop\" }],\n      [/[^\\\\\"]+/, \"string\"],\n      [\".\", \"string\"]\n    ],\n    stringendquote: [\n      [\"\\\\\\\\.\", \"string\"],\n      [\"'\", { token: \"string\", next: \"@pop\" }],\n      [/[^\\\\']+/, \"string\"],\n      [\".\", \"string\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"]},"metadata":{},"sourceType":"module"}