{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { compareBy, findMaxBy, numberComparator } from '../../../../base/common/arrays.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { SnippetSession } from '../../snippet/browser/snippetSession.js';\nimport { SuggestController } from '../../suggest/browser/suggestController.js';\nimport { minimizeInlineCompletion } from './inlineCompletionsModel.js';\nimport { normalizedInlineCompletionsEquals } from './inlineCompletionToGhostText.js';\nexport class SuggestWidgetInlineCompletionProvider extends Disposable {\n  constructor(editor, suggestControllerPreselector) {\n    super();\n    this.editor = editor;\n    this.suggestControllerPreselector = suggestControllerPreselector;\n    this.isSuggestWidgetVisible = false;\n    this.isShiftKeyPressed = false;\n    this._isActive = false;\n    this._currentSuggestItemInfo = undefined;\n    this.onDidChangeEmitter = new Emitter();\n    this.onDidChange = this.onDidChangeEmitter.event; // This delay fixes a suggest widget issue when typing \".\" immediately restarts the suggestion session.\n\n    this.setInactiveDelayed = this._register(new RunOnceScheduler(() => {\n      if (!this.isSuggestWidgetVisible) {\n        if (this._isActive) {\n          this._isActive = false;\n          this.onDidChangeEmitter.fire();\n        }\n      }\n    }, 100)); // See the command acceptAlternativeSelectedSuggestion that is bound to shift+tab\n\n    this._register(editor.onKeyDown(e => {\n      if (e.shiftKey && !this.isShiftKeyPressed) {\n        this.isShiftKeyPressed = true;\n        this.update(this._isActive);\n      }\n    }));\n\n    this._register(editor.onKeyUp(e => {\n      if (e.shiftKey && this.isShiftKeyPressed) {\n        this.isShiftKeyPressed = false;\n        this.update(this._isActive);\n      }\n    }));\n\n    const suggestController = SuggestController.get(this.editor);\n\n    if (suggestController) {\n      this._register(suggestController.registerSelector({\n        priority: 100,\n        select: (model, pos, suggestItems) => {\n          const textModel = this.editor.getModel();\n          const normalizedItemToPreselect = minimizeInlineCompletion(textModel, this.suggestControllerPreselector());\n\n          if (!normalizedItemToPreselect) {\n            return -1;\n          }\n\n          const position = Position.lift(pos);\n          const candidates = suggestItems.map((suggestItem, index) => {\n            const inlineSuggestItem = suggestionToSuggestItemInfo(suggestController, position, suggestItem, this.isShiftKeyPressed);\n            const normalizedSuggestItem = minimizeInlineCompletion(textModel, inlineSuggestItem === null || inlineSuggestItem === void 0 ? void 0 : inlineSuggestItem.normalizedInlineCompletion);\n\n            if (!normalizedSuggestItem) {\n              return undefined;\n            }\n\n            const valid = rangeStartsWith(normalizedItemToPreselect.range, normalizedSuggestItem.range) && normalizedItemToPreselect.text.startsWith(normalizedSuggestItem.text);\n            return {\n              index,\n              valid,\n              prefixLength: normalizedSuggestItem.text.length,\n              suggestItem\n            };\n          }).filter(item => item && item.valid);\n          const result = findMaxBy(candidates, compareBy(s => s.prefixLength, numberComparator));\n          return result ? result.index : -1;\n        }\n      }));\n\n      let isBoundToSuggestWidget = false;\n\n      const bindToSuggestWidget = () => {\n        if (isBoundToSuggestWidget) {\n          return;\n        }\n\n        isBoundToSuggestWidget = true;\n\n        this._register(suggestController.widget.value.onDidShow(() => {\n          this.isSuggestWidgetVisible = true;\n          this.update(true);\n        }));\n\n        this._register(suggestController.widget.value.onDidHide(() => {\n          this.isSuggestWidgetVisible = false;\n          this.setInactiveDelayed.schedule();\n          this.update(this._isActive);\n        }));\n\n        this._register(suggestController.widget.value.onDidFocus(() => {\n          this.isSuggestWidgetVisible = true;\n          this.update(true);\n        }));\n      };\n\n      this._register(Event.once(suggestController.model.onDidTrigger)(e => {\n        bindToSuggestWidget();\n      }));\n    }\n\n    this.update(this._isActive);\n  }\n  /**\n   * Returns undefined if the suggest widget is not active.\n  */\n\n\n  get state() {\n    if (!this._isActive) {\n      return undefined;\n    }\n\n    return {\n      selectedItem: this._currentSuggestItemInfo\n    };\n  }\n\n  update(newActive) {\n    const newInlineCompletion = this.getSuggestItemInfo();\n    let shouldFire = false;\n\n    if (!suggestItemInfoEquals(this._currentSuggestItemInfo, newInlineCompletion)) {\n      this._currentSuggestItemInfo = newInlineCompletion;\n      shouldFire = true;\n    }\n\n    if (this._isActive !== newActive) {\n      this._isActive = newActive;\n      shouldFire = true;\n    }\n\n    if (shouldFire) {\n      this.onDidChangeEmitter.fire();\n    }\n  }\n\n  getSuggestItemInfo() {\n    const suggestController = SuggestController.get(this.editor);\n\n    if (!suggestController) {\n      return undefined;\n    }\n\n    if (!this.isSuggestWidgetVisible) {\n      return undefined;\n    }\n\n    const focusedItem = suggestController.widget.value.getFocusedItem();\n\n    if (!focusedItem) {\n      return undefined;\n    } // TODO: item.isResolved\n\n\n    return suggestionToSuggestItemInfo(suggestController, this.editor.getPosition(), focusedItem.item, this.isShiftKeyPressed);\n  }\n\n  stopForceRenderingAbove() {\n    const suggestController = SuggestController.get(this.editor);\n\n    if (suggestController) {\n      suggestController.stopForceRenderingAbove();\n    }\n  }\n\n  forceRenderingAbove() {\n    const suggestController = SuggestController.get(this.editor);\n\n    if (suggestController) {\n      suggestController.forceRenderingAbove();\n    }\n  }\n\n}\nexport function rangeStartsWith(rangeToTest, prefix) {\n  return prefix.startLineNumber === rangeToTest.startLineNumber && prefix.startColumn === rangeToTest.startColumn && (prefix.endLineNumber < rangeToTest.endLineNumber || prefix.endLineNumber === rangeToTest.endLineNumber && prefix.endColumn <= rangeToTest.endColumn);\n}\n\nfunction suggestItemInfoEquals(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!a || !b) {\n    return false;\n  }\n\n  return a.completionItemKind === b.completionItemKind && a.isSnippetText === b.isSnippetText && normalizedInlineCompletionsEquals(a.normalizedInlineCompletion, b.normalizedInlineCompletion);\n}\n\nfunction suggestionToSuggestItemInfo(suggestController, position, item, toggleMode) {\n  // additionalTextEdits might not be resolved here, this could be problematic.\n  if (Array.isArray(item.completion.additionalTextEdits) && item.completion.additionalTextEdits.length > 0) {\n    // cannot represent additional text edits\n    return {\n      completionItemKind: item.completion.kind,\n      isSnippetText: false,\n      normalizedInlineCompletion: {\n        // Dummy element, so that space is reserved, but no text is shown\n        range: Range.fromPositions(position, position),\n        text: ''\n      }\n    };\n  }\n\n  let {\n    insertText\n  } = item.completion;\n  let isSnippetText = false;\n\n  if (item.completion.insertTextRules & 4\n  /* InsertAsSnippet */\n  ) {\n    const snippet = new SnippetParser().parse(insertText);\n    const model = suggestController.editor.getModel(); // Ignore snippets that are too large.\n    // Adjust whitespace is expensive for them.\n\n    if (snippet.children.length > 100) {\n      return undefined;\n    }\n\n    SnippetSession.adjustWhitespace(model, position, snippet, true, true);\n    insertText = snippet.toString();\n    isSnippetText = true;\n  }\n\n  const info = suggestController.getOverwriteInfo(item, toggleMode);\n  return {\n    isSnippetText,\n    completionItemKind: item.completion.kind,\n    normalizedInlineCompletion: {\n      text: insertText,\n      range: Range.fromPositions(position.delta(0, -info.overwriteBefore), position.delta(0, Math.max(info.overwriteAfter, 0)))\n    }\n  };\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/suggestWidgetInlineCompletionProvider.js"],"names":["compareBy","findMaxBy","numberComparator","RunOnceScheduler","Emitter","Event","Disposable","Position","Range","SnippetParser","SnippetSession","SuggestController","minimizeInlineCompletion","normalizedInlineCompletionsEquals","SuggestWidgetInlineCompletionProvider","constructor","editor","suggestControllerPreselector","isSuggestWidgetVisible","isShiftKeyPressed","_isActive","_currentSuggestItemInfo","undefined","onDidChangeEmitter","onDidChange","event","setInactiveDelayed","_register","fire","onKeyDown","e","shiftKey","update","onKeyUp","suggestController","get","registerSelector","priority","select","model","pos","suggestItems","textModel","getModel","normalizedItemToPreselect","position","lift","candidates","map","suggestItem","index","inlineSuggestItem","suggestionToSuggestItemInfo","normalizedSuggestItem","normalizedInlineCompletion","valid","rangeStartsWith","range","text","startsWith","prefixLength","length","filter","item","result","s","isBoundToSuggestWidget","bindToSuggestWidget","widget","value","onDidShow","onDidHide","schedule","onDidFocus","once","onDidTrigger","state","selectedItem","newActive","newInlineCompletion","getSuggestItemInfo","shouldFire","suggestItemInfoEquals","focusedItem","getFocusedItem","getPosition","stopForceRenderingAbove","forceRenderingAbove","rangeToTest","prefix","startLineNumber","startColumn","endLineNumber","endColumn","a","b","completionItemKind","isSnippetText","toggleMode","Array","isArray","completion","additionalTextEdits","kind","fromPositions","insertText","insertTextRules","snippet","parse","children","adjustWhitespace","toString","info","getOverwriteInfo","delta","overwriteBefore","Math","max","overwriteAfter"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { compareBy, findMaxBy, numberComparator } from '../../../../base/common/arrays.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { SnippetSession } from '../../snippet/browser/snippetSession.js';\nimport { SuggestController } from '../../suggest/browser/suggestController.js';\nimport { minimizeInlineCompletion } from './inlineCompletionsModel.js';\nimport { normalizedInlineCompletionsEquals } from './inlineCompletionToGhostText.js';\nexport class SuggestWidgetInlineCompletionProvider extends Disposable {\n    constructor(editor, suggestControllerPreselector) {\n        super();\n        this.editor = editor;\n        this.suggestControllerPreselector = suggestControllerPreselector;\n        this.isSuggestWidgetVisible = false;\n        this.isShiftKeyPressed = false;\n        this._isActive = false;\n        this._currentSuggestItemInfo = undefined;\n        this.onDidChangeEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEmitter.event;\n        // This delay fixes a suggest widget issue when typing \".\" immediately restarts the suggestion session.\n        this.setInactiveDelayed = this._register(new RunOnceScheduler(() => {\n            if (!this.isSuggestWidgetVisible) {\n                if (this._isActive) {\n                    this._isActive = false;\n                    this.onDidChangeEmitter.fire();\n                }\n            }\n        }, 100));\n        // See the command acceptAlternativeSelectedSuggestion that is bound to shift+tab\n        this._register(editor.onKeyDown(e => {\n            if (e.shiftKey && !this.isShiftKeyPressed) {\n                this.isShiftKeyPressed = true;\n                this.update(this._isActive);\n            }\n        }));\n        this._register(editor.onKeyUp(e => {\n            if (e.shiftKey && this.isShiftKeyPressed) {\n                this.isShiftKeyPressed = false;\n                this.update(this._isActive);\n            }\n        }));\n        const suggestController = SuggestController.get(this.editor);\n        if (suggestController) {\n            this._register(suggestController.registerSelector({\n                priority: 100,\n                select: (model, pos, suggestItems) => {\n                    const textModel = this.editor.getModel();\n                    const normalizedItemToPreselect = minimizeInlineCompletion(textModel, this.suggestControllerPreselector());\n                    if (!normalizedItemToPreselect) {\n                        return -1;\n                    }\n                    const position = Position.lift(pos);\n                    const candidates = suggestItems\n                        .map((suggestItem, index) => {\n                        const inlineSuggestItem = suggestionToSuggestItemInfo(suggestController, position, suggestItem, this.isShiftKeyPressed);\n                        const normalizedSuggestItem = minimizeInlineCompletion(textModel, inlineSuggestItem === null || inlineSuggestItem === void 0 ? void 0 : inlineSuggestItem.normalizedInlineCompletion);\n                        if (!normalizedSuggestItem) {\n                            return undefined;\n                        }\n                        const valid = rangeStartsWith(normalizedItemToPreselect.range, normalizedSuggestItem.range) &&\n                            normalizedItemToPreselect.text.startsWith(normalizedSuggestItem.text);\n                        return { index, valid, prefixLength: normalizedSuggestItem.text.length, suggestItem };\n                    })\n                        .filter(item => item && item.valid);\n                    const result = findMaxBy(candidates, compareBy(s => s.prefixLength, numberComparator));\n                    return result ? result.index : -1;\n                }\n            }));\n            let isBoundToSuggestWidget = false;\n            const bindToSuggestWidget = () => {\n                if (isBoundToSuggestWidget) {\n                    return;\n                }\n                isBoundToSuggestWidget = true;\n                this._register(suggestController.widget.value.onDidShow(() => {\n                    this.isSuggestWidgetVisible = true;\n                    this.update(true);\n                }));\n                this._register(suggestController.widget.value.onDidHide(() => {\n                    this.isSuggestWidgetVisible = false;\n                    this.setInactiveDelayed.schedule();\n                    this.update(this._isActive);\n                }));\n                this._register(suggestController.widget.value.onDidFocus(() => {\n                    this.isSuggestWidgetVisible = true;\n                    this.update(true);\n                }));\n            };\n            this._register(Event.once(suggestController.model.onDidTrigger)(e => {\n                bindToSuggestWidget();\n            }));\n        }\n        this.update(this._isActive);\n    }\n    /**\n     * Returns undefined if the suggest widget is not active.\n    */\n    get state() {\n        if (!this._isActive) {\n            return undefined;\n        }\n        return { selectedItem: this._currentSuggestItemInfo };\n    }\n    update(newActive) {\n        const newInlineCompletion = this.getSuggestItemInfo();\n        let shouldFire = false;\n        if (!suggestItemInfoEquals(this._currentSuggestItemInfo, newInlineCompletion)) {\n            this._currentSuggestItemInfo = newInlineCompletion;\n            shouldFire = true;\n        }\n        if (this._isActive !== newActive) {\n            this._isActive = newActive;\n            shouldFire = true;\n        }\n        if (shouldFire) {\n            this.onDidChangeEmitter.fire();\n        }\n    }\n    getSuggestItemInfo() {\n        const suggestController = SuggestController.get(this.editor);\n        if (!suggestController) {\n            return undefined;\n        }\n        if (!this.isSuggestWidgetVisible) {\n            return undefined;\n        }\n        const focusedItem = suggestController.widget.value.getFocusedItem();\n        if (!focusedItem) {\n            return undefined;\n        }\n        // TODO: item.isResolved\n        return suggestionToSuggestItemInfo(suggestController, this.editor.getPosition(), focusedItem.item, this.isShiftKeyPressed);\n    }\n    stopForceRenderingAbove() {\n        const suggestController = SuggestController.get(this.editor);\n        if (suggestController) {\n            suggestController.stopForceRenderingAbove();\n        }\n    }\n    forceRenderingAbove() {\n        const suggestController = SuggestController.get(this.editor);\n        if (suggestController) {\n            suggestController.forceRenderingAbove();\n        }\n    }\n}\nexport function rangeStartsWith(rangeToTest, prefix) {\n    return (prefix.startLineNumber === rangeToTest.startLineNumber &&\n        prefix.startColumn === rangeToTest.startColumn &&\n        (prefix.endLineNumber < rangeToTest.endLineNumber ||\n            (prefix.endLineNumber === rangeToTest.endLineNumber &&\n                prefix.endColumn <= rangeToTest.endColumn)));\n}\nfunction suggestItemInfoEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (!a || !b) {\n        return false;\n    }\n    return a.completionItemKind === b.completionItemKind &&\n        a.isSnippetText === b.isSnippetText &&\n        normalizedInlineCompletionsEquals(a.normalizedInlineCompletion, b.normalizedInlineCompletion);\n}\nfunction suggestionToSuggestItemInfo(suggestController, position, item, toggleMode) {\n    // additionalTextEdits might not be resolved here, this could be problematic.\n    if (Array.isArray(item.completion.additionalTextEdits) && item.completion.additionalTextEdits.length > 0) {\n        // cannot represent additional text edits\n        return {\n            completionItemKind: item.completion.kind,\n            isSnippetText: false,\n            normalizedInlineCompletion: {\n                // Dummy element, so that space is reserved, but no text is shown\n                range: Range.fromPositions(position, position),\n                text: ''\n            },\n        };\n    }\n    let { insertText } = item.completion;\n    let isSnippetText = false;\n    if (item.completion.insertTextRules & 4 /* InsertAsSnippet */) {\n        const snippet = new SnippetParser().parse(insertText);\n        const model = suggestController.editor.getModel();\n        // Ignore snippets that are too large.\n        // Adjust whitespace is expensive for them.\n        if (snippet.children.length > 100) {\n            return undefined;\n        }\n        SnippetSession.adjustWhitespace(model, position, snippet, true, true);\n        insertText = snippet.toString();\n        isSnippetText = true;\n    }\n    const info = suggestController.getOverwriteInfo(item, toggleMode);\n    return {\n        isSnippetText,\n        completionItemKind: item.completion.kind,\n        normalizedInlineCompletion: {\n            text: insertText,\n            range: Range.fromPositions(position.delta(0, -info.overwriteBefore), position.delta(0, Math.max(info.overwriteAfter, 0))),\n        }\n    };\n}\n"]},"metadata":{},"sourceType":"module"}