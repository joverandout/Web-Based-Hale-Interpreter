{"ast":null,"code":"/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n// src/basic-languages/yaml/yaml.ts\nvar conf = {\n  comments: {\n    lineComment: \"#\"\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }],\n  surroundingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }],\n  folding: {\n    offSide: true\n  }\n};\nvar language = {\n  tokenPostfix: \".yaml\",\n  brackets: [{\n    token: \"delimiter.bracket\",\n    open: \"{\",\n    close: \"}\"\n  }, {\n    token: \"delimiter.square\",\n    open: \"[\",\n    close: \"]\"\n  }],\n  keywords: [\"true\", \"True\", \"TRUE\", \"false\", \"False\", \"FALSE\", \"null\", \"Null\", \"Null\", \"~\"],\n  numberInteger: /(?:0|[+-]?[0-9]+)/,\n  numberFloat: /(?:0|[+-]?[0-9]+)(?:\\.[0-9]+)?(?:e[-+][1-9][0-9]*)?/,\n  numberOctal: /0o[0-7]+/,\n  numberHex: /0x[0-9a-fA-F]+/,\n  numberInfinity: /[+-]?\\.(?:inf|Inf|INF)/,\n  numberNaN: /\\.(?:nan|Nan|NAN)/,\n  numberDate: /\\d{4}-\\d\\d-\\d\\d([Tt ]\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(( ?[+-]\\d\\d?(:\\d\\d)?)|Z)?)?/,\n  escapes: /\\\\(?:[btnfr\\\\\"']|[0-7][0-7]?|[0-3][0-7]{2})/,\n  tokenizer: {\n    root: [{\n      include: \"@whitespace\"\n    }, {\n      include: \"@comment\"\n    }, [/%[^ ]+.*$/, \"meta.directive\"], [/---/, \"operators.directivesEnd\"], [/\\.{3}/, \"operators.documentEnd\"], [/[-?:](?= )/, \"operators\"], {\n      include: \"@anchor\"\n    }, {\n      include: \"@tagHandle\"\n    }, {\n      include: \"@flowCollections\"\n    }, {\n      include: \"@blockStyle\"\n    }, [/@numberInteger(?![ \\t]*\\S+)/, \"number\"], [/@numberFloat(?![ \\t]*\\S+)/, \"number.float\"], [/@numberOctal(?![ \\t]*\\S+)/, \"number.octal\"], [/@numberHex(?![ \\t]*\\S+)/, \"number.hex\"], [/@numberInfinity(?![ \\t]*\\S+)/, \"number.infinity\"], [/@numberNaN(?![ \\t]*\\S+)/, \"number.nan\"], [/@numberDate(?![ \\t]*\\S+)/, \"number.date\"], [/(\".*?\"|'.*?'|.*?)([ \\t]*)(:)( |$)/, [\"type\", \"white\", \"operators\", \"white\"]], {\n      include: \"@flowScalars\"\n    }, [/[^#]+/, {\n      cases: {\n        \"@keywords\": \"keyword\",\n        \"@default\": \"string\"\n      }\n    }]],\n    object: [{\n      include: \"@whitespace\"\n    }, {\n      include: \"@comment\"\n    }, [/\\}/, \"@brackets\", \"@pop\"], [/,/, \"delimiter.comma\"], [/:(?= )/, \"operators\"], [/(?:\".*?\"|'.*?'|[^,\\{\\[]+?)(?=: )/, \"type\"], {\n      include: \"@flowCollections\"\n    }, {\n      include: \"@flowScalars\"\n    }, {\n      include: \"@tagHandle\"\n    }, {\n      include: \"@anchor\"\n    }, {\n      include: \"@flowNumber\"\n    }, [/[^\\},]+/, {\n      cases: {\n        \"@keywords\": \"keyword\",\n        \"@default\": \"string\"\n      }\n    }]],\n    array: [{\n      include: \"@whitespace\"\n    }, {\n      include: \"@comment\"\n    }, [/\\]/, \"@brackets\", \"@pop\"], [/,/, \"delimiter.comma\"], {\n      include: \"@flowCollections\"\n    }, {\n      include: \"@flowScalars\"\n    }, {\n      include: \"@tagHandle\"\n    }, {\n      include: \"@anchor\"\n    }, {\n      include: \"@flowNumber\"\n    }, [/[^\\],]+/, {\n      cases: {\n        \"@keywords\": \"keyword\",\n        \"@default\": \"string\"\n      }\n    }]],\n    multiString: [[/^( +).+$/, \"string\", \"@multiStringContinued.$1\"]],\n    multiStringContinued: [[/^( *).+$/, {\n      cases: {\n        \"$1==$S2\": \"string\",\n        \"@default\": {\n          token: \"@rematch\",\n          next: \"@popall\"\n        }\n      }\n    }]],\n    whitespace: [[/[ \\t\\r\\n]+/, \"white\"]],\n    comment: [[/#.*$/, \"comment\"]],\n    flowCollections: [[/\\[/, \"@brackets\", \"@array\"], [/\\{/, \"@brackets\", \"@object\"]],\n    flowScalars: [[/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"], [/'([^'\\\\]|\\\\.)*$/, \"string.invalid\"], [/'[^']*'/, \"string\"], [/\"/, \"string\", \"@doubleQuotedString\"]],\n    doubleQuotedString: [[/[^\\\\\"]+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/\"/, \"string\", \"@pop\"]],\n    blockStyle: [[/[>|][0-9]*[+-]?$/, \"operators\", \"@multiString\"]],\n    flowNumber: [[/@numberInteger(?=[ \\t]*[,\\]\\}])/, \"number\"], [/@numberFloat(?=[ \\t]*[,\\]\\}])/, \"number.float\"], [/@numberOctal(?=[ \\t]*[,\\]\\}])/, \"number.octal\"], [/@numberHex(?=[ \\t]*[,\\]\\}])/, \"number.hex\"], [/@numberInfinity(?=[ \\t]*[,\\]\\}])/, \"number.infinity\"], [/@numberNaN(?=[ \\t]*[,\\]\\}])/, \"number.nan\"], [/@numberDate(?=[ \\t]*[,\\]\\}])/, \"number.date\"]],\n    tagHandle: [[/\\![^ ]*/, \"tag\"]],\n    anchor: [[/[&*][^ ]+/, \"namespace\"]]\n  }\n};\nexport { conf, language };","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/basic-languages/yaml/yaml.js"],"names":["conf","comments","lineComment","brackets","autoClosingPairs","open","close","surroundingPairs","folding","offSide","language","tokenPostfix","token","keywords","numberInteger","numberFloat","numberOctal","numberHex","numberInfinity","numberNaN","numberDate","escapes","tokenizer","root","include","cases","object","array","multiString","multiStringContinued","next","whitespace","comment","flowCollections","flowScalars","doubleQuotedString","blockStyle","flowNumber","tagHandle","anchor"],"mappings":"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","sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/yaml/yaml.ts\nvar conf = {\n  comments: {\n    lineComment: \"#\"\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  folding: {\n    offSide: true\n  }\n};\nvar language = {\n  tokenPostfix: \".yaml\",\n  brackets: [\n    { token: \"delimiter.bracket\", open: \"{\", close: \"}\" },\n    { token: \"delimiter.square\", open: \"[\", close: \"]\" }\n  ],\n  keywords: [\"true\", \"True\", \"TRUE\", \"false\", \"False\", \"FALSE\", \"null\", \"Null\", \"Null\", \"~\"],\n  numberInteger: /(?:0|[+-]?[0-9]+)/,\n  numberFloat: /(?:0|[+-]?[0-9]+)(?:\\.[0-9]+)?(?:e[-+][1-9][0-9]*)?/,\n  numberOctal: /0o[0-7]+/,\n  numberHex: /0x[0-9a-fA-F]+/,\n  numberInfinity: /[+-]?\\.(?:inf|Inf|INF)/,\n  numberNaN: /\\.(?:nan|Nan|NAN)/,\n  numberDate: /\\d{4}-\\d\\d-\\d\\d([Tt ]\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(( ?[+-]\\d\\d?(:\\d\\d)?)|Z)?)?/,\n  escapes: /\\\\(?:[btnfr\\\\\"']|[0-7][0-7]?|[0-3][0-7]{2})/,\n  tokenizer: {\n    root: [\n      { include: \"@whitespace\" },\n      { include: \"@comment\" },\n      [/%[^ ]+.*$/, \"meta.directive\"],\n      [/---/, \"operators.directivesEnd\"],\n      [/\\.{3}/, \"operators.documentEnd\"],\n      [/[-?:](?= )/, \"operators\"],\n      { include: \"@anchor\" },\n      { include: \"@tagHandle\" },\n      { include: \"@flowCollections\" },\n      { include: \"@blockStyle\" },\n      [/@numberInteger(?![ \\t]*\\S+)/, \"number\"],\n      [/@numberFloat(?![ \\t]*\\S+)/, \"number.float\"],\n      [/@numberOctal(?![ \\t]*\\S+)/, \"number.octal\"],\n      [/@numberHex(?![ \\t]*\\S+)/, \"number.hex\"],\n      [/@numberInfinity(?![ \\t]*\\S+)/, \"number.infinity\"],\n      [/@numberNaN(?![ \\t]*\\S+)/, \"number.nan\"],\n      [/@numberDate(?![ \\t]*\\S+)/, \"number.date\"],\n      [/(\".*?\"|'.*?'|.*?)([ \\t]*)(:)( |$)/, [\"type\", \"white\", \"operators\", \"white\"]],\n      { include: \"@flowScalars\" },\n      [\n        /[^#]+/,\n        {\n          cases: {\n            \"@keywords\": \"keyword\",\n            \"@default\": \"string\"\n          }\n        }\n      ]\n    ],\n    object: [\n      { include: \"@whitespace\" },\n      { include: \"@comment\" },\n      [/\\}/, \"@brackets\", \"@pop\"],\n      [/,/, \"delimiter.comma\"],\n      [/:(?= )/, \"operators\"],\n      [/(?:\".*?\"|'.*?'|[^,\\{\\[]+?)(?=: )/, \"type\"],\n      { include: \"@flowCollections\" },\n      { include: \"@flowScalars\" },\n      { include: \"@tagHandle\" },\n      { include: \"@anchor\" },\n      { include: \"@flowNumber\" },\n      [\n        /[^\\},]+/,\n        {\n          cases: {\n            \"@keywords\": \"keyword\",\n            \"@default\": \"string\"\n          }\n        }\n      ]\n    ],\n    array: [\n      { include: \"@whitespace\" },\n      { include: \"@comment\" },\n      [/\\]/, \"@brackets\", \"@pop\"],\n      [/,/, \"delimiter.comma\"],\n      { include: \"@flowCollections\" },\n      { include: \"@flowScalars\" },\n      { include: \"@tagHandle\" },\n      { include: \"@anchor\" },\n      { include: \"@flowNumber\" },\n      [\n        /[^\\],]+/,\n        {\n          cases: {\n            \"@keywords\": \"keyword\",\n            \"@default\": \"string\"\n          }\n        }\n      ]\n    ],\n    multiString: [[/^( +).+$/, \"string\", \"@multiStringContinued.$1\"]],\n    multiStringContinued: [\n      [\n        /^( *).+$/,\n        {\n          cases: {\n            \"$1==$S2\": \"string\",\n            \"@default\": { token: \"@rematch\", next: \"@popall\" }\n          }\n        }\n      ]\n    ],\n    whitespace: [[/[ \\t\\r\\n]+/, \"white\"]],\n    comment: [[/#.*$/, \"comment\"]],\n    flowCollections: [\n      [/\\[/, \"@brackets\", \"@array\"],\n      [/\\{/, \"@brackets\", \"@object\"]\n    ],\n    flowScalars: [\n      [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"],\n      [/'([^'\\\\]|\\\\.)*$/, \"string.invalid\"],\n      [/'[^']*'/, \"string\"],\n      [/\"/, \"string\", \"@doubleQuotedString\"]\n    ],\n    doubleQuotedString: [\n      [/[^\\\\\"]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [/\"/, \"string\", \"@pop\"]\n    ],\n    blockStyle: [[/[>|][0-9]*[+-]?$/, \"operators\", \"@multiString\"]],\n    flowNumber: [\n      [/@numberInteger(?=[ \\t]*[,\\]\\}])/, \"number\"],\n      [/@numberFloat(?=[ \\t]*[,\\]\\}])/, \"number.float\"],\n      [/@numberOctal(?=[ \\t]*[,\\]\\}])/, \"number.octal\"],\n      [/@numberHex(?=[ \\t]*[,\\]\\}])/, \"number.hex\"],\n      [/@numberInfinity(?=[ \\t]*[,\\]\\}])/, \"number.infinity\"],\n      [/@numberNaN(?=[ \\t]*[,\\]\\}])/, \"number.nan\"],\n      [/@numberDate(?=[ \\t]*[,\\]\\}])/, \"number.date\"]\n    ],\n    tagHandle: [[/\\![^ ]*/, \"tag\"]],\n    anchor: [[/[&*][^ ]+/, \"namespace\"]]\n  }\n};\nexport {\n  conf,\n  language\n};\n"]},"metadata":{},"sourceType":"module"}