{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './indentGuides.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { editorActiveIndentGuides, editorBracketHighlightingForeground1, editorBracketHighlightingForeground2, editorBracketHighlightingForeground3, editorBracketHighlightingForeground4, editorBracketHighlightingForeground5, editorBracketHighlightingForeground6, editorBracketPairGuideActiveBackground1, editorBracketPairGuideActiveBackground2, editorBracketPairGuideActiveBackground3, editorBracketPairGuideActiveBackground4, editorBracketPairGuideActiveBackground5, editorBracketPairGuideActiveBackground6, editorBracketPairGuideBackground1, editorBracketPairGuideBackground2, editorBracketPairGuideBackground3, editorBracketPairGuideBackground4, editorBracketPairGuideBackground5, editorBracketPairGuideBackground6, editorIndentGuides } from '../../../common/core/editorColorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ArrayQueue } from '../../../../base/common/arrays.js';\nimport { isDefined } from '../../../../base/common/types.js';\nimport { BracketPairGuidesClassNames } from '../../../common/model/guidesTextModelPart.js';\nimport { IndentGuide, HorizontalGuidesState } from '../../../common/textModelGuides.js';\nexport class IndentGuidesOverlay extends DynamicViewOverlay {\n  constructor(context) {\n    super();\n    this._context = context;\n    this._primaryPosition = null;\n    const options = this._context.configuration.options;\n    const wrappingInfo = options.get(132\n    /* wrappingInfo */\n    );\n    const fontInfo = options.get(44\n    /* fontInfo */\n    );\n    this._lineHeight = options.get(59\n    /* lineHeight */\n    );\n    this._spaceWidth = fontInfo.spaceWidth;\n    this._maxIndentLeft = wrappingInfo.wrappingColumn === -1 ? -1 : wrappingInfo.wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth;\n    this._bracketPairGuideOptions = options.get(13\n    /* guides */\n    );\n    this._renderResult = null;\n\n    this._context.addEventHandler(this);\n  }\n\n  dispose() {\n    this._context.removeEventHandler(this);\n\n    this._renderResult = null;\n    super.dispose();\n  } // --- begin event handlers\n\n\n  onConfigurationChanged(e) {\n    const options = this._context.configuration.options;\n    const wrappingInfo = options.get(132\n    /* wrappingInfo */\n    );\n    const fontInfo = options.get(44\n    /* fontInfo */\n    );\n    this._lineHeight = options.get(59\n    /* lineHeight */\n    );\n    this._spaceWidth = fontInfo.spaceWidth;\n    this._maxIndentLeft = wrappingInfo.wrappingColumn === -1 ? -1 : wrappingInfo.wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth;\n    this._bracketPairGuideOptions = options.get(13\n    /* guides */\n    );\n    return true;\n  }\n\n  onCursorStateChanged(e) {\n    var _a;\n\n    const selection = e.selections[0];\n    const newPosition = selection.getPosition();\n\n    if (!((_a = this._primaryPosition) === null || _a === void 0 ? void 0 : _a.equals(newPosition))) {\n      this._primaryPosition = newPosition;\n      return true;\n    }\n\n    return false;\n  }\n\n  onDecorationsChanged(e) {\n    // true for inline decorations\n    return true;\n  }\n\n  onFlushed(e) {\n    return true;\n  }\n\n  onLinesChanged(e) {\n    return true;\n  }\n\n  onLinesDeleted(e) {\n    return true;\n  }\n\n  onLinesInserted(e) {\n    return true;\n  }\n\n  onScrollChanged(e) {\n    return e.scrollTopChanged; // || e.scrollWidthChanged;\n  }\n\n  onZonesChanged(e) {\n    return true;\n  }\n\n  onLanguageConfigurationChanged(e) {\n    return true;\n  } // --- end event handlers\n\n\n  prepareRender(ctx) {\n    var _a, _b, _c, _d;\n\n    if (!this._bracketPairGuideOptions.indentation && this._bracketPairGuideOptions.bracketPairs === false) {\n      this._renderResult = null;\n      return;\n    }\n\n    const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n    const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n    const scrollWidth = ctx.scrollWidth;\n    const lineHeight = this._lineHeight;\n    const activeCursorPosition = this._primaryPosition;\n    const indents = this.getGuidesByLine(visibleStartLineNumber, visibleEndLineNumber, activeCursorPosition);\n    const output = [];\n\n    for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n      const lineIndex = lineNumber - visibleStartLineNumber;\n      const indent = indents[lineIndex];\n      let result = '';\n      const leftOffset = (_b = (_a = ctx.visibleRangeForPosition(new Position(lineNumber, 1))) === null || _a === void 0 ? void 0 : _a.left) !== null && _b !== void 0 ? _b : 0;\n\n      for (const guide of indent) {\n        const left = leftOffset + (guide.visibleColumn - 1) * this._spaceWidth;\n\n        if (left > scrollWidth || this._maxIndentLeft > 0 && left > this._maxIndentLeft) {\n          break;\n        }\n\n        const className = guide.horizontalLine ? guide.horizontalLine.top ? 'horizontal-top' : 'horizontal-bottom' : 'vertical';\n        const width = guide.horizontalLine ? ((_d = (_c = ctx.visibleRangeForPosition(new Position(lineNumber, guide.horizontalLine.endColumn))) === null || _c === void 0 ? void 0 : _c.left) !== null && _d !== void 0 ? _d : left + this._spaceWidth) - left : this._spaceWidth;\n        result += `<div class=\"core-guide ${guide.className} ${className}\" style=\"left:${left}px;height:${lineHeight}px;width:${width}px\"></div>`;\n      }\n\n      output[lineIndex] = result;\n    }\n\n    this._renderResult = output;\n  }\n\n  getGuidesByLine(visibleStartLineNumber, visibleEndLineNumber, activeCursorPosition) {\n    const bracketGuides = this._bracketPairGuideOptions.bracketPairs !== false ? this._context.model.getBracketGuidesInRangeByLine(visibleStartLineNumber, visibleEndLineNumber, activeCursorPosition, {\n      highlightActive: this._bracketPairGuideOptions.highlightActiveBracketPair,\n      horizontalGuides: this._bracketPairGuideOptions.bracketPairsHorizontal === true ? HorizontalGuidesState.Enabled : this._bracketPairGuideOptions.bracketPairsHorizontal === 'active' ? HorizontalGuidesState.EnabledForActive : HorizontalGuidesState.Disabled,\n      includeInactive: this._bracketPairGuideOptions.bracketPairs === true\n    }) : null;\n    const indentGuides = this._bracketPairGuideOptions.indentation ? this._context.model.getLinesIndentGuides(visibleStartLineNumber, visibleEndLineNumber) : null;\n    let activeIndentStartLineNumber = 0;\n    let activeIndentEndLineNumber = 0;\n    let activeIndentLevel = 0;\n\n    if (this._bracketPairGuideOptions.highlightActiveIndentation && activeCursorPosition) {\n      const activeIndentInfo = this._context.model.getActiveIndentGuide(activeCursorPosition.lineNumber, visibleStartLineNumber, visibleEndLineNumber);\n\n      activeIndentStartLineNumber = activeIndentInfo.startLineNumber;\n      activeIndentEndLineNumber = activeIndentInfo.endLineNumber;\n      activeIndentLevel = activeIndentInfo.indent;\n    }\n\n    const {\n      indentSize\n    } = this._context.model.getTextModelOptions();\n\n    const result = [];\n\n    for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n      const lineGuides = new Array();\n      result.push(lineGuides);\n      const bracketGuidesInLine = bracketGuides ? bracketGuides[lineNumber - visibleStartLineNumber] : [];\n      const bracketGuidesInLineQueue = new ArrayQueue(bracketGuidesInLine);\n      const indentGuidesInLine = indentGuides ? indentGuides[lineNumber - visibleStartLineNumber] : [];\n\n      for (let indentLvl = 1; indentLvl <= indentGuidesInLine; indentLvl++) {\n        const indentGuide = (indentLvl - 1) * indentSize + 1;\n        const isActive = // Disable active indent guide if there are bracket guides.\n        bracketGuidesInLine.length === 0 && activeIndentStartLineNumber <= lineNumber && lineNumber <= activeIndentEndLineNumber && indentLvl === activeIndentLevel;\n        lineGuides.push(...(bracketGuidesInLineQueue.takeWhile(g => g.visibleColumn < indentGuide) || []));\n        const peeked = bracketGuidesInLineQueue.peek();\n\n        if (!peeked || peeked.visibleColumn !== indentGuide || peeked.horizontalLine) {\n          lineGuides.push(new IndentGuide(indentGuide, isActive ? 'core-guide-indent-active' : 'core-guide-indent', null));\n        }\n      }\n\n      lineGuides.push(...(bracketGuidesInLineQueue.takeWhile(g => true) || []));\n    }\n\n    return result;\n  }\n\n  render(startLineNumber, lineNumber) {\n    if (!this._renderResult) {\n      return '';\n    }\n\n    const lineIndex = lineNumber - startLineNumber;\n\n    if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n      return '';\n    }\n\n    return this._renderResult[lineIndex];\n  }\n\n}\n\nfunction transparentToUndefined(color) {\n  if (color && color.isTransparent()) {\n    return undefined;\n  }\n\n  return color;\n}\n\nregisterThemingParticipant((theme, collector) => {\n  const editorIndentGuidesColor = theme.getColor(editorIndentGuides);\n\n  if (editorIndentGuidesColor) {\n    collector.addRule(`.monaco-editor .lines-content .core-guide-indent { box-shadow: 1px 0 0 0 ${editorIndentGuidesColor} inset; }`);\n  }\n\n  const editorActiveIndentGuidesColor = theme.getColor(editorActiveIndentGuides) || editorIndentGuidesColor;\n\n  if (editorActiveIndentGuidesColor) {\n    collector.addRule(`.monaco-editor .lines-content .core-guide-indent-active { box-shadow: 1px 0 0 0 ${editorActiveIndentGuidesColor} inset; }`);\n  }\n\n  const colors = [{\n    bracketColor: editorBracketHighlightingForeground1,\n    guideColor: editorBracketPairGuideBackground1,\n    guideColorActive: editorBracketPairGuideActiveBackground1\n  }, {\n    bracketColor: editorBracketHighlightingForeground2,\n    guideColor: editorBracketPairGuideBackground2,\n    guideColorActive: editorBracketPairGuideActiveBackground2\n  }, {\n    bracketColor: editorBracketHighlightingForeground3,\n    guideColor: editorBracketPairGuideBackground3,\n    guideColorActive: editorBracketPairGuideActiveBackground3\n  }, {\n    bracketColor: editorBracketHighlightingForeground4,\n    guideColor: editorBracketPairGuideBackground4,\n    guideColorActive: editorBracketPairGuideActiveBackground4\n  }, {\n    bracketColor: editorBracketHighlightingForeground5,\n    guideColor: editorBracketPairGuideBackground5,\n    guideColorActive: editorBracketPairGuideActiveBackground5\n  }, {\n    bracketColor: editorBracketHighlightingForeground6,\n    guideColor: editorBracketPairGuideBackground6,\n    guideColorActive: editorBracketPairGuideActiveBackground6\n  }];\n  const colorProvider = new BracketPairGuidesClassNames();\n  const colorValues = colors.map(c => {\n    var _a, _b;\n\n    const bracketColor = theme.getColor(c.bracketColor);\n    const guideColor = theme.getColor(c.guideColor);\n    const guideColorActive = theme.getColor(c.guideColorActive);\n    const effectiveGuideColor = transparentToUndefined((_a = transparentToUndefined(guideColor)) !== null && _a !== void 0 ? _a : bracketColor === null || bracketColor === void 0 ? void 0 : bracketColor.transparent(0.3));\n    const effectiveGuideColorActive = transparentToUndefined((_b = transparentToUndefined(guideColorActive)) !== null && _b !== void 0 ? _b : bracketColor);\n\n    if (!effectiveGuideColor || !effectiveGuideColorActive) {\n      return undefined;\n    }\n\n    return {\n      guideColor: effectiveGuideColor,\n      guideColorActive: effectiveGuideColorActive\n    };\n  }).filter(isDefined);\n\n  if (colorValues.length > 0) {\n    for (let level = 0; level < 30; level++) {\n      const colors = colorValues[level % colorValues.length];\n      collector.addRule(`.monaco-editor .${colorProvider.getInlineClassNameOfLevel(level).replace(/ /g, '.')} { --guide-color: ${colors.guideColor}; --guide-color-active: ${colors.guideColorActive}; }`);\n    }\n\n    collector.addRule(`.monaco-editor .vertical { box-shadow: 1px 0 0 0 var(--guide-color) inset; }`);\n    collector.addRule(`.monaco-editor .horizontal-top { border-top: 1px solid var(--guide-color); }`);\n    collector.addRule(`.monaco-editor .horizontal-bottom { border-bottom: 1px solid var(--guide-color); }`);\n    collector.addRule(`.monaco-editor .vertical.${colorProvider.activeClassName} { box-shadow: 1px 0 0 0 var(--guide-color-active) inset; }`);\n    collector.addRule(`.monaco-editor .horizontal-top.${colorProvider.activeClassName} { border-top: 1px solid var(--guide-color-active); }`);\n    collector.addRule(`.monaco-editor .horizontal-bottom.${colorProvider.activeClassName} { border-bottom: 1px solid var(--guide-color-active); }`);\n  }\n});","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/indentGuides/indentGuides.js"],"names":["DynamicViewOverlay","editorActiveIndentGuides","editorBracketHighlightingForeground1","editorBracketHighlightingForeground2","editorBracketHighlightingForeground3","editorBracketHighlightingForeground4","editorBracketHighlightingForeground5","editorBracketHighlightingForeground6","editorBracketPairGuideActiveBackground1","editorBracketPairGuideActiveBackground2","editorBracketPairGuideActiveBackground3","editorBracketPairGuideActiveBackground4","editorBracketPairGuideActiveBackground5","editorBracketPairGuideActiveBackground6","editorBracketPairGuideBackground1","editorBracketPairGuideBackground2","editorBracketPairGuideBackground3","editorBracketPairGuideBackground4","editorBracketPairGuideBackground5","editorBracketPairGuideBackground6","editorIndentGuides","registerThemingParticipant","Position","ArrayQueue","isDefined","BracketPairGuidesClassNames","IndentGuide","HorizontalGuidesState","IndentGuidesOverlay","constructor","context","_context","_primaryPosition","options","configuration","wrappingInfo","get","fontInfo","_lineHeight","_spaceWidth","spaceWidth","_maxIndentLeft","wrappingColumn","typicalHalfwidthCharacterWidth","_bracketPairGuideOptions","_renderResult","addEventHandler","dispose","removeEventHandler","onConfigurationChanged","e","onCursorStateChanged","_a","selection","selections","newPosition","getPosition","equals","onDecorationsChanged","onFlushed","onLinesChanged","onLinesDeleted","onLinesInserted","onScrollChanged","scrollTopChanged","onZonesChanged","onLanguageConfigurationChanged","prepareRender","ctx","_b","_c","_d","indentation","bracketPairs","visibleStartLineNumber","visibleRange","startLineNumber","visibleEndLineNumber","endLineNumber","scrollWidth","lineHeight","activeCursorPosition","indents","getGuidesByLine","output","lineNumber","lineIndex","indent","result","leftOffset","visibleRangeForPosition","left","guide","visibleColumn","className","horizontalLine","top","width","endColumn","bracketGuides","model","getBracketGuidesInRangeByLine","highlightActive","highlightActiveBracketPair","horizontalGuides","bracketPairsHorizontal","Enabled","EnabledForActive","Disabled","includeInactive","indentGuides","getLinesIndentGuides","activeIndentStartLineNumber","activeIndentEndLineNumber","activeIndentLevel","highlightActiveIndentation","activeIndentInfo","getActiveIndentGuide","indentSize","getTextModelOptions","lineGuides","Array","push","bracketGuidesInLine","bracketGuidesInLineQueue","indentGuidesInLine","indentLvl","indentGuide","isActive","length","takeWhile","g","peeked","peek","render","transparentToUndefined","color","isTransparent","undefined","theme","collector","editorIndentGuidesColor","getColor","addRule","editorActiveIndentGuidesColor","colors","bracketColor","guideColor","guideColorActive","colorProvider","colorValues","map","c","effectiveGuideColor","transparent","effectiveGuideColorActive","filter","level","getInlineClassNameOfLevel","replace","activeClassName"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './indentGuides.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { editorActiveIndentGuides, editorBracketHighlightingForeground1, editorBracketHighlightingForeground2, editorBracketHighlightingForeground3, editorBracketHighlightingForeground4, editorBracketHighlightingForeground5, editorBracketHighlightingForeground6, editorBracketPairGuideActiveBackground1, editorBracketPairGuideActiveBackground2, editorBracketPairGuideActiveBackground3, editorBracketPairGuideActiveBackground4, editorBracketPairGuideActiveBackground5, editorBracketPairGuideActiveBackground6, editorBracketPairGuideBackground1, editorBracketPairGuideBackground2, editorBracketPairGuideBackground3, editorBracketPairGuideBackground4, editorBracketPairGuideBackground5, editorBracketPairGuideBackground6, editorIndentGuides } from '../../../common/core/editorColorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ArrayQueue } from '../../../../base/common/arrays.js';\nimport { isDefined } from '../../../../base/common/types.js';\nimport { BracketPairGuidesClassNames } from '../../../common/model/guidesTextModelPart.js';\nimport { IndentGuide, HorizontalGuidesState } from '../../../common/textModelGuides.js';\nexport class IndentGuidesOverlay extends DynamicViewOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        this._primaryPosition = null;\n        const options = this._context.configuration.options;\n        const wrappingInfo = options.get(132 /* wrappingInfo */);\n        const fontInfo = options.get(44 /* fontInfo */);\n        this._lineHeight = options.get(59 /* lineHeight */);\n        this._spaceWidth = fontInfo.spaceWidth;\n        this._maxIndentLeft = wrappingInfo.wrappingColumn === -1 ? -1 : (wrappingInfo.wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth);\n        this._bracketPairGuideOptions = options.get(13 /* guides */);\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const wrappingInfo = options.get(132 /* wrappingInfo */);\n        const fontInfo = options.get(44 /* fontInfo */);\n        this._lineHeight = options.get(59 /* lineHeight */);\n        this._spaceWidth = fontInfo.spaceWidth;\n        this._maxIndentLeft = wrappingInfo.wrappingColumn === -1 ? -1 : (wrappingInfo.wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth);\n        this._bracketPairGuideOptions = options.get(13 /* guides */);\n        return true;\n    }\n    onCursorStateChanged(e) {\n        var _a;\n        const selection = e.selections[0];\n        const newPosition = selection.getPosition();\n        if (!((_a = this._primaryPosition) === null || _a === void 0 ? void 0 : _a.equals(newPosition))) {\n            this._primaryPosition = newPosition;\n            return true;\n        }\n        return false;\n    }\n    onDecorationsChanged(e) {\n        // true for inline decorations\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged; // || e.scrollWidthChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    onLanguageConfigurationChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        var _a, _b, _c, _d;\n        if (!this._bracketPairGuideOptions.indentation && this._bracketPairGuideOptions.bracketPairs === false) {\n            this._renderResult = null;\n            return;\n        }\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const scrollWidth = ctx.scrollWidth;\n        const lineHeight = this._lineHeight;\n        const activeCursorPosition = this._primaryPosition;\n        const indents = this.getGuidesByLine(visibleStartLineNumber, visibleEndLineNumber, activeCursorPosition);\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            const indent = indents[lineIndex];\n            let result = '';\n            const leftOffset = (_b = (_a = ctx.visibleRangeForPosition(new Position(lineNumber, 1))) === null || _a === void 0 ? void 0 : _a.left) !== null && _b !== void 0 ? _b : 0;\n            for (const guide of indent) {\n                const left = leftOffset + (guide.visibleColumn - 1) * this._spaceWidth;\n                if (left > scrollWidth || (this._maxIndentLeft > 0 && left > this._maxIndentLeft)) {\n                    break;\n                }\n                const className = guide.horizontalLine ? (guide.horizontalLine.top ? 'horizontal-top' : 'horizontal-bottom') : 'vertical';\n                const width = guide.horizontalLine\n                    ? ((_d = (_c = ctx.visibleRangeForPosition(new Position(lineNumber, guide.horizontalLine.endColumn))) === null || _c === void 0 ? void 0 : _c.left) !== null && _d !== void 0 ? _d : (left + this._spaceWidth)) - left\n                    : this._spaceWidth;\n                result += `<div class=\"core-guide ${guide.className} ${className}\" style=\"left:${left}px;height:${lineHeight}px;width:${width}px\"></div>`;\n            }\n            output[lineIndex] = result;\n        }\n        this._renderResult = output;\n    }\n    getGuidesByLine(visibleStartLineNumber, visibleEndLineNumber, activeCursorPosition) {\n        const bracketGuides = this._bracketPairGuideOptions.bracketPairs !== false\n            ? this._context.model.getBracketGuidesInRangeByLine(visibleStartLineNumber, visibleEndLineNumber, activeCursorPosition, {\n                highlightActive: this._bracketPairGuideOptions.highlightActiveBracketPair,\n                horizontalGuides: this._bracketPairGuideOptions.bracketPairsHorizontal === true\n                    ? HorizontalGuidesState.Enabled\n                    : this._bracketPairGuideOptions.bracketPairsHorizontal === 'active'\n                        ? HorizontalGuidesState.EnabledForActive\n                        : HorizontalGuidesState.Disabled,\n                includeInactive: this._bracketPairGuideOptions.bracketPairs === true,\n            })\n            : null;\n        const indentGuides = this._bracketPairGuideOptions.indentation\n            ? this._context.model.getLinesIndentGuides(visibleStartLineNumber, visibleEndLineNumber)\n            : null;\n        let activeIndentStartLineNumber = 0;\n        let activeIndentEndLineNumber = 0;\n        let activeIndentLevel = 0;\n        if (this._bracketPairGuideOptions.highlightActiveIndentation && activeCursorPosition) {\n            const activeIndentInfo = this._context.model.getActiveIndentGuide(activeCursorPosition.lineNumber, visibleStartLineNumber, visibleEndLineNumber);\n            activeIndentStartLineNumber = activeIndentInfo.startLineNumber;\n            activeIndentEndLineNumber = activeIndentInfo.endLineNumber;\n            activeIndentLevel = activeIndentInfo.indent;\n        }\n        const { indentSize } = this._context.model.getTextModelOptions();\n        const result = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineGuides = new Array();\n            result.push(lineGuides);\n            const bracketGuidesInLine = bracketGuides ? bracketGuides[lineNumber - visibleStartLineNumber] : [];\n            const bracketGuidesInLineQueue = new ArrayQueue(bracketGuidesInLine);\n            const indentGuidesInLine = indentGuides ? indentGuides[lineNumber - visibleStartLineNumber] : [];\n            for (let indentLvl = 1; indentLvl <= indentGuidesInLine; indentLvl++) {\n                const indentGuide = (indentLvl - 1) * indentSize + 1;\n                const isActive = \n                // Disable active indent guide if there are bracket guides.\n                bracketGuidesInLine.length === 0 &&\n                    activeIndentStartLineNumber <= lineNumber &&\n                    lineNumber <= activeIndentEndLineNumber &&\n                    indentLvl === activeIndentLevel;\n                lineGuides.push(...bracketGuidesInLineQueue.takeWhile(g => g.visibleColumn < indentGuide) || []);\n                const peeked = bracketGuidesInLineQueue.peek();\n                if (!peeked || peeked.visibleColumn !== indentGuide || peeked.horizontalLine) {\n                    lineGuides.push(new IndentGuide(indentGuide, isActive ? 'core-guide-indent-active' : 'core-guide-indent', null));\n                }\n            }\n            lineGuides.push(...bracketGuidesInLineQueue.takeWhile(g => true) || []);\n        }\n        return result;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n            return '';\n        }\n        return this._renderResult[lineIndex];\n    }\n}\nfunction transparentToUndefined(color) {\n    if (color && color.isTransparent()) {\n        return undefined;\n    }\n    return color;\n}\nregisterThemingParticipant((theme, collector) => {\n    const editorIndentGuidesColor = theme.getColor(editorIndentGuides);\n    if (editorIndentGuidesColor) {\n        collector.addRule(`.monaco-editor .lines-content .core-guide-indent { box-shadow: 1px 0 0 0 ${editorIndentGuidesColor} inset; }`);\n    }\n    const editorActiveIndentGuidesColor = theme.getColor(editorActiveIndentGuides) || editorIndentGuidesColor;\n    if (editorActiveIndentGuidesColor) {\n        collector.addRule(`.monaco-editor .lines-content .core-guide-indent-active { box-shadow: 1px 0 0 0 ${editorActiveIndentGuidesColor} inset; }`);\n    }\n    const colors = [\n        { bracketColor: editorBracketHighlightingForeground1, guideColor: editorBracketPairGuideBackground1, guideColorActive: editorBracketPairGuideActiveBackground1 },\n        { bracketColor: editorBracketHighlightingForeground2, guideColor: editorBracketPairGuideBackground2, guideColorActive: editorBracketPairGuideActiveBackground2 },\n        { bracketColor: editorBracketHighlightingForeground3, guideColor: editorBracketPairGuideBackground3, guideColorActive: editorBracketPairGuideActiveBackground3 },\n        { bracketColor: editorBracketHighlightingForeground4, guideColor: editorBracketPairGuideBackground4, guideColorActive: editorBracketPairGuideActiveBackground4 },\n        { bracketColor: editorBracketHighlightingForeground5, guideColor: editorBracketPairGuideBackground5, guideColorActive: editorBracketPairGuideActiveBackground5 },\n        { bracketColor: editorBracketHighlightingForeground6, guideColor: editorBracketPairGuideBackground6, guideColorActive: editorBracketPairGuideActiveBackground6 }\n    ];\n    const colorProvider = new BracketPairGuidesClassNames();\n    const colorValues = colors\n        .map(c => {\n        var _a, _b;\n        const bracketColor = theme.getColor(c.bracketColor);\n        const guideColor = theme.getColor(c.guideColor);\n        const guideColorActive = theme.getColor(c.guideColorActive);\n        const effectiveGuideColor = transparentToUndefined((_a = transparentToUndefined(guideColor)) !== null && _a !== void 0 ? _a : bracketColor === null || bracketColor === void 0 ? void 0 : bracketColor.transparent(0.3));\n        const effectiveGuideColorActive = transparentToUndefined((_b = transparentToUndefined(guideColorActive)) !== null && _b !== void 0 ? _b : bracketColor);\n        if (!effectiveGuideColor || !effectiveGuideColorActive) {\n            return undefined;\n        }\n        return {\n            guideColor: effectiveGuideColor,\n            guideColorActive: effectiveGuideColorActive,\n        };\n    })\n        .filter(isDefined);\n    if (colorValues.length > 0) {\n        for (let level = 0; level < 30; level++) {\n            const colors = colorValues[level % colorValues.length];\n            collector.addRule(`.monaco-editor .${colorProvider.getInlineClassNameOfLevel(level).replace(/ /g, '.')} { --guide-color: ${colors.guideColor}; --guide-color-active: ${colors.guideColorActive}; }`);\n        }\n        collector.addRule(`.monaco-editor .vertical { box-shadow: 1px 0 0 0 var(--guide-color) inset; }`);\n        collector.addRule(`.monaco-editor .horizontal-top { border-top: 1px solid var(--guide-color); }`);\n        collector.addRule(`.monaco-editor .horizontal-bottom { border-bottom: 1px solid var(--guide-color); }`);\n        collector.addRule(`.monaco-editor .vertical.${colorProvider.activeClassName} { box-shadow: 1px 0 0 0 var(--guide-color-active) inset; }`);\n        collector.addRule(`.monaco-editor .horizontal-top.${colorProvider.activeClassName} { border-top: 1px solid var(--guide-color-active); }`);\n        collector.addRule(`.monaco-editor .horizontal-bottom.${colorProvider.activeClassName} { border-bottom: 1px solid var(--guide-color-active); }`);\n    }\n});\n"]},"metadata":{},"sourceType":"module"}