{"ast":null,"code":"/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n// src/basic-languages/st/st.ts\nvar conf = {\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"(*\", \"*)\"]\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"], [\"var\", \"end_var\"], [\"var_input\", \"end_var\"], [\"var_output\", \"end_var\"], [\"var_in_out\", \"end_var\"], [\"var_temp\", \"end_var\"], [\"var_global\", \"end_var\"], [\"var_access\", \"end_var\"], [\"var_external\", \"end_var\"], [\"type\", \"end_type\"], [\"struct\", \"end_struct\"], [\"program\", \"end_program\"], [\"function\", \"end_function\"], [\"function_block\", \"end_function_block\"], [\"action\", \"end_action\"], [\"step\", \"end_step\"], [\"initial_step\", \"end_step\"], [\"transaction\", \"end_transaction\"], [\"configuration\", \"end_configuration\"], [\"tcp\", \"end_tcp\"], [\"recource\", \"end_recource\"], [\"channel\", \"end_channel\"], [\"library\", \"end_library\"], [\"folder\", \"end_folder\"], [\"binaries\", \"end_binaries\"], [\"includes\", \"end_includes\"], [\"sources\", \"end_sources\"]],\n  autoClosingPairs: [{\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: \"/*\",\n    close: \"*/\"\n  }, {\n    open: \"'\",\n    close: \"'\",\n    notIn: [\"string_sq\"]\n  }, {\n    open: '\"',\n    close: '\"',\n    notIn: [\"string_dq\"]\n  }, {\n    open: \"var_input\",\n    close: \"end_var\"\n  }, {\n    open: \"var_output\",\n    close: \"end_var\"\n  }, {\n    open: \"var_in_out\",\n    close: \"end_var\"\n  }, {\n    open: \"var_temp\",\n    close: \"end_var\"\n  }, {\n    open: \"var_global\",\n    close: \"end_var\"\n  }, {\n    open: \"var_access\",\n    close: \"end_var\"\n  }, {\n    open: \"var_external\",\n    close: \"end_var\"\n  }, {\n    open: \"type\",\n    close: \"end_type\"\n  }, {\n    open: \"struct\",\n    close: \"end_struct\"\n  }, {\n    open: \"program\",\n    close: \"end_program\"\n  }, {\n    open: \"function\",\n    close: \"end_function\"\n  }, {\n    open: \"function_block\",\n    close: \"end_function_block\"\n  }, {\n    open: \"action\",\n    close: \"end_action\"\n  }, {\n    open: \"step\",\n    close: \"end_step\"\n  }, {\n    open: \"initial_step\",\n    close: \"end_step\"\n  }, {\n    open: \"transaction\",\n    close: \"end_transaction\"\n  }, {\n    open: \"configuration\",\n    close: \"end_configuration\"\n  }, {\n    open: \"tcp\",\n    close: \"end_tcp\"\n  }, {\n    open: \"recource\",\n    close: \"end_recource\"\n  }, {\n    open: \"channel\",\n    close: \"end_channel\"\n  }, {\n    open: \"library\",\n    close: \"end_library\"\n  }, {\n    open: \"folder\",\n    close: \"end_folder\"\n  }, {\n    open: \"binaries\",\n    close: \"end_binaries\"\n  }, {\n    open: \"includes\",\n    close: \"end_includes\"\n  }, {\n    open: \"sources\",\n    close: \"end_sources\"\n  }],\n  surroundingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: \"var\",\n    close: \"end_var\"\n  }, {\n    open: \"var_input\",\n    close: \"end_var\"\n  }, {\n    open: \"var_output\",\n    close: \"end_var\"\n  }, {\n    open: \"var_in_out\",\n    close: \"end_var\"\n  }, {\n    open: \"var_temp\",\n    close: \"end_var\"\n  }, {\n    open: \"var_global\",\n    close: \"end_var\"\n  }, {\n    open: \"var_access\",\n    close: \"end_var\"\n  }, {\n    open: \"var_external\",\n    close: \"end_var\"\n  }, {\n    open: \"type\",\n    close: \"end_type\"\n  }, {\n    open: \"struct\",\n    close: \"end_struct\"\n  }, {\n    open: \"program\",\n    close: \"end_program\"\n  }, {\n    open: \"function\",\n    close: \"end_function\"\n  }, {\n    open: \"function_block\",\n    close: \"end_function_block\"\n  }, {\n    open: \"action\",\n    close: \"end_action\"\n  }, {\n    open: \"step\",\n    close: \"end_step\"\n  }, {\n    open: \"initial_step\",\n    close: \"end_step\"\n  }, {\n    open: \"transaction\",\n    close: \"end_transaction\"\n  }, {\n    open: \"configuration\",\n    close: \"end_configuration\"\n  }, {\n    open: \"tcp\",\n    close: \"end_tcp\"\n  }, {\n    open: \"recource\",\n    close: \"end_recource\"\n  }, {\n    open: \"channel\",\n    close: \"end_channel\"\n  }, {\n    open: \"library\",\n    close: \"end_library\"\n  }, {\n    open: \"folder\",\n    close: \"end_folder\"\n  }, {\n    open: \"binaries\",\n    close: \"end_binaries\"\n  }, {\n    open: \"includes\",\n    close: \"end_includes\"\n  }, {\n    open: \"sources\",\n    close: \"end_sources\"\n  }],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*#pragma\\\\s+region\\\\b\"),\n      end: new RegExp(\"^\\\\s*#pragma\\\\s+endregion\\\\b\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".st\",\n  ignoreCase: true,\n  brackets: [{\n    token: \"delimiter.curly\",\n    open: \"{\",\n    close: \"}\"\n  }, {\n    token: \"delimiter.parenthesis\",\n    open: \"(\",\n    close: \")\"\n  }, {\n    token: \"delimiter.square\",\n    open: \"[\",\n    close: \"]\"\n  }],\n  keywords: [\"if\", \"end_if\", \"elsif\", \"else\", \"case\", \"of\", \"to\", \"__try\", \"__catch\", \"__finally\", \"do\", \"with\", \"by\", \"while\", \"repeat\", \"end_while\", \"end_repeat\", \"end_case\", \"for\", \"end_for\", \"task\", \"retain\", \"non_retain\", \"constant\", \"with\", \"at\", \"exit\", \"return\", \"interval\", \"priority\", \"address\", \"port\", \"on_channel\", \"then\", \"iec\", \"file\", \"uses\", \"version\", \"packagetype\", \"displayname\", \"copyright\", \"summary\", \"vendor\", \"common_source\", \"from\", \"extends\"],\n  constant: [\"false\", \"true\", \"null\"],\n  defineKeywords: [\"var\", \"var_input\", \"var_output\", \"var_in_out\", \"var_temp\", \"var_global\", \"var_access\", \"var_external\", \"end_var\", \"type\", \"end_type\", \"struct\", \"end_struct\", \"program\", \"end_program\", \"function\", \"end_function\", \"function_block\", \"end_function_block\", \"interface\", \"end_interface\", \"method\", \"end_method\", \"property\", \"end_property\", \"namespace\", \"end_namespace\", \"configuration\", \"end_configuration\", \"tcp\", \"end_tcp\", \"resource\", \"end_resource\", \"channel\", \"end_channel\", \"library\", \"end_library\", \"folder\", \"end_folder\", \"binaries\", \"end_binaries\", \"includes\", \"end_includes\", \"sources\", \"end_sources\", \"action\", \"end_action\", \"step\", \"initial_step\", \"end_step\", \"transaction\", \"end_transaction\"],\n  typeKeywords: [\"int\", \"sint\", \"dint\", \"lint\", \"usint\", \"uint\", \"udint\", \"ulint\", \"real\", \"lreal\", \"time\", \"date\", \"time_of_day\", \"date_and_time\", \"string\", \"bool\", \"byte\", \"word\", \"dword\", \"array\", \"pointer\", \"lword\"],\n  operators: [\"=\", \">\", \"<\", \":\", \":=\", \"<=\", \">=\", \"<>\", \"&\", \"+\", \"-\", \"*\", \"**\", \"MOD\", \"^\", \"or\", \"and\", \"not\", \"xor\", \"abs\", \"acos\", \"asin\", \"atan\", \"cos\", \"exp\", \"expt\", \"ln\", \"log\", \"sin\", \"sqrt\", \"tan\", \"sel\", \"max\", \"min\", \"limit\", \"mux\", \"shl\", \"shr\", \"rol\", \"ror\", \"indexof\", \"sizeof\", \"adr\", \"adrinst\", \"bitadr\", \"is_valid\", \"ref\", \"ref_to\"],\n  builtinVariables: [],\n  builtinFunctions: [\"sr\", \"rs\", \"tp\", \"ton\", \"tof\", \"eq\", \"ge\", \"le\", \"lt\", \"ne\", \"round\", \"trunc\", \"ctd\", \"\\u0441tu\", \"ctud\", \"r_trig\", \"f_trig\", \"move\", \"concat\", \"delete\", \"find\", \"insert\", \"left\", \"len\", \"replace\", \"right\", \"rtc\"],\n  symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  tokenizer: {\n    root: [[/(\\.\\.)/, \"delimiter\"], [/\\b(16#[0-9A-Fa-f\\_]*)+\\b/, \"number.hex\"], [/\\b(2#[01\\_]+)+\\b/, \"number.binary\"], [/\\b(8#[0-9\\_]*)+\\b/, \"number.octal\"], [/\\b\\d*\\.\\d+([eE][\\-+]?\\d+)?\\b/, \"number.float\"], [/\\b(L?REAL)#[0-9\\_\\.e]+\\b/, \"number.float\"], [/\\b(BYTE|(?:D|L)?WORD|U?(?:S|D|L)?INT)#[0-9\\_]+\\b/, \"number\"], [/\\d+/, \"number\"], [/\\b(T|DT|TOD)#[0-9:-_shmyd]+\\b/, \"tag\"], [/\\%(I|Q|M)(X|B|W|D|L)[0-9\\.]+/, \"tag\"], [/\\%(I|Q|M)[0-9\\.]*/, \"tag\"], [/\\b[A-Za-z]{1,6}#[0-9]+\\b/, \"tag\"], [/\\b(TO_|CTU_|CTD_|CTUD_|MUX_|SEL_)[A_Za-z]+\\b/, \"predefined\"], [/\\b[A_Za-z]+(_TO_)[A_Za-z]+\\b/, \"predefined\"], [/[;]/, \"delimiter\"], [/[.]/, {\n      token: \"delimiter\",\n      next: \"@params\"\n    }], [/[a-zA-Z_]\\w*/, {\n      cases: {\n        \"@operators\": \"operators\",\n        \"@keywords\": \"keyword\",\n        \"@typeKeywords\": \"type\",\n        \"@defineKeywords\": \"variable\",\n        \"@constant\": \"constant\",\n        \"@builtinVariables\": \"predefined\",\n        \"@builtinFunctions\": \"predefined\",\n        \"@default\": \"identifier\"\n      }\n    }], {\n      include: \"@whitespace\"\n    }, [/[{}()\\[\\]]/, \"@brackets\"], [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"], [/\"/, {\n      token: \"string.quote\",\n      bracket: \"@open\",\n      next: \"@string_dq\"\n    }], [/'/, {\n      token: \"string.quote\",\n      bracket: \"@open\",\n      next: \"@string_sq\"\n    }], [/'[^\\\\']'/, \"string\"], [/(')(@escapes)(')/, [\"string\", \"string.escape\", \"string\"]], [/'/, \"string.invalid\"]],\n    params: [[/\\b[A-Za-z0-9_]+\\b(?=\\()/, {\n      token: \"identifier\",\n      next: \"@pop\"\n    }], [/\\b[A-Za-z0-9_]+\\b/, \"variable.name\", \"@pop\"]],\n    comment: [[/[^\\/*]+/, \"comment\"], [/\\/\\*/, \"comment\", \"@push\"], [\"\\\\*/\", \"comment\", \"@pop\"], [/[\\/*]/, \"comment\"]],\n    comment2: [[/[^\\(*]+/, \"comment\"], [/\\(\\*/, \"comment\", \"@push\"], [\"\\\\*\\\\)\", \"comment\", \"@pop\"], [/[\\(*]/, \"comment\"]],\n    whitespace: [[/[ \\t\\r\\n]+/, \"white\"], [/\\/\\/.*$/, \"comment\"], [/\\/\\*/, \"comment\", \"@comment\"], [/\\(\\*/, \"comment\", \"@comment2\"]],\n    string_dq: [[/[^\\\\\"]+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/\"/, {\n      token: \"string.quote\",\n      bracket: \"@close\",\n      next: \"@pop\"\n    }]],\n    string_sq: [[/[^\\\\']+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/'/, {\n      token: \"string.quote\",\n      bracket: \"@close\",\n      next: \"@pop\"\n    }]]\n  }\n};\nexport { conf, language };","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/basic-languages/st/st.js"],"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","ignoreCase","token","keywords","constant","defineKeywords","typeKeywords","operators","builtinVariables","builtinFunctions","symbols","escapes","tokenizer","root","next","cases","include","bracket","params","comment","comment2","whitespace","string_dq","string_sq"],"mappings":"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","sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/st/st.ts\nvar conf = {\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"(*\", \"*)\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"],\n    [\"var\", \"end_var\"],\n    [\"var_input\", \"end_var\"],\n    [\"var_output\", \"end_var\"],\n    [\"var_in_out\", \"end_var\"],\n    [\"var_temp\", \"end_var\"],\n    [\"var_global\", \"end_var\"],\n    [\"var_access\", \"end_var\"],\n    [\"var_external\", \"end_var\"],\n    [\"type\", \"end_type\"],\n    [\"struct\", \"end_struct\"],\n    [\"program\", \"end_program\"],\n    [\"function\", \"end_function\"],\n    [\"function_block\", \"end_function_block\"],\n    [\"action\", \"end_action\"],\n    [\"step\", \"end_step\"],\n    [\"initial_step\", \"end_step\"],\n    [\"transaction\", \"end_transaction\"],\n    [\"configuration\", \"end_configuration\"],\n    [\"tcp\", \"end_tcp\"],\n    [\"recource\", \"end_recource\"],\n    [\"channel\", \"end_channel\"],\n    [\"library\", \"end_library\"],\n    [\"folder\", \"end_folder\"],\n    [\"binaries\", \"end_binaries\"],\n    [\"includes\", \"end_includes\"],\n    [\"sources\", \"end_sources\"]\n  ],\n  autoClosingPairs: [\n    { open: \"[\", close: \"]\" },\n    { open: \"{\", close: \"}\" },\n    { open: \"(\", close: \")\" },\n    { open: \"/*\", close: \"*/\" },\n    { open: \"'\", close: \"'\", notIn: [\"string_sq\"] },\n    { open: '\"', close: '\"', notIn: [\"string_dq\"] },\n    { open: \"var_input\", close: \"end_var\" },\n    { open: \"var_output\", close: \"end_var\" },\n    { open: \"var_in_out\", close: \"end_var\" },\n    { open: \"var_temp\", close: \"end_var\" },\n    { open: \"var_global\", close: \"end_var\" },\n    { open: \"var_access\", close: \"end_var\" },\n    { open: \"var_external\", close: \"end_var\" },\n    { open: \"type\", close: \"end_type\" },\n    { open: \"struct\", close: \"end_struct\" },\n    { open: \"program\", close: \"end_program\" },\n    { open: \"function\", close: \"end_function\" },\n    { open: \"function_block\", close: \"end_function_block\" },\n    { open: \"action\", close: \"end_action\" },\n    { open: \"step\", close: \"end_step\" },\n    { open: \"initial_step\", close: \"end_step\" },\n    { open: \"transaction\", close: \"end_transaction\" },\n    { open: \"configuration\", close: \"end_configuration\" },\n    { open: \"tcp\", close: \"end_tcp\" },\n    { open: \"recource\", close: \"end_recource\" },\n    { open: \"channel\", close: \"end_channel\" },\n    { open: \"library\", close: \"end_library\" },\n    { open: \"folder\", close: \"end_folder\" },\n    { open: \"binaries\", close: \"end_binaries\" },\n    { open: \"includes\", close: \"end_includes\" },\n    { open: \"sources\", close: \"end_sources\" }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" },\n    { open: \"var\", close: \"end_var\" },\n    { open: \"var_input\", close: \"end_var\" },\n    { open: \"var_output\", close: \"end_var\" },\n    { open: \"var_in_out\", close: \"end_var\" },\n    { open: \"var_temp\", close: \"end_var\" },\n    { open: \"var_global\", close: \"end_var\" },\n    { open: \"var_access\", close: \"end_var\" },\n    { open: \"var_external\", close: \"end_var\" },\n    { open: \"type\", close: \"end_type\" },\n    { open: \"struct\", close: \"end_struct\" },\n    { open: \"program\", close: \"end_program\" },\n    { open: \"function\", close: \"end_function\" },\n    { open: \"function_block\", close: \"end_function_block\" },\n    { open: \"action\", close: \"end_action\" },\n    { open: \"step\", close: \"end_step\" },\n    { open: \"initial_step\", close: \"end_step\" },\n    { open: \"transaction\", close: \"end_transaction\" },\n    { open: \"configuration\", close: \"end_configuration\" },\n    { open: \"tcp\", close: \"end_tcp\" },\n    { open: \"recource\", close: \"end_recource\" },\n    { open: \"channel\", close: \"end_channel\" },\n    { open: \"library\", close: \"end_library\" },\n    { open: \"folder\", close: \"end_folder\" },\n    { open: \"binaries\", close: \"end_binaries\" },\n    { open: \"includes\", close: \"end_includes\" },\n    { open: \"sources\", close: \"end_sources\" }\n  ],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*#pragma\\\\s+region\\\\b\"),\n      end: new RegExp(\"^\\\\s*#pragma\\\\s+endregion\\\\b\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".st\",\n  ignoreCase: true,\n  brackets: [\n    { token: \"delimiter.curly\", open: \"{\", close: \"}\" },\n    { token: \"delimiter.parenthesis\", open: \"(\", close: \")\" },\n    { token: \"delimiter.square\", open: \"[\", close: \"]\" }\n  ],\n  keywords: [\n    \"if\",\n    \"end_if\",\n    \"elsif\",\n    \"else\",\n    \"case\",\n    \"of\",\n    \"to\",\n    \"__try\",\n    \"__catch\",\n    \"__finally\",\n    \"do\",\n    \"with\",\n    \"by\",\n    \"while\",\n    \"repeat\",\n    \"end_while\",\n    \"end_repeat\",\n    \"end_case\",\n    \"for\",\n    \"end_for\",\n    \"task\",\n    \"retain\",\n    \"non_retain\",\n    \"constant\",\n    \"with\",\n    \"at\",\n    \"exit\",\n    \"return\",\n    \"interval\",\n    \"priority\",\n    \"address\",\n    \"port\",\n    \"on_channel\",\n    \"then\",\n    \"iec\",\n    \"file\",\n    \"uses\",\n    \"version\",\n    \"packagetype\",\n    \"displayname\",\n    \"copyright\",\n    \"summary\",\n    \"vendor\",\n    \"common_source\",\n    \"from\",\n    \"extends\"\n  ],\n  constant: [\"false\", \"true\", \"null\"],\n  defineKeywords: [\n    \"var\",\n    \"var_input\",\n    \"var_output\",\n    \"var_in_out\",\n    \"var_temp\",\n    \"var_global\",\n    \"var_access\",\n    \"var_external\",\n    \"end_var\",\n    \"type\",\n    \"end_type\",\n    \"struct\",\n    \"end_struct\",\n    \"program\",\n    \"end_program\",\n    \"function\",\n    \"end_function\",\n    \"function_block\",\n    \"end_function_block\",\n    \"interface\",\n    \"end_interface\",\n    \"method\",\n    \"end_method\",\n    \"property\",\n    \"end_property\",\n    \"namespace\",\n    \"end_namespace\",\n    \"configuration\",\n    \"end_configuration\",\n    \"tcp\",\n    \"end_tcp\",\n    \"resource\",\n    \"end_resource\",\n    \"channel\",\n    \"end_channel\",\n    \"library\",\n    \"end_library\",\n    \"folder\",\n    \"end_folder\",\n    \"binaries\",\n    \"end_binaries\",\n    \"includes\",\n    \"end_includes\",\n    \"sources\",\n    \"end_sources\",\n    \"action\",\n    \"end_action\",\n    \"step\",\n    \"initial_step\",\n    \"end_step\",\n    \"transaction\",\n    \"end_transaction\"\n  ],\n  typeKeywords: [\n    \"int\",\n    \"sint\",\n    \"dint\",\n    \"lint\",\n    \"usint\",\n    \"uint\",\n    \"udint\",\n    \"ulint\",\n    \"real\",\n    \"lreal\",\n    \"time\",\n    \"date\",\n    \"time_of_day\",\n    \"date_and_time\",\n    \"string\",\n    \"bool\",\n    \"byte\",\n    \"word\",\n    \"dword\",\n    \"array\",\n    \"pointer\",\n    \"lword\"\n  ],\n  operators: [\n    \"=\",\n    \">\",\n    \"<\",\n    \":\",\n    \":=\",\n    \"<=\",\n    \">=\",\n    \"<>\",\n    \"&\",\n    \"+\",\n    \"-\",\n    \"*\",\n    \"**\",\n    \"MOD\",\n    \"^\",\n    \"or\",\n    \"and\",\n    \"not\",\n    \"xor\",\n    \"abs\",\n    \"acos\",\n    \"asin\",\n    \"atan\",\n    \"cos\",\n    \"exp\",\n    \"expt\",\n    \"ln\",\n    \"log\",\n    \"sin\",\n    \"sqrt\",\n    \"tan\",\n    \"sel\",\n    \"max\",\n    \"min\",\n    \"limit\",\n    \"mux\",\n    \"shl\",\n    \"shr\",\n    \"rol\",\n    \"ror\",\n    \"indexof\",\n    \"sizeof\",\n    \"adr\",\n    \"adrinst\",\n    \"bitadr\",\n    \"is_valid\",\n    \"ref\",\n    \"ref_to\"\n  ],\n  builtinVariables: [],\n  builtinFunctions: [\n    \"sr\",\n    \"rs\",\n    \"tp\",\n    \"ton\",\n    \"tof\",\n    \"eq\",\n    \"ge\",\n    \"le\",\n    \"lt\",\n    \"ne\",\n    \"round\",\n    \"trunc\",\n    \"ctd\",\n    \"\\u0441tu\",\n    \"ctud\",\n    \"r_trig\",\n    \"f_trig\",\n    \"move\",\n    \"concat\",\n    \"delete\",\n    \"find\",\n    \"insert\",\n    \"left\",\n    \"len\",\n    \"replace\",\n    \"right\",\n    \"rtc\"\n  ],\n  symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  tokenizer: {\n    root: [\n      [/(\\.\\.)/, \"delimiter\"],\n      [/\\b(16#[0-9A-Fa-f\\_]*)+\\b/, \"number.hex\"],\n      [/\\b(2#[01\\_]+)+\\b/, \"number.binary\"],\n      [/\\b(8#[0-9\\_]*)+\\b/, \"number.octal\"],\n      [/\\b\\d*\\.\\d+([eE][\\-+]?\\d+)?\\b/, \"number.float\"],\n      [/\\b(L?REAL)#[0-9\\_\\.e]+\\b/, \"number.float\"],\n      [/\\b(BYTE|(?:D|L)?WORD|U?(?:S|D|L)?INT)#[0-9\\_]+\\b/, \"number\"],\n      [/\\d+/, \"number\"],\n      [/\\b(T|DT|TOD)#[0-9:-_shmyd]+\\b/, \"tag\"],\n      [/\\%(I|Q|M)(X|B|W|D|L)[0-9\\.]+/, \"tag\"],\n      [/\\%(I|Q|M)[0-9\\.]*/, \"tag\"],\n      [/\\b[A-Za-z]{1,6}#[0-9]+\\b/, \"tag\"],\n      [/\\b(TO_|CTU_|CTD_|CTUD_|MUX_|SEL_)[A_Za-z]+\\b/, \"predefined\"],\n      [/\\b[A_Za-z]+(_TO_)[A_Za-z]+\\b/, \"predefined\"],\n      [/[;]/, \"delimiter\"],\n      [/[.]/, { token: \"delimiter\", next: \"@params\" }],\n      [\n        /[a-zA-Z_]\\w*/,\n        {\n          cases: {\n            \"@operators\": \"operators\",\n            \"@keywords\": \"keyword\",\n            \"@typeKeywords\": \"type\",\n            \"@defineKeywords\": \"variable\",\n            \"@constant\": \"constant\",\n            \"@builtinVariables\": \"predefined\",\n            \"@builtinFunctions\": \"predefined\",\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      { include: \"@whitespace\" },\n      [/[{}()\\[\\]]/, \"@brackets\"],\n      [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"],\n      [/\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@string_dq\" }],\n      [/'/, { token: \"string.quote\", bracket: \"@open\", next: \"@string_sq\" }],\n      [/'[^\\\\']'/, \"string\"],\n      [/(')(@escapes)(')/, [\"string\", \"string.escape\", \"string\"]],\n      [/'/, \"string.invalid\"]\n    ],\n    params: [\n      [/\\b[A-Za-z0-9_]+\\b(?=\\()/, { token: \"identifier\", next: \"@pop\" }],\n      [/\\b[A-Za-z0-9_]+\\b/, \"variable.name\", \"@pop\"]\n    ],\n    comment: [\n      [/[^\\/*]+/, \"comment\"],\n      [/\\/\\*/, \"comment\", \"@push\"],\n      [\"\\\\*/\", \"comment\", \"@pop\"],\n      [/[\\/*]/, \"comment\"]\n    ],\n    comment2: [\n      [/[^\\(*]+/, \"comment\"],\n      [/\\(\\*/, \"comment\", \"@push\"],\n      [\"\\\\*\\\\)\", \"comment\", \"@pop\"],\n      [/[\\(*]/, \"comment\"]\n    ],\n    whitespace: [\n      [/[ \\t\\r\\n]+/, \"white\"],\n      [/\\/\\/.*$/, \"comment\"],\n      [/\\/\\*/, \"comment\", \"@comment\"],\n      [/\\(\\*/, \"comment\", \"@comment2\"]\n    ],\n    string_dq: [\n      [/[^\\\\\"]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [/\"/, { token: \"string.quote\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n    string_sq: [\n      [/[^\\\\']+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [/'/, { token: \"string.quote\", bracket: \"@close\", next: \"@pop\" }]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"]},"metadata":{},"sourceType":"module"}