{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport { AbstractGotoLineQuickAccessProvider } from '../../../contrib/quickAccess/browser/gotoLineQuickAccess.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { Extensions } from '../../../../platform/quickinput/common/quickAccess.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { withNullAsUndefined } from '../../../../base/common/types.js';\nimport { GoToLineNLS } from '../../../common/standaloneStrings.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nlet StandaloneGotoLineQuickAccessProvider = class StandaloneGotoLineQuickAccessProvider extends AbstractGotoLineQuickAccessProvider {\n  constructor(editorService) {\n    super();\n    this.editorService = editorService;\n    this.onDidActiveTextEditorControlChange = Event.None;\n  }\n\n  get activeTextEditorControl() {\n    return withNullAsUndefined(this.editorService.getFocusedCodeEditor());\n  }\n\n};\nStandaloneGotoLineQuickAccessProvider = __decorate([__param(0, ICodeEditorService)], StandaloneGotoLineQuickAccessProvider);\nexport { StandaloneGotoLineQuickAccessProvider };\nRegistry.as(Extensions.Quickaccess).registerQuickAccessProvider({\n  ctor: StandaloneGotoLineQuickAccessProvider,\n  prefix: StandaloneGotoLineQuickAccessProvider.PREFIX,\n  helpEntries: [{\n    description: GoToLineNLS.gotoLineActionLabel,\n    needsEditor: true\n  }]\n});\nexport class GotoLineAction extends EditorAction {\n  constructor() {\n    super({\n      id: 'editor.action.gotoLine',\n      label: GoToLineNLS.gotoLineActionLabel,\n      alias: 'Go to Line/Column...',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.focus,\n        primary: 2048\n        /* CtrlCmd */\n        | 37\n        /* KeyG */\n        ,\n        mac: {\n          primary: 256\n          /* WinCtrl */\n          | 37\n          /* KeyG */\n\n        },\n        weight: 100\n        /* EditorContrib */\n\n      }\n    });\n  }\n\n  run(accessor) {\n    accessor.get(IQuickInputService).quickAccess.show(StandaloneGotoLineQuickAccessProvider.PREFIX);\n  }\n\n}\nregisterEditorAction(GotoLineAction);","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/standalone/browser/quickAccess/standaloneGotoLineQuickAccess.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","AbstractGotoLineQuickAccessProvider","Registry","Extensions","ICodeEditorService","withNullAsUndefined","GoToLineNLS","Event","EditorAction","registerEditorAction","EditorContextKeys","IQuickInputService","StandaloneGotoLineQuickAccessProvider","constructor","editorService","onDidActiveTextEditorControlChange","None","activeTextEditorControl","getFocusedCodeEditor","as","Quickaccess","registerQuickAccessProvider","ctor","prefix","PREFIX","helpEntries","description","gotoLineActionLabel","needsEditor","GotoLineAction","id","label","alias","precondition","undefined","kbOpts","kbExpr","focus","primary","mac","weight","run","accessor","get","quickAccess","show"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { AbstractGotoLineQuickAccessProvider } from '../../../contrib/quickAccess/browser/gotoLineQuickAccess.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { Extensions } from '../../../../platform/quickinput/common/quickAccess.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { withNullAsUndefined } from '../../../../base/common/types.js';\nimport { GoToLineNLS } from '../../../common/standaloneStrings.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nlet StandaloneGotoLineQuickAccessProvider = class StandaloneGotoLineQuickAccessProvider extends AbstractGotoLineQuickAccessProvider {\n    constructor(editorService) {\n        super();\n        this.editorService = editorService;\n        this.onDidActiveTextEditorControlChange = Event.None;\n    }\n    get activeTextEditorControl() {\n        return withNullAsUndefined(this.editorService.getFocusedCodeEditor());\n    }\n};\nStandaloneGotoLineQuickAccessProvider = __decorate([\n    __param(0, ICodeEditorService)\n], StandaloneGotoLineQuickAccessProvider);\nexport { StandaloneGotoLineQuickAccessProvider };\nRegistry.as(Extensions.Quickaccess).registerQuickAccessProvider({\n    ctor: StandaloneGotoLineQuickAccessProvider,\n    prefix: StandaloneGotoLineQuickAccessProvider.PREFIX,\n    helpEntries: [{ description: GoToLineNLS.gotoLineActionLabel, needsEditor: true }]\n});\nexport class GotoLineAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.gotoLine',\n            label: GoToLineNLS.gotoLineActionLabel,\n            alias: 'Go to Line/Column...',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.focus,\n                primary: 2048 /* CtrlCmd */ | 37 /* KeyG */,\n                mac: { primary: 256 /* WinCtrl */ | 37 /* KeyG */ },\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    run(accessor) {\n        accessor.get(IQuickInputService).quickAccess.show(StandaloneGotoLineQuickAccessProvider.PREFIX);\n    }\n}\nregisterEditorAction(GotoLineAction);\n"]},"metadata":{},"sourceType":"module"}