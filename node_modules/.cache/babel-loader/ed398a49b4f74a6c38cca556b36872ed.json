{"ast":null,"code":"/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n// src/basic-languages/julia/julia.ts\nvar conf = {\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }],\n  surroundingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }]\n};\nvar language = {\n  tokenPostfix: \".julia\",\n  keywords: [\"begin\", \"while\", \"if\", \"for\", \"try\", \"return\", \"break\", \"continue\", \"function\", \"macro\", \"quote\", \"let\", \"local\", \"global\", \"const\", \"do\", \"struct\", \"module\", \"baremodule\", \"using\", \"import\", \"export\", \"end\", \"else\", \"elseif\", \"catch\", \"finally\", \"mutable\", \"primitive\", \"abstract\", \"type\", \"in\", \"isa\", \"where\", \"new\"],\n  types: [\"LinRange\", \"LineNumberNode\", \"LinearIndices\", \"LoadError\", \"MIME\", \"Matrix\", \"Method\", \"MethodError\", \"Missing\", \"MissingException\", \"Module\", \"NTuple\", \"NamedTuple\", \"Nothing\", \"Number\", \"OrdinalRange\", \"OutOfMemoryError\", \"OverflowError\", \"Pair\", \"PartialQuickSort\", \"PermutedDimsArray\", \"Pipe\", \"Ptr\", \"QuoteNode\", \"Rational\", \"RawFD\", \"ReadOnlyMemoryError\", \"Real\", \"ReentrantLock\", \"Ref\", \"Regex\", \"RegexMatch\", \"RoundingMode\", \"SegmentationFault\", \"Set\", \"Signed\", \"Some\", \"StackOverflowError\", \"StepRange\", \"StepRangeLen\", \"StridedArray\", \"StridedMatrix\", \"StridedVecOrMat\", \"StridedVector\", \"String\", \"StringIndexError\", \"SubArray\", \"SubString\", \"SubstitutionString\", \"Symbol\", \"SystemError\", \"Task\", \"Text\", \"TextDisplay\", \"Timer\", \"Tuple\", \"Type\", \"TypeError\", \"TypeVar\", \"UInt\", \"UInt128\", \"UInt16\", \"UInt32\", \"UInt64\", \"UInt8\", \"UndefInitializer\", \"AbstractArray\", \"UndefKeywordError\", \"AbstractChannel\", \"UndefRefError\", \"AbstractChar\", \"UndefVarError\", \"AbstractDict\", \"Union\", \"AbstractDisplay\", \"UnionAll\", \"AbstractFloat\", \"UnitRange\", \"AbstractIrrational\", \"Unsigned\", \"AbstractMatrix\", \"AbstractRange\", \"Val\", \"AbstractSet\", \"Vararg\", \"AbstractString\", \"VecElement\", \"AbstractUnitRange\", \"VecOrMat\", \"AbstractVecOrMat\", \"Vector\", \"AbstractVector\", \"VersionNumber\", \"Any\", \"WeakKeyDict\", \"ArgumentError\", \"WeakRef\", \"Array\", \"AssertionError\", \"BigFloat\", \"BigInt\", \"BitArray\", \"BitMatrix\", \"BitSet\", \"BitVector\", \"Bool\", \"BoundsError\", \"CapturedException\", \"CartesianIndex\", \"CartesianIndices\", \"Cchar\", \"Cdouble\", \"Cfloat\", \"Channel\", \"Char\", \"Cint\", \"Cintmax_t\", \"Clong\", \"Clonglong\", \"Cmd\", \"Colon\", \"Complex\", \"ComplexF16\", \"ComplexF32\", \"ComplexF64\", \"CompositeException\", \"Condition\", \"Cptrdiff_t\", \"Cshort\", \"Csize_t\", \"Cssize_t\", \"Cstring\", \"Cuchar\", \"Cuint\", \"Cuintmax_t\", \"Culong\", \"Culonglong\", \"Cushort\", \"Cvoid\", \"Cwchar_t\", \"Cwstring\", \"DataType\", \"DenseArray\", \"DenseMatrix\", \"DenseVecOrMat\", \"DenseVector\", \"Dict\", \"DimensionMismatch\", \"Dims\", \"DivideError\", \"DomainError\", \"EOFError\", \"Enum\", \"ErrorException\", \"Exception\", \"ExponentialBackOff\", \"Expr\", \"Float16\", \"Float32\", \"Float64\", \"Function\", \"GlobalRef\", \"HTML\", \"IO\", \"IOBuffer\", \"IOContext\", \"IOStream\", \"IdDict\", \"IndexCartesian\", \"IndexLinear\", \"IndexStyle\", \"InexactError\", \"InitError\", \"Int\", \"Int128\", \"Int16\", \"Int32\", \"Int64\", \"Int8\", \"Integer\", \"InterruptException\", \"InvalidStateException\", \"Irrational\", \"KeyError\"],\n  keywordops: [\"<:\", \">:\", \":\", \"=>\", \"...\", \".\", \"->\", \"?\"],\n  allops: /[^\\w\\d\\s()\\[\\]{}\"'#]+/,\n  constants: [\"true\", \"false\", \"nothing\", \"missing\", \"undef\", \"Inf\", \"pi\", \"NaN\", \"\\u03C0\", \"\\u212F\", \"ans\", \"PROGRAM_FILE\", \"ARGS\", \"C_NULL\", \"VERSION\", \"DEPOT_PATH\", \"LOAD_PATH\"],\n  operators: [\"!\", \"!=\", \"!==\", \"%\", \"&\", \"*\", \"+\", \"-\", \"/\", \"//\", \"<\", \"<<\", \"<=\", \"==\", \"===\", \"=>\", \">\", \">=\", \">>\", \">>>\", \"\\\\\", \"^\", \"|\", \"|>\", \"~\", \"\\xF7\", \"\\u2208\", \"\\u2209\", \"\\u220B\", \"\\u220C\", \"\\u2218\", \"\\u221A\", \"\\u221B\", \"\\u2229\", \"\\u222A\", \"\\u2248\", \"\\u2249\", \"\\u2260\", \"\\u2261\", \"\\u2262\", \"\\u2264\", \"\\u2265\", \"\\u2286\", \"\\u2287\", \"\\u2288\", \"\\u2289\", \"\\u228A\", \"\\u228B\", \"\\u22BB\"],\n  brackets: [{\n    open: \"(\",\n    close: \")\",\n    token: \"delimiter.parenthesis\"\n  }, {\n    open: \"{\",\n    close: \"}\",\n    token: \"delimiter.curly\"\n  }, {\n    open: \"[\",\n    close: \"]\",\n    token: \"delimiter.square\"\n  }],\n  ident: /π|ℯ|\\b(?!\\d)\\w+\\b/,\n  escape: /(?:[abefnrstv\\\\\"'\\n\\r]|[0-7]{1,3}|x[0-9A-Fa-f]{1,2}|u[0-9A-Fa-f]{4})/,\n  escapes: /\\\\(?:C\\-(@escape|.)|c(@escape|.)|@escape)/,\n  tokenizer: {\n    root: [[/(::)\\s*|\\b(isa)\\s+/, \"keyword\", \"@typeanno\"], [/\\b(isa)(\\s*\\(@ident\\s*,\\s*)/, [\"keyword\", {\n      token: \"\",\n      next: \"@typeanno\"\n    }]], [/\\b(type|struct)[ \\t]+/, \"keyword\", \"@typeanno\"], [/^\\s*:@ident[!?]?/, \"metatag\"], [/(return)(\\s*:@ident[!?]?)/, [\"keyword\", \"metatag\"]], [/(\\(|\\[|\\{|@allops)(\\s*:@ident[!?]?)/, [\"\", \"metatag\"]], [/:\\(/, \"metatag\", \"@quote\"], [/r\"\"\"/, \"regexp.delim\", \"@tregexp\"], [/r\"/, \"regexp.delim\", \"@sregexp\"], [/raw\"\"\"/, \"string.delim\", \"@rtstring\"], [/[bv]?\"\"\"/, \"string.delim\", \"@dtstring\"], [/raw\"/, \"string.delim\", \"@rsstring\"], [/[bv]?\"/, \"string.delim\", \"@dsstring\"], [/(@ident)\\{/, {\n      cases: {\n        \"$1@types\": {\n          token: \"type\",\n          next: \"@gen\"\n        },\n        \"@default\": {\n          token: \"type\",\n          next: \"@gen\"\n        }\n      }\n    }], [/@ident[!?'']?(?=\\.?\\()/, {\n      cases: {\n        \"@types\": \"type\",\n        \"@keywords\": \"keyword\",\n        \"@constants\": \"variable\",\n        \"@default\": \"keyword.flow\"\n      }\n    }], [/@ident[!?']?/, {\n      cases: {\n        \"@types\": \"type\",\n        \"@keywords\": \"keyword\",\n        \"@constants\": \"variable\",\n        \"@default\": \"identifier\"\n      }\n    }], [/\\$\\w+/, \"key\"], [/\\$\\(/, \"key\", \"@paste\"], [/@@@ident/, \"annotation\"], {\n      include: \"@whitespace\"\n    }, [/'(?:@escapes|.)'/, \"string.character\"], [/[()\\[\\]{}]/, \"@brackets\"], [/@allops/, {\n      cases: {\n        \"@keywordops\": \"keyword\",\n        \"@operators\": \"operator\"\n      }\n    }], [/[;,]/, \"delimiter\"], [/0[xX][0-9a-fA-F](_?[0-9a-fA-F])*/, \"number.hex\"], [/0[_oO][0-7](_?[0-7])*/, \"number.octal\"], [/0[bB][01](_?[01])*/, \"number.binary\"], [/[+\\-]?\\d+(\\.\\d+)?(im?|[eE][+\\-]?\\d+(\\.\\d+)?)?/, \"number\"]],\n    typeanno: [[/[a-zA-Z_]\\w*(?:\\.[a-zA-Z_]\\w*)*\\{/, \"type\", \"@gen\"], [/([a-zA-Z_]\\w*(?:\\.[a-zA-Z_]\\w*)*)(\\s*<:\\s*)/, [\"type\", \"keyword\"]], [/[a-zA-Z_]\\w*(?:\\.[a-zA-Z_]\\w*)*/, \"type\", \"@pop\"], [\"\", \"\", \"@pop\"]],\n    gen: [[/[a-zA-Z_]\\w*(?:\\.[a-zA-Z_]\\w*)*\\{/, \"type\", \"@push\"], [/[a-zA-Z_]\\w*(?:\\.[a-zA-Z_]\\w*)*/, \"type\"], [/<:/, \"keyword\"], [/(\\})(\\s*<:\\s*)/, [\"type\", {\n      token: \"keyword\",\n      next: \"@pop\"\n    }]], [/\\}/, \"type\", \"@pop\"], {\n      include: \"@root\"\n    }],\n    quote: [[/\\$\\(/, \"key\", \"@paste\"], [/\\(/, \"@brackets\", \"@paren\"], [/\\)/, \"metatag\", \"@pop\"], {\n      include: \"@root\"\n    }],\n    paste: [[/:\\(/, \"metatag\", \"@quote\"], [/\\(/, \"@brackets\", \"@paren\"], [/\\)/, \"key\", \"@pop\"], {\n      include: \"@root\"\n    }],\n    paren: [[/\\$\\(/, \"key\", \"@paste\"], [/:\\(/, \"metatag\", \"@quote\"], [/\\(/, \"@brackets\", \"@push\"], [/\\)/, \"@brackets\", \"@pop\"], {\n      include: \"@root\"\n    }],\n    sregexp: [[/^.*/, \"invalid\"], [/[^\\\\\"()\\[\\]{}]/, \"regexp\"], [/[()\\[\\]{}]/, \"@brackets\"], [/\\\\./, \"operator.scss\"], [/\"[imsx]*/, \"regexp.delim\", \"@pop\"]],\n    tregexp: [[/[^\\\\\"()\\[\\]{}]/, \"regexp\"], [/[()\\[\\]{}]/, \"@brackets\"], [/\\\\./, \"operator.scss\"], [/\"(?!\"\")/, \"string\"], [/\"\"\"[imsx]*/, \"regexp.delim\", \"@pop\"]],\n    rsstring: [[/^.*/, \"invalid\"], [/[^\\\\\"]/, \"string\"], [/\\\\./, \"string.escape\"], [/\"/, \"string.delim\", \"@pop\"]],\n    rtstring: [[/[^\\\\\"]/, \"string\"], [/\\\\./, \"string.escape\"], [/\"(?!\"\")/, \"string\"], [/\"\"\"/, \"string.delim\", \"@pop\"]],\n    dsstring: [[/^.*/, \"invalid\"], [/[^\\\\\"\\$]/, \"string\"], [/\\$/, \"\", \"@interpolated\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/\"/, \"string.delim\", \"@pop\"]],\n    dtstring: [[/[^\\\\\"\\$]/, \"string\"], [/\\$/, \"\", \"@interpolated\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/\"(?!\"\")/, \"string\"], [/\"\"\"/, \"string.delim\", \"@pop\"]],\n    interpolated: [[/\\(/, {\n      token: \"\",\n      switchTo: \"@interpolated_compound\"\n    }], [/[a-zA-Z_]\\w*/, \"identifier\"], [\"\", \"\", \"@pop\"]],\n    interpolated_compound: [[/\\)/, \"\", \"@pop\"], {\n      include: \"@root\"\n    }],\n    whitespace: [[/[ \\t\\r\\n]+/, \"\"], [/#=/, \"comment\", \"@multi_comment\"], [/#.*$/, \"comment\"]],\n    multi_comment: [[/#=/, \"comment\", \"@push\"], [/=#/, \"comment\", \"@pop\"], [/=(?!#)|#(?!=)/, \"comment\"], [/[^#=]+/, \"comment\"]]\n  }\n};\nexport { conf, language };","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/basic-languages/julia/julia.js"],"names":["conf","brackets","autoClosingPairs","open","close","surroundingPairs","language","tokenPostfix","keywords","types","keywordops","allops","constants","operators","token","ident","escape","escapes","tokenizer","root","next","cases","include","typeanno","gen","quote","paste","paren","sregexp","tregexp","rsstring","rtstring","dsstring","dtstring","interpolated","switchTo","interpolated_compound","whitespace","multi_comment"],"mappings":"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","sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/julia/julia.ts\nvar conf = {\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ]\n};\nvar language = {\n  tokenPostfix: \".julia\",\n  keywords: [\n    \"begin\",\n    \"while\",\n    \"if\",\n    \"for\",\n    \"try\",\n    \"return\",\n    \"break\",\n    \"continue\",\n    \"function\",\n    \"macro\",\n    \"quote\",\n    \"let\",\n    \"local\",\n    \"global\",\n    \"const\",\n    \"do\",\n    \"struct\",\n    \"module\",\n    \"baremodule\",\n    \"using\",\n    \"import\",\n    \"export\",\n    \"end\",\n    \"else\",\n    \"elseif\",\n    \"catch\",\n    \"finally\",\n    \"mutable\",\n    \"primitive\",\n    \"abstract\",\n    \"type\",\n    \"in\",\n    \"isa\",\n    \"where\",\n    \"new\"\n  ],\n  types: [\n    \"LinRange\",\n    \"LineNumberNode\",\n    \"LinearIndices\",\n    \"LoadError\",\n    \"MIME\",\n    \"Matrix\",\n    \"Method\",\n    \"MethodError\",\n    \"Missing\",\n    \"MissingException\",\n    \"Module\",\n    \"NTuple\",\n    \"NamedTuple\",\n    \"Nothing\",\n    \"Number\",\n    \"OrdinalRange\",\n    \"OutOfMemoryError\",\n    \"OverflowError\",\n    \"Pair\",\n    \"PartialQuickSort\",\n    \"PermutedDimsArray\",\n    \"Pipe\",\n    \"Ptr\",\n    \"QuoteNode\",\n    \"Rational\",\n    \"RawFD\",\n    \"ReadOnlyMemoryError\",\n    \"Real\",\n    \"ReentrantLock\",\n    \"Ref\",\n    \"Regex\",\n    \"RegexMatch\",\n    \"RoundingMode\",\n    \"SegmentationFault\",\n    \"Set\",\n    \"Signed\",\n    \"Some\",\n    \"StackOverflowError\",\n    \"StepRange\",\n    \"StepRangeLen\",\n    \"StridedArray\",\n    \"StridedMatrix\",\n    \"StridedVecOrMat\",\n    \"StridedVector\",\n    \"String\",\n    \"StringIndexError\",\n    \"SubArray\",\n    \"SubString\",\n    \"SubstitutionString\",\n    \"Symbol\",\n    \"SystemError\",\n    \"Task\",\n    \"Text\",\n    \"TextDisplay\",\n    \"Timer\",\n    \"Tuple\",\n    \"Type\",\n    \"TypeError\",\n    \"TypeVar\",\n    \"UInt\",\n    \"UInt128\",\n    \"UInt16\",\n    \"UInt32\",\n    \"UInt64\",\n    \"UInt8\",\n    \"UndefInitializer\",\n    \"AbstractArray\",\n    \"UndefKeywordError\",\n    \"AbstractChannel\",\n    \"UndefRefError\",\n    \"AbstractChar\",\n    \"UndefVarError\",\n    \"AbstractDict\",\n    \"Union\",\n    \"AbstractDisplay\",\n    \"UnionAll\",\n    \"AbstractFloat\",\n    \"UnitRange\",\n    \"AbstractIrrational\",\n    \"Unsigned\",\n    \"AbstractMatrix\",\n    \"AbstractRange\",\n    \"Val\",\n    \"AbstractSet\",\n    \"Vararg\",\n    \"AbstractString\",\n    \"VecElement\",\n    \"AbstractUnitRange\",\n    \"VecOrMat\",\n    \"AbstractVecOrMat\",\n    \"Vector\",\n    \"AbstractVector\",\n    \"VersionNumber\",\n    \"Any\",\n    \"WeakKeyDict\",\n    \"ArgumentError\",\n    \"WeakRef\",\n    \"Array\",\n    \"AssertionError\",\n    \"BigFloat\",\n    \"BigInt\",\n    \"BitArray\",\n    \"BitMatrix\",\n    \"BitSet\",\n    \"BitVector\",\n    \"Bool\",\n    \"BoundsError\",\n    \"CapturedException\",\n    \"CartesianIndex\",\n    \"CartesianIndices\",\n    \"Cchar\",\n    \"Cdouble\",\n    \"Cfloat\",\n    \"Channel\",\n    \"Char\",\n    \"Cint\",\n    \"Cintmax_t\",\n    \"Clong\",\n    \"Clonglong\",\n    \"Cmd\",\n    \"Colon\",\n    \"Complex\",\n    \"ComplexF16\",\n    \"ComplexF32\",\n    \"ComplexF64\",\n    \"CompositeException\",\n    \"Condition\",\n    \"Cptrdiff_t\",\n    \"Cshort\",\n    \"Csize_t\",\n    \"Cssize_t\",\n    \"Cstring\",\n    \"Cuchar\",\n    \"Cuint\",\n    \"Cuintmax_t\",\n    \"Culong\",\n    \"Culonglong\",\n    \"Cushort\",\n    \"Cvoid\",\n    \"Cwchar_t\",\n    \"Cwstring\",\n    \"DataType\",\n    \"DenseArray\",\n    \"DenseMatrix\",\n    \"DenseVecOrMat\",\n    \"DenseVector\",\n    \"Dict\",\n    \"DimensionMismatch\",\n    \"Dims\",\n    \"DivideError\",\n    \"DomainError\",\n    \"EOFError\",\n    \"Enum\",\n    \"ErrorException\",\n    \"Exception\",\n    \"ExponentialBackOff\",\n    \"Expr\",\n    \"Float16\",\n    \"Float32\",\n    \"Float64\",\n    \"Function\",\n    \"GlobalRef\",\n    \"HTML\",\n    \"IO\",\n    \"IOBuffer\",\n    \"IOContext\",\n    \"IOStream\",\n    \"IdDict\",\n    \"IndexCartesian\",\n    \"IndexLinear\",\n    \"IndexStyle\",\n    \"InexactError\",\n    \"InitError\",\n    \"Int\",\n    \"Int128\",\n    \"Int16\",\n    \"Int32\",\n    \"Int64\",\n    \"Int8\",\n    \"Integer\",\n    \"InterruptException\",\n    \"InvalidStateException\",\n    \"Irrational\",\n    \"KeyError\"\n  ],\n  keywordops: [\"<:\", \">:\", \":\", \"=>\", \"...\", \".\", \"->\", \"?\"],\n  allops: /[^\\w\\d\\s()\\[\\]{}\"'#]+/,\n  constants: [\n    \"true\",\n    \"false\",\n    \"nothing\",\n    \"missing\",\n    \"undef\",\n    \"Inf\",\n    \"pi\",\n    \"NaN\",\n    \"\\u03C0\",\n    \"\\u212F\",\n    \"ans\",\n    \"PROGRAM_FILE\",\n    \"ARGS\",\n    \"C_NULL\",\n    \"VERSION\",\n    \"DEPOT_PATH\",\n    \"LOAD_PATH\"\n  ],\n  operators: [\n    \"!\",\n    \"!=\",\n    \"!==\",\n    \"%\",\n    \"&\",\n    \"*\",\n    \"+\",\n    \"-\",\n    \"/\",\n    \"//\",\n    \"<\",\n    \"<<\",\n    \"<=\",\n    \"==\",\n    \"===\",\n    \"=>\",\n    \">\",\n    \">=\",\n    \">>\",\n    \">>>\",\n    \"\\\\\",\n    \"^\",\n    \"|\",\n    \"|>\",\n    \"~\",\n    \"\\xF7\",\n    \"\\u2208\",\n    \"\\u2209\",\n    \"\\u220B\",\n    \"\\u220C\",\n    \"\\u2218\",\n    \"\\u221A\",\n    \"\\u221B\",\n    \"\\u2229\",\n    \"\\u222A\",\n    \"\\u2248\",\n    \"\\u2249\",\n    \"\\u2260\",\n    \"\\u2261\",\n    \"\\u2262\",\n    \"\\u2264\",\n    \"\\u2265\",\n    \"\\u2286\",\n    \"\\u2287\",\n    \"\\u2288\",\n    \"\\u2289\",\n    \"\\u228A\",\n    \"\\u228B\",\n    \"\\u22BB\"\n  ],\n  brackets: [\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" },\n    { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\n    { open: \"[\", close: \"]\", token: \"delimiter.square\" }\n  ],\n  ident: /π|ℯ|\\b(?!\\d)\\w+\\b/,\n  escape: /(?:[abefnrstv\\\\\"'\\n\\r]|[0-7]{1,3}|x[0-9A-Fa-f]{1,2}|u[0-9A-Fa-f]{4})/,\n  escapes: /\\\\(?:C\\-(@escape|.)|c(@escape|.)|@escape)/,\n  tokenizer: {\n    root: [\n      [/(::)\\s*|\\b(isa)\\s+/, \"keyword\", \"@typeanno\"],\n      [/\\b(isa)(\\s*\\(@ident\\s*,\\s*)/, [\"keyword\", { token: \"\", next: \"@typeanno\" }]],\n      [/\\b(type|struct)[ \\t]+/, \"keyword\", \"@typeanno\"],\n      [/^\\s*:@ident[!?]?/, \"metatag\"],\n      [/(return)(\\s*:@ident[!?]?)/, [\"keyword\", \"metatag\"]],\n      [/(\\(|\\[|\\{|@allops)(\\s*:@ident[!?]?)/, [\"\", \"metatag\"]],\n      [/:\\(/, \"metatag\", \"@quote\"],\n      [/r\"\"\"/, \"regexp.delim\", \"@tregexp\"],\n      [/r\"/, \"regexp.delim\", \"@sregexp\"],\n      [/raw\"\"\"/, \"string.delim\", \"@rtstring\"],\n      [/[bv]?\"\"\"/, \"string.delim\", \"@dtstring\"],\n      [/raw\"/, \"string.delim\", \"@rsstring\"],\n      [/[bv]?\"/, \"string.delim\", \"@dsstring\"],\n      [\n        /(@ident)\\{/,\n        {\n          cases: {\n            \"$1@types\": { token: \"type\", next: \"@gen\" },\n            \"@default\": { token: \"type\", next: \"@gen\" }\n          }\n        }\n      ],\n      [\n        /@ident[!?'']?(?=\\.?\\()/,\n        {\n          cases: {\n            \"@types\": \"type\",\n            \"@keywords\": \"keyword\",\n            \"@constants\": \"variable\",\n            \"@default\": \"keyword.flow\"\n          }\n        }\n      ],\n      [\n        /@ident[!?']?/,\n        {\n          cases: {\n            \"@types\": \"type\",\n            \"@keywords\": \"keyword\",\n            \"@constants\": \"variable\",\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      [/\\$\\w+/, \"key\"],\n      [/\\$\\(/, \"key\", \"@paste\"],\n      [/@@@ident/, \"annotation\"],\n      { include: \"@whitespace\" },\n      [/'(?:@escapes|.)'/, \"string.character\"],\n      [/[()\\[\\]{}]/, \"@brackets\"],\n      [\n        /@allops/,\n        {\n          cases: {\n            \"@keywordops\": \"keyword\",\n            \"@operators\": \"operator\"\n          }\n        }\n      ],\n      [/[;,]/, \"delimiter\"],\n      [/0[xX][0-9a-fA-F](_?[0-9a-fA-F])*/, \"number.hex\"],\n      [/0[_oO][0-7](_?[0-7])*/, \"number.octal\"],\n      [/0[bB][01](_?[01])*/, \"number.binary\"],\n      [/[+\\-]?\\d+(\\.\\d+)?(im?|[eE][+\\-]?\\d+(\\.\\d+)?)?/, \"number\"]\n    ],\n    typeanno: [\n      [/[a-zA-Z_]\\w*(?:\\.[a-zA-Z_]\\w*)*\\{/, \"type\", \"@gen\"],\n      [/([a-zA-Z_]\\w*(?:\\.[a-zA-Z_]\\w*)*)(\\s*<:\\s*)/, [\"type\", \"keyword\"]],\n      [/[a-zA-Z_]\\w*(?:\\.[a-zA-Z_]\\w*)*/, \"type\", \"@pop\"],\n      [\"\", \"\", \"@pop\"]\n    ],\n    gen: [\n      [/[a-zA-Z_]\\w*(?:\\.[a-zA-Z_]\\w*)*\\{/, \"type\", \"@push\"],\n      [/[a-zA-Z_]\\w*(?:\\.[a-zA-Z_]\\w*)*/, \"type\"],\n      [/<:/, \"keyword\"],\n      [/(\\})(\\s*<:\\s*)/, [\"type\", { token: \"keyword\", next: \"@pop\" }]],\n      [/\\}/, \"type\", \"@pop\"],\n      { include: \"@root\" }\n    ],\n    quote: [\n      [/\\$\\(/, \"key\", \"@paste\"],\n      [/\\(/, \"@brackets\", \"@paren\"],\n      [/\\)/, \"metatag\", \"@pop\"],\n      { include: \"@root\" }\n    ],\n    paste: [\n      [/:\\(/, \"metatag\", \"@quote\"],\n      [/\\(/, \"@brackets\", \"@paren\"],\n      [/\\)/, \"key\", \"@pop\"],\n      { include: \"@root\" }\n    ],\n    paren: [\n      [/\\$\\(/, \"key\", \"@paste\"],\n      [/:\\(/, \"metatag\", \"@quote\"],\n      [/\\(/, \"@brackets\", \"@push\"],\n      [/\\)/, \"@brackets\", \"@pop\"],\n      { include: \"@root\" }\n    ],\n    sregexp: [\n      [/^.*/, \"invalid\"],\n      [/[^\\\\\"()\\[\\]{}]/, \"regexp\"],\n      [/[()\\[\\]{}]/, \"@brackets\"],\n      [/\\\\./, \"operator.scss\"],\n      [/\"[imsx]*/, \"regexp.delim\", \"@pop\"]\n    ],\n    tregexp: [\n      [/[^\\\\\"()\\[\\]{}]/, \"regexp\"],\n      [/[()\\[\\]{}]/, \"@brackets\"],\n      [/\\\\./, \"operator.scss\"],\n      [/\"(?!\"\")/, \"string\"],\n      [/\"\"\"[imsx]*/, \"regexp.delim\", \"@pop\"]\n    ],\n    rsstring: [\n      [/^.*/, \"invalid\"],\n      [/[^\\\\\"]/, \"string\"],\n      [/\\\\./, \"string.escape\"],\n      [/\"/, \"string.delim\", \"@pop\"]\n    ],\n    rtstring: [\n      [/[^\\\\\"]/, \"string\"],\n      [/\\\\./, \"string.escape\"],\n      [/\"(?!\"\")/, \"string\"],\n      [/\"\"\"/, \"string.delim\", \"@pop\"]\n    ],\n    dsstring: [\n      [/^.*/, \"invalid\"],\n      [/[^\\\\\"\\$]/, \"string\"],\n      [/\\$/, \"\", \"@interpolated\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [/\"/, \"string.delim\", \"@pop\"]\n    ],\n    dtstring: [\n      [/[^\\\\\"\\$]/, \"string\"],\n      [/\\$/, \"\", \"@interpolated\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [/\"(?!\"\")/, \"string\"],\n      [/\"\"\"/, \"string.delim\", \"@pop\"]\n    ],\n    interpolated: [\n      [/\\(/, { token: \"\", switchTo: \"@interpolated_compound\" }],\n      [/[a-zA-Z_]\\w*/, \"identifier\"],\n      [\"\", \"\", \"@pop\"]\n    ],\n    interpolated_compound: [[/\\)/, \"\", \"@pop\"], { include: \"@root\" }],\n    whitespace: [\n      [/[ \\t\\r\\n]+/, \"\"],\n      [/#=/, \"comment\", \"@multi_comment\"],\n      [/#.*$/, \"comment\"]\n    ],\n    multi_comment: [\n      [/#=/, \"comment\", \"@push\"],\n      [/=#/, \"comment\", \"@pop\"],\n      [/=(?!#)|#(?!=)/, \"comment\"],\n      [/[^#=]+/, \"comment\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"]},"metadata":{},"sourceType":"module"}