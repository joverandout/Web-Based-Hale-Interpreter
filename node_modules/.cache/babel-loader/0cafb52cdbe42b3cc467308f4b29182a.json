{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Codicon } from '../../../base/common/codicons.js';\nimport Severity from '../../../base/common/severity.js';\nimport { problemsErrorIconForeground, problemsInfoIconForeground, problemsWarningIconForeground } from '../../theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../theme/common/themeService.js';\nexport var SeverityIcon;\n\n(function (SeverityIcon) {\n  function className(severity) {\n    switch (severity) {\n      case Severity.Ignore:\n        return 'severity-ignore ' + Codicon.info.classNames;\n\n      case Severity.Info:\n        return Codicon.info.classNames;\n\n      case Severity.Warning:\n        return Codicon.warning.classNames;\n\n      case Severity.Error:\n        return Codicon.error.classNames;\n\n      default:\n        return '';\n    }\n  }\n\n  SeverityIcon.className = className;\n})(SeverityIcon || (SeverityIcon = {}));\n\nregisterThemingParticipant((theme, collector) => {\n  const errorIconForeground = theme.getColor(problemsErrorIconForeground);\n\n  if (errorIconForeground) {\n    const errorCodiconSelector = Codicon.error.cssSelector;\n    collector.addRule(`\n\t\t\t.monaco-editor .zone-widget ${errorCodiconSelector},\n\t\t\t.markers-panel .marker-icon${errorCodiconSelector},\n\t\t\t.text-search-provider-messages .providerMessage ${errorCodiconSelector},\n\t\t\t.extensions-viewlet > .extensions ${errorCodiconSelector} {\n\t\t\t\tcolor: ${errorIconForeground};\n\t\t\t}\n\t\t`);\n  }\n\n  const warningIconForeground = theme.getColor(problemsWarningIconForeground);\n\n  if (warningIconForeground) {\n    const warningCodiconSelector = Codicon.warning.cssSelector;\n    collector.addRule(`\n\t\t\t.monaco-editor .zone-widget ${warningCodiconSelector},\n\t\t\t.markers-panel .marker-icon${warningCodiconSelector},\n\t\t\t.extensions-viewlet > .extensions ${warningCodiconSelector},\n\t\t\t.extension-editor ${warningCodiconSelector},\n\t\t\t.text-search-provider-messages .providerMessage ${warningCodiconSelector},\n\t\t\t.preferences-editor ${warningCodiconSelector} {\n\t\t\t\tcolor: ${warningIconForeground};\n\t\t\t}\n\t\t`);\n  }\n\n  const infoIconForeground = theme.getColor(problemsInfoIconForeground);\n\n  if (infoIconForeground) {\n    const infoCodiconSelector = Codicon.info.cssSelector;\n    collector.addRule(`\n\t\t\t.monaco-editor .zone-widget ${infoCodiconSelector},\n\t\t\t.markers-panel .marker-icon${infoCodiconSelector},\n\t\t\t.extensions-viewlet > .extensions ${infoCodiconSelector},\n\t\t\t.text-search-provider-messages .providerMessage ${infoCodiconSelector},\n\t\t\t.extension-editor ${infoCodiconSelector} {\n\t\t\t\tcolor: ${infoIconForeground};\n\t\t\t}\n\t\t`);\n  }\n});","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/platform/severityIcon/common/severityIcon.js"],"names":["Codicon","Severity","problemsErrorIconForeground","problemsInfoIconForeground","problemsWarningIconForeground","registerThemingParticipant","SeverityIcon","className","severity","Ignore","info","classNames","Info","Warning","warning","Error","error","theme","collector","errorIconForeground","getColor","errorCodiconSelector","cssSelector","addRule","warningIconForeground","warningCodiconSelector","infoIconForeground","infoCodiconSelector"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,OAAT,QAAwB,kCAAxB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,2BAAT,EAAsCC,0BAAtC,EAAkEC,6BAAlE,QAAuG,qCAAvG;AACA,SAASC,0BAAT,QAA2C,oCAA3C;AACA,OAAO,IAAIC,YAAJ;;AACP,CAAC,UAAUA,YAAV,EAAwB;AACrB,WAASC,SAAT,CAAmBC,QAAnB,EAA6B;AACzB,YAAQA,QAAR;AACI,WAAKP,QAAQ,CAACQ,MAAd;AACI,eAAO,qBAAqBT,OAAO,CAACU,IAAR,CAAaC,UAAzC;;AACJ,WAAKV,QAAQ,CAACW,IAAd;AACI,eAAOZ,OAAO,CAACU,IAAR,CAAaC,UAApB;;AACJ,WAAKV,QAAQ,CAACY,OAAd;AACI,eAAOb,OAAO,CAACc,OAAR,CAAgBH,UAAvB;;AACJ,WAAKV,QAAQ,CAACc,KAAd;AACI,eAAOf,OAAO,CAACgB,KAAR,CAAcL,UAArB;;AACJ;AACI,eAAO,EAAP;AAVR;AAYH;;AACDL,EAAAA,YAAY,CAACC,SAAb,GAAyBA,SAAzB;AACH,CAhBD,EAgBGD,YAAY,KAAKA,YAAY,GAAG,EAApB,CAhBf;;AAiBAD,0BAA0B,CAAC,CAACY,KAAD,EAAQC,SAAR,KAAsB;AAC7C,QAAMC,mBAAmB,GAAGF,KAAK,CAACG,QAAN,CAAelB,2BAAf,CAA5B;;AACA,MAAIiB,mBAAJ,EAAyB;AACrB,UAAME,oBAAoB,GAAGrB,OAAO,CAACgB,KAAR,CAAcM,WAA3C;AACAJ,IAAAA,SAAS,CAACK,OAAV,CAAmB;AAC3B,iCAAiCF,oBAAqB;AACtD,gCAAgCA,oBAAqB;AACrD,qDAAqDA,oBAAqB;AAC1E,uCAAuCA,oBAAqB;AAC5D,aAAaF,mBAAoB;AACjC;AACA,GAPQ;AAQH;;AACD,QAAMK,qBAAqB,GAAGP,KAAK,CAACG,QAAN,CAAehB,6BAAf,CAA9B;;AACA,MAAIoB,qBAAJ,EAA2B;AACvB,UAAMC,sBAAsB,GAAGzB,OAAO,CAACc,OAAR,CAAgBQ,WAA/C;AACAJ,IAAAA,SAAS,CAACK,OAAV,CAAmB;AAC3B,iCAAiCE,sBAAuB;AACxD,gCAAgCA,sBAAuB;AACvD,uCAAuCA,sBAAuB;AAC9D,uBAAuBA,sBAAuB;AAC9C,qDAAqDA,sBAAuB;AAC5E,yBAAyBA,sBAAuB;AAChD,aAAaD,qBAAsB;AACnC;AACA,GATQ;AAUH;;AACD,QAAME,kBAAkB,GAAGT,KAAK,CAACG,QAAN,CAAejB,0BAAf,CAA3B;;AACA,MAAIuB,kBAAJ,EAAwB;AACpB,UAAMC,mBAAmB,GAAG3B,OAAO,CAACU,IAAR,CAAaY,WAAzC;AACAJ,IAAAA,SAAS,CAACK,OAAV,CAAmB;AAC3B,iCAAiCI,mBAAoB;AACrD,gCAAgCA,mBAAoB;AACpD,uCAAuCA,mBAAoB;AAC3D,qDAAqDA,mBAAoB;AACzE,uBAAuBA,mBAAoB;AAC3C,aAAaD,kBAAmB;AAChC;AACA,GARQ;AASH;AACJ,CAxCyB,CAA1B","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Codicon } from '../../../base/common/codicons.js';\nimport Severity from '../../../base/common/severity.js';\nimport { problemsErrorIconForeground, problemsInfoIconForeground, problemsWarningIconForeground } from '../../theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../theme/common/themeService.js';\nexport var SeverityIcon;\n(function (SeverityIcon) {\n    function className(severity) {\n        switch (severity) {\n            case Severity.Ignore:\n                return 'severity-ignore ' + Codicon.info.classNames;\n            case Severity.Info:\n                return Codicon.info.classNames;\n            case Severity.Warning:\n                return Codicon.warning.classNames;\n            case Severity.Error:\n                return Codicon.error.classNames;\n            default:\n                return '';\n        }\n    }\n    SeverityIcon.className = className;\n})(SeverityIcon || (SeverityIcon = {}));\nregisterThemingParticipant((theme, collector) => {\n    const errorIconForeground = theme.getColor(problemsErrorIconForeground);\n    if (errorIconForeground) {\n        const errorCodiconSelector = Codicon.error.cssSelector;\n        collector.addRule(`\n\t\t\t.monaco-editor .zone-widget ${errorCodiconSelector},\n\t\t\t.markers-panel .marker-icon${errorCodiconSelector},\n\t\t\t.text-search-provider-messages .providerMessage ${errorCodiconSelector},\n\t\t\t.extensions-viewlet > .extensions ${errorCodiconSelector} {\n\t\t\t\tcolor: ${errorIconForeground};\n\t\t\t}\n\t\t`);\n    }\n    const warningIconForeground = theme.getColor(problemsWarningIconForeground);\n    if (warningIconForeground) {\n        const warningCodiconSelector = Codicon.warning.cssSelector;\n        collector.addRule(`\n\t\t\t.monaco-editor .zone-widget ${warningCodiconSelector},\n\t\t\t.markers-panel .marker-icon${warningCodiconSelector},\n\t\t\t.extensions-viewlet > .extensions ${warningCodiconSelector},\n\t\t\t.extension-editor ${warningCodiconSelector},\n\t\t\t.text-search-provider-messages .providerMessage ${warningCodiconSelector},\n\t\t\t.preferences-editor ${warningCodiconSelector} {\n\t\t\t\tcolor: ${warningIconForeground};\n\t\t\t}\n\t\t`);\n    }\n    const infoIconForeground = theme.getColor(problemsInfoIconForeground);\n    if (infoIconForeground) {\n        const infoCodiconSelector = Codicon.info.cssSelector;\n        collector.addRule(`\n\t\t\t.monaco-editor .zone-widget ${infoCodiconSelector},\n\t\t\t.markers-panel .marker-icon${infoCodiconSelector},\n\t\t\t.extensions-viewlet > .extensions ${infoCodiconSelector},\n\t\t\t.text-search-provider-messages .providerMessage ${infoCodiconSelector},\n\t\t\t.extension-editor ${infoCodiconSelector} {\n\t\t\t\tcolor: ${infoIconForeground};\n\t\t\t}\n\t\t`);\n    }\n});\n"]},"metadata":{},"sourceType":"module"}