{"ast":null,"code":"var Pool = require('./Pool');\n\nvar PoolConfig = require('./PoolConfig');\n\nvar PoolNamespace = require('./PoolNamespace');\n\nvar PoolSelector = require('./PoolSelector');\n\nvar Util = require('util');\n\nvar EventEmitter = require('events').EventEmitter;\n\nmodule.exports = PoolCluster;\n/**\n * PoolCluster\n * @constructor\n * @param {object} [config] The pool cluster configuration\n * @public\n */\n\nfunction PoolCluster(config) {\n  EventEmitter.call(this);\n  config = config || {};\n  this._canRetry = typeof config.canRetry === 'undefined' ? true : config.canRetry;\n  this._defaultSelector = config.defaultSelector || 'RR';\n  this._removeNodeErrorCount = config.removeNodeErrorCount || 5;\n  this._restoreNodeTimeout = config.restoreNodeTimeout || 0;\n  this._closed = false;\n  this._findCaches = Object.create(null);\n  this._lastId = 0;\n  this._namespaces = Object.create(null);\n  this._nodes = Object.create(null);\n}\n\nUtil.inherits(PoolCluster, EventEmitter);\n\nPoolCluster.prototype.add = function add(id, config) {\n  if (this._closed) {\n    throw new Error('PoolCluster is closed.');\n  }\n\n  var nodeId = typeof id === 'object' ? 'CLUSTER::' + ++this._lastId : String(id);\n\n  if (this._nodes[nodeId] !== undefined) {\n    throw new Error('Node ID \"' + nodeId + '\" is already defined in PoolCluster.');\n  }\n\n  var poolConfig = typeof id !== 'object' ? new PoolConfig(config) : new PoolConfig(id);\n  this._nodes[nodeId] = {\n    id: nodeId,\n    errorCount: 0,\n    pool: new Pool({\n      config: poolConfig\n    }),\n    _offlineUntil: 0\n  };\n\n  this._clearFindCaches();\n};\n\nPoolCluster.prototype.end = function end(callback) {\n  var cb = callback !== undefined ? callback : _cb;\n\n  if (typeof cb !== 'function') {\n    throw TypeError('callback argument must be a function');\n  }\n\n  if (this._closed) {\n    process.nextTick(cb);\n    return;\n  }\n\n  this._closed = true;\n  var calledBack = false;\n  var nodeIds = Object.keys(this._nodes);\n  var waitingClose = 0;\n\n  function onEnd(err) {\n    if (!calledBack && (err || --waitingClose <= 0)) {\n      calledBack = true;\n      cb(err);\n    }\n  }\n\n  for (var i = 0; i < nodeIds.length; i++) {\n    var nodeId = nodeIds[i];\n    var node = this._nodes[nodeId];\n    waitingClose++;\n    node.pool.end(onEnd);\n  }\n\n  if (waitingClose === 0) {\n    process.nextTick(onEnd);\n  }\n};\n\nPoolCluster.prototype.of = function (pattern, selector) {\n  pattern = pattern || '*';\n  selector = selector || this._defaultSelector;\n  selector = selector.toUpperCase();\n\n  if (typeof PoolSelector[selector] === 'undefined') {\n    selector = this._defaultSelector;\n  }\n\n  var key = pattern + selector;\n\n  if (typeof this._namespaces[key] === 'undefined') {\n    this._namespaces[key] = new PoolNamespace(this, pattern, selector);\n  }\n\n  return this._namespaces[key];\n};\n\nPoolCluster.prototype.remove = function remove(pattern) {\n  var foundNodeIds = this._findNodeIds(pattern, true);\n\n  for (var i = 0; i < foundNodeIds.length; i++) {\n    var node = this._getNode(foundNodeIds[i]);\n\n    if (node) {\n      this._removeNode(node);\n    }\n  }\n};\n\nPoolCluster.prototype.getConnection = function (pattern, selector, cb) {\n  var namespace;\n\n  if (typeof pattern === 'function') {\n    cb = pattern;\n    namespace = this.of();\n  } else {\n    if (typeof selector === 'function') {\n      cb = selector;\n      selector = this._defaultSelector;\n    }\n\n    namespace = this.of(pattern, selector);\n  }\n\n  namespace.getConnection(cb);\n};\n\nPoolCluster.prototype._clearFindCaches = function _clearFindCaches() {\n  this._findCaches = Object.create(null);\n};\n\nPoolCluster.prototype._decreaseErrorCount = function _decreaseErrorCount(node) {\n  var errorCount = node.errorCount;\n\n  if (errorCount > this._removeNodeErrorCount) {\n    errorCount = this._removeNodeErrorCount;\n  }\n\n  if (errorCount < 1) {\n    errorCount = 1;\n  }\n\n  node.errorCount = errorCount - 1;\n\n  if (node._offlineUntil) {\n    node._offlineUntil = 0;\n    this.emit('online', node.id);\n  }\n};\n\nPoolCluster.prototype._findNodeIds = function _findNodeIds(pattern, includeOffline) {\n  var currentTime = 0;\n  var foundNodeIds = this._findCaches[pattern];\n\n  if (foundNodeIds === undefined) {\n    var expression = patternRegExp(pattern);\n    var nodeIds = Object.keys(this._nodes);\n    foundNodeIds = nodeIds.filter(function (id) {\n      return id.match(expression);\n    });\n    this._findCaches[pattern] = foundNodeIds;\n  }\n\n  if (includeOffline) {\n    return foundNodeIds;\n  }\n\n  return foundNodeIds.filter(function (nodeId) {\n    var node = this._getNode(nodeId);\n\n    if (!node._offlineUntil) {\n      return true;\n    }\n\n    if (!currentTime) {\n      currentTime = getMonotonicMilliseconds();\n    }\n\n    return node._offlineUntil <= currentTime;\n  }, this);\n};\n\nPoolCluster.prototype._getNode = function _getNode(id) {\n  return this._nodes[id] || null;\n};\n\nPoolCluster.prototype._increaseErrorCount = function _increaseErrorCount(node) {\n  var errorCount = ++node.errorCount;\n\n  if (this._removeNodeErrorCount > errorCount) {\n    return;\n  }\n\n  if (this._restoreNodeTimeout > 0) {\n    node._offlineUntil = getMonotonicMilliseconds() + this._restoreNodeTimeout;\n    this.emit('offline', node.id);\n    return;\n  }\n\n  this._removeNode(node);\n\n  this.emit('remove', node.id);\n};\n\nPoolCluster.prototype._getConnection = function (node, cb) {\n  var self = this;\n  node.pool.getConnection(function (err, connection) {\n    if (err) {\n      self._increaseErrorCount(node);\n\n      cb(err);\n      return;\n    } else {\n      self._decreaseErrorCount(node);\n    }\n\n    connection._clusterId = node.id;\n    cb(null, connection);\n  });\n};\n\nPoolCluster.prototype._removeNode = function _removeNode(node) {\n  delete this._nodes[node.id];\n\n  this._clearFindCaches();\n\n  node.pool.end(_noop);\n};\n\nfunction getMonotonicMilliseconds() {\n  var ms;\n\n  if (typeof process.hrtime === 'function') {\n    ms = process.hrtime();\n    ms = ms[0] * 1e3 + ms[1] * 1e-6;\n  } else {\n    ms = process.uptime() * 1000;\n  }\n\n  return Math.floor(ms);\n}\n\nfunction isRegExp(val) {\n  return typeof val === 'object' && Object.prototype.toString.call(val) === '[object RegExp]';\n}\n\nfunction patternRegExp(pattern) {\n  if (isRegExp(pattern)) {\n    return pattern;\n  }\n\n  var source = pattern.replace(/([.+?^=!:${}()|\\[\\]\\/\\\\])/g, '\\\\$1').replace(/\\*/g, '.*');\n  return new RegExp('^' + source + '$');\n}\n\nfunction _cb(err) {\n  if (err) {\n    throw err;\n  }\n}\n\nfunction _noop() {}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/mysql/lib/PoolCluster.js"],"names":["Pool","require","PoolConfig","PoolNamespace","PoolSelector","Util","EventEmitter","module","exports","PoolCluster","config","call","_canRetry","canRetry","_defaultSelector","defaultSelector","_removeNodeErrorCount","removeNodeErrorCount","_restoreNodeTimeout","restoreNodeTimeout","_closed","_findCaches","Object","create","_lastId","_namespaces","_nodes","inherits","prototype","add","id","Error","nodeId","String","undefined","poolConfig","errorCount","pool","_offlineUntil","_clearFindCaches","end","callback","cb","_cb","TypeError","process","nextTick","calledBack","nodeIds","keys","waitingClose","onEnd","err","i","length","node","of","pattern","selector","toUpperCase","key","remove","foundNodeIds","_findNodeIds","_getNode","_removeNode","getConnection","namespace","_decreaseErrorCount","emit","includeOffline","currentTime","expression","patternRegExp","filter","match","getMonotonicMilliseconds","_increaseErrorCount","_getConnection","self","connection","_clusterId","_noop","ms","hrtime","uptime","Math","floor","isRegExp","val","toString","source","replace","RegExp"],"mappings":"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","sourcesContent":["var Pool          = require('./Pool');\nvar PoolConfig    = require('./PoolConfig');\nvar PoolNamespace = require('./PoolNamespace');\nvar PoolSelector  = require('./PoolSelector');\nvar Util          = require('util');\nvar EventEmitter  = require('events').EventEmitter;\n\nmodule.exports = PoolCluster;\n\n/**\n * PoolCluster\n * @constructor\n * @param {object} [config] The pool cluster configuration\n * @public\n */\nfunction PoolCluster(config) {\n  EventEmitter.call(this);\n\n  config = config || {};\n  this._canRetry = typeof config.canRetry === 'undefined' ? true : config.canRetry;\n  this._defaultSelector = config.defaultSelector || 'RR';\n  this._removeNodeErrorCount = config.removeNodeErrorCount || 5;\n  this._restoreNodeTimeout = config.restoreNodeTimeout || 0;\n\n  this._closed = false;\n  this._findCaches = Object.create(null);\n  this._lastId = 0;\n  this._namespaces = Object.create(null);\n  this._nodes = Object.create(null);\n}\n\nUtil.inherits(PoolCluster, EventEmitter);\n\nPoolCluster.prototype.add = function add(id, config) {\n  if (this._closed) {\n    throw new Error('PoolCluster is closed.');\n  }\n\n  var nodeId = typeof id === 'object'\n    ? 'CLUSTER::' + (++this._lastId)\n    : String(id);\n\n  if (this._nodes[nodeId] !== undefined) {\n    throw new Error('Node ID \"' + nodeId + '\" is already defined in PoolCluster.');\n  }\n\n  var poolConfig = typeof id !== 'object'\n    ? new PoolConfig(config)\n    : new PoolConfig(id);\n\n  this._nodes[nodeId] = {\n    id            : nodeId,\n    errorCount    : 0,\n    pool          : new Pool({config: poolConfig}),\n    _offlineUntil : 0\n  };\n\n  this._clearFindCaches();\n};\n\nPoolCluster.prototype.end = function end(callback) {\n  var cb = callback !== undefined\n    ? callback\n    : _cb;\n\n  if (typeof cb !== 'function') {\n    throw TypeError('callback argument must be a function');\n  }\n\n  if (this._closed) {\n    process.nextTick(cb);\n    return;\n  }\n\n  this._closed = true;\n\n  var calledBack   = false;\n  var nodeIds      = Object.keys(this._nodes);\n  var waitingClose = 0;\n\n  function onEnd(err) {\n    if (!calledBack && (err || --waitingClose <= 0)) {\n      calledBack = true;\n      cb(err);\n    }\n  }\n\n  for (var i = 0; i < nodeIds.length; i++) {\n    var nodeId = nodeIds[i];\n    var node = this._nodes[nodeId];\n\n    waitingClose++;\n    node.pool.end(onEnd);\n  }\n\n  if (waitingClose === 0) {\n    process.nextTick(onEnd);\n  }\n};\n\nPoolCluster.prototype.of = function(pattern, selector) {\n  pattern = pattern || '*';\n\n  selector = selector || this._defaultSelector;\n  selector = selector.toUpperCase();\n  if (typeof PoolSelector[selector] === 'undefined') {\n    selector = this._defaultSelector;\n  }\n\n  var key = pattern + selector;\n\n  if (typeof this._namespaces[key] === 'undefined') {\n    this._namespaces[key] = new PoolNamespace(this, pattern, selector);\n  }\n\n  return this._namespaces[key];\n};\n\nPoolCluster.prototype.remove = function remove(pattern) {\n  var foundNodeIds = this._findNodeIds(pattern, true);\n\n  for (var i = 0; i < foundNodeIds.length; i++) {\n    var node = this._getNode(foundNodeIds[i]);\n\n    if (node) {\n      this._removeNode(node);\n    }\n  }\n};\n\nPoolCluster.prototype.getConnection = function(pattern, selector, cb) {\n  var namespace;\n  if (typeof pattern === 'function') {\n    cb = pattern;\n    namespace = this.of();\n  } else {\n    if (typeof selector === 'function') {\n      cb = selector;\n      selector = this._defaultSelector;\n    }\n\n    namespace = this.of(pattern, selector);\n  }\n\n  namespace.getConnection(cb);\n};\n\nPoolCluster.prototype._clearFindCaches = function _clearFindCaches() {\n  this._findCaches = Object.create(null);\n};\n\nPoolCluster.prototype._decreaseErrorCount = function _decreaseErrorCount(node) {\n  var errorCount = node.errorCount;\n\n  if (errorCount > this._removeNodeErrorCount) {\n    errorCount = this._removeNodeErrorCount;\n  }\n\n  if (errorCount < 1) {\n    errorCount = 1;\n  }\n\n  node.errorCount = errorCount - 1;\n\n  if (node._offlineUntil) {\n    node._offlineUntil = 0;\n    this.emit('online', node.id);\n  }\n};\n\nPoolCluster.prototype._findNodeIds = function _findNodeIds(pattern, includeOffline) {\n  var currentTime  = 0;\n  var foundNodeIds = this._findCaches[pattern];\n\n  if (foundNodeIds === undefined) {\n    var expression = patternRegExp(pattern);\n    var nodeIds    = Object.keys(this._nodes);\n\n    foundNodeIds = nodeIds.filter(function (id) {\n      return id.match(expression);\n    });\n\n    this._findCaches[pattern] = foundNodeIds;\n  }\n\n  if (includeOffline) {\n    return foundNodeIds;\n  }\n\n  return foundNodeIds.filter(function (nodeId) {\n    var node = this._getNode(nodeId);\n\n    if (!node._offlineUntil) {\n      return true;\n    }\n\n    if (!currentTime) {\n      currentTime = getMonotonicMilliseconds();\n    }\n\n    return node._offlineUntil <= currentTime;\n  }, this);\n};\n\nPoolCluster.prototype._getNode = function _getNode(id) {\n  return this._nodes[id] || null;\n};\n\nPoolCluster.prototype._increaseErrorCount = function _increaseErrorCount(node) {\n  var errorCount = ++node.errorCount;\n\n  if (this._removeNodeErrorCount > errorCount) {\n    return;\n  }\n\n  if (this._restoreNodeTimeout > 0) {\n    node._offlineUntil = getMonotonicMilliseconds() + this._restoreNodeTimeout;\n    this.emit('offline', node.id);\n    return;\n  }\n\n  this._removeNode(node);\n  this.emit('remove', node.id);\n};\n\nPoolCluster.prototype._getConnection = function(node, cb) {\n  var self = this;\n\n  node.pool.getConnection(function (err, connection) {\n    if (err) {\n      self._increaseErrorCount(node);\n      cb(err);\n      return;\n    } else {\n      self._decreaseErrorCount(node);\n    }\n\n    connection._clusterId = node.id;\n\n    cb(null, connection);\n  });\n};\n\nPoolCluster.prototype._removeNode = function _removeNode(node) {\n  delete this._nodes[node.id];\n\n  this._clearFindCaches();\n\n  node.pool.end(_noop);\n};\n\nfunction getMonotonicMilliseconds() {\n  var ms;\n\n  if (typeof process.hrtime === 'function') {\n    ms = process.hrtime();\n    ms = ms[0] * 1e3 + ms[1] * 1e-6;\n  } else {\n    ms = process.uptime() * 1000;\n  }\n\n  return Math.floor(ms);\n}\n\nfunction isRegExp(val) {\n  return typeof val === 'object'\n    && Object.prototype.toString.call(val) === '[object RegExp]';\n}\n\nfunction patternRegExp(pattern) {\n  if (isRegExp(pattern)) {\n    return pattern;\n  }\n\n  var source = pattern\n    .replace(/([.+?^=!:${}()|\\[\\]\\/\\\\])/g, '\\\\$1')\n    .replace(/\\*/g, '.*');\n\n  return new RegExp('^' + source + '$');\n}\n\nfunction _cb(err) {\n  if (err) {\n    throw err;\n  }\n}\n\nfunction _noop() {}\n"]},"metadata":{},"sourceType":"script"}