{"ast":null,"code":"/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n// src/basic-languages/powershell/powershell.ts\nvar conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#%\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n  comments: {\n    lineComment: \"#\",\n    blockComment: [\"<#\", \"#>\"]\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"',\n    notIn: [\"string\"]\n  }, {\n    open: \"'\",\n    close: \"'\",\n    notIn: [\"string\", \"comment\"]\n  }],\n  surroundingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*#region\\\\b\"),\n      end: new RegExp(\"^\\\\s*#endregion\\\\b\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  ignoreCase: true,\n  tokenPostfix: \".ps1\",\n  brackets: [{\n    token: \"delimiter.curly\",\n    open: \"{\",\n    close: \"}\"\n  }, {\n    token: \"delimiter.square\",\n    open: \"[\",\n    close: \"]\"\n  }, {\n    token: \"delimiter.parenthesis\",\n    open: \"(\",\n    close: \")\"\n  }],\n  keywords: [\"begin\", \"break\", \"catch\", \"class\", \"continue\", \"data\", \"define\", \"do\", \"dynamicparam\", \"else\", \"elseif\", \"end\", \"exit\", \"filter\", \"finally\", \"for\", \"foreach\", \"from\", \"function\", \"if\", \"in\", \"param\", \"process\", \"return\", \"switch\", \"throw\", \"trap\", \"try\", \"until\", \"using\", \"var\", \"while\", \"workflow\", \"parallel\", \"sequence\", \"inlinescript\", \"configuration\"],\n  helpKeywords: /SYNOPSIS|DESCRIPTION|PARAMETER|EXAMPLE|INPUTS|OUTPUTS|NOTES|LINK|COMPONENT|ROLE|FUNCTIONALITY|FORWARDHELPTARGETNAME|FORWARDHELPCATEGORY|REMOTEHELPRUNSPACE|EXTERNALHELP/,\n  symbols: /[=><!~?&%|+\\-*\\/\\^;\\.,]+/,\n  escapes: /`(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  tokenizer: {\n    root: [[/[a-zA-Z_][\\w-]*/, {\n      cases: {\n        \"@keywords\": {\n          token: \"keyword.$0\"\n        },\n        \"@default\": \"\"\n      }\n    }], [/[ \\t\\r\\n]+/, \"\"], [/^:\\w*/, \"metatag\"], [/\\$(\\{((global|local|private|script|using):)?[\\w]+\\}|((global|local|private|script|using):)?[\\w]+)/, \"variable\"], [/<#/, \"comment\", \"@comment\"], [/#.*$/, \"comment\"], [/[{}()\\[\\]]/, \"@brackets\"], [/@symbols/, \"delimiter\"], [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"], [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, \"number.hex\"], [/\\d+?/, \"number\"], [/[;,.]/, \"delimiter\"], [/\\@\"/, \"string\", '@herestring.\"'], [/\\@'/, \"string\", \"@herestring.'\"], [/\"/, {\n      cases: {\n        \"@eos\": \"string\",\n        \"@default\": {\n          token: \"string\",\n          next: '@string.\"'\n        }\n      }\n    }], [/'/, {\n      cases: {\n        \"@eos\": \"string\",\n        \"@default\": {\n          token: \"string\",\n          next: \"@string.'\"\n        }\n      }\n    }]],\n    string: [[/[^\"'\\$`]+/, {\n      cases: {\n        \"@eos\": {\n          token: \"string\",\n          next: \"@popall\"\n        },\n        \"@default\": \"string\"\n      }\n    }], [/@escapes/, {\n      cases: {\n        \"@eos\": {\n          token: \"string.escape\",\n          next: \"@popall\"\n        },\n        \"@default\": \"string.escape\"\n      }\n    }], [/`./, {\n      cases: {\n        \"@eos\": {\n          token: \"string.escape.invalid\",\n          next: \"@popall\"\n        },\n        \"@default\": \"string.escape.invalid\"\n      }\n    }], [/\\$[\\w]+$/, {\n      cases: {\n        '$S2==\"': {\n          token: \"variable\",\n          next: \"@popall\"\n        },\n        \"@default\": {\n          token: \"string\",\n          next: \"@popall\"\n        }\n      }\n    }], [/\\$[\\w]+/, {\n      cases: {\n        '$S2==\"': \"variable\",\n        \"@default\": \"string\"\n      }\n    }], [/[\"']/, {\n      cases: {\n        \"$#==$S2\": {\n          token: \"string\",\n          next: \"@pop\"\n        },\n        \"@default\": {\n          cases: {\n            \"@eos\": {\n              token: \"string\",\n              next: \"@popall\"\n            },\n            \"@default\": \"string\"\n          }\n        }\n      }\n    }]],\n    herestring: [[/^\\s*([\"'])@/, {\n      cases: {\n        \"$1==$S2\": {\n          token: \"string\",\n          next: \"@pop\"\n        },\n        \"@default\": \"string\"\n      }\n    }], [/[^\\$`]+/, \"string\"], [/@escapes/, \"string.escape\"], [/`./, \"string.escape.invalid\"], [/\\$[\\w]+/, {\n      cases: {\n        '$S2==\"': \"variable\",\n        \"@default\": \"string\"\n      }\n    }]],\n    comment: [[/[^#\\.]+/, \"comment\"], [/#>/, \"comment\", \"@pop\"], [/(\\.)(@helpKeywords)(?!\\w)/, {\n      token: \"comment.keyword.$2\"\n    }], [/[\\.#]/, \"comment\"]]\n  }\n};\nexport { conf, language };","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/basic-languages/powershell/powershell.js"],"names":["conf","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","ignoreCase","tokenPostfix","token","keywords","helpKeywords","symbols","escapes","tokenizer","root","cases","next","string","herestring","comment"],"mappings":"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","sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/powershell/powershell.ts\nvar conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#%\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n  comments: {\n    lineComment: \"#\",\n    blockComment: [\"<#\", \"#>\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"', notIn: [\"string\"] },\n    { open: \"'\", close: \"'\", notIn: [\"string\", \"comment\"] }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*#region\\\\b\"),\n      end: new RegExp(\"^\\\\s*#endregion\\\\b\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  ignoreCase: true,\n  tokenPostfix: \".ps1\",\n  brackets: [\n    { token: \"delimiter.curly\", open: \"{\", close: \"}\" },\n    { token: \"delimiter.square\", open: \"[\", close: \"]\" },\n    { token: \"delimiter.parenthesis\", open: \"(\", close: \")\" }\n  ],\n  keywords: [\n    \"begin\",\n    \"break\",\n    \"catch\",\n    \"class\",\n    \"continue\",\n    \"data\",\n    \"define\",\n    \"do\",\n    \"dynamicparam\",\n    \"else\",\n    \"elseif\",\n    \"end\",\n    \"exit\",\n    \"filter\",\n    \"finally\",\n    \"for\",\n    \"foreach\",\n    \"from\",\n    \"function\",\n    \"if\",\n    \"in\",\n    \"param\",\n    \"process\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"trap\",\n    \"try\",\n    \"until\",\n    \"using\",\n    \"var\",\n    \"while\",\n    \"workflow\",\n    \"parallel\",\n    \"sequence\",\n    \"inlinescript\",\n    \"configuration\"\n  ],\n  helpKeywords: /SYNOPSIS|DESCRIPTION|PARAMETER|EXAMPLE|INPUTS|OUTPUTS|NOTES|LINK|COMPONENT|ROLE|FUNCTIONALITY|FORWARDHELPTARGETNAME|FORWARDHELPCATEGORY|REMOTEHELPRUNSPACE|EXTERNALHELP/,\n  symbols: /[=><!~?&%|+\\-*\\/\\^;\\.,]+/,\n  escapes: /`(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  tokenizer: {\n    root: [\n      [\n        /[a-zA-Z_][\\w-]*/,\n        {\n          cases: {\n            \"@keywords\": { token: \"keyword.$0\" },\n            \"@default\": \"\"\n          }\n        }\n      ],\n      [/[ \\t\\r\\n]+/, \"\"],\n      [/^:\\w*/, \"metatag\"],\n      [\n        /\\$(\\{((global|local|private|script|using):)?[\\w]+\\}|((global|local|private|script|using):)?[\\w]+)/,\n        \"variable\"\n      ],\n      [/<#/, \"comment\", \"@comment\"],\n      [/#.*$/, \"comment\"],\n      [/[{}()\\[\\]]/, \"@brackets\"],\n      [/@symbols/, \"delimiter\"],\n      [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"],\n      [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, \"number.hex\"],\n      [/\\d+?/, \"number\"],\n      [/[;,.]/, \"delimiter\"],\n      [/\\@\"/, \"string\", '@herestring.\"'],\n      [/\\@'/, \"string\", \"@herestring.'\"],\n      [\n        /\"/,\n        {\n          cases: {\n            \"@eos\": \"string\",\n            \"@default\": { token: \"string\", next: '@string.\"' }\n          }\n        }\n      ],\n      [\n        /'/,\n        {\n          cases: {\n            \"@eos\": \"string\",\n            \"@default\": { token: \"string\", next: \"@string.'\" }\n          }\n        }\n      ]\n    ],\n    string: [\n      [\n        /[^\"'\\$`]+/,\n        {\n          cases: {\n            \"@eos\": { token: \"string\", next: \"@popall\" },\n            \"@default\": \"string\"\n          }\n        }\n      ],\n      [\n        /@escapes/,\n        {\n          cases: {\n            \"@eos\": { token: \"string.escape\", next: \"@popall\" },\n            \"@default\": \"string.escape\"\n          }\n        }\n      ],\n      [\n        /`./,\n        {\n          cases: {\n            \"@eos\": {\n              token: \"string.escape.invalid\",\n              next: \"@popall\"\n            },\n            \"@default\": \"string.escape.invalid\"\n          }\n        }\n      ],\n      [\n        /\\$[\\w]+$/,\n        {\n          cases: {\n            '$S2==\"': { token: \"variable\", next: \"@popall\" },\n            \"@default\": { token: \"string\", next: \"@popall\" }\n          }\n        }\n      ],\n      [\n        /\\$[\\w]+/,\n        {\n          cases: {\n            '$S2==\"': \"variable\",\n            \"@default\": \"string\"\n          }\n        }\n      ],\n      [\n        /[\"']/,\n        {\n          cases: {\n            \"$#==$S2\": { token: \"string\", next: \"@pop\" },\n            \"@default\": {\n              cases: {\n                \"@eos\": { token: \"string\", next: \"@popall\" },\n                \"@default\": \"string\"\n              }\n            }\n          }\n        }\n      ]\n    ],\n    herestring: [\n      [\n        /^\\s*([\"'])@/,\n        {\n          cases: {\n            \"$1==$S2\": { token: \"string\", next: \"@pop\" },\n            \"@default\": \"string\"\n          }\n        }\n      ],\n      [/[^\\$`]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/`./, \"string.escape.invalid\"],\n      [\n        /\\$[\\w]+/,\n        {\n          cases: {\n            '$S2==\"': \"variable\",\n            \"@default\": \"string\"\n          }\n        }\n      ]\n    ],\n    comment: [\n      [/[^#\\.]+/, \"comment\"],\n      [/#>/, \"comment\", \"@pop\"],\n      [/(\\.)(@helpKeywords)(?!\\w)/, { token: \"comment.keyword.$2\" }],\n      [/[\\.#]/, \"comment\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"]},"metadata":{},"sourceType":"module"}