{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class StableEditorScrollState {\n  constructor(_visiblePosition, _visiblePositionScrollDelta, _cursorPosition) {\n    this._visiblePosition = _visiblePosition;\n    this._visiblePositionScrollDelta = _visiblePositionScrollDelta;\n    this._cursorPosition = _cursorPosition;\n  }\n\n  static capture(editor) {\n    let visiblePosition = null;\n    let visiblePositionScrollDelta = 0;\n\n    if (editor.getScrollTop() !== 0) {\n      const visibleRanges = editor.getVisibleRanges();\n\n      if (visibleRanges.length > 0) {\n        visiblePosition = visibleRanges[0].getStartPosition();\n        const visiblePositionScrollTop = editor.getTopForPosition(visiblePosition.lineNumber, visiblePosition.column);\n        visiblePositionScrollDelta = editor.getScrollTop() - visiblePositionScrollTop;\n      }\n    }\n\n    return new StableEditorScrollState(visiblePosition, visiblePositionScrollDelta, editor.getPosition());\n  }\n\n  restore(editor) {\n    if (this._visiblePosition) {\n      const visiblePositionScrollTop = editor.getTopForPosition(this._visiblePosition.lineNumber, this._visiblePosition.column);\n      editor.setScrollTop(visiblePositionScrollTop + this._visiblePositionScrollDelta);\n    }\n  }\n\n  restoreRelativeVerticalPositionOfCursor(editor) {\n    const currentCursorPosition = editor.getPosition();\n\n    if (!this._cursorPosition || !currentCursorPosition) {\n      return;\n    }\n\n    const offset = editor.getTopForLineNumber(currentCursorPosition.lineNumber) - editor.getTopForLineNumber(this._cursorPosition.lineNumber);\n    editor.setScrollTop(editor.getScrollTop() + offset);\n  }\n\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/browser/stableEditorScroll.js"],"names":["StableEditorScrollState","constructor","_visiblePosition","_visiblePositionScrollDelta","_cursorPosition","capture","editor","visiblePosition","visiblePositionScrollDelta","getScrollTop","visibleRanges","getVisibleRanges","length","getStartPosition","visiblePositionScrollTop","getTopForPosition","lineNumber","column","getPosition","restore","setScrollTop","restoreRelativeVerticalPositionOfCursor","currentCursorPosition","offset","getTopForLineNumber"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,MAAMA,uBAAN,CAA8B;AACjCC,EAAAA,WAAW,CAACC,gBAAD,EAAmBC,2BAAnB,EAAgDC,eAAhD,EAAiE;AACxE,SAAKF,gBAAL,GAAwBA,gBAAxB;AACA,SAAKC,2BAAL,GAAmCA,2BAAnC;AACA,SAAKC,eAAL,GAAuBA,eAAvB;AACH;;AACa,SAAPC,OAAO,CAACC,MAAD,EAAS;AACnB,QAAIC,eAAe,GAAG,IAAtB;AACA,QAAIC,0BAA0B,GAAG,CAAjC;;AACA,QAAIF,MAAM,CAACG,YAAP,OAA0B,CAA9B,EAAiC;AAC7B,YAAMC,aAAa,GAAGJ,MAAM,CAACK,gBAAP,EAAtB;;AACA,UAAID,aAAa,CAACE,MAAd,GAAuB,CAA3B,EAA8B;AAC1BL,QAAAA,eAAe,GAAGG,aAAa,CAAC,CAAD,CAAb,CAAiBG,gBAAjB,EAAlB;AACA,cAAMC,wBAAwB,GAAGR,MAAM,CAACS,iBAAP,CAAyBR,eAAe,CAACS,UAAzC,EAAqDT,eAAe,CAACU,MAArE,CAAjC;AACAT,QAAAA,0BAA0B,GAAGF,MAAM,CAACG,YAAP,KAAwBK,wBAArD;AACH;AACJ;;AACD,WAAO,IAAId,uBAAJ,CAA4BO,eAA5B,EAA6CC,0BAA7C,EAAyEF,MAAM,CAACY,WAAP,EAAzE,CAAP;AACH;;AACDC,EAAAA,OAAO,CAACb,MAAD,EAAS;AACZ,QAAI,KAAKJ,gBAAT,EAA2B;AACvB,YAAMY,wBAAwB,GAAGR,MAAM,CAACS,iBAAP,CAAyB,KAAKb,gBAAL,CAAsBc,UAA/C,EAA2D,KAAKd,gBAAL,CAAsBe,MAAjF,CAAjC;AACAX,MAAAA,MAAM,CAACc,YAAP,CAAoBN,wBAAwB,GAAG,KAAKX,2BAApD;AACH;AACJ;;AACDkB,EAAAA,uCAAuC,CAACf,MAAD,EAAS;AAC5C,UAAMgB,qBAAqB,GAAGhB,MAAM,CAACY,WAAP,EAA9B;;AACA,QAAI,CAAC,KAAKd,eAAN,IAAyB,CAACkB,qBAA9B,EAAqD;AACjD;AACH;;AACD,UAAMC,MAAM,GAAGjB,MAAM,CAACkB,mBAAP,CAA2BF,qBAAqB,CAACN,UAAjD,IAA+DV,MAAM,CAACkB,mBAAP,CAA2B,KAAKpB,eAAL,CAAqBY,UAAhD,CAA9E;AACAV,IAAAA,MAAM,CAACc,YAAP,CAAoBd,MAAM,CAACG,YAAP,KAAwBc,MAA5C;AACH;;AAhCgC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class StableEditorScrollState {\n    constructor(_visiblePosition, _visiblePositionScrollDelta, _cursorPosition) {\n        this._visiblePosition = _visiblePosition;\n        this._visiblePositionScrollDelta = _visiblePositionScrollDelta;\n        this._cursorPosition = _cursorPosition;\n    }\n    static capture(editor) {\n        let visiblePosition = null;\n        let visiblePositionScrollDelta = 0;\n        if (editor.getScrollTop() !== 0) {\n            const visibleRanges = editor.getVisibleRanges();\n            if (visibleRanges.length > 0) {\n                visiblePosition = visibleRanges[0].getStartPosition();\n                const visiblePositionScrollTop = editor.getTopForPosition(visiblePosition.lineNumber, visiblePosition.column);\n                visiblePositionScrollDelta = editor.getScrollTop() - visiblePositionScrollTop;\n            }\n        }\n        return new StableEditorScrollState(visiblePosition, visiblePositionScrollDelta, editor.getPosition());\n    }\n    restore(editor) {\n        if (this._visiblePosition) {\n            const visiblePositionScrollTop = editor.getTopForPosition(this._visiblePosition.lineNumber, this._visiblePosition.column);\n            editor.setScrollTop(visiblePositionScrollTop + this._visiblePositionScrollDelta);\n        }\n    }\n    restoreRelativeVerticalPositionOfCursor(editor) {\n        const currentCursorPosition = editor.getPosition();\n        if (!this._cursorPosition || !currentCursorPosition) {\n            return;\n        }\n        const offset = editor.getTopForLineNumber(currentCursorPosition.lineNumber) - editor.getTopForLineNumber(this._cursorPosition.lineNumber);\n        editor.setScrollTop(editor.getScrollTop() + offset);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}