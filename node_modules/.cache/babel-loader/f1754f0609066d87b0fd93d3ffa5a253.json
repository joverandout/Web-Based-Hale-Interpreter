{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { CSSIcon } from '../../../common/codicons.js';\nconst labelWithIconsRegex = new RegExp(`(\\\\\\\\)?\\\\$\\\\((${CSSIcon.iconNameExpression}(?:${CSSIcon.iconModifierExpression})?)\\\\)`, 'g');\nexport function renderLabelWithIcons(text) {\n  const elements = new Array();\n  let match;\n  let textStart = 0,\n      textStop = 0;\n\n  while ((match = labelWithIconsRegex.exec(text)) !== null) {\n    textStop = match.index || 0;\n    elements.push(text.substring(textStart, textStop));\n    textStart = (match.index || 0) + match[0].length;\n    const [, escaped, codicon] = match;\n    elements.push(escaped ? `$(${codicon})` : renderIcon({\n      id: codicon\n    }));\n  }\n\n  if (textStart < text.length) {\n    elements.push(text.substring(textStart));\n  }\n\n  return elements;\n}\nexport function renderIcon(icon) {\n  const node = dom.$(`span`);\n  node.classList.add(...CSSIcon.asClassNameArray(icon));\n  return node;\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/base/browser/ui/iconLabel/iconLabels.js"],"names":["dom","CSSIcon","labelWithIconsRegex","RegExp","iconNameExpression","iconModifierExpression","renderLabelWithIcons","text","elements","Array","match","textStart","textStop","exec","index","push","substring","length","escaped","codicon","renderIcon","id","icon","node","$","classList","add","asClassNameArray"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,KAAKA,GAAZ,MAAqB,cAArB;AACA,SAASC,OAAT,QAAwB,6BAAxB;AACA,MAAMC,mBAAmB,GAAG,IAAIC,MAAJ,CAAY,iBAAgBF,OAAO,CAACG,kBAAmB,MAAKH,OAAO,CAACI,sBAAuB,QAA3F,EAAoG,GAApG,CAA5B;AACA,OAAO,SAASC,oBAAT,CAA8BC,IAA9B,EAAoC;AACvC,QAAMC,QAAQ,GAAG,IAAIC,KAAJ,EAAjB;AACA,MAAIC,KAAJ;AACA,MAAIC,SAAS,GAAG,CAAhB;AAAA,MAAmBC,QAAQ,GAAG,CAA9B;;AACA,SAAO,CAACF,KAAK,GAAGR,mBAAmB,CAACW,IAApB,CAAyBN,IAAzB,CAAT,MAA6C,IAApD,EAA0D;AACtDK,IAAAA,QAAQ,GAAGF,KAAK,CAACI,KAAN,IAAe,CAA1B;AACAN,IAAAA,QAAQ,CAACO,IAAT,CAAcR,IAAI,CAACS,SAAL,CAAeL,SAAf,EAA0BC,QAA1B,CAAd;AACAD,IAAAA,SAAS,GAAG,CAACD,KAAK,CAACI,KAAN,IAAe,CAAhB,IAAqBJ,KAAK,CAAC,CAAD,CAAL,CAASO,MAA1C;AACA,UAAM,GAAGC,OAAH,EAAYC,OAAZ,IAAuBT,KAA7B;AACAF,IAAAA,QAAQ,CAACO,IAAT,CAAcG,OAAO,GAAI,KAAIC,OAAQ,GAAhB,GAAqBC,UAAU,CAAC;AAAEC,MAAAA,EAAE,EAAEF;AAAN,KAAD,CAApD;AACH;;AACD,MAAIR,SAAS,GAAGJ,IAAI,CAACU,MAArB,EAA6B;AACzBT,IAAAA,QAAQ,CAACO,IAAT,CAAcR,IAAI,CAACS,SAAL,CAAeL,SAAf,CAAd;AACH;;AACD,SAAOH,QAAP;AACH;AACD,OAAO,SAASY,UAAT,CAAoBE,IAApB,EAA0B;AAC7B,QAAMC,IAAI,GAAGvB,GAAG,CAACwB,CAAJ,CAAO,MAAP,CAAb;AACAD,EAAAA,IAAI,CAACE,SAAL,CAAeC,GAAf,CAAmB,GAAGzB,OAAO,CAAC0B,gBAAR,CAAyBL,IAAzB,CAAtB;AACA,SAAOC,IAAP;AACH","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { CSSIcon } from '../../../common/codicons.js';\nconst labelWithIconsRegex = new RegExp(`(\\\\\\\\)?\\\\$\\\\((${CSSIcon.iconNameExpression}(?:${CSSIcon.iconModifierExpression})?)\\\\)`, 'g');\nexport function renderLabelWithIcons(text) {\n    const elements = new Array();\n    let match;\n    let textStart = 0, textStop = 0;\n    while ((match = labelWithIconsRegex.exec(text)) !== null) {\n        textStop = match.index || 0;\n        elements.push(text.substring(textStart, textStop));\n        textStart = (match.index || 0) + match[0].length;\n        const [, escaped, codicon] = match;\n        elements.push(escaped ? `$(${codicon})` : renderIcon({ id: codicon }));\n    }\n    if (textStart < text.length) {\n        elements.push(text.substring(textStart));\n    }\n    return elements;\n}\nexport function renderIcon(icon) {\n    const node = dom.$(`span`);\n    node.classList.add(...CSSIcon.asClassNameArray(icon));\n    return node;\n}\n"]},"metadata":{},"sourceType":"module"}