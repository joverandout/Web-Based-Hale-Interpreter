{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport './renameInputField.css';\nimport { Position } from '../../../common/core/position.js';\nimport { localize } from '../../../../nls.js';\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { editorWidgetBackground, inputBackground, inputBorder, inputForeground, widgetShadow } from '../../../../platform/theme/common/colorRegistry.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nexport const CONTEXT_RENAME_INPUT_VISIBLE = new RawContextKey('renameInputVisible', false, localize('renameInputVisible', \"Whether the rename input widget is visible\"));\nlet RenameInputField = class RenameInputField {\n  constructor(_editor, _acceptKeybindings, _themeService, _keybindingService, contextKeyService) {\n    this._editor = _editor;\n    this._acceptKeybindings = _acceptKeybindings;\n    this._themeService = _themeService;\n    this._keybindingService = _keybindingService;\n    this._disposables = new DisposableStore();\n    this.allowEditorOverflow = true;\n    this._visibleContextKey = CONTEXT_RENAME_INPUT_VISIBLE.bindTo(contextKeyService);\n\n    this._editor.addContentWidget(this);\n\n    this._disposables.add(this._editor.onDidChangeConfiguration(e => {\n      if (e.hasChanged(44\n      /* fontInfo */\n      )) {\n        this._updateFont();\n      }\n    }));\n\n    this._disposables.add(_themeService.onDidColorThemeChange(this._updateStyles, this));\n  }\n\n  dispose() {\n    this._disposables.dispose();\n\n    this._editor.removeContentWidget(this);\n  }\n\n  getId() {\n    return '__renameInputWidget';\n  }\n\n  getDomNode() {\n    if (!this._domNode) {\n      this._domNode = document.createElement('div');\n      this._domNode.className = 'monaco-editor rename-box';\n      this._input = document.createElement('input');\n      this._input.className = 'rename-input';\n      this._input.type = 'text';\n\n      this._input.setAttribute('aria-label', localize('renameAriaLabel', \"Rename input. Type new name and press Enter to commit.\"));\n\n      this._domNode.appendChild(this._input);\n\n      this._label = document.createElement('div');\n      this._label.className = 'rename-label';\n\n      this._domNode.appendChild(this._label);\n\n      const updateLabel = () => {\n        var _a, _b;\n\n        const [accept, preview] = this._acceptKeybindings;\n\n        this._keybindingService.lookupKeybinding(accept);\n\n        this._label.innerText = localize({\n          key: 'label',\n          comment: ['placeholders are keybindings, e.g \"F2 to Rename, Shift+F2 to Preview\"']\n        }, \"{0} to Rename, {1} to Preview\", (_a = this._keybindingService.lookupKeybinding(accept)) === null || _a === void 0 ? void 0 : _a.getLabel(), (_b = this._keybindingService.lookupKeybinding(preview)) === null || _b === void 0 ? void 0 : _b.getLabel());\n      };\n\n      updateLabel();\n\n      this._disposables.add(this._keybindingService.onDidUpdateKeybindings(updateLabel));\n\n      this._updateFont();\n\n      this._updateStyles(this._themeService.getColorTheme());\n    }\n\n    return this._domNode;\n  }\n\n  _updateStyles(theme) {\n    var _a, _b, _c, _d;\n\n    if (!this._input || !this._domNode) {\n      return;\n    }\n\n    const widgetShadowColor = theme.getColor(widgetShadow);\n    this._domNode.style.backgroundColor = String((_a = theme.getColor(editorWidgetBackground)) !== null && _a !== void 0 ? _a : '');\n    this._domNode.style.boxShadow = widgetShadowColor ? ` 0 0 8px 2px ${widgetShadowColor}` : '';\n    this._domNode.style.color = String((_b = theme.getColor(inputForeground)) !== null && _b !== void 0 ? _b : '');\n    this._input.style.backgroundColor = String((_c = theme.getColor(inputBackground)) !== null && _c !== void 0 ? _c : ''); // this._input.style.color = String(theme.getColor(inputForeground) ?? '');\n\n    const border = theme.getColor(inputBorder);\n    this._input.style.borderWidth = border ? '1px' : '0px';\n    this._input.style.borderStyle = border ? 'solid' : 'none';\n    this._input.style.borderColor = (_d = border === null || border === void 0 ? void 0 : border.toString()) !== null && _d !== void 0 ? _d : 'none';\n  }\n\n  _updateFont() {\n    if (!this._input || !this._label) {\n      return;\n    }\n\n    const fontInfo = this._editor.getOption(44\n    /* fontInfo */\n    );\n\n    this._input.style.fontFamily = fontInfo.fontFamily;\n    this._input.style.fontWeight = fontInfo.fontWeight;\n    this._input.style.fontSize = `${fontInfo.fontSize}px`;\n    this._label.style.fontSize = `${fontInfo.fontSize * 0.8}px`;\n  }\n\n  getPosition() {\n    if (!this._visible) {\n      return null;\n    }\n\n    return {\n      position: this._position,\n      preference: [2\n      /* BELOW */\n      , 1\n      /* ABOVE */\n      ]\n    };\n  }\n\n  afterRender(position) {\n    if (!position) {\n      // cancel rename when input widget isn't rendered anymore\n      this.cancelInput(true);\n    }\n  }\n\n  acceptInput(wantsPreview) {\n    if (this._currentAcceptInput) {\n      this._currentAcceptInput(wantsPreview);\n    }\n  }\n\n  cancelInput(focusEditor) {\n    if (this._currentCancelInput) {\n      this._currentCancelInput(focusEditor);\n    }\n  }\n\n  getInput(where, value, selectionStart, selectionEnd, supportPreview, token) {\n    this._domNode.classList.toggle('preview', supportPreview);\n\n    this._position = new Position(where.startLineNumber, where.startColumn);\n    this._input.value = value;\n\n    this._input.setAttribute('selectionStart', selectionStart.toString());\n\n    this._input.setAttribute('selectionEnd', selectionEnd.toString());\n\n    this._input.size = Math.max((where.endColumn - where.startColumn) * 1.1, 20);\n    const disposeOnDone = new DisposableStore();\n    return new Promise(resolve => {\n      this._currentCancelInput = focusEditor => {\n        this._currentAcceptInput = undefined;\n        this._currentCancelInput = undefined;\n        resolve(focusEditor);\n        return true;\n      };\n\n      this._currentAcceptInput = wantsPreview => {\n        if (this._input.value.trim().length === 0 || this._input.value === value) {\n          // empty or whitespace only or not changed\n          this.cancelInput(true);\n          return;\n        }\n\n        this._currentAcceptInput = undefined;\n        this._currentCancelInput = undefined;\n        resolve({\n          newName: this._input.value,\n          wantsPreview: supportPreview && wantsPreview\n        });\n      };\n\n      token.onCancellationRequested(() => this.cancelInput(true));\n      disposeOnDone.add(this._editor.onDidBlurEditorWidget(() => this.cancelInput(false)));\n\n      this._show();\n    }).finally(() => {\n      disposeOnDone.dispose();\n\n      this._hide();\n    });\n  }\n\n  _show() {\n    this._editor.revealLineInCenterIfOutsideViewport(this._position.lineNumber, 0\n    /* Smooth */\n    );\n\n    this._visible = true;\n\n    this._visibleContextKey.set(true);\n\n    this._editor.layoutContentWidget(this);\n\n    setTimeout(() => {\n      this._input.focus();\n\n      this._input.setSelectionRange(parseInt(this._input.getAttribute('selectionStart')), parseInt(this._input.getAttribute('selectionEnd')));\n    }, 100);\n  }\n\n  _hide() {\n    this._visible = false;\n\n    this._visibleContextKey.reset();\n\n    this._editor.layoutContentWidget(this);\n  }\n\n};\nRenameInputField = __decorate([__param(2, IThemeService), __param(3, IKeybindingService), __param(4, IContextKeyService)], RenameInputField);\nexport { RenameInputField };","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/contrib/rename/browser/renameInputField.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","DisposableStore","Position","localize","IContextKeyService","RawContextKey","IKeybindingService","editorWidgetBackground","inputBackground","inputBorder","inputForeground","widgetShadow","IThemeService","CONTEXT_RENAME_INPUT_VISIBLE","RenameInputField","constructor","_editor","_acceptKeybindings","_themeService","_keybindingService","contextKeyService","_disposables","allowEditorOverflow","_visibleContextKey","bindTo","addContentWidget","add","onDidChangeConfiguration","e","hasChanged","_updateFont","onDidColorThemeChange","_updateStyles","dispose","removeContentWidget","getId","getDomNode","_domNode","document","createElement","className","_input","type","setAttribute","appendChild","_label","updateLabel","_a","_b","accept","preview","lookupKeybinding","innerText","comment","getLabel","onDidUpdateKeybindings","getColorTheme","theme","_c","_d","widgetShadowColor","getColor","style","backgroundColor","String","boxShadow","color","border","borderWidth","borderStyle","borderColor","toString","fontInfo","getOption","fontFamily","fontWeight","fontSize","getPosition","_visible","position","_position","preference","afterRender","cancelInput","acceptInput","wantsPreview","_currentAcceptInput","focusEditor","_currentCancelInput","getInput","where","value","selectionStart","selectionEnd","supportPreview","token","classList","toggle","startLineNumber","startColumn","size","Math","max","endColumn","disposeOnDone","Promise","resolve","undefined","trim","newName","onCancellationRequested","onDidBlurEditorWidget","_show","finally","_hide","revealLineInCenterIfOutsideViewport","lineNumber","set","layoutContentWidget","setTimeout","focus","setSelectionRange","parseInt","getAttribute","reset"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport './renameInputField.css';\nimport { Position } from '../../../common/core/position.js';\nimport { localize } from '../../../../nls.js';\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { editorWidgetBackground, inputBackground, inputBorder, inputForeground, widgetShadow } from '../../../../platform/theme/common/colorRegistry.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nexport const CONTEXT_RENAME_INPUT_VISIBLE = new RawContextKey('renameInputVisible', false, localize('renameInputVisible', \"Whether the rename input widget is visible\"));\nlet RenameInputField = class RenameInputField {\n    constructor(_editor, _acceptKeybindings, _themeService, _keybindingService, contextKeyService) {\n        this._editor = _editor;\n        this._acceptKeybindings = _acceptKeybindings;\n        this._themeService = _themeService;\n        this._keybindingService = _keybindingService;\n        this._disposables = new DisposableStore();\n        this.allowEditorOverflow = true;\n        this._visibleContextKey = CONTEXT_RENAME_INPUT_VISIBLE.bindTo(contextKeyService);\n        this._editor.addContentWidget(this);\n        this._disposables.add(this._editor.onDidChangeConfiguration(e => {\n            if (e.hasChanged(44 /* fontInfo */)) {\n                this._updateFont();\n            }\n        }));\n        this._disposables.add(_themeService.onDidColorThemeChange(this._updateStyles, this));\n    }\n    dispose() {\n        this._disposables.dispose();\n        this._editor.removeContentWidget(this);\n    }\n    getId() {\n        return '__renameInputWidget';\n    }\n    getDomNode() {\n        if (!this._domNode) {\n            this._domNode = document.createElement('div');\n            this._domNode.className = 'monaco-editor rename-box';\n            this._input = document.createElement('input');\n            this._input.className = 'rename-input';\n            this._input.type = 'text';\n            this._input.setAttribute('aria-label', localize('renameAriaLabel', \"Rename input. Type new name and press Enter to commit.\"));\n            this._domNode.appendChild(this._input);\n            this._label = document.createElement('div');\n            this._label.className = 'rename-label';\n            this._domNode.appendChild(this._label);\n            const updateLabel = () => {\n                var _a, _b;\n                const [accept, preview] = this._acceptKeybindings;\n                this._keybindingService.lookupKeybinding(accept);\n                this._label.innerText = localize({ key: 'label', comment: ['placeholders are keybindings, e.g \"F2 to Rename, Shift+F2 to Preview\"'] }, \"{0} to Rename, {1} to Preview\", (_a = this._keybindingService.lookupKeybinding(accept)) === null || _a === void 0 ? void 0 : _a.getLabel(), (_b = this._keybindingService.lookupKeybinding(preview)) === null || _b === void 0 ? void 0 : _b.getLabel());\n            };\n            updateLabel();\n            this._disposables.add(this._keybindingService.onDidUpdateKeybindings(updateLabel));\n            this._updateFont();\n            this._updateStyles(this._themeService.getColorTheme());\n        }\n        return this._domNode;\n    }\n    _updateStyles(theme) {\n        var _a, _b, _c, _d;\n        if (!this._input || !this._domNode) {\n            return;\n        }\n        const widgetShadowColor = theme.getColor(widgetShadow);\n        this._domNode.style.backgroundColor = String((_a = theme.getColor(editorWidgetBackground)) !== null && _a !== void 0 ? _a : '');\n        this._domNode.style.boxShadow = widgetShadowColor ? ` 0 0 8px 2px ${widgetShadowColor}` : '';\n        this._domNode.style.color = String((_b = theme.getColor(inputForeground)) !== null && _b !== void 0 ? _b : '');\n        this._input.style.backgroundColor = String((_c = theme.getColor(inputBackground)) !== null && _c !== void 0 ? _c : '');\n        // this._input.style.color = String(theme.getColor(inputForeground) ?? '');\n        const border = theme.getColor(inputBorder);\n        this._input.style.borderWidth = border ? '1px' : '0px';\n        this._input.style.borderStyle = border ? 'solid' : 'none';\n        this._input.style.borderColor = (_d = border === null || border === void 0 ? void 0 : border.toString()) !== null && _d !== void 0 ? _d : 'none';\n    }\n    _updateFont() {\n        if (!this._input || !this._label) {\n            return;\n        }\n        const fontInfo = this._editor.getOption(44 /* fontInfo */);\n        this._input.style.fontFamily = fontInfo.fontFamily;\n        this._input.style.fontWeight = fontInfo.fontWeight;\n        this._input.style.fontSize = `${fontInfo.fontSize}px`;\n        this._label.style.fontSize = `${fontInfo.fontSize * 0.8}px`;\n    }\n    getPosition() {\n        if (!this._visible) {\n            return null;\n        }\n        return {\n            position: this._position,\n            preference: [2 /* BELOW */, 1 /* ABOVE */]\n        };\n    }\n    afterRender(position) {\n        if (!position) {\n            // cancel rename when input widget isn't rendered anymore\n            this.cancelInput(true);\n        }\n    }\n    acceptInput(wantsPreview) {\n        if (this._currentAcceptInput) {\n            this._currentAcceptInput(wantsPreview);\n        }\n    }\n    cancelInput(focusEditor) {\n        if (this._currentCancelInput) {\n            this._currentCancelInput(focusEditor);\n        }\n    }\n    getInput(where, value, selectionStart, selectionEnd, supportPreview, token) {\n        this._domNode.classList.toggle('preview', supportPreview);\n        this._position = new Position(where.startLineNumber, where.startColumn);\n        this._input.value = value;\n        this._input.setAttribute('selectionStart', selectionStart.toString());\n        this._input.setAttribute('selectionEnd', selectionEnd.toString());\n        this._input.size = Math.max((where.endColumn - where.startColumn) * 1.1, 20);\n        const disposeOnDone = new DisposableStore();\n        return new Promise(resolve => {\n            this._currentCancelInput = (focusEditor) => {\n                this._currentAcceptInput = undefined;\n                this._currentCancelInput = undefined;\n                resolve(focusEditor);\n                return true;\n            };\n            this._currentAcceptInput = (wantsPreview) => {\n                if (this._input.value.trim().length === 0 || this._input.value === value) {\n                    // empty or whitespace only or not changed\n                    this.cancelInput(true);\n                    return;\n                }\n                this._currentAcceptInput = undefined;\n                this._currentCancelInput = undefined;\n                resolve({\n                    newName: this._input.value,\n                    wantsPreview: supportPreview && wantsPreview\n                });\n            };\n            token.onCancellationRequested(() => this.cancelInput(true));\n            disposeOnDone.add(this._editor.onDidBlurEditorWidget(() => this.cancelInput(false)));\n            this._show();\n        }).finally(() => {\n            disposeOnDone.dispose();\n            this._hide();\n        });\n    }\n    _show() {\n        this._editor.revealLineInCenterIfOutsideViewport(this._position.lineNumber, 0 /* Smooth */);\n        this._visible = true;\n        this._visibleContextKey.set(true);\n        this._editor.layoutContentWidget(this);\n        setTimeout(() => {\n            this._input.focus();\n            this._input.setSelectionRange(parseInt(this._input.getAttribute('selectionStart')), parseInt(this._input.getAttribute('selectionEnd')));\n        }, 100);\n    }\n    _hide() {\n        this._visible = false;\n        this._visibleContextKey.reset();\n        this._editor.layoutContentWidget(this);\n    }\n};\nRenameInputField = __decorate([\n    __param(2, IThemeService),\n    __param(3, IKeybindingService),\n    __param(4, IContextKeyService)\n], RenameInputField);\nexport { RenameInputField };\n"]},"metadata":{},"sourceType":"module"}