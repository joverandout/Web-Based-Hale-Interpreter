{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport * as nls from '../../../nls.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { Action } from '../../../base/common/actions.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { Range } from '../../common/core/range.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nexport class InlineDiffMargin extends Disposable {\n  constructor(_viewZoneId, _marginDomNode, editor, diff, _contextMenuService, _clipboardService) {\n    super();\n    this._viewZoneId = _viewZoneId;\n    this._marginDomNode = _marginDomNode;\n    this.editor = editor;\n    this.diff = diff;\n    this._contextMenuService = _contextMenuService;\n    this._clipboardService = _clipboardService;\n    this._visibility = false; // make sure the diff margin shows above overlay.\n\n    this._marginDomNode.style.zIndex = '10';\n    this._diffActions = document.createElement('div');\n    this._diffActions.className = Codicon.lightBulb.classNames + ' lightbulb-glyph';\n    this._diffActions.style.position = 'absolute';\n    const lineHeight = editor.getOption(59\n    /* lineHeight */\n    );\n    const lineFeed = editor.getModel().getEOL();\n    this._diffActions.style.right = '0px';\n    this._diffActions.style.visibility = 'hidden';\n    this._diffActions.style.height = `${lineHeight}px`;\n    this._diffActions.style.lineHeight = `${lineHeight}px`;\n\n    this._marginDomNode.appendChild(this._diffActions);\n\n    const actions = [];\n    const isDeletion = diff.modifiedEndLineNumber === 0; // default action\n\n    actions.push(new Action('diff.clipboard.copyDeletedContent', isDeletion ? diff.originalEndLineNumber > diff.modifiedStartLineNumber ? nls.localize('diff.clipboard.copyDeletedLinesContent.label', \"Copy deleted lines\") : nls.localize('diff.clipboard.copyDeletedLinesContent.single.label', \"Copy deleted line\") : diff.originalEndLineNumber > diff.modifiedStartLineNumber ? nls.localize('diff.clipboard.copyChangedLinesContent.label', \"Copy changed lines\") : nls.localize('diff.clipboard.copyChangedLinesContent.single.label', \"Copy changed line\"), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n      const range = new Range(diff.originalStartLineNumber, 1, diff.originalEndLineNumber + 1, 1);\n      const deletedText = diff.originalModel.getValueInRange(range);\n      yield this._clipboardService.writeText(deletedText);\n    })));\n    let currentLineNumberOffset = 0;\n    let copyLineAction = undefined;\n\n    if (diff.originalEndLineNumber > diff.modifiedStartLineNumber) {\n      copyLineAction = new Action('diff.clipboard.copyDeletedLineContent', isDeletion ? nls.localize('diff.clipboard.copyDeletedLineContent.label', \"Copy deleted line ({0})\", diff.originalStartLineNumber) : nls.localize('diff.clipboard.copyChangedLineContent.label', \"Copy changed line ({0})\", diff.originalStartLineNumber), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n        const lineContent = diff.originalModel.getLineContent(diff.originalStartLineNumber + currentLineNumberOffset);\n\n        if (lineContent === '') {\n          // empty line\n          const eof = diff.originalModel.getEndOfLineSequence();\n          yield this._clipboardService.writeText(eof === 0\n          /* LF */\n          ? '\\n' : '\\r\\n');\n        } else {\n          yield this._clipboardService.writeText(lineContent);\n        }\n      }));\n      actions.push(copyLineAction);\n    }\n\n    const readOnly = editor.getOption(81\n    /* readOnly */\n    );\n\n    if (!readOnly) {\n      actions.push(new Action('diff.inline.revertChange', nls.localize('diff.inline.revertChange.label', \"Revert this change\"), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n        const range = new Range(diff.originalStartLineNumber, 1, diff.originalEndLineNumber, diff.originalModel.getLineMaxColumn(diff.originalEndLineNumber));\n        const deletedText = diff.originalModel.getValueInRange(range);\n\n        if (diff.modifiedEndLineNumber === 0) {\n          // deletion only\n          const column = editor.getModel().getLineMaxColumn(diff.modifiedStartLineNumber);\n          editor.executeEdits('diffEditor', [{\n            range: new Range(diff.modifiedStartLineNumber, column, diff.modifiedStartLineNumber, column),\n            text: lineFeed + deletedText\n          }]);\n        } else {\n          const column = editor.getModel().getLineMaxColumn(diff.modifiedEndLineNumber);\n          editor.executeEdits('diffEditor', [{\n            range: new Range(diff.modifiedStartLineNumber, 1, diff.modifiedEndLineNumber, column),\n            text: deletedText\n          }]);\n        }\n      })));\n    }\n\n    const showContextMenu = (x, y) => {\n      this._contextMenuService.showContextMenu({\n        getAnchor: () => {\n          return {\n            x,\n            y\n          };\n        },\n        getActions: () => {\n          if (copyLineAction) {\n            copyLineAction.label = isDeletion ? nls.localize('diff.clipboard.copyDeletedLineContent.label', \"Copy deleted line ({0})\", diff.originalStartLineNumber + currentLineNumberOffset) : nls.localize('diff.clipboard.copyChangedLineContent.label', \"Copy changed line ({0})\", diff.originalStartLineNumber + currentLineNumberOffset);\n          }\n\n          return actions;\n        },\n        autoSelectFirstItem: true\n      });\n    };\n\n    this._register(dom.addStandardDisposableListener(this._diffActions, 'mousedown', e => {\n      const {\n        top,\n        height\n      } = dom.getDomNodePagePosition(this._diffActions);\n      const pad = Math.floor(lineHeight / 3);\n      e.preventDefault();\n      showContextMenu(e.posx, top + height + pad);\n    }));\n\n    this._register(editor.onMouseMove(e => {\n      if (e.target.type === 8\n      /* CONTENT_VIEW_ZONE */\n      || e.target.type === 5\n      /* GUTTER_VIEW_ZONE */\n      ) {\n        const viewZoneId = e.target.detail.viewZoneId;\n\n        if (viewZoneId === this._viewZoneId) {\n          this.visibility = true;\n          currentLineNumberOffset = this._updateLightBulbPosition(this._marginDomNode, e.event.browserEvent.y, lineHeight);\n        } else {\n          this.visibility = false;\n        }\n      } else {\n        this.visibility = false;\n      }\n    }));\n\n    this._register(editor.onMouseDown(e => {\n      if (!e.event.rightButton) {\n        return;\n      }\n\n      if (e.target.type === 8\n      /* CONTENT_VIEW_ZONE */\n      || e.target.type === 5\n      /* GUTTER_VIEW_ZONE */\n      ) {\n        const viewZoneId = e.target.detail.viewZoneId;\n\n        if (viewZoneId === this._viewZoneId) {\n          e.event.preventDefault();\n          currentLineNumberOffset = this._updateLightBulbPosition(this._marginDomNode, e.event.browserEvent.y, lineHeight);\n          showContextMenu(e.event.posx, e.event.posy + lineHeight);\n        }\n      }\n    }));\n  }\n\n  get visibility() {\n    return this._visibility;\n  }\n\n  set visibility(_visibility) {\n    if (this._visibility !== _visibility) {\n      this._visibility = _visibility;\n\n      if (_visibility) {\n        this._diffActions.style.visibility = 'visible';\n      } else {\n        this._diffActions.style.visibility = 'hidden';\n      }\n    }\n  }\n\n  _updateLightBulbPosition(marginDomNode, y, lineHeight) {\n    const {\n      top\n    } = dom.getDomNodePagePosition(marginDomNode);\n    const offset = y - top;\n    const lineNumberOffset = Math.floor(offset / lineHeight);\n    const newTop = lineNumberOffset * lineHeight;\n    this._diffActions.style.top = `${newTop}px`;\n\n    if (this.diff.viewLineCounts) {\n      let acc = 0;\n\n      for (let i = 0; i < this.diff.viewLineCounts.length; i++) {\n        acc += this.diff.viewLineCounts[i];\n\n        if (lineNumberOffset < acc) {\n          return i;\n        }\n      }\n    }\n\n    return lineNumberOffset;\n  }\n\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/browser/widget/inlineDiffMargin.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","nls","dom","Action","Disposable","Range","Codicon","InlineDiffMargin","constructor","_viewZoneId","_marginDomNode","editor","diff","_contextMenuService","_clipboardService","_visibility","style","zIndex","_diffActions","document","createElement","className","lightBulb","classNames","position","lineHeight","getOption","lineFeed","getModel","getEOL","right","visibility","height","appendChild","actions","isDeletion","modifiedEndLineNumber","push","originalEndLineNumber","modifiedStartLineNumber","localize","undefined","range","originalStartLineNumber","deletedText","originalModel","getValueInRange","writeText","currentLineNumberOffset","copyLineAction","lineContent","getLineContent","eof","getEndOfLineSequence","readOnly","getLineMaxColumn","column","executeEdits","text","showContextMenu","x","y","getAnchor","getActions","label","autoSelectFirstItem","_register","addStandardDisposableListener","top","getDomNodePagePosition","pad","Math","floor","preventDefault","posx","onMouseMove","target","type","viewZoneId","detail","_updateLightBulbPosition","event","browserEvent","onMouseDown","rightButton","posy","marginDomNode","offset","lineNumberOffset","newTop","viewLineCounts","acc","i","length"],"mappings":"AAAA;AACA;AACA;AACA;AACA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA4B,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AACrF,WAASC,KAAT,CAAeC,KAAf,EAAsB;AAAE,WAAOA,KAAK,YAAYH,CAAjB,GAAqBG,KAArB,GAA6B,IAAIH,CAAJ,CAAM,UAAUI,OAAV,EAAmB;AAAEA,MAAAA,OAAO,CAACD,KAAD,CAAP;AAAiB,KAA5C,CAApC;AAAoF;;AAC5G,SAAO,KAAKH,CAAC,KAAKA,CAAC,GAAGK,OAAT,CAAN,EAAyB,UAAUD,OAAV,EAAmBE,MAAnB,EAA2B;AACvD,aAASC,SAAT,CAAmBJ,KAAnB,EAA0B;AAAE,UAAI;AAAEK,QAAAA,IAAI,CAACP,SAAS,CAACQ,IAAV,CAAeN,KAAf,CAAD,CAAJ;AAA8B,OAApC,CAAqC,OAAOO,CAAP,EAAU;AAAEJ,QAAAA,MAAM,CAACI,CAAD,CAAN;AAAY;AAAE;;AAC3F,aAASC,QAAT,CAAkBR,KAAlB,EAAyB;AAAE,UAAI;AAAEK,QAAAA,IAAI,CAACP,SAAS,CAAC,OAAD,CAAT,CAAmBE,KAAnB,CAAD,CAAJ;AAAkC,OAAxC,CAAyC,OAAOO,CAAP,EAAU;AAAEJ,QAAAA,MAAM,CAACI,CAAD,CAAN;AAAY;AAAE;;AAC9F,aAASF,IAAT,CAAcI,MAAd,EAAsB;AAAEA,MAAAA,MAAM,CAACC,IAAP,GAAcT,OAAO,CAACQ,MAAM,CAACT,KAAR,CAArB,GAAsCD,KAAK,CAACU,MAAM,CAACT,KAAR,CAAL,CAAoBW,IAApB,CAAyBP,SAAzB,EAAoCI,QAApC,CAAtC;AAAsF;;AAC9GH,IAAAA,IAAI,CAAC,CAACP,SAAS,GAAGA,SAAS,CAACc,KAAV,CAAgBjB,OAAhB,EAAyBC,UAAU,IAAI,EAAvC,CAAb,EAAyDU,IAAzD,EAAD,CAAJ;AACH,GALM,CAAP;AAMH,CARD;;AASA,OAAO,KAAKO,GAAZ,MAAqB,iBAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,8BAArB;AACA,SAASC,MAAT,QAAuB,iCAAvB;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA,SAASC,KAAT,QAAsB,4BAAtB;AACA,SAASC,OAAT,QAAwB,kCAAxB;AACA,OAAO,MAAMC,gBAAN,SAA+BH,UAA/B,CAA0C;AAC7CI,EAAAA,WAAW,CAACC,WAAD,EAAcC,cAAd,EAA8BC,MAA9B,EAAsCC,IAAtC,EAA4CC,mBAA5C,EAAiEC,iBAAjE,EAAoF;AAC3F;AACA,SAAKL,WAAL,GAAmBA,WAAnB;AACA,SAAKC,cAAL,GAAsBA,cAAtB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,mBAAL,GAA2BA,mBAA3B;AACA,SAAKC,iBAAL,GAAyBA,iBAAzB;AACA,SAAKC,WAAL,GAAmB,KAAnB,CAR2F,CAS3F;;AACA,SAAKL,cAAL,CAAoBM,KAApB,CAA0BC,MAA1B,GAAmC,IAAnC;AACA,SAAKC,YAAL,GAAoBC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAApB;AACA,SAAKF,YAAL,CAAkBG,SAAlB,GAA8Bf,OAAO,CAACgB,SAAR,CAAkBC,UAAlB,GAA+B,kBAA7D;AACA,SAAKL,YAAL,CAAkBF,KAAlB,CAAwBQ,QAAxB,GAAmC,UAAnC;AACA,UAAMC,UAAU,GAAGd,MAAM,CAACe,SAAP,CAAiB;AAAG;AAApB,KAAnB;AACA,UAAMC,QAAQ,GAAGhB,MAAM,CAACiB,QAAP,GAAkBC,MAAlB,EAAjB;AACA,SAAKX,YAAL,CAAkBF,KAAlB,CAAwBc,KAAxB,GAAgC,KAAhC;AACA,SAAKZ,YAAL,CAAkBF,KAAlB,CAAwBe,UAAxB,GAAqC,QAArC;AACA,SAAKb,YAAL,CAAkBF,KAAlB,CAAwBgB,MAAxB,GAAkC,GAAEP,UAAW,IAA/C;AACA,SAAKP,YAAL,CAAkBF,KAAlB,CAAwBS,UAAxB,GAAsC,GAAEA,UAAW,IAAnD;;AACA,SAAKf,cAAL,CAAoBuB,WAApB,CAAgC,KAAKf,YAArC;;AACA,UAAMgB,OAAO,GAAG,EAAhB;AACA,UAAMC,UAAU,GAAGvB,IAAI,CAACwB,qBAAL,KAA+B,CAAlD,CAtB2F,CAuB3F;;AACAF,IAAAA,OAAO,CAACG,IAAR,CAAa,IAAIlC,MAAJ,CAAW,mCAAX,EAAgDgC,UAAU,GAChEvB,IAAI,CAAC0B,qBAAL,GAA6B1B,IAAI,CAAC2B,uBAAlC,GACGtC,GAAG,CAACuC,QAAJ,CAAa,8CAAb,EAA6D,oBAA7D,CADH,GAEGvC,GAAG,CAACuC,QAAJ,CAAa,qDAAb,EAAoE,mBAApE,CAH6D,GAIhE5B,IAAI,CAAC0B,qBAAL,GAA6B1B,IAAI,CAAC2B,uBAAlC,GACGtC,GAAG,CAACuC,QAAJ,CAAa,8CAAb,EAA6D,oBAA7D,CADH,GAEGvC,GAAG,CAACuC,QAAJ,CAAa,qDAAb,EAAoE,mBAApE,CANG,EAMwFC,SANxF,EAMmG,IANnG,EAMyG,MAAM3D,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AACrK,YAAM4D,KAAK,GAAG,IAAIrC,KAAJ,CAAUO,IAAI,CAAC+B,uBAAf,EAAwC,CAAxC,EAA2C/B,IAAI,CAAC0B,qBAAL,GAA6B,CAAxE,EAA2E,CAA3E,CAAd;AACA,YAAMM,WAAW,GAAGhC,IAAI,CAACiC,aAAL,CAAmBC,eAAnB,CAAmCJ,KAAnC,CAApB;AACA,YAAM,KAAK5B,iBAAL,CAAuBiC,SAAvB,CAAiCH,WAAjC,CAAN;AACH,KAJoI,CANxH,CAAb;AAWA,QAAII,uBAAuB,GAAG,CAA9B;AACA,QAAIC,cAAc,GAAGR,SAArB;;AACA,QAAI7B,IAAI,CAAC0B,qBAAL,GAA6B1B,IAAI,CAAC2B,uBAAtC,EAA+D;AAC3DU,MAAAA,cAAc,GAAG,IAAI9C,MAAJ,CAAW,uCAAX,EAAoDgC,UAAU,GACzElC,GAAG,CAACuC,QAAJ,CAAa,6CAAb,EAA4D,yBAA5D,EAAuF5B,IAAI,CAAC+B,uBAA5F,CADyE,GAEzE1C,GAAG,CAACuC,QAAJ,CAAa,6CAAb,EAA4D,yBAA5D,EAAuF5B,IAAI,CAAC+B,uBAA5F,CAFW,EAE2GF,SAF3G,EAEsH,IAFtH,EAE4H,MAAM3D,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAC5L,cAAMoE,WAAW,GAAGtC,IAAI,CAACiC,aAAL,CAAmBM,cAAnB,CAAkCvC,IAAI,CAAC+B,uBAAL,GAA+BK,uBAAjE,CAApB;;AACA,YAAIE,WAAW,KAAK,EAApB,EAAwB;AACpB;AACA,gBAAME,GAAG,GAAGxC,IAAI,CAACiC,aAAL,CAAmBQ,oBAAnB,EAAZ;AACA,gBAAM,KAAKvC,iBAAL,CAAuBiC,SAAvB,CAAiCK,GAAG,KAAK;AAAE;AAAV,YAAqB,IAArB,GAA4B,MAA7D,CAAN;AACH,SAJD,MAKK;AACD,gBAAM,KAAKtC,iBAAL,CAAuBiC,SAAvB,CAAiCG,WAAjC,CAAN;AACH;AACJ,OAV2J,CAF3I,CAAjB;AAaAhB,MAAAA,OAAO,CAACG,IAAR,CAAaY,cAAb;AACH;;AACD,UAAMK,QAAQ,GAAG3C,MAAM,CAACe,SAAP,CAAiB;AAAG;AAApB,KAAjB;;AACA,QAAI,CAAC4B,QAAL,EAAe;AACXpB,MAAAA,OAAO,CAACG,IAAR,CAAa,IAAIlC,MAAJ,CAAW,0BAAX,EAAuCF,GAAG,CAACuC,QAAJ,CAAa,gCAAb,EAA+C,oBAA/C,CAAvC,EAA6GC,SAA7G,EAAwH,IAAxH,EAA8H,MAAM3D,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAC1L,cAAM4D,KAAK,GAAG,IAAIrC,KAAJ,CAAUO,IAAI,CAAC+B,uBAAf,EAAwC,CAAxC,EAA2C/B,IAAI,CAAC0B,qBAAhD,EAAuE1B,IAAI,CAACiC,aAAL,CAAmBU,gBAAnB,CAAoC3C,IAAI,CAAC0B,qBAAzC,CAAvE,CAAd;AACA,cAAMM,WAAW,GAAGhC,IAAI,CAACiC,aAAL,CAAmBC,eAAnB,CAAmCJ,KAAnC,CAApB;;AACA,YAAI9B,IAAI,CAACwB,qBAAL,KAA+B,CAAnC,EAAsC;AAClC;AACA,gBAAMoB,MAAM,GAAG7C,MAAM,CAACiB,QAAP,GAAkB2B,gBAAlB,CAAmC3C,IAAI,CAAC2B,uBAAxC,CAAf;AACA5B,UAAAA,MAAM,CAAC8C,YAAP,CAAoB,YAApB,EAAkC,CAC9B;AACIf,YAAAA,KAAK,EAAE,IAAIrC,KAAJ,CAAUO,IAAI,CAAC2B,uBAAf,EAAwCiB,MAAxC,EAAgD5C,IAAI,CAAC2B,uBAArD,EAA8EiB,MAA9E,CADX;AAEIE,YAAAA,IAAI,EAAE/B,QAAQ,GAAGiB;AAFrB,WAD8B,CAAlC;AAMH,SATD,MAUK;AACD,gBAAMY,MAAM,GAAG7C,MAAM,CAACiB,QAAP,GAAkB2B,gBAAlB,CAAmC3C,IAAI,CAACwB,qBAAxC,CAAf;AACAzB,UAAAA,MAAM,CAAC8C,YAAP,CAAoB,YAApB,EAAkC,CAC9B;AACIf,YAAAA,KAAK,EAAE,IAAIrC,KAAJ,CAAUO,IAAI,CAAC2B,uBAAf,EAAwC,CAAxC,EAA2C3B,IAAI,CAACwB,qBAAhD,EAAuEoB,MAAvE,CADX;AAEIE,YAAAA,IAAI,EAAEd;AAFV,WAD8B,CAAlC;AAMH;AACJ,OAtByJ,CAA7I,CAAb;AAuBH;;AACD,UAAMe,eAAe,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC9B,WAAKhD,mBAAL,CAAyB8C,eAAzB,CAAyC;AACrCG,QAAAA,SAAS,EAAE,MAAM;AACb,iBAAO;AACHF,YAAAA,CADG;AAEHC,YAAAA;AAFG,WAAP;AAIH,SANoC;AAOrCE,QAAAA,UAAU,EAAE,MAAM;AACd,cAAId,cAAJ,EAAoB;AAChBA,YAAAA,cAAc,CAACe,KAAf,GACI7B,UAAU,GACJlC,GAAG,CAACuC,QAAJ,CAAa,6CAAb,EAA4D,yBAA5D,EAAuF5B,IAAI,CAAC+B,uBAAL,GAA+BK,uBAAtH,CADI,GAEJ/C,GAAG,CAACuC,QAAJ,CAAa,6CAAb,EAA4D,yBAA5D,EAAuF5B,IAAI,CAAC+B,uBAAL,GAA+BK,uBAAtH,CAHV;AAIH;;AACD,iBAAOd,OAAP;AACH,SAfoC;AAgBrC+B,QAAAA,mBAAmB,EAAE;AAhBgB,OAAzC;AAkBH,KAnBD;;AAoBA,SAAKC,SAAL,CAAehE,GAAG,CAACiE,6BAAJ,CAAkC,KAAKjD,YAAvC,EAAqD,WAArD,EAAkEvB,CAAC,IAAI;AAClF,YAAM;AAAEyE,QAAAA,GAAF;AAAOpC,QAAAA;AAAP,UAAkB9B,GAAG,CAACmE,sBAAJ,CAA2B,KAAKnD,YAAhC,CAAxB;AACA,YAAMoD,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAW/C,UAAU,GAAG,CAAxB,CAAZ;AACA9B,MAAAA,CAAC,CAAC8E,cAAF;AACAd,MAAAA,eAAe,CAAChE,CAAC,CAAC+E,IAAH,EAASN,GAAG,GAAGpC,MAAN,GAAesC,GAAxB,CAAf;AACH,KALc,CAAf;;AAMA,SAAKJ,SAAL,CAAevD,MAAM,CAACgE,WAAP,CAAoBhF,CAAD,IAAO;AACrC,UAAIA,CAAC,CAACiF,MAAF,CAASC,IAAT,KAAkB;AAAE;AAApB,SAA+ClF,CAAC,CAACiF,MAAF,CAASC,IAAT,KAAkB;AAAE;AAAvE,QAA+F;AAC3F,cAAMC,UAAU,GAAGnF,CAAC,CAACiF,MAAF,CAASG,MAAT,CAAgBD,UAAnC;;AACA,YAAIA,UAAU,KAAK,KAAKrE,WAAxB,EAAqC;AACjC,eAAKsB,UAAL,GAAkB,IAAlB;AACAiB,UAAAA,uBAAuB,GAAG,KAAKgC,wBAAL,CAA8B,KAAKtE,cAAnC,EAAmDf,CAAC,CAACsF,KAAF,CAAQC,YAAR,CAAqBrB,CAAxE,EAA2EpC,UAA3E,CAA1B;AACH,SAHD,MAIK;AACD,eAAKM,UAAL,GAAkB,KAAlB;AACH;AACJ,OATD,MAUK;AACD,aAAKA,UAAL,GAAkB,KAAlB;AACH;AACJ,KAdc,CAAf;;AAeA,SAAKmC,SAAL,CAAevD,MAAM,CAACwE,WAAP,CAAoBxF,CAAD,IAAO;AACrC,UAAI,CAACA,CAAC,CAACsF,KAAF,CAAQG,WAAb,EAA0B;AACtB;AACH;;AACD,UAAIzF,CAAC,CAACiF,MAAF,CAASC,IAAT,KAAkB;AAAE;AAApB,SAA+ClF,CAAC,CAACiF,MAAF,CAASC,IAAT,KAAkB;AAAE;AAAvE,QAA+F;AAC3F,cAAMC,UAAU,GAAGnF,CAAC,CAACiF,MAAF,CAASG,MAAT,CAAgBD,UAAnC;;AACA,YAAIA,UAAU,KAAK,KAAKrE,WAAxB,EAAqC;AACjCd,UAAAA,CAAC,CAACsF,KAAF,CAAQR,cAAR;AACAzB,UAAAA,uBAAuB,GAAG,KAAKgC,wBAAL,CAA8B,KAAKtE,cAAnC,EAAmDf,CAAC,CAACsF,KAAF,CAAQC,YAAR,CAAqBrB,CAAxE,EAA2EpC,UAA3E,CAA1B;AACAkC,UAAAA,eAAe,CAAChE,CAAC,CAACsF,KAAF,CAAQP,IAAT,EAAe/E,CAAC,CAACsF,KAAF,CAAQI,IAAR,GAAe5D,UAA9B,CAAf;AACH;AACJ;AACJ,KAZc,CAAf;AAaH;;AACa,MAAVM,UAAU,GAAG;AACb,WAAO,KAAKhB,WAAZ;AACH;;AACa,MAAVgB,UAAU,CAAChB,WAAD,EAAc;AACxB,QAAI,KAAKA,WAAL,KAAqBA,WAAzB,EAAsC;AAClC,WAAKA,WAAL,GAAmBA,WAAnB;;AACA,UAAIA,WAAJ,EAAiB;AACb,aAAKG,YAAL,CAAkBF,KAAlB,CAAwBe,UAAxB,GAAqC,SAArC;AACH,OAFD,MAGK;AACD,aAAKb,YAAL,CAAkBF,KAAlB,CAAwBe,UAAxB,GAAqC,QAArC;AACH;AACJ;AACJ;;AACDiD,EAAAA,wBAAwB,CAACM,aAAD,EAAgBzB,CAAhB,EAAmBpC,UAAnB,EAA+B;AACnD,UAAM;AAAE2C,MAAAA;AAAF,QAAUlE,GAAG,CAACmE,sBAAJ,CAA2BiB,aAA3B,CAAhB;AACA,UAAMC,MAAM,GAAG1B,CAAC,GAAGO,GAAnB;AACA,UAAMoB,gBAAgB,GAAGjB,IAAI,CAACC,KAAL,CAAWe,MAAM,GAAG9D,UAApB,CAAzB;AACA,UAAMgE,MAAM,GAAGD,gBAAgB,GAAG/D,UAAlC;AACA,SAAKP,YAAL,CAAkBF,KAAlB,CAAwBoD,GAAxB,GAA+B,GAAEqB,MAAO,IAAxC;;AACA,QAAI,KAAK7E,IAAL,CAAU8E,cAAd,EAA8B;AAC1B,UAAIC,GAAG,GAAG,CAAV;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKhF,IAAL,CAAU8E,cAAV,CAAyBG,MAA7C,EAAqDD,CAAC,EAAtD,EAA0D;AACtDD,QAAAA,GAAG,IAAI,KAAK/E,IAAL,CAAU8E,cAAV,CAAyBE,CAAzB,CAAP;;AACA,YAAIJ,gBAAgB,GAAGG,GAAvB,EAA4B;AACxB,iBAAOC,CAAP;AACH;AACJ;AACJ;;AACD,WAAOJ,gBAAP;AACH;;AArK4C","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as nls from '../../../nls.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { Action } from '../../../base/common/actions.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { Range } from '../../common/core/range.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nexport class InlineDiffMargin extends Disposable {\n    constructor(_viewZoneId, _marginDomNode, editor, diff, _contextMenuService, _clipboardService) {\n        super();\n        this._viewZoneId = _viewZoneId;\n        this._marginDomNode = _marginDomNode;\n        this.editor = editor;\n        this.diff = diff;\n        this._contextMenuService = _contextMenuService;\n        this._clipboardService = _clipboardService;\n        this._visibility = false;\n        // make sure the diff margin shows above overlay.\n        this._marginDomNode.style.zIndex = '10';\n        this._diffActions = document.createElement('div');\n        this._diffActions.className = Codicon.lightBulb.classNames + ' lightbulb-glyph';\n        this._diffActions.style.position = 'absolute';\n        const lineHeight = editor.getOption(59 /* lineHeight */);\n        const lineFeed = editor.getModel().getEOL();\n        this._diffActions.style.right = '0px';\n        this._diffActions.style.visibility = 'hidden';\n        this._diffActions.style.height = `${lineHeight}px`;\n        this._diffActions.style.lineHeight = `${lineHeight}px`;\n        this._marginDomNode.appendChild(this._diffActions);\n        const actions = [];\n        const isDeletion = diff.modifiedEndLineNumber === 0;\n        // default action\n        actions.push(new Action('diff.clipboard.copyDeletedContent', isDeletion\n            ? (diff.originalEndLineNumber > diff.modifiedStartLineNumber\n                ? nls.localize('diff.clipboard.copyDeletedLinesContent.label', \"Copy deleted lines\")\n                : nls.localize('diff.clipboard.copyDeletedLinesContent.single.label', \"Copy deleted line\"))\n            : (diff.originalEndLineNumber > diff.modifiedStartLineNumber\n                ? nls.localize('diff.clipboard.copyChangedLinesContent.label', \"Copy changed lines\")\n                : nls.localize('diff.clipboard.copyChangedLinesContent.single.label', \"Copy changed line\")), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n            const range = new Range(diff.originalStartLineNumber, 1, diff.originalEndLineNumber + 1, 1);\n            const deletedText = diff.originalModel.getValueInRange(range);\n            yield this._clipboardService.writeText(deletedText);\n        })));\n        let currentLineNumberOffset = 0;\n        let copyLineAction = undefined;\n        if (diff.originalEndLineNumber > diff.modifiedStartLineNumber) {\n            copyLineAction = new Action('diff.clipboard.copyDeletedLineContent', isDeletion\n                ? nls.localize('diff.clipboard.copyDeletedLineContent.label', \"Copy deleted line ({0})\", diff.originalStartLineNumber)\n                : nls.localize('diff.clipboard.copyChangedLineContent.label', \"Copy changed line ({0})\", diff.originalStartLineNumber), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                const lineContent = diff.originalModel.getLineContent(diff.originalStartLineNumber + currentLineNumberOffset);\n                if (lineContent === '') {\n                    // empty line\n                    const eof = diff.originalModel.getEndOfLineSequence();\n                    yield this._clipboardService.writeText(eof === 0 /* LF */ ? '\\n' : '\\r\\n');\n                }\n                else {\n                    yield this._clipboardService.writeText(lineContent);\n                }\n            }));\n            actions.push(copyLineAction);\n        }\n        const readOnly = editor.getOption(81 /* readOnly */);\n        if (!readOnly) {\n            actions.push(new Action('diff.inline.revertChange', nls.localize('diff.inline.revertChange.label', \"Revert this change\"), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                const range = new Range(diff.originalStartLineNumber, 1, diff.originalEndLineNumber, diff.originalModel.getLineMaxColumn(diff.originalEndLineNumber));\n                const deletedText = diff.originalModel.getValueInRange(range);\n                if (diff.modifiedEndLineNumber === 0) {\n                    // deletion only\n                    const column = editor.getModel().getLineMaxColumn(diff.modifiedStartLineNumber);\n                    editor.executeEdits('diffEditor', [\n                        {\n                            range: new Range(diff.modifiedStartLineNumber, column, diff.modifiedStartLineNumber, column),\n                            text: lineFeed + deletedText\n                        }\n                    ]);\n                }\n                else {\n                    const column = editor.getModel().getLineMaxColumn(diff.modifiedEndLineNumber);\n                    editor.executeEdits('diffEditor', [\n                        {\n                            range: new Range(diff.modifiedStartLineNumber, 1, diff.modifiedEndLineNumber, column),\n                            text: deletedText\n                        }\n                    ]);\n                }\n            })));\n        }\n        const showContextMenu = (x, y) => {\n            this._contextMenuService.showContextMenu({\n                getAnchor: () => {\n                    return {\n                        x,\n                        y\n                    };\n                },\n                getActions: () => {\n                    if (copyLineAction) {\n                        copyLineAction.label =\n                            isDeletion\n                                ? nls.localize('diff.clipboard.copyDeletedLineContent.label', \"Copy deleted line ({0})\", diff.originalStartLineNumber + currentLineNumberOffset)\n                                : nls.localize('diff.clipboard.copyChangedLineContent.label', \"Copy changed line ({0})\", diff.originalStartLineNumber + currentLineNumberOffset);\n                    }\n                    return actions;\n                },\n                autoSelectFirstItem: true\n            });\n        };\n        this._register(dom.addStandardDisposableListener(this._diffActions, 'mousedown', e => {\n            const { top, height } = dom.getDomNodePagePosition(this._diffActions);\n            const pad = Math.floor(lineHeight / 3);\n            e.preventDefault();\n            showContextMenu(e.posx, top + height + pad);\n        }));\n        this._register(editor.onMouseMove((e) => {\n            if (e.target.type === 8 /* CONTENT_VIEW_ZONE */ || e.target.type === 5 /* GUTTER_VIEW_ZONE */) {\n                const viewZoneId = e.target.detail.viewZoneId;\n                if (viewZoneId === this._viewZoneId) {\n                    this.visibility = true;\n                    currentLineNumberOffset = this._updateLightBulbPosition(this._marginDomNode, e.event.browserEvent.y, lineHeight);\n                }\n                else {\n                    this.visibility = false;\n                }\n            }\n            else {\n                this.visibility = false;\n            }\n        }));\n        this._register(editor.onMouseDown((e) => {\n            if (!e.event.rightButton) {\n                return;\n            }\n            if (e.target.type === 8 /* CONTENT_VIEW_ZONE */ || e.target.type === 5 /* GUTTER_VIEW_ZONE */) {\n                const viewZoneId = e.target.detail.viewZoneId;\n                if (viewZoneId === this._viewZoneId) {\n                    e.event.preventDefault();\n                    currentLineNumberOffset = this._updateLightBulbPosition(this._marginDomNode, e.event.browserEvent.y, lineHeight);\n                    showContextMenu(e.event.posx, e.event.posy + lineHeight);\n                }\n            }\n        }));\n    }\n    get visibility() {\n        return this._visibility;\n    }\n    set visibility(_visibility) {\n        if (this._visibility !== _visibility) {\n            this._visibility = _visibility;\n            if (_visibility) {\n                this._diffActions.style.visibility = 'visible';\n            }\n            else {\n                this._diffActions.style.visibility = 'hidden';\n            }\n        }\n    }\n    _updateLightBulbPosition(marginDomNode, y, lineHeight) {\n        const { top } = dom.getDomNodePagePosition(marginDomNode);\n        const offset = y - top;\n        const lineNumberOffset = Math.floor(offset / lineHeight);\n        const newTop = lineNumberOffset * lineHeight;\n        this._diffActions.style.top = `${newTop}px`;\n        if (this.diff.viewLineCounts) {\n            let acc = 0;\n            for (let i = 0; i < this.diff.viewLineCounts.length; i++) {\n                acc += this.diff.viewLineCounts[i];\n                if (lineNumberOffset < acc) {\n                    return i;\n                }\n            }\n        }\n        return lineNumberOffset;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}