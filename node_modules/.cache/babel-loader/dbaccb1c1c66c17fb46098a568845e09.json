{"ast":null,"code":"/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array) {\n  return Array.isArray(array);\n}\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\n\nexport function isString(str) {\n  return typeof str === 'string';\n}\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\n\nexport function isObject(obj) {\n  // The method can't do a type cast since there are type (like strings) which\n  // are subclasses of any put not positvely matched by the function. Hence type\n  // narrowing results in wrong results.\n  return typeof obj === 'object' && obj !== null && !Array.isArray(obj) && !(obj instanceof RegExp) && !(obj instanceof Date);\n}\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\n\nexport function isNumber(obj) {\n  return typeof obj === 'number' && !isNaN(obj);\n}\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\n\nexport function isBoolean(obj) {\n  return obj === true || obj === false;\n}\n/**\n * @returns whether the provided parameter is undefined.\n */\n\nexport function isUndefined(obj) {\n  return typeof obj === 'undefined';\n}\n/**\n * @returns whether the provided parameter is defined.\n */\n\nexport function isDefined(arg) {\n  return !isUndefinedOrNull(arg);\n}\n/**\n * @returns whether the provided parameter is undefined or null.\n */\n\nexport function isUndefinedOrNull(obj) {\n  return isUndefined(obj) || obj === null;\n}\nexport function assertType(condition, type) {\n  if (!condition) {\n    throw new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n  }\n}\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\n\nexport function assertIsDefined(arg) {\n  if (isUndefinedOrNull(arg)) {\n    throw new Error('Assertion Failed: argument is undefined or null');\n  }\n\n  return arg;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\n\nexport function isFunction(obj) {\n  return typeof obj === 'function';\n}\nexport function validateConstraints(args, constraints) {\n  const len = Math.min(args.length, constraints.length);\n\n  for (let i = 0; i < len; i++) {\n    validateConstraint(args[i], constraints[i]);\n  }\n}\nexport function validateConstraint(arg, constraint) {\n  if (isString(constraint)) {\n    if (typeof arg !== constraint) {\n      throw new Error(`argument does not match constraint: typeof ${constraint}`);\n    }\n  } else if (isFunction(constraint)) {\n    try {\n      if (arg instanceof constraint) {\n        return;\n      }\n    } catch (_a) {// ignore\n    }\n\n    if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n      return;\n    }\n\n    if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n      return;\n    }\n\n    throw new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n  }\n}\nexport function getAllPropertyNames(obj) {\n  let res = [];\n  let proto = Object.getPrototypeOf(obj);\n\n  while (Object.prototype !== proto) {\n    res = res.concat(Object.getOwnPropertyNames(proto));\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return res;\n}\nexport function getAllMethodNames(obj) {\n  const methods = [];\n\n  for (const prop of getAllPropertyNames(obj)) {\n    if (typeof obj[prop] === 'function') {\n      methods.push(prop);\n    }\n  }\n\n  return methods;\n}\nexport function createProxyObject(methodNames, invoke) {\n  const createProxyMethod = method => {\n    return function () {\n      const args = Array.prototype.slice.call(arguments, 0);\n      return invoke(method, args);\n    };\n  };\n\n  let result = {};\n\n  for (const methodName of methodNames) {\n    result[methodName] = createProxyMethod(methodName);\n  }\n\n  return result;\n}\n/**\n * Converts null to undefined, passes all other values through.\n */\n\nexport function withNullAsUndefined(x) {\n  return x === null ? undefined : x;\n}\nexport function assertNever(value, message = 'Unreachable') {\n  throw new Error(message);\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/base/common/types.js"],"names":["isArray","array","Array","isString","str","isObject","obj","RegExp","Date","isNumber","isNaN","isBoolean","isUndefined","isDefined","arg","isUndefinedOrNull","assertType","condition","type","Error","assertIsDefined","isFunction","validateConstraints","args","constraints","len","Math","min","length","i","validateConstraint","constraint","_a","constructor","call","undefined","getAllPropertyNames","res","proto","Object","getPrototypeOf","prototype","concat","getOwnPropertyNames","getAllMethodNames","methods","prop","push","createProxyObject","methodNames","invoke","createProxyMethod","method","slice","arguments","result","methodName","withNullAsUndefined","x","assertNever","value","message"],"mappings":"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","sourcesContent":["/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array) {\n    return Array.isArray(array);\n}\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str) {\n    return (typeof str === 'string');\n}\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj) {\n    // The method can't do a type cast since there are type (like strings) which\n    // are subclasses of any put not positvely matched by the function. Hence type\n    // narrowing results in wrong results.\n    return typeof obj === 'object'\n        && obj !== null\n        && !Array.isArray(obj)\n        && !(obj instanceof RegExp)\n        && !(obj instanceof Date);\n}\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj) {\n    return (typeof obj === 'number' && !isNaN(obj));\n}\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj) {\n    return (obj === true || obj === false);\n}\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj) {\n    return (typeof obj === 'undefined');\n}\n/**\n * @returns whether the provided parameter is defined.\n */\nexport function isDefined(arg) {\n    return !isUndefinedOrNull(arg);\n}\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj) {\n    return (isUndefined(obj) || obj === null);\n}\nexport function assertType(condition, type) {\n    if (!condition) {\n        throw new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n    }\n}\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined(arg) {\n    if (isUndefinedOrNull(arg)) {\n        throw new Error('Assertion Failed: argument is undefined or null');\n    }\n    return arg;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj) {\n    return (typeof obj === 'function');\n}\nexport function validateConstraints(args, constraints) {\n    const len = Math.min(args.length, constraints.length);\n    for (let i = 0; i < len; i++) {\n        validateConstraint(args[i], constraints[i]);\n    }\n}\nexport function validateConstraint(arg, constraint) {\n    if (isString(constraint)) {\n        if (typeof arg !== constraint) {\n            throw new Error(`argument does not match constraint: typeof ${constraint}`);\n        }\n    }\n    else if (isFunction(constraint)) {\n        try {\n            if (arg instanceof constraint) {\n                return;\n            }\n        }\n        catch (_a) {\n            // ignore\n        }\n        if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n            return;\n        }\n        if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n            return;\n        }\n        throw new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n    }\n}\nexport function getAllPropertyNames(obj) {\n    let res = [];\n    let proto = Object.getPrototypeOf(obj);\n    while (Object.prototype !== proto) {\n        res = res.concat(Object.getOwnPropertyNames(proto));\n        proto = Object.getPrototypeOf(proto);\n    }\n    return res;\n}\nexport function getAllMethodNames(obj) {\n    const methods = [];\n    for (const prop of getAllPropertyNames(obj)) {\n        if (typeof obj[prop] === 'function') {\n            methods.push(prop);\n        }\n    }\n    return methods;\n}\nexport function createProxyObject(methodNames, invoke) {\n    const createProxyMethod = (method) => {\n        return function () {\n            const args = Array.prototype.slice.call(arguments, 0);\n            return invoke(method, args);\n        };\n    };\n    let result = {};\n    for (const methodName of methodNames) {\n        result[methodName] = createProxyMethod(methodName);\n    }\n    return result;\n}\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined(x) {\n    return x === null ? undefined : x;\n}\nexport function assertNever(value, message = 'Unreachable') {\n    throw new Error(message);\n}\n"]},"metadata":{},"sourceType":"module"}