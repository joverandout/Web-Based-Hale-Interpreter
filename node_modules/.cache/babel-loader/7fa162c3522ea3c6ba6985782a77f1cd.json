{"ast":null,"code":"var Buffer = require('safe-buffer').Buffer;\n\nvar Crypto = require('crypto');\n\nvar Auth = exports;\n\nfunction auth(name, data, options) {\n  options = options || {};\n\n  switch (name) {\n    case 'mysql_native_password':\n      return Auth.token(options.password, data.slice(0, 20));\n\n    default:\n      return undefined;\n  }\n}\n\nAuth.auth = auth;\n\nfunction sha1(msg) {\n  var hash = Crypto.createHash('sha1');\n  hash.update(msg, 'binary');\n  return hash.digest('binary');\n}\n\nAuth.sha1 = sha1;\n\nfunction xor(a, b) {\n  a = Buffer.from(a, 'binary');\n  b = Buffer.from(b, 'binary');\n  var result = Buffer.allocUnsafe(a.length);\n\n  for (var i = 0; i < a.length; i++) {\n    result[i] = a[i] ^ b[i];\n  }\n\n  return result;\n}\n\nAuth.xor = xor;\n\nAuth.token = function (password, scramble) {\n  if (!password) {\n    return Buffer.alloc(0);\n  } // password must be in binary format, not utf8\n\n\n  var stage1 = sha1(Buffer.from(password, 'utf8').toString('binary'));\n  var stage2 = sha1(stage1);\n  var stage3 = sha1(scramble.toString('binary') + stage2);\n  return xor(stage3, stage1);\n}; // This is a port of sql/password.c:hash_password which needs to be used for\n// pre-4.1 passwords.\n\n\nAuth.hashPassword = function (password) {\n  var nr = [0x5030, 0x5735];\n  var add = 7;\n  var nr2 = [0x1234, 0x5671];\n  var result = Buffer.alloc(8);\n\n  if (typeof password === 'string') {\n    password = Buffer.from(password);\n  }\n\n  for (var i = 0; i < password.length; i++) {\n    var c = password[i];\n\n    if (c === 32 || c === 9) {\n      // skip space in password\n      continue;\n    } // nr^= (((nr & 63)+add)*c)+ (nr << 8);\n    // nr = xor(nr, add(mul(add(and(nr, 63), add), c), shl(nr, 8)))\n\n\n    nr = this.xor32(nr, this.add32(this.mul32(this.add32(this.and32(nr, [0, 63]), [0, add]), [0, c]), this.shl32(nr, 8))); // nr2+=(nr2 << 8) ^ nr;\n    // nr2 = add(nr2, xor(shl(nr2, 8), nr))\n\n    nr2 = this.add32(nr2, this.xor32(this.shl32(nr2, 8), nr)); // add+=tmp;\n\n    add += c;\n  }\n\n  this.int31Write(result, nr, 0);\n  this.int31Write(result, nr2, 4);\n  return result;\n};\n\nAuth.randomInit = function (seed1, seed2) {\n  return {\n    max_value: 0x3FFFFFFF,\n    max_value_dbl: 0x3FFFFFFF,\n    seed1: seed1 % 0x3FFFFFFF,\n    seed2: seed2 % 0x3FFFFFFF\n  };\n};\n\nAuth.myRnd = function (r) {\n  r.seed1 = (r.seed1 * 3 + r.seed2) % r.max_value;\n  r.seed2 = (r.seed1 + r.seed2 + 33) % r.max_value;\n  return r.seed1 / r.max_value_dbl;\n};\n\nAuth.scramble323 = function (message, password) {\n  if (!password) {\n    return Buffer.alloc(0);\n  }\n\n  var to = Buffer.allocUnsafe(8);\n  var hashPass = this.hashPassword(password);\n  var hashMessage = this.hashPassword(message.slice(0, 8));\n  var seed1 = this.int32Read(hashPass, 0) ^ this.int32Read(hashMessage, 0);\n  var seed2 = this.int32Read(hashPass, 4) ^ this.int32Read(hashMessage, 4);\n  var r = this.randomInit(seed1, seed2);\n\n  for (var i = 0; i < 8; i++) {\n    to[i] = Math.floor(this.myRnd(r) * 31) + 64;\n  }\n\n  var extra = Math.floor(this.myRnd(r) * 31);\n\n  for (var i = 0; i < 8; i++) {\n    to[i] ^= extra;\n  }\n\n  return to;\n};\n\nAuth.xor32 = function (a, b) {\n  return [a[0] ^ b[0], a[1] ^ b[1]];\n};\n\nAuth.add32 = function (a, b) {\n  var w1 = a[1] + b[1];\n  var w2 = a[0] + b[0] + ((w1 & 0xFFFF0000) >> 16);\n  return [w2 & 0xFFFF, w1 & 0xFFFF];\n};\n\nAuth.mul32 = function (a, b) {\n  // based on this example of multiplying 32b ints using 16b\n  // http://www.dsprelated.com/showmessage/89790/1.php\n  var w1 = a[1] * b[1];\n  var w2 = (a[1] * b[1] >> 16 & 0xFFFF) + (a[0] * b[1] & 0xFFFF) + (a[1] * b[0] & 0xFFFF);\n  return [w2 & 0xFFFF, w1 & 0xFFFF];\n};\n\nAuth.and32 = function (a, b) {\n  return [a[0] & b[0], a[1] & b[1]];\n};\n\nAuth.shl32 = function (a, b) {\n  // assume b is 16 or less\n  var w1 = a[1] << b;\n  var w2 = a[0] << b | (w1 & 0xFFFF0000) >> 16;\n  return [w2 & 0xFFFF, w1 & 0xFFFF];\n};\n\nAuth.int31Write = function (buffer, number, offset) {\n  buffer[offset] = number[0] >> 8 & 0x7F;\n  buffer[offset + 1] = number[0] & 0xFF;\n  buffer[offset + 2] = number[1] >> 8 & 0xFF;\n  buffer[offset + 3] = number[1] & 0xFF;\n};\n\nAuth.int32Read = function (buffer, offset) {\n  return (buffer[offset] << 24) + (buffer[offset + 1] << 16) + (buffer[offset + 2] << 8) + buffer[offset + 3];\n};","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/mysql/lib/protocol/Auth.js"],"names":["Buffer","require","Crypto","Auth","exports","auth","name","data","options","token","password","slice","undefined","sha1","msg","hash","createHash","update","digest","xor","a","b","from","result","allocUnsafe","length","i","scramble","alloc","stage1","toString","stage2","stage3","hashPassword","nr","add","nr2","c","xor32","add32","mul32","and32","shl32","int31Write","randomInit","seed1","seed2","max_value","max_value_dbl","myRnd","r","scramble323","message","to","hashPass","hashMessage","int32Read","Math","floor","extra","w1","w2","buffer","number","offset"],"mappings":"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","sourcesContent":["var Buffer = require('safe-buffer').Buffer;\nvar Crypto = require('crypto');\nvar Auth   = exports;\n\nfunction auth(name, data, options) {\n  options = options || {};\n\n  switch (name) {\n    case 'mysql_native_password':\n      return Auth.token(options.password, data.slice(0, 20));\n    default:\n      return undefined;\n  }\n}\nAuth.auth = auth;\n\nfunction sha1(msg) {\n  var hash = Crypto.createHash('sha1');\n  hash.update(msg, 'binary');\n  return hash.digest('binary');\n}\nAuth.sha1 = sha1;\n\nfunction xor(a, b) {\n  a = Buffer.from(a, 'binary');\n  b = Buffer.from(b, 'binary');\n  var result = Buffer.allocUnsafe(a.length);\n  for (var i = 0; i < a.length; i++) {\n    result[i] = (a[i] ^ b[i]);\n  }\n  return result;\n}\nAuth.xor = xor;\n\nAuth.token = function(password, scramble) {\n  if (!password) {\n    return Buffer.alloc(0);\n  }\n\n  // password must be in binary format, not utf8\n  var stage1 = sha1((Buffer.from(password, 'utf8')).toString('binary'));\n  var stage2 = sha1(stage1);\n  var stage3 = sha1(scramble.toString('binary') + stage2);\n  return xor(stage3, stage1);\n};\n\n// This is a port of sql/password.c:hash_password which needs to be used for\n// pre-4.1 passwords.\nAuth.hashPassword = function(password) {\n  var nr     = [0x5030, 0x5735];\n  var add    = 7;\n  var nr2    = [0x1234, 0x5671];\n  var result = Buffer.alloc(8);\n\n  if (typeof password === 'string'){\n    password = Buffer.from(password);\n  }\n\n  for (var i = 0; i < password.length; i++) {\n    var c = password[i];\n    if (c === 32 || c === 9) {\n      // skip space in password\n      continue;\n    }\n\n    // nr^= (((nr & 63)+add)*c)+ (nr << 8);\n    // nr = xor(nr, add(mul(add(and(nr, 63), add), c), shl(nr, 8)))\n    nr = this.xor32(nr, this.add32(this.mul32(this.add32(this.and32(nr, [0, 63]), [0, add]), [0, c]), this.shl32(nr, 8)));\n\n    // nr2+=(nr2 << 8) ^ nr;\n    // nr2 = add(nr2, xor(shl(nr2, 8), nr))\n    nr2 = this.add32(nr2, this.xor32(this.shl32(nr2, 8), nr));\n\n    // add+=tmp;\n    add += c;\n  }\n\n  this.int31Write(result, nr, 0);\n  this.int31Write(result, nr2, 4);\n\n  return result;\n};\n\nAuth.randomInit = function(seed1, seed2) {\n  return {\n    max_value     : 0x3FFFFFFF,\n    max_value_dbl : 0x3FFFFFFF,\n    seed1         : seed1 % 0x3FFFFFFF,\n    seed2         : seed2 % 0x3FFFFFFF\n  };\n};\n\nAuth.myRnd = function(r){\n  r.seed1 = (r.seed1 * 3 + r.seed2) % r.max_value;\n  r.seed2 = (r.seed1 + r.seed2 + 33) % r.max_value;\n\n  return r.seed1 / r.max_value_dbl;\n};\n\nAuth.scramble323 = function(message, password) {\n  if (!password) {\n    return Buffer.alloc(0);\n  }\n\n  var to          = Buffer.allocUnsafe(8);\n  var hashPass    = this.hashPassword(password);\n  var hashMessage = this.hashPassword(message.slice(0, 8));\n  var seed1       = this.int32Read(hashPass, 0) ^ this.int32Read(hashMessage, 0);\n  var seed2       = this.int32Read(hashPass, 4) ^ this.int32Read(hashMessage, 4);\n  var r           = this.randomInit(seed1, seed2);\n\n  for (var i = 0; i < 8; i++){\n    to[i] = Math.floor(this.myRnd(r) * 31) + 64;\n  }\n  var extra = (Math.floor(this.myRnd(r) * 31));\n\n  for (var i = 0; i < 8; i++){\n    to[i] ^= extra;\n  }\n\n  return to;\n};\n\nAuth.xor32 = function(a, b){\n  return [a[0] ^ b[0], a[1] ^ b[1]];\n};\n\nAuth.add32 = function(a, b){\n  var w1 = a[1] + b[1];\n  var w2 = a[0] + b[0] + ((w1 & 0xFFFF0000) >> 16);\n\n  return [w2 & 0xFFFF, w1 & 0xFFFF];\n};\n\nAuth.mul32 = function(a, b){\n  // based on this example of multiplying 32b ints using 16b\n  // http://www.dsprelated.com/showmessage/89790/1.php\n  var w1 = a[1] * b[1];\n  var w2 = (((a[1] * b[1]) >> 16) & 0xFFFF) + ((a[0] * b[1]) & 0xFFFF) + (a[1] * b[0] & 0xFFFF);\n\n  return [w2 & 0xFFFF, w1 & 0xFFFF];\n};\n\nAuth.and32 = function(a, b){\n  return [a[0] & b[0], a[1] & b[1]];\n};\n\nAuth.shl32 = function(a, b){\n  // assume b is 16 or less\n  var w1 = a[1] << b;\n  var w2 = (a[0] << b) | ((w1 & 0xFFFF0000) >> 16);\n\n  return [w2 & 0xFFFF, w1 & 0xFFFF];\n};\n\nAuth.int31Write = function(buffer, number, offset) {\n  buffer[offset] = (number[0] >> 8) & 0x7F;\n  buffer[offset + 1] = (number[0]) & 0xFF;\n  buffer[offset + 2] = (number[1] >> 8) & 0xFF;\n  buffer[offset + 3] = (number[1]) & 0xFF;\n};\n\nAuth.int32Read = function(buffer, offset){\n  return (buffer[offset] << 24)\n       + (buffer[offset + 1] << 16)\n       + (buffer[offset + 2] << 8)\n       + (buffer[offset + 3]);\n};\n"]},"metadata":{},"sourceType":"script"}