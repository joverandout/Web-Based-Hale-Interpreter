{"ast":null,"code":"// http://dev.mysql.com/doc/internals/en/ssl.html\n// http://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::SSLRequest\nvar ClientConstants = require('../constants/client');\n\nmodule.exports = SSLRequestPacket;\n\nfunction SSLRequestPacket(options) {\n  options = options || {};\n  this.clientFlags = options.clientFlags | ClientConstants.CLIENT_SSL;\n  this.maxPacketSize = options.maxPacketSize;\n  this.charsetNumber = options.charsetNumber;\n}\n\nSSLRequestPacket.prototype.parse = function (parser) {\n  // TODO: check SSLRequest packet v41 vs pre v41\n  this.clientFlags = parser.parseUnsignedNumber(4);\n  this.maxPacketSize = parser.parseUnsignedNumber(4);\n  this.charsetNumber = parser.parseUnsignedNumber(1);\n};\n\nSSLRequestPacket.prototype.write = function (writer) {\n  writer.writeUnsignedNumber(4, this.clientFlags);\n  writer.writeUnsignedNumber(4, this.maxPacketSize);\n  writer.writeUnsignedNumber(1, this.charsetNumber);\n  writer.writeFiller(23);\n};","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/mysql/lib/protocol/packets/SSLRequestPacket.js"],"names":["ClientConstants","require","module","exports","SSLRequestPacket","options","clientFlags","CLIENT_SSL","maxPacketSize","charsetNumber","prototype","parse","parser","parseUnsignedNumber","write","writer","writeUnsignedNumber","writeFiller"],"mappings":"AAAA;AACA;AAEA,IAAIA,eAAe,GAAGC,OAAO,CAAC,qBAAD,CAA7B;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,gBAAjB;;AAEA,SAASA,gBAAT,CAA0BC,OAA1B,EAAmC;AACjCA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,OAAKC,WAAL,GAAqBD,OAAO,CAACC,WAAR,GAAsBN,eAAe,CAACO,UAA3D;AACA,OAAKC,aAAL,GAAqBH,OAAO,CAACG,aAA7B;AACA,OAAKC,aAAL,GAAqBJ,OAAO,CAACI,aAA7B;AACD;;AAEDL,gBAAgB,CAACM,SAAjB,CAA2BC,KAA3B,GAAmC,UAASC,MAAT,EAAiB;AAClD;AACA,OAAKN,WAAL,GAAqBM,MAAM,CAACC,mBAAP,CAA2B,CAA3B,CAArB;AACA,OAAKL,aAAL,GAAqBI,MAAM,CAACC,mBAAP,CAA2B,CAA3B,CAArB;AACA,OAAKJ,aAAL,GAAqBG,MAAM,CAACC,mBAAP,CAA2B,CAA3B,CAArB;AACD,CALD;;AAOAT,gBAAgB,CAACM,SAAjB,CAA2BI,KAA3B,GAAmC,UAASC,MAAT,EAAiB;AAClDA,EAAAA,MAAM,CAACC,mBAAP,CAA2B,CAA3B,EAA8B,KAAKV,WAAnC;AACAS,EAAAA,MAAM,CAACC,mBAAP,CAA2B,CAA3B,EAA8B,KAAKR,aAAnC;AACAO,EAAAA,MAAM,CAACC,mBAAP,CAA2B,CAA3B,EAA8B,KAAKP,aAAnC;AACAM,EAAAA,MAAM,CAACE,WAAP,CAAmB,EAAnB;AACD,CALD","sourcesContent":["// http://dev.mysql.com/doc/internals/en/ssl.html\n// http://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::SSLRequest\n\nvar ClientConstants = require('../constants/client');\n\nmodule.exports = SSLRequestPacket;\n\nfunction SSLRequestPacket(options) {\n  options = options || {};\n  this.clientFlags   = options.clientFlags | ClientConstants.CLIENT_SSL;\n  this.maxPacketSize = options.maxPacketSize;\n  this.charsetNumber = options.charsetNumber;\n}\n\nSSLRequestPacket.prototype.parse = function(parser) {\n  // TODO: check SSLRequest packet v41 vs pre v41\n  this.clientFlags   = parser.parseUnsignedNumber(4);\n  this.maxPacketSize = parser.parseUnsignedNumber(4);\n  this.charsetNumber = parser.parseUnsignedNumber(1);\n};\n\nSSLRequestPacket.prototype.write = function(writer) {\n  writer.writeUnsignedNumber(4, this.clientFlags);\n  writer.writeUnsignedNumber(4, this.maxPacketSize);\n  writer.writeUnsignedNumber(1, this.charsetNumber);\n  writer.writeFiller(23);\n};\n"]},"metadata":{},"sourceType":"script"}