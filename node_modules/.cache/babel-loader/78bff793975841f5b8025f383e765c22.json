{"ast":null,"code":"var Sequence = require('./Sequence');\n\nvar Util = require('util');\n\nvar Packets = require('../packets');\n\nvar Auth = require('../Auth');\n\nvar ClientConstants = require('../constants/client');\n\nmodule.exports = Handshake;\nUtil.inherits(Handshake, Sequence);\n\nfunction Handshake(options, callback) {\n  Sequence.call(this, options, callback);\n  options = options || {};\n  this._config = options.config;\n  this._handshakeInitializationPacket = null;\n}\n\nHandshake.prototype.determinePacket = function determinePacket(firstByte, parser) {\n  if (firstByte === 0xff) {\n    return Packets.ErrorPacket;\n  }\n\n  if (!this._handshakeInitializationPacket) {\n    return Packets.HandshakeInitializationPacket;\n  }\n\n  if (firstByte === 0xfe) {\n    return parser.packetLength() === 1 ? Packets.UseOldPasswordPacket : Packets.AuthSwitchRequestPacket;\n  }\n\n  return undefined;\n};\n\nHandshake.prototype['AuthSwitchRequestPacket'] = function (packet) {\n  var name = packet.authMethodName;\n  var data = Auth.auth(name, packet.authMethodData, {\n    password: this._config.password\n  });\n\n  if (data !== undefined) {\n    this.emit('packet', new Packets.AuthSwitchResponsePacket({\n      data: data\n    }));\n  } else {\n    var err = new Error('MySQL is requesting the ' + name + ' authentication method, which is not supported.');\n    err.code = 'UNSUPPORTED_AUTH_METHOD';\n    err.fatal = true;\n    this.end(err);\n  }\n};\n\nHandshake.prototype['HandshakeInitializationPacket'] = function (packet) {\n  this._handshakeInitializationPacket = packet;\n  this._config.protocol41 = packet.protocol41;\n  var serverSSLSupport = packet.serverCapabilities1 & ClientConstants.CLIENT_SSL;\n\n  if (this._config.ssl) {\n    if (!serverSSLSupport) {\n      var err = new Error('Server does not support secure connection');\n      err.code = 'HANDSHAKE_NO_SSL_SUPPORT';\n      err.fatal = true;\n      this.end(err);\n      return;\n    }\n\n    this._config.clientFlags |= ClientConstants.CLIENT_SSL;\n    this.emit('packet', new Packets.SSLRequestPacket({\n      clientFlags: this._config.clientFlags,\n      maxPacketSize: this._config.maxPacketSize,\n      charsetNumber: this._config.charsetNumber\n    }));\n    this.emit('start-tls');\n  } else {\n    this._sendCredentials();\n  }\n};\n\nHandshake.prototype._tlsUpgradeCompleteHandler = function () {\n  this._sendCredentials();\n};\n\nHandshake.prototype._sendCredentials = function () {\n  var packet = this._handshakeInitializationPacket;\n  this.emit('packet', new Packets.ClientAuthenticationPacket({\n    clientFlags: this._config.clientFlags,\n    maxPacketSize: this._config.maxPacketSize,\n    charsetNumber: this._config.charsetNumber,\n    user: this._config.user,\n    database: this._config.database,\n    protocol41: packet.protocol41,\n    scrambleBuff: packet.protocol41 ? Auth.token(this._config.password, packet.scrambleBuff()) : Auth.scramble323(packet.scrambleBuff(), this._config.password)\n  }));\n};\n\nHandshake.prototype['UseOldPasswordPacket'] = function () {\n  if (!this._config.insecureAuth) {\n    var err = new Error('MySQL server is requesting the old and insecure pre-4.1 auth mechanism. ' + 'Upgrade the user password or use the {insecureAuth: true} option.');\n    err.code = 'HANDSHAKE_INSECURE_AUTH';\n    err.fatal = true;\n    this.end(err);\n    return;\n  }\n\n  this.emit('packet', new Packets.OldPasswordPacket({\n    scrambleBuff: Auth.scramble323(this._handshakeInitializationPacket.scrambleBuff(), this._config.password)\n  }));\n};\n\nHandshake.prototype['ErrorPacket'] = function (packet) {\n  var err = this._packetToError(packet, true);\n\n  err.fatal = true;\n  this.end(err);\n};","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/mysql/lib/protocol/sequences/Handshake.js"],"names":["Sequence","require","Util","Packets","Auth","ClientConstants","module","exports","Handshake","inherits","options","callback","call","_config","config","_handshakeInitializationPacket","prototype","determinePacket","firstByte","parser","ErrorPacket","HandshakeInitializationPacket","packetLength","UseOldPasswordPacket","AuthSwitchRequestPacket","undefined","packet","name","authMethodName","data","auth","authMethodData","password","emit","AuthSwitchResponsePacket","err","Error","code","fatal","end","protocol41","serverSSLSupport","serverCapabilities1","CLIENT_SSL","ssl","clientFlags","SSLRequestPacket","maxPacketSize","charsetNumber","_sendCredentials","_tlsUpgradeCompleteHandler","ClientAuthenticationPacket","user","database","scrambleBuff","token","scramble323","insecureAuth","OldPasswordPacket","_packetToError"],"mappings":"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","sourcesContent":["var Sequence        = require('./Sequence');\nvar Util            = require('util');\nvar Packets         = require('../packets');\nvar Auth            = require('../Auth');\nvar ClientConstants = require('../constants/client');\n\nmodule.exports = Handshake;\nUtil.inherits(Handshake, Sequence);\nfunction Handshake(options, callback) {\n  Sequence.call(this, options, callback);\n\n  options = options || {};\n\n  this._config                        = options.config;\n  this._handshakeInitializationPacket = null;\n}\n\nHandshake.prototype.determinePacket = function determinePacket(firstByte, parser) {\n  if (firstByte === 0xff) {\n    return Packets.ErrorPacket;\n  }\n\n  if (!this._handshakeInitializationPacket) {\n    return Packets.HandshakeInitializationPacket;\n  }\n\n  if (firstByte === 0xfe) {\n    return (parser.packetLength() === 1)\n      ? Packets.UseOldPasswordPacket\n      : Packets.AuthSwitchRequestPacket;\n  }\n\n  return undefined;\n};\n\nHandshake.prototype['AuthSwitchRequestPacket'] = function (packet) {\n  var name = packet.authMethodName;\n  var data = Auth.auth(name, packet.authMethodData, {\n    password: this._config.password\n  });\n\n  if (data !== undefined) {\n    this.emit('packet', new Packets.AuthSwitchResponsePacket({\n      data: data\n    }));\n  } else {\n    var err   = new Error('MySQL is requesting the ' + name + ' authentication method, which is not supported.');\n    err.code  = 'UNSUPPORTED_AUTH_METHOD';\n    err.fatal = true;\n    this.end(err);\n  }\n};\n\nHandshake.prototype['HandshakeInitializationPacket'] = function(packet) {\n  this._handshakeInitializationPacket = packet;\n\n  this._config.protocol41 = packet.protocol41;\n\n  var serverSSLSupport = packet.serverCapabilities1 & ClientConstants.CLIENT_SSL;\n\n  if (this._config.ssl) {\n    if (!serverSSLSupport) {\n      var err = new Error('Server does not support secure connection');\n\n      err.code = 'HANDSHAKE_NO_SSL_SUPPORT';\n      err.fatal = true;\n\n      this.end(err);\n      return;\n    }\n\n    this._config.clientFlags |= ClientConstants.CLIENT_SSL;\n    this.emit('packet', new Packets.SSLRequestPacket({\n      clientFlags   : this._config.clientFlags,\n      maxPacketSize : this._config.maxPacketSize,\n      charsetNumber : this._config.charsetNumber\n    }));\n    this.emit('start-tls');\n  } else {\n    this._sendCredentials();\n  }\n};\n\nHandshake.prototype._tlsUpgradeCompleteHandler = function() {\n  this._sendCredentials();\n};\n\nHandshake.prototype._sendCredentials = function() {\n  var packet = this._handshakeInitializationPacket;\n  this.emit('packet', new Packets.ClientAuthenticationPacket({\n    clientFlags   : this._config.clientFlags,\n    maxPacketSize : this._config.maxPacketSize,\n    charsetNumber : this._config.charsetNumber,\n    user          : this._config.user,\n    database      : this._config.database,\n    protocol41    : packet.protocol41,\n    scrambleBuff  : (packet.protocol41)\n      ? Auth.token(this._config.password, packet.scrambleBuff())\n      : Auth.scramble323(packet.scrambleBuff(), this._config.password)\n  }));\n};\n\nHandshake.prototype['UseOldPasswordPacket'] = function() {\n  if (!this._config.insecureAuth) {\n    var err = new Error(\n      'MySQL server is requesting the old and insecure pre-4.1 auth mechanism. ' +\n      'Upgrade the user password or use the {insecureAuth: true} option.'\n    );\n\n    err.code = 'HANDSHAKE_INSECURE_AUTH';\n    err.fatal = true;\n\n    this.end(err);\n    return;\n  }\n\n  this.emit('packet', new Packets.OldPasswordPacket({\n    scrambleBuff: Auth.scramble323(this._handshakeInitializationPacket.scrambleBuff(), this._config.password)\n  }));\n};\n\nHandshake.prototype['ErrorPacket'] = function(packet) {\n  var err = this._packetToError(packet, true);\n  err.fatal = true;\n  this.end(err);\n};\n"]},"metadata":{},"sourceType":"script"}