{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { UILabelProvider } from '../../../common/keybindingLabels.js';\nimport { equals } from '../../../common/objects.js';\nimport './keybindingLabel.css';\nimport { localize } from '../../../../nls.js';\nconst $ = dom.$;\nexport class KeybindingLabel {\n  constructor(container, os, options) {\n    this.os = os;\n    this.keyElements = new Set();\n    this.options = options || Object.create(null);\n    this.labelBackground = this.options.keybindingLabelBackground;\n    this.labelForeground = this.options.keybindingLabelForeground;\n    this.labelBorder = this.options.keybindingLabelBorder;\n    this.labelBottomBorder = this.options.keybindingLabelBottomBorder;\n    this.labelShadow = this.options.keybindingLabelShadow;\n    this.domNode = dom.append(container, $('.monaco-keybinding'));\n    this.didEverRender = false;\n    container.appendChild(this.domNode);\n  }\n\n  get element() {\n    return this.domNode;\n  }\n\n  set(keybinding, matches) {\n    if (this.didEverRender && this.keybinding === keybinding && KeybindingLabel.areSame(this.matches, matches)) {\n      return;\n    }\n\n    this.keybinding = keybinding;\n    this.matches = matches;\n    this.render();\n  }\n\n  render() {\n    this.clear();\n\n    if (this.keybinding) {\n      let [firstPart, chordPart] = this.keybinding.getParts();\n\n      if (firstPart) {\n        this.renderPart(this.domNode, firstPart, this.matches ? this.matches.firstPart : null);\n      }\n\n      if (chordPart) {\n        dom.append(this.domNode, $('span.monaco-keybinding-key-chord-separator', undefined, ' '));\n        this.renderPart(this.domNode, chordPart, this.matches ? this.matches.chordPart : null);\n      }\n\n      this.domNode.title = this.keybinding.getAriaLabel() || '';\n    } else if (this.options && this.options.renderUnboundKeybindings) {\n      this.renderUnbound(this.domNode);\n    }\n\n    this.applyStyles();\n    this.didEverRender = true;\n  }\n\n  clear() {\n    dom.clearNode(this.domNode);\n    this.keyElements.clear();\n  }\n\n  renderPart(parent, part, match) {\n    const modifierLabels = UILabelProvider.modifierLabels[this.os];\n\n    if (part.ctrlKey) {\n      this.renderKey(parent, modifierLabels.ctrlKey, Boolean(match === null || match === void 0 ? void 0 : match.ctrlKey), modifierLabels.separator);\n    }\n\n    if (part.shiftKey) {\n      this.renderKey(parent, modifierLabels.shiftKey, Boolean(match === null || match === void 0 ? void 0 : match.shiftKey), modifierLabels.separator);\n    }\n\n    if (part.altKey) {\n      this.renderKey(parent, modifierLabels.altKey, Boolean(match === null || match === void 0 ? void 0 : match.altKey), modifierLabels.separator);\n    }\n\n    if (part.metaKey) {\n      this.renderKey(parent, modifierLabels.metaKey, Boolean(match === null || match === void 0 ? void 0 : match.metaKey), modifierLabels.separator);\n    }\n\n    const keyLabel = part.keyLabel;\n\n    if (keyLabel) {\n      this.renderKey(parent, keyLabel, Boolean(match === null || match === void 0 ? void 0 : match.keyCode), '');\n    }\n  }\n\n  renderKey(parent, label, highlight, separator) {\n    dom.append(parent, this.createKeyElement(label, highlight ? '.highlight' : ''));\n\n    if (separator) {\n      dom.append(parent, $('span.monaco-keybinding-key-separator', undefined, separator));\n    }\n  }\n\n  renderUnbound(parent) {\n    dom.append(parent, this.createKeyElement(localize('unbound', \"Unbound\")));\n  }\n\n  createKeyElement(label, extraClass = '') {\n    const keyElement = $('span.monaco-keybinding-key' + extraClass, undefined, label);\n    this.keyElements.add(keyElement);\n    return keyElement;\n  }\n\n  style(styles) {\n    this.labelBackground = styles.keybindingLabelBackground;\n    this.labelForeground = styles.keybindingLabelForeground;\n    this.labelBorder = styles.keybindingLabelBorder;\n    this.labelBottomBorder = styles.keybindingLabelBottomBorder;\n    this.labelShadow = styles.keybindingLabelShadow;\n    this.applyStyles();\n  }\n\n  applyStyles() {\n    var _a;\n\n    if (this.element) {\n      for (const keyElement of this.keyElements) {\n        if (this.labelBackground) {\n          keyElement.style.backgroundColor = (_a = this.labelBackground) === null || _a === void 0 ? void 0 : _a.toString();\n        }\n\n        if (this.labelBorder) {\n          keyElement.style.borderColor = this.labelBorder.toString();\n        }\n\n        if (this.labelBottomBorder) {\n          keyElement.style.borderBottomColor = this.labelBottomBorder.toString();\n        }\n\n        if (this.labelShadow) {\n          keyElement.style.boxShadow = `inset 0 -1px 0 ${this.labelShadow}`;\n        }\n      }\n\n      if (this.labelForeground) {\n        this.element.style.color = this.labelForeground.toString();\n      }\n    }\n  }\n\n  static areSame(a, b) {\n    if (a === b || !a && !b) {\n      return true;\n    }\n\n    return !!a && !!b && equals(a.firstPart, b.firstPart) && equals(a.chordPart, b.chordPart);\n  }\n\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/base/browser/ui/keybindingLabel/keybindingLabel.js"],"names":["dom","UILabelProvider","equals","localize","$","KeybindingLabel","constructor","container","os","options","keyElements","Set","Object","create","labelBackground","keybindingLabelBackground","labelForeground","keybindingLabelForeground","labelBorder","keybindingLabelBorder","labelBottomBorder","keybindingLabelBottomBorder","labelShadow","keybindingLabelShadow","domNode","append","didEverRender","appendChild","element","set","keybinding","matches","areSame","render","clear","firstPart","chordPart","getParts","renderPart","undefined","title","getAriaLabel","renderUnboundKeybindings","renderUnbound","applyStyles","clearNode","parent","part","match","modifierLabels","ctrlKey","renderKey","Boolean","separator","shiftKey","altKey","metaKey","keyLabel","keyCode","label","highlight","createKeyElement","extraClass","keyElement","add","style","styles","_a","backgroundColor","toString","borderColor","borderBottomColor","boxShadow","color","a","b"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { UILabelProvider } from '../../../common/keybindingLabels.js';\nimport { equals } from '../../../common/objects.js';\nimport './keybindingLabel.css';\nimport { localize } from '../../../../nls.js';\nconst $ = dom.$;\nexport class KeybindingLabel {\n    constructor(container, os, options) {\n        this.os = os;\n        this.keyElements = new Set();\n        this.options = options || Object.create(null);\n        this.labelBackground = this.options.keybindingLabelBackground;\n        this.labelForeground = this.options.keybindingLabelForeground;\n        this.labelBorder = this.options.keybindingLabelBorder;\n        this.labelBottomBorder = this.options.keybindingLabelBottomBorder;\n        this.labelShadow = this.options.keybindingLabelShadow;\n        this.domNode = dom.append(container, $('.monaco-keybinding'));\n        this.didEverRender = false;\n        container.appendChild(this.domNode);\n    }\n    get element() {\n        return this.domNode;\n    }\n    set(keybinding, matches) {\n        if (this.didEverRender && this.keybinding === keybinding && KeybindingLabel.areSame(this.matches, matches)) {\n            return;\n        }\n        this.keybinding = keybinding;\n        this.matches = matches;\n        this.render();\n    }\n    render() {\n        this.clear();\n        if (this.keybinding) {\n            let [firstPart, chordPart] = this.keybinding.getParts();\n            if (firstPart) {\n                this.renderPart(this.domNode, firstPart, this.matches ? this.matches.firstPart : null);\n            }\n            if (chordPart) {\n                dom.append(this.domNode, $('span.monaco-keybinding-key-chord-separator', undefined, ' '));\n                this.renderPart(this.domNode, chordPart, this.matches ? this.matches.chordPart : null);\n            }\n            this.domNode.title = this.keybinding.getAriaLabel() || '';\n        }\n        else if (this.options && this.options.renderUnboundKeybindings) {\n            this.renderUnbound(this.domNode);\n        }\n        this.applyStyles();\n        this.didEverRender = true;\n    }\n    clear() {\n        dom.clearNode(this.domNode);\n        this.keyElements.clear();\n    }\n    renderPart(parent, part, match) {\n        const modifierLabels = UILabelProvider.modifierLabels[this.os];\n        if (part.ctrlKey) {\n            this.renderKey(parent, modifierLabels.ctrlKey, Boolean(match === null || match === void 0 ? void 0 : match.ctrlKey), modifierLabels.separator);\n        }\n        if (part.shiftKey) {\n            this.renderKey(parent, modifierLabels.shiftKey, Boolean(match === null || match === void 0 ? void 0 : match.shiftKey), modifierLabels.separator);\n        }\n        if (part.altKey) {\n            this.renderKey(parent, modifierLabels.altKey, Boolean(match === null || match === void 0 ? void 0 : match.altKey), modifierLabels.separator);\n        }\n        if (part.metaKey) {\n            this.renderKey(parent, modifierLabels.metaKey, Boolean(match === null || match === void 0 ? void 0 : match.metaKey), modifierLabels.separator);\n        }\n        const keyLabel = part.keyLabel;\n        if (keyLabel) {\n            this.renderKey(parent, keyLabel, Boolean(match === null || match === void 0 ? void 0 : match.keyCode), '');\n        }\n    }\n    renderKey(parent, label, highlight, separator) {\n        dom.append(parent, this.createKeyElement(label, highlight ? '.highlight' : ''));\n        if (separator) {\n            dom.append(parent, $('span.monaco-keybinding-key-separator', undefined, separator));\n        }\n    }\n    renderUnbound(parent) {\n        dom.append(parent, this.createKeyElement(localize('unbound', \"Unbound\")));\n    }\n    createKeyElement(label, extraClass = '') {\n        const keyElement = $('span.monaco-keybinding-key' + extraClass, undefined, label);\n        this.keyElements.add(keyElement);\n        return keyElement;\n    }\n    style(styles) {\n        this.labelBackground = styles.keybindingLabelBackground;\n        this.labelForeground = styles.keybindingLabelForeground;\n        this.labelBorder = styles.keybindingLabelBorder;\n        this.labelBottomBorder = styles.keybindingLabelBottomBorder;\n        this.labelShadow = styles.keybindingLabelShadow;\n        this.applyStyles();\n    }\n    applyStyles() {\n        var _a;\n        if (this.element) {\n            for (const keyElement of this.keyElements) {\n                if (this.labelBackground) {\n                    keyElement.style.backgroundColor = (_a = this.labelBackground) === null || _a === void 0 ? void 0 : _a.toString();\n                }\n                if (this.labelBorder) {\n                    keyElement.style.borderColor = this.labelBorder.toString();\n                }\n                if (this.labelBottomBorder) {\n                    keyElement.style.borderBottomColor = this.labelBottomBorder.toString();\n                }\n                if (this.labelShadow) {\n                    keyElement.style.boxShadow = `inset 0 -1px 0 ${this.labelShadow}`;\n                }\n            }\n            if (this.labelForeground) {\n                this.element.style.color = this.labelForeground.toString();\n            }\n        }\n    }\n    static areSame(a, b) {\n        if (a === b || (!a && !b)) {\n            return true;\n        }\n        return !!a && !!b && equals(a.firstPart, b.firstPart) && equals(a.chordPart, b.chordPart);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}