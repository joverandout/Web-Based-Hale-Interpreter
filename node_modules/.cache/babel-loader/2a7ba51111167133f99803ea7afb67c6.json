{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isFirefox } from '../../browser.js';\nimport { DataTransfers } from '../../dnd.js';\nimport { $, addDisposableListener, append, EventHelper, EventType } from '../../dom.js';\nimport { EventType as TouchEventType, Gesture } from '../../touch.js';\nimport { Action, ActionRunner, Separator } from '../../../common/actions.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nimport * as platform from '../../../common/platform.js';\nimport * as types from '../../../common/types.js';\nimport './actionbar.css';\nimport * as nls from '../../../../nls.js';\nexport class BaseActionViewItem extends Disposable {\n  constructor(context, action, options = {}) {\n    super();\n    this.options = options;\n    this._context = context || this;\n    this._action = action;\n\n    if (action instanceof Action) {\n      this._register(action.onDidChange(event => {\n        if (!this.element) {\n          // we have not been rendered yet, so there\n          // is no point in updating the UI\n          return;\n        }\n\n        this.handleActionChangeEvent(event);\n      }));\n    }\n  }\n\n  handleActionChangeEvent(event) {\n    if (event.enabled !== undefined) {\n      this.updateEnabled();\n    }\n\n    if (event.checked !== undefined) {\n      this.updateChecked();\n    }\n\n    if (event.class !== undefined) {\n      this.updateClass();\n    }\n\n    if (event.label !== undefined) {\n      this.updateLabel();\n      this.updateTooltip();\n    }\n\n    if (event.tooltip !== undefined) {\n      this.updateTooltip();\n    }\n  }\n\n  get actionRunner() {\n    if (!this._actionRunner) {\n      this._actionRunner = this._register(new ActionRunner());\n    }\n\n    return this._actionRunner;\n  }\n\n  set actionRunner(actionRunner) {\n    this._actionRunner = actionRunner;\n  }\n\n  getAction() {\n    return this._action;\n  }\n\n  isEnabled() {\n    return this._action.enabled;\n  }\n\n  setActionContext(newContext) {\n    this._context = newContext;\n  }\n\n  render(container) {\n    const element = this.element = container;\n\n    this._register(Gesture.addTarget(container));\n\n    const enableDragging = this.options && this.options.draggable;\n\n    if (enableDragging) {\n      container.draggable = true;\n\n      if (isFirefox) {\n        // Firefox: requires to set a text data transfer to get going\n        this._register(addDisposableListener(container, EventType.DRAG_START, e => {\n          var _a;\n\n          return (_a = e.dataTransfer) === null || _a === void 0 ? void 0 : _a.setData(DataTransfers.TEXT, this._action.label);\n        }));\n      }\n    }\n\n    this._register(addDisposableListener(element, TouchEventType.Tap, e => this.onClick(e, true))); // Preserve focus on tap #125470\n\n\n    this._register(addDisposableListener(element, EventType.MOUSE_DOWN, e => {\n      if (!enableDragging) {\n        EventHelper.stop(e, true); // do not run when dragging is on because that would disable it\n      }\n\n      if (this._action.enabled && e.button === 0) {\n        element.classList.add('active');\n      }\n    }));\n\n    if (platform.isMacintosh) {\n      // macOS: allow to trigger the button when holding Ctrl+key and pressing the\n      // main mouse button. This is for scenarios where e.g. some interaction forces\n      // the Ctrl+key to be pressed and hold but the user still wants to interact\n      // with the actions (for example quick access in quick navigation mode).\n      this._register(addDisposableListener(element, EventType.CONTEXT_MENU, e => {\n        if (e.button === 0 && e.ctrlKey === true) {\n          this.onClick(e);\n        }\n      }));\n    }\n\n    this._register(addDisposableListener(element, EventType.CLICK, e => {\n      EventHelper.stop(e, true); // menus do not use the click event\n\n      if (!(this.options && this.options.isMenu)) {\n        this.onClick(e);\n      }\n    }));\n\n    this._register(addDisposableListener(element, EventType.DBLCLICK, e => {\n      EventHelper.stop(e, true);\n    }));\n\n    [EventType.MOUSE_UP, EventType.MOUSE_OUT].forEach(event => {\n      this._register(addDisposableListener(element, event, e => {\n        EventHelper.stop(e);\n        element.classList.remove('active');\n      }));\n    });\n  }\n\n  onClick(event, preserveFocus = false) {\n    var _a;\n\n    EventHelper.stop(event, true);\n    const context = types.isUndefinedOrNull(this._context) ? ((_a = this.options) === null || _a === void 0 ? void 0 : _a.useEventAsContext) ? event : {\n      preserveFocus\n    } : this._context;\n    this.actionRunner.run(this._action, context);\n  } // Only set the tabIndex on the element once it is about to get focused\n  // That way this element wont be a tab stop when it is not needed #106441\n\n\n  focus() {\n    if (this.element) {\n      this.element.tabIndex = 0;\n      this.element.focus();\n      this.element.classList.add('focused');\n    }\n  }\n\n  blur() {\n    if (this.element) {\n      this.element.blur();\n      this.element.tabIndex = -1;\n      this.element.classList.remove('focused');\n    }\n  }\n\n  setFocusable(focusable) {\n    if (this.element) {\n      this.element.tabIndex = focusable ? 0 : -1;\n    }\n  }\n\n  get trapsArrowNavigation() {\n    return false;\n  }\n\n  updateEnabled() {// implement in subclass\n  }\n\n  updateLabel() {// implement in subclass\n  }\n\n  updateTooltip() {// implement in subclass\n  }\n\n  updateClass() {// implement in subclass\n  }\n\n  updateChecked() {// implement in subclass\n  }\n\n  dispose() {\n    if (this.element) {\n      this.element.remove();\n      this.element = undefined;\n    }\n\n    super.dispose();\n  }\n\n}\nexport class ActionViewItem extends BaseActionViewItem {\n  constructor(context, action, options = {}) {\n    super(context, action, options);\n    this.options = options;\n    this.options.icon = options.icon !== undefined ? options.icon : false;\n    this.options.label = options.label !== undefined ? options.label : true;\n    this.cssClass = '';\n  }\n\n  render(container) {\n    super.render(container);\n\n    if (this.element) {\n      this.label = append(this.element, $('a.action-label'));\n    }\n\n    if (this.label) {\n      if (this._action.id === Separator.ID) {\n        this.label.setAttribute('role', 'presentation'); // A separator is a presentation item\n      } else {\n        if (this.options.isMenu) {\n          this.label.setAttribute('role', 'menuitem');\n        } else {\n          this.label.setAttribute('role', 'button');\n        }\n      }\n    }\n\n    if (this.options.label && this.options.keybinding && this.element) {\n      append(this.element, $('span.keybinding')).textContent = this.options.keybinding;\n    }\n\n    this.updateClass();\n    this.updateLabel();\n    this.updateTooltip();\n    this.updateEnabled();\n    this.updateChecked();\n  } // Only set the tabIndex on the element once it is about to get focused\n  // That way this element wont be a tab stop when it is not needed #106441\n\n\n  focus() {\n    if (this.label) {\n      this.label.tabIndex = 0;\n      this.label.focus();\n    }\n  }\n\n  blur() {\n    if (this.label) {\n      this.label.tabIndex = -1;\n    }\n  }\n\n  setFocusable(focusable) {\n    if (this.label) {\n      this.label.tabIndex = focusable ? 0 : -1;\n    }\n  }\n\n  updateLabel() {\n    if (this.options.label && this.label) {\n      this.label.textContent = this.getAction().label;\n    }\n  }\n\n  updateTooltip() {\n    let title = null;\n\n    if (this.getAction().tooltip) {\n      title = this.getAction().tooltip;\n    } else if (!this.options.label && this.getAction().label && this.options.icon) {\n      title = this.getAction().label;\n\n      if (this.options.keybinding) {\n        title = nls.localize({\n          key: 'titleLabel',\n          comment: ['action title', 'action keybinding']\n        }, \"{0} ({1})\", title, this.options.keybinding);\n      }\n    }\n\n    if (title && this.label) {\n      this.label.title = title;\n    }\n  }\n\n  updateClass() {\n    if (this.cssClass && this.label) {\n      this.label.classList.remove(...this.cssClass.split(' '));\n    }\n\n    if (this.options.icon) {\n      this.cssClass = this.getAction().class;\n\n      if (this.label) {\n        this.label.classList.add('codicon');\n\n        if (this.cssClass) {\n          this.label.classList.add(...this.cssClass.split(' '));\n        }\n      }\n\n      this.updateEnabled();\n    } else {\n      if (this.label) {\n        this.label.classList.remove('codicon');\n      }\n    }\n  }\n\n  updateEnabled() {\n    if (this.getAction().enabled) {\n      if (this.label) {\n        this.label.removeAttribute('aria-disabled');\n        this.label.classList.remove('disabled');\n      }\n\n      if (this.element) {\n        this.element.classList.remove('disabled');\n      }\n    } else {\n      if (this.label) {\n        this.label.setAttribute('aria-disabled', 'true');\n        this.label.classList.add('disabled');\n      }\n\n      if (this.element) {\n        this.element.classList.add('disabled');\n      }\n    }\n  }\n\n  updateChecked() {\n    if (this.label) {\n      if (this.getAction().checked) {\n        this.label.classList.add('checked');\n      } else {\n        this.label.classList.remove('checked');\n      }\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/base/browser/ui/actionbar/actionViewItems.js"],"names":["isFirefox","DataTransfers","$","addDisposableListener","append","EventHelper","EventType","TouchEventType","Gesture","Action","ActionRunner","Separator","Disposable","platform","types","nls","BaseActionViewItem","constructor","context","action","options","_context","_action","_register","onDidChange","event","element","handleActionChangeEvent","enabled","undefined","updateEnabled","checked","updateChecked","class","updateClass","label","updateLabel","updateTooltip","tooltip","actionRunner","_actionRunner","getAction","isEnabled","setActionContext","newContext","render","container","addTarget","enableDragging","draggable","DRAG_START","e","_a","dataTransfer","setData","TEXT","Tap","onClick","MOUSE_DOWN","stop","button","classList","add","isMacintosh","CONTEXT_MENU","ctrlKey","CLICK","isMenu","DBLCLICK","MOUSE_UP","MOUSE_OUT","forEach","remove","preserveFocus","isUndefinedOrNull","useEventAsContext","run","focus","tabIndex","blur","setFocusable","focusable","trapsArrowNavigation","dispose","ActionViewItem","icon","cssClass","id","ID","setAttribute","keybinding","textContent","title","localize","key","comment","split","removeAttribute"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isFirefox } from '../../browser.js';\nimport { DataTransfers } from '../../dnd.js';\nimport { $, addDisposableListener, append, EventHelper, EventType } from '../../dom.js';\nimport { EventType as TouchEventType, Gesture } from '../../touch.js';\nimport { Action, ActionRunner, Separator } from '../../../common/actions.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nimport * as platform from '../../../common/platform.js';\nimport * as types from '../../../common/types.js';\nimport './actionbar.css';\nimport * as nls from '../../../../nls.js';\nexport class BaseActionViewItem extends Disposable {\n    constructor(context, action, options = {}) {\n        super();\n        this.options = options;\n        this._context = context || this;\n        this._action = action;\n        if (action instanceof Action) {\n            this._register(action.onDidChange(event => {\n                if (!this.element) {\n                    // we have not been rendered yet, so there\n                    // is no point in updating the UI\n                    return;\n                }\n                this.handleActionChangeEvent(event);\n            }));\n        }\n    }\n    handleActionChangeEvent(event) {\n        if (event.enabled !== undefined) {\n            this.updateEnabled();\n        }\n        if (event.checked !== undefined) {\n            this.updateChecked();\n        }\n        if (event.class !== undefined) {\n            this.updateClass();\n        }\n        if (event.label !== undefined) {\n            this.updateLabel();\n            this.updateTooltip();\n        }\n        if (event.tooltip !== undefined) {\n            this.updateTooltip();\n        }\n    }\n    get actionRunner() {\n        if (!this._actionRunner) {\n            this._actionRunner = this._register(new ActionRunner());\n        }\n        return this._actionRunner;\n    }\n    set actionRunner(actionRunner) {\n        this._actionRunner = actionRunner;\n    }\n    getAction() {\n        return this._action;\n    }\n    isEnabled() {\n        return this._action.enabled;\n    }\n    setActionContext(newContext) {\n        this._context = newContext;\n    }\n    render(container) {\n        const element = this.element = container;\n        this._register(Gesture.addTarget(container));\n        const enableDragging = this.options && this.options.draggable;\n        if (enableDragging) {\n            container.draggable = true;\n            if (isFirefox) {\n                // Firefox: requires to set a text data transfer to get going\n                this._register(addDisposableListener(container, EventType.DRAG_START, e => { var _a; return (_a = e.dataTransfer) === null || _a === void 0 ? void 0 : _a.setData(DataTransfers.TEXT, this._action.label); }));\n            }\n        }\n        this._register(addDisposableListener(element, TouchEventType.Tap, e => this.onClick(e, true))); // Preserve focus on tap #125470\n        this._register(addDisposableListener(element, EventType.MOUSE_DOWN, e => {\n            if (!enableDragging) {\n                EventHelper.stop(e, true); // do not run when dragging is on because that would disable it\n            }\n            if (this._action.enabled && e.button === 0) {\n                element.classList.add('active');\n            }\n        }));\n        if (platform.isMacintosh) {\n            // macOS: allow to trigger the button when holding Ctrl+key and pressing the\n            // main mouse button. This is for scenarios where e.g. some interaction forces\n            // the Ctrl+key to be pressed and hold but the user still wants to interact\n            // with the actions (for example quick access in quick navigation mode).\n            this._register(addDisposableListener(element, EventType.CONTEXT_MENU, e => {\n                if (e.button === 0 && e.ctrlKey === true) {\n                    this.onClick(e);\n                }\n            }));\n        }\n        this._register(addDisposableListener(element, EventType.CLICK, e => {\n            EventHelper.stop(e, true);\n            // menus do not use the click event\n            if (!(this.options && this.options.isMenu)) {\n                this.onClick(e);\n            }\n        }));\n        this._register(addDisposableListener(element, EventType.DBLCLICK, e => {\n            EventHelper.stop(e, true);\n        }));\n        [EventType.MOUSE_UP, EventType.MOUSE_OUT].forEach(event => {\n            this._register(addDisposableListener(element, event, e => {\n                EventHelper.stop(e);\n                element.classList.remove('active');\n            }));\n        });\n    }\n    onClick(event, preserveFocus = false) {\n        var _a;\n        EventHelper.stop(event, true);\n        const context = types.isUndefinedOrNull(this._context) ? ((_a = this.options) === null || _a === void 0 ? void 0 : _a.useEventAsContext) ? event : { preserveFocus } : this._context;\n        this.actionRunner.run(this._action, context);\n    }\n    // Only set the tabIndex on the element once it is about to get focused\n    // That way this element wont be a tab stop when it is not needed #106441\n    focus() {\n        if (this.element) {\n            this.element.tabIndex = 0;\n            this.element.focus();\n            this.element.classList.add('focused');\n        }\n    }\n    blur() {\n        if (this.element) {\n            this.element.blur();\n            this.element.tabIndex = -1;\n            this.element.classList.remove('focused');\n        }\n    }\n    setFocusable(focusable) {\n        if (this.element) {\n            this.element.tabIndex = focusable ? 0 : -1;\n        }\n    }\n    get trapsArrowNavigation() {\n        return false;\n    }\n    updateEnabled() {\n        // implement in subclass\n    }\n    updateLabel() {\n        // implement in subclass\n    }\n    updateTooltip() {\n        // implement in subclass\n    }\n    updateClass() {\n        // implement in subclass\n    }\n    updateChecked() {\n        // implement in subclass\n    }\n    dispose() {\n        if (this.element) {\n            this.element.remove();\n            this.element = undefined;\n        }\n        super.dispose();\n    }\n}\nexport class ActionViewItem extends BaseActionViewItem {\n    constructor(context, action, options = {}) {\n        super(context, action, options);\n        this.options = options;\n        this.options.icon = options.icon !== undefined ? options.icon : false;\n        this.options.label = options.label !== undefined ? options.label : true;\n        this.cssClass = '';\n    }\n    render(container) {\n        super.render(container);\n        if (this.element) {\n            this.label = append(this.element, $('a.action-label'));\n        }\n        if (this.label) {\n            if (this._action.id === Separator.ID) {\n                this.label.setAttribute('role', 'presentation'); // A separator is a presentation item\n            }\n            else {\n                if (this.options.isMenu) {\n                    this.label.setAttribute('role', 'menuitem');\n                }\n                else {\n                    this.label.setAttribute('role', 'button');\n                }\n            }\n        }\n        if (this.options.label && this.options.keybinding && this.element) {\n            append(this.element, $('span.keybinding')).textContent = this.options.keybinding;\n        }\n        this.updateClass();\n        this.updateLabel();\n        this.updateTooltip();\n        this.updateEnabled();\n        this.updateChecked();\n    }\n    // Only set the tabIndex on the element once it is about to get focused\n    // That way this element wont be a tab stop when it is not needed #106441\n    focus() {\n        if (this.label) {\n            this.label.tabIndex = 0;\n            this.label.focus();\n        }\n    }\n    blur() {\n        if (this.label) {\n            this.label.tabIndex = -1;\n        }\n    }\n    setFocusable(focusable) {\n        if (this.label) {\n            this.label.tabIndex = focusable ? 0 : -1;\n        }\n    }\n    updateLabel() {\n        if (this.options.label && this.label) {\n            this.label.textContent = this.getAction().label;\n        }\n    }\n    updateTooltip() {\n        let title = null;\n        if (this.getAction().tooltip) {\n            title = this.getAction().tooltip;\n        }\n        else if (!this.options.label && this.getAction().label && this.options.icon) {\n            title = this.getAction().label;\n            if (this.options.keybinding) {\n                title = nls.localize({ key: 'titleLabel', comment: ['action title', 'action keybinding'] }, \"{0} ({1})\", title, this.options.keybinding);\n            }\n        }\n        if (title && this.label) {\n            this.label.title = title;\n        }\n    }\n    updateClass() {\n        if (this.cssClass && this.label) {\n            this.label.classList.remove(...this.cssClass.split(' '));\n        }\n        if (this.options.icon) {\n            this.cssClass = this.getAction().class;\n            if (this.label) {\n                this.label.classList.add('codicon');\n                if (this.cssClass) {\n                    this.label.classList.add(...this.cssClass.split(' '));\n                }\n            }\n            this.updateEnabled();\n        }\n        else {\n            if (this.label) {\n                this.label.classList.remove('codicon');\n            }\n        }\n    }\n    updateEnabled() {\n        if (this.getAction().enabled) {\n            if (this.label) {\n                this.label.removeAttribute('aria-disabled');\n                this.label.classList.remove('disabled');\n            }\n            if (this.element) {\n                this.element.classList.remove('disabled');\n            }\n        }\n        else {\n            if (this.label) {\n                this.label.setAttribute('aria-disabled', 'true');\n                this.label.classList.add('disabled');\n            }\n            if (this.element) {\n                this.element.classList.add('disabled');\n            }\n        }\n    }\n    updateChecked() {\n        if (this.label) {\n            if (this.getAction().checked) {\n                this.label.classList.add('checked');\n            }\n            else {\n                this.label.classList.remove('checked');\n            }\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}