{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../nls.js';\nimport { Color, RGBA } from '../../../base/common/color.js';\nimport { activeContrastBorder, editorBackground, editorForeground, registerColor, editorWarningForeground, editorInfoForeground, editorWarningBorder, editorInfoBorder, contrastBorder, editorFindMatchHighlight } from '../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\n/**\n * Definition of the editor colors\n */\n\nexport const editorLineHighlight = registerColor('editor.lineHighlightBackground', {\n  dark: null,\n  light: null,\n  hc: null\n}, nls.localize('lineHighlight', 'Background color for the highlight of line at the cursor position.'));\nexport const editorLineHighlightBorder = registerColor('editor.lineHighlightBorder', {\n  dark: '#282828',\n  light: '#eeeeee',\n  hc: '#f38518'\n}, nls.localize('lineHighlightBorderBox', 'Background color for the border around the line at the cursor position.'));\nexport const editorRangeHighlight = registerColor('editor.rangeHighlightBackground', {\n  dark: '#ffffff0b',\n  light: '#fdff0033',\n  hc: null\n}, nls.localize('rangeHighlight', 'Background color of highlighted ranges, like by quick open and find features. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorRangeHighlightBorder = registerColor('editor.rangeHighlightBorder', {\n  dark: null,\n  light: null,\n  hc: activeContrastBorder\n}, nls.localize('rangeHighlightBorder', 'Background color of the border around highlighted ranges.'), true);\nexport const editorSymbolHighlight = registerColor('editor.symbolHighlightBackground', {\n  dark: editorFindMatchHighlight,\n  light: editorFindMatchHighlight,\n  hc: null\n}, nls.localize('symbolHighlight', 'Background color of highlighted symbol, like for go to definition or go next/previous symbol. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorSymbolHighlightBorder = registerColor('editor.symbolHighlightBorder', {\n  dark: null,\n  light: null,\n  hc: activeContrastBorder\n}, nls.localize('symbolHighlightBorder', 'Background color of the border around highlighted symbols.'), true);\nexport const editorCursorForeground = registerColor('editorCursor.foreground', {\n  dark: '#AEAFAD',\n  light: Color.black,\n  hc: Color.white\n}, nls.localize('caret', 'Color of the editor cursor.'));\nexport const editorCursorBackground = registerColor('editorCursor.background', null, nls.localize('editorCursorBackground', 'The background color of the editor cursor. Allows customizing the color of a character overlapped by a block cursor.'));\nexport const editorWhitespaces = registerColor('editorWhitespace.foreground', {\n  dark: '#e3e4e229',\n  light: '#33333333',\n  hc: '#e3e4e229'\n}, nls.localize('editorWhitespaces', 'Color of whitespace characters in the editor.'));\nexport const editorIndentGuides = registerColor('editorIndentGuide.background', {\n  dark: editorWhitespaces,\n  light: editorWhitespaces,\n  hc: editorWhitespaces\n}, nls.localize('editorIndentGuides', 'Color of the editor indentation guides.'));\nexport const editorActiveIndentGuides = registerColor('editorIndentGuide.activeBackground', {\n  dark: editorWhitespaces,\n  light: editorWhitespaces,\n  hc: editorWhitespaces\n}, nls.localize('editorActiveIndentGuide', 'Color of the active editor indentation guides.'));\nexport const editorLineNumbers = registerColor('editorLineNumber.foreground', {\n  dark: '#858585',\n  light: '#237893',\n  hc: Color.white\n}, nls.localize('editorLineNumbers', 'Color of editor line numbers.'));\nconst deprecatedEditorActiveLineNumber = registerColor('editorActiveLineNumber.foreground', {\n  dark: '#c6c6c6',\n  light: '#0B216F',\n  hc: activeContrastBorder\n}, nls.localize('editorActiveLineNumber', 'Color of editor active line number'), false, nls.localize('deprecatedEditorActiveLineNumber', 'Id is deprecated. Use \\'editorLineNumber.activeForeground\\' instead.'));\nexport const editorActiveLineNumber = registerColor('editorLineNumber.activeForeground', {\n  dark: deprecatedEditorActiveLineNumber,\n  light: deprecatedEditorActiveLineNumber,\n  hc: deprecatedEditorActiveLineNumber\n}, nls.localize('editorActiveLineNumber', 'Color of editor active line number'));\nexport const editorRuler = registerColor('editorRuler.foreground', {\n  dark: '#5A5A5A',\n  light: Color.lightgrey,\n  hc: Color.white\n}, nls.localize('editorRuler', 'Color of the editor rulers.'));\nexport const editorCodeLensForeground = registerColor('editorCodeLens.foreground', {\n  dark: '#999999',\n  light: '#919191',\n  hc: '#999999'\n}, nls.localize('editorCodeLensForeground', 'Foreground color of editor CodeLens'));\nexport const editorBracketMatchBackground = registerColor('editorBracketMatch.background', {\n  dark: '#0064001a',\n  light: '#0064001a',\n  hc: '#0064001a'\n}, nls.localize('editorBracketMatchBackground', 'Background color behind matching brackets'));\nexport const editorBracketMatchBorder = registerColor('editorBracketMatch.border', {\n  dark: '#888',\n  light: '#B9B9B9',\n  hc: contrastBorder\n}, nls.localize('editorBracketMatchBorder', 'Color for matching brackets boxes'));\nexport const editorOverviewRulerBorder = registerColor('editorOverviewRuler.border', {\n  dark: '#7f7f7f4d',\n  light: '#7f7f7f4d',\n  hc: '#7f7f7f4d'\n}, nls.localize('editorOverviewRulerBorder', 'Color of the overview ruler border.'));\nexport const editorOverviewRulerBackground = registerColor('editorOverviewRuler.background', null, nls.localize('editorOverviewRulerBackground', 'Background color of the editor overview ruler. Only used when the minimap is enabled and placed on the right side of the editor.'));\nexport const editorGutter = registerColor('editorGutter.background', {\n  dark: editorBackground,\n  light: editorBackground,\n  hc: editorBackground\n}, nls.localize('editorGutter', 'Background color of the editor gutter. The gutter contains the glyph margins and the line numbers.'));\nexport const editorUnnecessaryCodeBorder = registerColor('editorUnnecessaryCode.border', {\n  dark: null,\n  light: null,\n  hc: Color.fromHex('#fff').transparent(0.8)\n}, nls.localize('unnecessaryCodeBorder', 'Border color of unnecessary (unused) source code in the editor.'));\nexport const editorUnnecessaryCodeOpacity = registerColor('editorUnnecessaryCode.opacity', {\n  dark: Color.fromHex('#000a'),\n  light: Color.fromHex('#0007'),\n  hc: null\n}, nls.localize('unnecessaryCodeOpacity', 'Opacity of unnecessary (unused) source code in the editor. For example, \"#000000c0\" will render the code with 75% opacity. For high contrast themes, use the  \\'editorUnnecessaryCode.border\\' theme color to underline unnecessary code instead of fading it out.'));\nexport const ghostTextBorder = registerColor('editorGhostText.border', {\n  dark: null,\n  light: null,\n  hc: Color.fromHex('#fff').transparent(0.8)\n}, nls.localize('editorGhostTextBorder', 'Border color of ghost text in the editor.'));\nexport const ghostTextForeground = registerColor('editorGhostText.foreground', {\n  dark: Color.fromHex('#ffffff56'),\n  light: Color.fromHex('#0007'),\n  hc: null\n}, nls.localize('editorGhostTextForeground', 'Foreground color of the ghost text in the editor.'));\nexport const ghostTextBackground = registerColor('editorGhostText.background', {\n  dark: null,\n  light: null,\n  hc: null\n}, nls.localize('editorGhostTextBackground', 'Background color of the ghost text in the editor.'));\nconst rulerRangeDefault = new Color(new RGBA(0, 122, 204, 0.6));\nexport const overviewRulerRangeHighlight = registerColor('editorOverviewRuler.rangeHighlightForeground', {\n  dark: rulerRangeDefault,\n  light: rulerRangeDefault,\n  hc: rulerRangeDefault\n}, nls.localize('overviewRulerRangeHighlight', 'Overview ruler marker color for range highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const overviewRulerError = registerColor('editorOverviewRuler.errorForeground', {\n  dark: new Color(new RGBA(255, 18, 18, 0.7)),\n  light: new Color(new RGBA(255, 18, 18, 0.7)),\n  hc: new Color(new RGBA(255, 50, 50, 1))\n}, nls.localize('overviewRuleError', 'Overview ruler marker color for errors.'));\nexport const overviewRulerWarning = registerColor('editorOverviewRuler.warningForeground', {\n  dark: editorWarningForeground,\n  light: editorWarningForeground,\n  hc: editorWarningBorder\n}, nls.localize('overviewRuleWarning', 'Overview ruler marker color for warnings.'));\nexport const overviewRulerInfo = registerColor('editorOverviewRuler.infoForeground', {\n  dark: editorInfoForeground,\n  light: editorInfoForeground,\n  hc: editorInfoBorder\n}, nls.localize('overviewRuleInfo', 'Overview ruler marker color for infos.'));\nexport const editorBracketHighlightingForeground1 = registerColor('editorBracketHighlight.foreground1', {\n  dark: '#FFD700',\n  light: '#0431FAFF',\n  hc: '#FFD700'\n}, nls.localize('editorBracketHighlightForeground1', 'Foreground color of brackets (1). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground2 = registerColor('editorBracketHighlight.foreground2', {\n  dark: '#DA70D6',\n  light: '#319331FF',\n  hc: '#DA70D6'\n}, nls.localize('editorBracketHighlightForeground2', 'Foreground color of brackets (2). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground3 = registerColor('editorBracketHighlight.foreground3', {\n  dark: '#179FFF',\n  light: '#7B3814FF',\n  hc: '#87CEFA'\n}, nls.localize('editorBracketHighlightForeground3', 'Foreground color of brackets (3). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground4 = registerColor('editorBracketHighlight.foreground4', {\n  dark: '#00000000',\n  light: '#00000000',\n  hc: '#00000000'\n}, nls.localize('editorBracketHighlightForeground4', 'Foreground color of brackets (4). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground5 = registerColor('editorBracketHighlight.foreground5', {\n  dark: '#00000000',\n  light: '#00000000',\n  hc: '#00000000'\n}, nls.localize('editorBracketHighlightForeground5', 'Foreground color of brackets (5). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground6 = registerColor('editorBracketHighlight.foreground6', {\n  dark: '#00000000',\n  light: '#00000000',\n  hc: '#00000000'\n}, nls.localize('editorBracketHighlightForeground6', 'Foreground color of brackets (6). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingUnexpectedBracketForeground = registerColor('editorBracketHighlight.unexpectedBracket.foreground', {\n  dark: new Color(new RGBA(255, 18, 18, 0.8)),\n  light: new Color(new RGBA(255, 18, 18, 0.8)),\n  hc: new Color(new RGBA(255, 50, 50, 1))\n}, nls.localize('editorBracketHighlightUnexpectedBracketForeground', 'Foreground color of unexpected brackets.'));\nexport const editorBracketPairGuideBackground1 = registerColor('editorBracketPairGuide.background1', {\n  dark: '#00000000',\n  light: '#00000000',\n  hc: '#00000000'\n}, nls.localize('editorBracketPairGuide.background1', 'Background color of inactive bracket pair guides (1). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground2 = registerColor('editorBracketPairGuide.background2', {\n  dark: '#00000000',\n  light: '#00000000',\n  hc: '#00000000'\n}, nls.localize('editorBracketPairGuide.background2', 'Background color of inactive bracket pair guides (2). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground3 = registerColor('editorBracketPairGuide.background3', {\n  dark: '#00000000',\n  light: '#00000000',\n  hc: '#00000000'\n}, nls.localize('editorBracketPairGuide.background3', 'Background color of inactive bracket pair guides (3). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground4 = registerColor('editorBracketPairGuide.background4', {\n  dark: '#00000000',\n  light: '#00000000',\n  hc: '#00000000'\n}, nls.localize('editorBracketPairGuide.background4', 'Background color of inactive bracket pair guides (4). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground5 = registerColor('editorBracketPairGuide.background5', {\n  dark: '#00000000',\n  light: '#00000000',\n  hc: '#00000000'\n}, nls.localize('editorBracketPairGuide.background5', 'Background color of inactive bracket pair guides (5). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground6 = registerColor('editorBracketPairGuide.background6', {\n  dark: '#00000000',\n  light: '#00000000',\n  hc: '#00000000'\n}, nls.localize('editorBracketPairGuide.background6', 'Background color of inactive bracket pair guides (6). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground1 = registerColor('editorBracketPairGuide.activeBackground1', {\n  dark: '#00000000',\n  light: '#00000000',\n  hc: '#00000000'\n}, nls.localize('editorBracketPairGuide.activeBackground1', 'Background color of active bracket pair guides (1). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground2 = registerColor('editorBracketPairGuide.activeBackground2', {\n  dark: '#00000000',\n  light: '#00000000',\n  hc: '#00000000'\n}, nls.localize('editorBracketPairGuide.activeBackground2', 'Background color of active bracket pair guides (2). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground3 = registerColor('editorBracketPairGuide.activeBackground3', {\n  dark: '#00000000',\n  light: '#00000000',\n  hc: '#00000000'\n}, nls.localize('editorBracketPairGuide.activeBackground3', 'Background color of active bracket pair guides (3). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground4 = registerColor('editorBracketPairGuide.activeBackground4', {\n  dark: '#00000000',\n  light: '#00000000',\n  hc: '#00000000'\n}, nls.localize('editorBracketPairGuide.activeBackground4', 'Background color of active bracket pair guides (4). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground5 = registerColor('editorBracketPairGuide.activeBackground5', {\n  dark: '#00000000',\n  light: '#00000000',\n  hc: '#00000000'\n}, nls.localize('editorBracketPairGuide.activeBackground5', 'Background color of active bracket pair guides (5). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground6 = registerColor('editorBracketPairGuide.activeBackground6', {\n  dark: '#00000000',\n  light: '#00000000',\n  hc: '#00000000'\n}, nls.localize('editorBracketPairGuide.activeBackground6', 'Background color of active bracket pair guides (6). Requires enabling bracket pair guides.'));\nexport const editorUnicodeHighlightBorder = registerColor('editorUnicodeHighlight.border', {\n  dark: '#BD9B03',\n  light: '#CEA33D',\n  hc: '#ff0000'\n}, nls.localize('editorUnicodeHighlight.border', 'Border color used to highlight unicode characters.')); // contains all color rules that used to defined in editor/browser/widget/editor.css\n\nregisterThemingParticipant((theme, collector) => {\n  const background = theme.getColor(editorBackground);\n\n  if (background) {\n    collector.addRule(`.monaco-editor, .monaco-editor-background, .monaco-editor .inputarea.ime-input { background-color: ${background}; }`);\n  }\n\n  const foreground = theme.getColor(editorForeground);\n\n  if (foreground) {\n    collector.addRule(`.monaco-editor, .monaco-editor .inputarea.ime-input { color: ${foreground}; }`);\n  }\n\n  const gutter = theme.getColor(editorGutter);\n\n  if (gutter) {\n    collector.addRule(`.monaco-editor .margin { background-color: ${gutter}; }`);\n  }\n\n  const rangeHighlight = theme.getColor(editorRangeHighlight);\n\n  if (rangeHighlight) {\n    collector.addRule(`.monaco-editor .rangeHighlight { background-color: ${rangeHighlight}; }`);\n  }\n\n  const rangeHighlightBorder = theme.getColor(editorRangeHighlightBorder);\n\n  if (rangeHighlightBorder) {\n    collector.addRule(`.monaco-editor .rangeHighlight { border: 1px ${theme.type === 'hc' ? 'dotted' : 'solid'} ${rangeHighlightBorder}; }`);\n  }\n\n  const symbolHighlight = theme.getColor(editorSymbolHighlight);\n\n  if (symbolHighlight) {\n    collector.addRule(`.monaco-editor .symbolHighlight { background-color: ${symbolHighlight}; }`);\n  }\n\n  const symbolHighlightBorder = theme.getColor(editorSymbolHighlightBorder);\n\n  if (symbolHighlightBorder) {\n    collector.addRule(`.monaco-editor .symbolHighlight { border: 1px ${theme.type === 'hc' ? 'dotted' : 'solid'} ${symbolHighlightBorder}; }`);\n  }\n\n  const invisibles = theme.getColor(editorWhitespaces);\n\n  if (invisibles) {\n    collector.addRule(`.monaco-editor .mtkw { color: ${invisibles} !important; }`);\n    collector.addRule(`.monaco-editor .mtkz { color: ${invisibles} !important; }`);\n  }\n});","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/common/core/editorColorRegistry.js"],"names":["nls","Color","RGBA","activeContrastBorder","editorBackground","editorForeground","registerColor","editorWarningForeground","editorInfoForeground","editorWarningBorder","editorInfoBorder","contrastBorder","editorFindMatchHighlight","registerThemingParticipant","editorLineHighlight","dark","light","hc","localize","editorLineHighlightBorder","editorRangeHighlight","editorRangeHighlightBorder","editorSymbolHighlight","editorSymbolHighlightBorder","editorCursorForeground","black","white","editorCursorBackground","editorWhitespaces","editorIndentGuides","editorActiveIndentGuides","editorLineNumbers","deprecatedEditorActiveLineNumber","editorActiveLineNumber","editorRuler","lightgrey","editorCodeLensForeground","editorBracketMatchBackground","editorBracketMatchBorder","editorOverviewRulerBorder","editorOverviewRulerBackground","editorGutter","editorUnnecessaryCodeBorder","fromHex","transparent","editorUnnecessaryCodeOpacity","ghostTextBorder","ghostTextForeground","ghostTextBackground","rulerRangeDefault","overviewRulerRangeHighlight","overviewRulerError","overviewRulerWarning","overviewRulerInfo","editorBracketHighlightingForeground1","editorBracketHighlightingForeground2","editorBracketHighlightingForeground3","editorBracketHighlightingForeground4","editorBracketHighlightingForeground5","editorBracketHighlightingForeground6","editorBracketHighlightingUnexpectedBracketForeground","editorBracketPairGuideBackground1","editorBracketPairGuideBackground2","editorBracketPairGuideBackground3","editorBracketPairGuideBackground4","editorBracketPairGuideBackground5","editorBracketPairGuideBackground6","editorBracketPairGuideActiveBackground1","editorBracketPairGuideActiveBackground2","editorBracketPairGuideActiveBackground3","editorBracketPairGuideActiveBackground4","editorBracketPairGuideActiveBackground5","editorBracketPairGuideActiveBackground6","editorUnicodeHighlightBorder","theme","collector","background","getColor","addRule","foreground","gutter","rangeHighlight","rangeHighlightBorder","type","symbolHighlight","symbolHighlightBorder","invisibles"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../nls.js';\nimport { Color, RGBA } from '../../../base/common/color.js';\nimport { activeContrastBorder, editorBackground, editorForeground, registerColor, editorWarningForeground, editorInfoForeground, editorWarningBorder, editorInfoBorder, contrastBorder, editorFindMatchHighlight } from '../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\n/**\n * Definition of the editor colors\n */\nexport const editorLineHighlight = registerColor('editor.lineHighlightBackground', { dark: null, light: null, hc: null }, nls.localize('lineHighlight', 'Background color for the highlight of line at the cursor position.'));\nexport const editorLineHighlightBorder = registerColor('editor.lineHighlightBorder', { dark: '#282828', light: '#eeeeee', hc: '#f38518' }, nls.localize('lineHighlightBorderBox', 'Background color for the border around the line at the cursor position.'));\nexport const editorRangeHighlight = registerColor('editor.rangeHighlightBackground', { dark: '#ffffff0b', light: '#fdff0033', hc: null }, nls.localize('rangeHighlight', 'Background color of highlighted ranges, like by quick open and find features. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorRangeHighlightBorder = registerColor('editor.rangeHighlightBorder', { dark: null, light: null, hc: activeContrastBorder }, nls.localize('rangeHighlightBorder', 'Background color of the border around highlighted ranges.'), true);\nexport const editorSymbolHighlight = registerColor('editor.symbolHighlightBackground', { dark: editorFindMatchHighlight, light: editorFindMatchHighlight, hc: null }, nls.localize('symbolHighlight', 'Background color of highlighted symbol, like for go to definition or go next/previous symbol. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorSymbolHighlightBorder = registerColor('editor.symbolHighlightBorder', { dark: null, light: null, hc: activeContrastBorder }, nls.localize('symbolHighlightBorder', 'Background color of the border around highlighted symbols.'), true);\nexport const editorCursorForeground = registerColor('editorCursor.foreground', { dark: '#AEAFAD', light: Color.black, hc: Color.white }, nls.localize('caret', 'Color of the editor cursor.'));\nexport const editorCursorBackground = registerColor('editorCursor.background', null, nls.localize('editorCursorBackground', 'The background color of the editor cursor. Allows customizing the color of a character overlapped by a block cursor.'));\nexport const editorWhitespaces = registerColor('editorWhitespace.foreground', { dark: '#e3e4e229', light: '#33333333', hc: '#e3e4e229' }, nls.localize('editorWhitespaces', 'Color of whitespace characters in the editor.'));\nexport const editorIndentGuides = registerColor('editorIndentGuide.background', { dark: editorWhitespaces, light: editorWhitespaces, hc: editorWhitespaces }, nls.localize('editorIndentGuides', 'Color of the editor indentation guides.'));\nexport const editorActiveIndentGuides = registerColor('editorIndentGuide.activeBackground', { dark: editorWhitespaces, light: editorWhitespaces, hc: editorWhitespaces }, nls.localize('editorActiveIndentGuide', 'Color of the active editor indentation guides.'));\nexport const editorLineNumbers = registerColor('editorLineNumber.foreground', { dark: '#858585', light: '#237893', hc: Color.white }, nls.localize('editorLineNumbers', 'Color of editor line numbers.'));\nconst deprecatedEditorActiveLineNumber = registerColor('editorActiveLineNumber.foreground', { dark: '#c6c6c6', light: '#0B216F', hc: activeContrastBorder }, nls.localize('editorActiveLineNumber', 'Color of editor active line number'), false, nls.localize('deprecatedEditorActiveLineNumber', 'Id is deprecated. Use \\'editorLineNumber.activeForeground\\' instead.'));\nexport const editorActiveLineNumber = registerColor('editorLineNumber.activeForeground', { dark: deprecatedEditorActiveLineNumber, light: deprecatedEditorActiveLineNumber, hc: deprecatedEditorActiveLineNumber }, nls.localize('editorActiveLineNumber', 'Color of editor active line number'));\nexport const editorRuler = registerColor('editorRuler.foreground', { dark: '#5A5A5A', light: Color.lightgrey, hc: Color.white }, nls.localize('editorRuler', 'Color of the editor rulers.'));\nexport const editorCodeLensForeground = registerColor('editorCodeLens.foreground', { dark: '#999999', light: '#919191', hc: '#999999' }, nls.localize('editorCodeLensForeground', 'Foreground color of editor CodeLens'));\nexport const editorBracketMatchBackground = registerColor('editorBracketMatch.background', { dark: '#0064001a', light: '#0064001a', hc: '#0064001a' }, nls.localize('editorBracketMatchBackground', 'Background color behind matching brackets'));\nexport const editorBracketMatchBorder = registerColor('editorBracketMatch.border', { dark: '#888', light: '#B9B9B9', hc: contrastBorder }, nls.localize('editorBracketMatchBorder', 'Color for matching brackets boxes'));\nexport const editorOverviewRulerBorder = registerColor('editorOverviewRuler.border', { dark: '#7f7f7f4d', light: '#7f7f7f4d', hc: '#7f7f7f4d' }, nls.localize('editorOverviewRulerBorder', 'Color of the overview ruler border.'));\nexport const editorOverviewRulerBackground = registerColor('editorOverviewRuler.background', null, nls.localize('editorOverviewRulerBackground', 'Background color of the editor overview ruler. Only used when the minimap is enabled and placed on the right side of the editor.'));\nexport const editorGutter = registerColor('editorGutter.background', { dark: editorBackground, light: editorBackground, hc: editorBackground }, nls.localize('editorGutter', 'Background color of the editor gutter. The gutter contains the glyph margins and the line numbers.'));\nexport const editorUnnecessaryCodeBorder = registerColor('editorUnnecessaryCode.border', { dark: null, light: null, hc: Color.fromHex('#fff').transparent(0.8) }, nls.localize('unnecessaryCodeBorder', 'Border color of unnecessary (unused) source code in the editor.'));\nexport const editorUnnecessaryCodeOpacity = registerColor('editorUnnecessaryCode.opacity', { dark: Color.fromHex('#000a'), light: Color.fromHex('#0007'), hc: null }, nls.localize('unnecessaryCodeOpacity', 'Opacity of unnecessary (unused) source code in the editor. For example, \"#000000c0\" will render the code with 75% opacity. For high contrast themes, use the  \\'editorUnnecessaryCode.border\\' theme color to underline unnecessary code instead of fading it out.'));\nexport const ghostTextBorder = registerColor('editorGhostText.border', { dark: null, light: null, hc: Color.fromHex('#fff').transparent(0.8) }, nls.localize('editorGhostTextBorder', 'Border color of ghost text in the editor.'));\nexport const ghostTextForeground = registerColor('editorGhostText.foreground', { dark: Color.fromHex('#ffffff56'), light: Color.fromHex('#0007'), hc: null }, nls.localize('editorGhostTextForeground', 'Foreground color of the ghost text in the editor.'));\nexport const ghostTextBackground = registerColor('editorGhostText.background', { dark: null, light: null, hc: null }, nls.localize('editorGhostTextBackground', 'Background color of the ghost text in the editor.'));\nconst rulerRangeDefault = new Color(new RGBA(0, 122, 204, 0.6));\nexport const overviewRulerRangeHighlight = registerColor('editorOverviewRuler.rangeHighlightForeground', { dark: rulerRangeDefault, light: rulerRangeDefault, hc: rulerRangeDefault }, nls.localize('overviewRulerRangeHighlight', 'Overview ruler marker color for range highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const overviewRulerError = registerColor('editorOverviewRuler.errorForeground', { dark: new Color(new RGBA(255, 18, 18, 0.7)), light: new Color(new RGBA(255, 18, 18, 0.7)), hc: new Color(new RGBA(255, 50, 50, 1)) }, nls.localize('overviewRuleError', 'Overview ruler marker color for errors.'));\nexport const overviewRulerWarning = registerColor('editorOverviewRuler.warningForeground', { dark: editorWarningForeground, light: editorWarningForeground, hc: editorWarningBorder }, nls.localize('overviewRuleWarning', 'Overview ruler marker color for warnings.'));\nexport const overviewRulerInfo = registerColor('editorOverviewRuler.infoForeground', { dark: editorInfoForeground, light: editorInfoForeground, hc: editorInfoBorder }, nls.localize('overviewRuleInfo', 'Overview ruler marker color for infos.'));\nexport const editorBracketHighlightingForeground1 = registerColor('editorBracketHighlight.foreground1', { dark: '#FFD700', light: '#0431FAFF', hc: '#FFD700' }, nls.localize('editorBracketHighlightForeground1', 'Foreground color of brackets (1). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground2 = registerColor('editorBracketHighlight.foreground2', { dark: '#DA70D6', light: '#319331FF', hc: '#DA70D6' }, nls.localize('editorBracketHighlightForeground2', 'Foreground color of brackets (2). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground3 = registerColor('editorBracketHighlight.foreground3', { dark: '#179FFF', light: '#7B3814FF', hc: '#87CEFA' }, nls.localize('editorBracketHighlightForeground3', 'Foreground color of brackets (3). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground4 = registerColor('editorBracketHighlight.foreground4', { dark: '#00000000', light: '#00000000', hc: '#00000000' }, nls.localize('editorBracketHighlightForeground4', 'Foreground color of brackets (4). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground5 = registerColor('editorBracketHighlight.foreground5', { dark: '#00000000', light: '#00000000', hc: '#00000000' }, nls.localize('editorBracketHighlightForeground5', 'Foreground color of brackets (5). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground6 = registerColor('editorBracketHighlight.foreground6', { dark: '#00000000', light: '#00000000', hc: '#00000000' }, nls.localize('editorBracketHighlightForeground6', 'Foreground color of brackets (6). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingUnexpectedBracketForeground = registerColor('editorBracketHighlight.unexpectedBracket.foreground', { dark: new Color(new RGBA(255, 18, 18, 0.8)), light: new Color(new RGBA(255, 18, 18, 0.8)), hc: new Color(new RGBA(255, 50, 50, 1)) }, nls.localize('editorBracketHighlightUnexpectedBracketForeground', 'Foreground color of unexpected brackets.'));\nexport const editorBracketPairGuideBackground1 = registerColor('editorBracketPairGuide.background1', { dark: '#00000000', light: '#00000000', hc: '#00000000' }, nls.localize('editorBracketPairGuide.background1', 'Background color of inactive bracket pair guides (1). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground2 = registerColor('editorBracketPairGuide.background2', { dark: '#00000000', light: '#00000000', hc: '#00000000' }, nls.localize('editorBracketPairGuide.background2', 'Background color of inactive bracket pair guides (2). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground3 = registerColor('editorBracketPairGuide.background3', { dark: '#00000000', light: '#00000000', hc: '#00000000' }, nls.localize('editorBracketPairGuide.background3', 'Background color of inactive bracket pair guides (3). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground4 = registerColor('editorBracketPairGuide.background4', { dark: '#00000000', light: '#00000000', hc: '#00000000' }, nls.localize('editorBracketPairGuide.background4', 'Background color of inactive bracket pair guides (4). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground5 = registerColor('editorBracketPairGuide.background5', { dark: '#00000000', light: '#00000000', hc: '#00000000' }, nls.localize('editorBracketPairGuide.background5', 'Background color of inactive bracket pair guides (5). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground6 = registerColor('editorBracketPairGuide.background6', { dark: '#00000000', light: '#00000000', hc: '#00000000' }, nls.localize('editorBracketPairGuide.background6', 'Background color of inactive bracket pair guides (6). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground1 = registerColor('editorBracketPairGuide.activeBackground1', { dark: '#00000000', light: '#00000000', hc: '#00000000' }, nls.localize('editorBracketPairGuide.activeBackground1', 'Background color of active bracket pair guides (1). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground2 = registerColor('editorBracketPairGuide.activeBackground2', { dark: '#00000000', light: '#00000000', hc: '#00000000' }, nls.localize('editorBracketPairGuide.activeBackground2', 'Background color of active bracket pair guides (2). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground3 = registerColor('editorBracketPairGuide.activeBackground3', { dark: '#00000000', light: '#00000000', hc: '#00000000' }, nls.localize('editorBracketPairGuide.activeBackground3', 'Background color of active bracket pair guides (3). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground4 = registerColor('editorBracketPairGuide.activeBackground4', { dark: '#00000000', light: '#00000000', hc: '#00000000' }, nls.localize('editorBracketPairGuide.activeBackground4', 'Background color of active bracket pair guides (4). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground5 = registerColor('editorBracketPairGuide.activeBackground5', { dark: '#00000000', light: '#00000000', hc: '#00000000' }, nls.localize('editorBracketPairGuide.activeBackground5', 'Background color of active bracket pair guides (5). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground6 = registerColor('editorBracketPairGuide.activeBackground6', { dark: '#00000000', light: '#00000000', hc: '#00000000' }, nls.localize('editorBracketPairGuide.activeBackground6', 'Background color of active bracket pair guides (6). Requires enabling bracket pair guides.'));\nexport const editorUnicodeHighlightBorder = registerColor('editorUnicodeHighlight.border', { dark: '#BD9B03', light: '#CEA33D', hc: '#ff0000' }, nls.localize('editorUnicodeHighlight.border', 'Border color used to highlight unicode characters.'));\n// contains all color rules that used to defined in editor/browser/widget/editor.css\nregisterThemingParticipant((theme, collector) => {\n    const background = theme.getColor(editorBackground);\n    if (background) {\n        collector.addRule(`.monaco-editor, .monaco-editor-background, .monaco-editor .inputarea.ime-input { background-color: ${background}; }`);\n    }\n    const foreground = theme.getColor(editorForeground);\n    if (foreground) {\n        collector.addRule(`.monaco-editor, .monaco-editor .inputarea.ime-input { color: ${foreground}; }`);\n    }\n    const gutter = theme.getColor(editorGutter);\n    if (gutter) {\n        collector.addRule(`.monaco-editor .margin { background-color: ${gutter}; }`);\n    }\n    const rangeHighlight = theme.getColor(editorRangeHighlight);\n    if (rangeHighlight) {\n        collector.addRule(`.monaco-editor .rangeHighlight { background-color: ${rangeHighlight}; }`);\n    }\n    const rangeHighlightBorder = theme.getColor(editorRangeHighlightBorder);\n    if (rangeHighlightBorder) {\n        collector.addRule(`.monaco-editor .rangeHighlight { border: 1px ${theme.type === 'hc' ? 'dotted' : 'solid'} ${rangeHighlightBorder}; }`);\n    }\n    const symbolHighlight = theme.getColor(editorSymbolHighlight);\n    if (symbolHighlight) {\n        collector.addRule(`.monaco-editor .symbolHighlight { background-color: ${symbolHighlight}; }`);\n    }\n    const symbolHighlightBorder = theme.getColor(editorSymbolHighlightBorder);\n    if (symbolHighlightBorder) {\n        collector.addRule(`.monaco-editor .symbolHighlight { border: 1px ${theme.type === 'hc' ? 'dotted' : 'solid'} ${symbolHighlightBorder}; }`);\n    }\n    const invisibles = theme.getColor(editorWhitespaces);\n    if (invisibles) {\n        collector.addRule(`.monaco-editor .mtkw { color: ${invisibles} !important; }`);\n        collector.addRule(`.monaco-editor .mtkz { color: ${invisibles} !important; }`);\n    }\n});\n"]},"metadata":{},"sourceType":"module"}