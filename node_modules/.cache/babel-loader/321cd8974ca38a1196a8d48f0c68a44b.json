{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../../base/common/strings.js';\nimport { Range } from '../../../common/core/range.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { EditorKeybindingCancellationTokenSource } from './keybindingCancellation.js';\nexport class EditorState {\n  constructor(editor, flags) {\n    this.flags = flags;\n\n    if ((this.flags & 1\n    /* Value */\n    ) !== 0) {\n      const model = editor.getModel();\n      this.modelVersionId = model ? strings.format('{0}#{1}', model.uri.toString(), model.getVersionId()) : null;\n    } else {\n      this.modelVersionId = null;\n    }\n\n    if ((this.flags & 4\n    /* Position */\n    ) !== 0) {\n      this.position = editor.getPosition();\n    } else {\n      this.position = null;\n    }\n\n    if ((this.flags & 2\n    /* Selection */\n    ) !== 0) {\n      this.selection = editor.getSelection();\n    } else {\n      this.selection = null;\n    }\n\n    if ((this.flags & 8\n    /* Scroll */\n    ) !== 0) {\n      this.scrollLeft = editor.getScrollLeft();\n      this.scrollTop = editor.getScrollTop();\n    } else {\n      this.scrollLeft = -1;\n      this.scrollTop = -1;\n    }\n  }\n\n  _equals(other) {\n    if (!(other instanceof EditorState)) {\n      return false;\n    }\n\n    const state = other;\n\n    if (this.modelVersionId !== state.modelVersionId) {\n      return false;\n    }\n\n    if (this.scrollLeft !== state.scrollLeft || this.scrollTop !== state.scrollTop) {\n      return false;\n    }\n\n    if (!this.position && state.position || this.position && !state.position || this.position && state.position && !this.position.equals(state.position)) {\n      return false;\n    }\n\n    if (!this.selection && state.selection || this.selection && !state.selection || this.selection && state.selection && !this.selection.equalsRange(state.selection)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  validate(editor) {\n    return this._equals(new EditorState(editor, this.flags));\n  }\n\n}\n/**\n * A cancellation token source that cancels when the editor changes as expressed\n * by the provided flags\n * @param range If provided, changes in position and selection within this range will not trigger cancellation\n */\n\nexport class EditorStateCancellationTokenSource extends EditorKeybindingCancellationTokenSource {\n  constructor(editor, flags, range, parent) {\n    super(editor, parent);\n    this._listener = new DisposableStore();\n\n    if (flags & 4\n    /* Position */\n    ) {\n      this._listener.add(editor.onDidChangeCursorPosition(e => {\n        if (!range || !Range.containsPosition(range, e.position)) {\n          this.cancel();\n        }\n      }));\n    }\n\n    if (flags & 2\n    /* Selection */\n    ) {\n      this._listener.add(editor.onDidChangeCursorSelection(e => {\n        if (!range || !Range.containsRange(range, e.selection)) {\n          this.cancel();\n        }\n      }));\n    }\n\n    if (flags & 8\n    /* Scroll */\n    ) {\n      this._listener.add(editor.onDidScrollChange(_ => this.cancel()));\n    }\n\n    if (flags & 1\n    /* Value */\n    ) {\n      this._listener.add(editor.onDidChangeModel(_ => this.cancel()));\n\n      this._listener.add(editor.onDidChangeModelContent(_ => this.cancel()));\n    }\n  }\n\n  dispose() {\n    this._listener.dispose();\n\n    super.dispose();\n  }\n\n}\n/**\n * A cancellation token source that cancels when the provided model changes\n */\n\nexport class TextModelCancellationTokenSource extends CancellationTokenSource {\n  constructor(model, parent) {\n    super(parent);\n    this._listener = model.onDidChangeContent(() => this.cancel());\n  }\n\n  dispose() {\n    this._listener.dispose();\n\n    super.dispose();\n  }\n\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/editor/contrib/editorState/browser/editorState.js"],"names":["strings","Range","CancellationTokenSource","DisposableStore","EditorKeybindingCancellationTokenSource","EditorState","constructor","editor","flags","model","getModel","modelVersionId","format","uri","toString","getVersionId","position","getPosition","selection","getSelection","scrollLeft","getScrollLeft","scrollTop","getScrollTop","_equals","other","state","equals","equalsRange","validate","EditorStateCancellationTokenSource","range","parent","_listener","add","onDidChangeCursorPosition","e","containsPosition","cancel","onDidChangeCursorSelection","containsRange","onDidScrollChange","_","onDidChangeModel","onDidChangeModelContent","dispose","TextModelCancellationTokenSource","onDidChangeContent"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../../base/common/strings.js';\nimport { Range } from '../../../common/core/range.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { EditorKeybindingCancellationTokenSource } from './keybindingCancellation.js';\nexport class EditorState {\n    constructor(editor, flags) {\n        this.flags = flags;\n        if ((this.flags & 1 /* Value */) !== 0) {\n            const model = editor.getModel();\n            this.modelVersionId = model ? strings.format('{0}#{1}', model.uri.toString(), model.getVersionId()) : null;\n        }\n        else {\n            this.modelVersionId = null;\n        }\n        if ((this.flags & 4 /* Position */) !== 0) {\n            this.position = editor.getPosition();\n        }\n        else {\n            this.position = null;\n        }\n        if ((this.flags & 2 /* Selection */) !== 0) {\n            this.selection = editor.getSelection();\n        }\n        else {\n            this.selection = null;\n        }\n        if ((this.flags & 8 /* Scroll */) !== 0) {\n            this.scrollLeft = editor.getScrollLeft();\n            this.scrollTop = editor.getScrollTop();\n        }\n        else {\n            this.scrollLeft = -1;\n            this.scrollTop = -1;\n        }\n    }\n    _equals(other) {\n        if (!(other instanceof EditorState)) {\n            return false;\n        }\n        const state = other;\n        if (this.modelVersionId !== state.modelVersionId) {\n            return false;\n        }\n        if (this.scrollLeft !== state.scrollLeft || this.scrollTop !== state.scrollTop) {\n            return false;\n        }\n        if (!this.position && state.position || this.position && !state.position || this.position && state.position && !this.position.equals(state.position)) {\n            return false;\n        }\n        if (!this.selection && state.selection || this.selection && !state.selection || this.selection && state.selection && !this.selection.equalsRange(state.selection)) {\n            return false;\n        }\n        return true;\n    }\n    validate(editor) {\n        return this._equals(new EditorState(editor, this.flags));\n    }\n}\n/**\n * A cancellation token source that cancels when the editor changes as expressed\n * by the provided flags\n * @param range If provided, changes in position and selection within this range will not trigger cancellation\n */\nexport class EditorStateCancellationTokenSource extends EditorKeybindingCancellationTokenSource {\n    constructor(editor, flags, range, parent) {\n        super(editor, parent);\n        this._listener = new DisposableStore();\n        if (flags & 4 /* Position */) {\n            this._listener.add(editor.onDidChangeCursorPosition(e => {\n                if (!range || !Range.containsPosition(range, e.position)) {\n                    this.cancel();\n                }\n            }));\n        }\n        if (flags & 2 /* Selection */) {\n            this._listener.add(editor.onDidChangeCursorSelection(e => {\n                if (!range || !Range.containsRange(range, e.selection)) {\n                    this.cancel();\n                }\n            }));\n        }\n        if (flags & 8 /* Scroll */) {\n            this._listener.add(editor.onDidScrollChange(_ => this.cancel()));\n        }\n        if (flags & 1 /* Value */) {\n            this._listener.add(editor.onDidChangeModel(_ => this.cancel()));\n            this._listener.add(editor.onDidChangeModelContent(_ => this.cancel()));\n        }\n    }\n    dispose() {\n        this._listener.dispose();\n        super.dispose();\n    }\n}\n/**\n * A cancellation token source that cancels when the provided model changes\n */\nexport class TextModelCancellationTokenSource extends CancellationTokenSource {\n    constructor(model, parent) {\n        super(parent);\n        this._listener = model.onDidChangeContent(() => this.cancel());\n    }\n    dispose() {\n        this._listener.dispose();\n        super.dispose();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}