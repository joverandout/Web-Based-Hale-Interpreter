{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../dom.js';\nimport { StandardKeyboardEvent } from '../keyboardEvent.js';\nimport { StandardMouseEvent } from '../mouseEvent.js';\nimport { Gesture } from '../touch.js';\nimport { Disposable } from '../../common/lifecycle.js';\nexport class Widget extends Disposable {\n  onclick(domNode, listener) {\n    this._register(dom.addDisposableListener(domNode, dom.EventType.CLICK, e => listener(new StandardMouseEvent(e))));\n  }\n\n  onmousedown(domNode, listener) {\n    this._register(dom.addDisposableListener(domNode, dom.EventType.MOUSE_DOWN, e => listener(new StandardMouseEvent(e))));\n  }\n\n  onmouseover(domNode, listener) {\n    this._register(dom.addDisposableListener(domNode, dom.EventType.MOUSE_OVER, e => listener(new StandardMouseEvent(e))));\n  }\n\n  onnonbubblingmouseout(domNode, listener) {\n    this._register(dom.addDisposableNonBubblingMouseOutListener(domNode, e => listener(new StandardMouseEvent(e))));\n  }\n\n  onkeydown(domNode, listener) {\n    this._register(dom.addDisposableListener(domNode, dom.EventType.KEY_DOWN, e => listener(new StandardKeyboardEvent(e))));\n  }\n\n  onkeyup(domNode, listener) {\n    this._register(dom.addDisposableListener(domNode, dom.EventType.KEY_UP, e => listener(new StandardKeyboardEvent(e))));\n  }\n\n  oninput(domNode, listener) {\n    this._register(dom.addDisposableListener(domNode, dom.EventType.INPUT, listener));\n  }\n\n  onblur(domNode, listener) {\n    this._register(dom.addDisposableListener(domNode, dom.EventType.BLUR, listener));\n  }\n\n  onfocus(domNode, listener) {\n    this._register(dom.addDisposableListener(domNode, dom.EventType.FOCUS, listener));\n  }\n\n  ignoreGesture(domNode) {\n    Gesture.ignoreTarget(domNode);\n  }\n\n}","map":{"version":3,"sources":["/home/joe/DISSY/flask_test_1/react-flask-app/node_modules/monaco-editor/esm/vs/base/browser/ui/widget.js"],"names":["dom","StandardKeyboardEvent","StandardMouseEvent","Gesture","Disposable","Widget","onclick","domNode","listener","_register","addDisposableListener","EventType","CLICK","e","onmousedown","MOUSE_DOWN","onmouseover","MOUSE_OVER","onnonbubblingmouseout","addDisposableNonBubblingMouseOutListener","onkeydown","KEY_DOWN","onkeyup","KEY_UP","oninput","INPUT","onblur","BLUR","onfocus","FOCUS","ignoreGesture","ignoreTarget"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,KAAKA,GAAZ,MAAqB,WAArB;AACA,SAASC,qBAAT,QAAsC,qBAAtC;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,OAAO,MAAMC,MAAN,SAAqBD,UAArB,CAAgC;AACnCE,EAAAA,OAAO,CAACC,OAAD,EAAUC,QAAV,EAAoB;AACvB,SAAKC,SAAL,CAAeT,GAAG,CAACU,qBAAJ,CAA0BH,OAA1B,EAAmCP,GAAG,CAACW,SAAJ,CAAcC,KAAjD,EAAyDC,CAAD,IAAOL,QAAQ,CAAC,IAAIN,kBAAJ,CAAuBW,CAAvB,CAAD,CAAvE,CAAf;AACH;;AACDC,EAAAA,WAAW,CAACP,OAAD,EAAUC,QAAV,EAAoB;AAC3B,SAAKC,SAAL,CAAeT,GAAG,CAACU,qBAAJ,CAA0BH,OAA1B,EAAmCP,GAAG,CAACW,SAAJ,CAAcI,UAAjD,EAA8DF,CAAD,IAAOL,QAAQ,CAAC,IAAIN,kBAAJ,CAAuBW,CAAvB,CAAD,CAA5E,CAAf;AACH;;AACDG,EAAAA,WAAW,CAACT,OAAD,EAAUC,QAAV,EAAoB;AAC3B,SAAKC,SAAL,CAAeT,GAAG,CAACU,qBAAJ,CAA0BH,OAA1B,EAAmCP,GAAG,CAACW,SAAJ,CAAcM,UAAjD,EAA8DJ,CAAD,IAAOL,QAAQ,CAAC,IAAIN,kBAAJ,CAAuBW,CAAvB,CAAD,CAA5E,CAAf;AACH;;AACDK,EAAAA,qBAAqB,CAACX,OAAD,EAAUC,QAAV,EAAoB;AACrC,SAAKC,SAAL,CAAeT,GAAG,CAACmB,wCAAJ,CAA6CZ,OAA7C,EAAuDM,CAAD,IAAOL,QAAQ,CAAC,IAAIN,kBAAJ,CAAuBW,CAAvB,CAAD,CAArE,CAAf;AACH;;AACDO,EAAAA,SAAS,CAACb,OAAD,EAAUC,QAAV,EAAoB;AACzB,SAAKC,SAAL,CAAeT,GAAG,CAACU,qBAAJ,CAA0BH,OAA1B,EAAmCP,GAAG,CAACW,SAAJ,CAAcU,QAAjD,EAA4DR,CAAD,IAAOL,QAAQ,CAAC,IAAIP,qBAAJ,CAA0BY,CAA1B,CAAD,CAA1E,CAAf;AACH;;AACDS,EAAAA,OAAO,CAACf,OAAD,EAAUC,QAAV,EAAoB;AACvB,SAAKC,SAAL,CAAeT,GAAG,CAACU,qBAAJ,CAA0BH,OAA1B,EAAmCP,GAAG,CAACW,SAAJ,CAAcY,MAAjD,EAA0DV,CAAD,IAAOL,QAAQ,CAAC,IAAIP,qBAAJ,CAA0BY,CAA1B,CAAD,CAAxE,CAAf;AACH;;AACDW,EAAAA,OAAO,CAACjB,OAAD,EAAUC,QAAV,EAAoB;AACvB,SAAKC,SAAL,CAAeT,GAAG,CAACU,qBAAJ,CAA0BH,OAA1B,EAAmCP,GAAG,CAACW,SAAJ,CAAcc,KAAjD,EAAwDjB,QAAxD,CAAf;AACH;;AACDkB,EAAAA,MAAM,CAACnB,OAAD,EAAUC,QAAV,EAAoB;AACtB,SAAKC,SAAL,CAAeT,GAAG,CAACU,qBAAJ,CAA0BH,OAA1B,EAAmCP,GAAG,CAACW,SAAJ,CAAcgB,IAAjD,EAAuDnB,QAAvD,CAAf;AACH;;AACDoB,EAAAA,OAAO,CAACrB,OAAD,EAAUC,QAAV,EAAoB;AACvB,SAAKC,SAAL,CAAeT,GAAG,CAACU,qBAAJ,CAA0BH,OAA1B,EAAmCP,GAAG,CAACW,SAAJ,CAAckB,KAAjD,EAAwDrB,QAAxD,CAAf;AACH;;AACDsB,EAAAA,aAAa,CAACvB,OAAD,EAAU;AACnBJ,IAAAA,OAAO,CAAC4B,YAAR,CAAqBxB,OAArB;AACH;;AA9BkC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../dom.js';\nimport { StandardKeyboardEvent } from '../keyboardEvent.js';\nimport { StandardMouseEvent } from '../mouseEvent.js';\nimport { Gesture } from '../touch.js';\nimport { Disposable } from '../../common/lifecycle.js';\nexport class Widget extends Disposable {\n    onclick(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.CLICK, (e) => listener(new StandardMouseEvent(e))));\n    }\n    onmousedown(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.MOUSE_DOWN, (e) => listener(new StandardMouseEvent(e))));\n    }\n    onmouseover(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.MOUSE_OVER, (e) => listener(new StandardMouseEvent(e))));\n    }\n    onnonbubblingmouseout(domNode, listener) {\n        this._register(dom.addDisposableNonBubblingMouseOutListener(domNode, (e) => listener(new StandardMouseEvent(e))));\n    }\n    onkeydown(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.KEY_DOWN, (e) => listener(new StandardKeyboardEvent(e))));\n    }\n    onkeyup(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.KEY_UP, (e) => listener(new StandardKeyboardEvent(e))));\n    }\n    oninput(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.INPUT, listener));\n    }\n    onblur(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.BLUR, listener));\n    }\n    onfocus(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.FOCUS, listener));\n    }\n    ignoreGesture(domNode) {\n        Gesture.ignoreTarget(domNode);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}