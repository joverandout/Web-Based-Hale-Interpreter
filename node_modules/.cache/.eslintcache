[{"/home/joe/DISSY/flask_test_1/react-flask-app/src/index.js":"1","/home/joe/DISSY/flask_test_1/react-flask-app/src/App.js":"2","/home/joe/DISSY/flask_test_1/react-flask-app/src/reportWebVitals.js":"3","/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Dashboard/Dashboard.js":"4","/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Preferences/Preferences.js":"5","/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Login/Login.js":"6","/home/joe/DISSY/flask_test_1/react-flask-app/src/useToken.js":"7","/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Info/Info.js":"8","/home/joe/DISSY/flask_test_1/react-flask-app/src/backendApi.js":"9","/home/joe/DISSY/flask_test_1/react-flask-app/src/server.js":"10","/home/joe/DISSY/flask_test_1/react-flask-app/src/useUserNameCurr.js":"11","/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Profile/Profile.js":"12","/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Dashboard/chess/components/game.js":"13","/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Dashboard/chess/components/board.js":"14","/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Dashboard/chess/components/fallen-soldier-block.js":"15","/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Dashboard/chess/helpers/board-initialiser.js":"16","/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Dashboard/chess/pieces/king.js":"17","/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Dashboard/chess/pieces/knight.js":"18","/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Dashboard/chess/components/square.js":"19","/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Dashboard/chess/pieces/pawn.js":"20","/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Dashboard/chess/pieces/queen.js":"21","/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Dashboard/chess/pieces/bishop.js":"22","/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Dashboard/chess/pieces/piece.js":"23","/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Dashboard/chess/pieces/rook.js":"24","/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Dashboard/chess/helpers/index.js":"25","/home/joe/DISSY/flask_test_1/react-flask-app/src/components/SignUp/SignUp.js":"26"},{"size":657,"mtime":1644922659154,"results":"27","hashOfConfig":"28"},{"size":3029,"mtime":1646603537878,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1634920968113,"results":"30","hashOfConfig":"28"},{"size":8203,"mtime":1646677481572,"results":"31","hashOfConfig":"28"},{"size":109,"mtime":1644362521876,"results":"32","hashOfConfig":"28"},{"size":3851,"mtime":1646517052432,"results":"33","hashOfConfig":"28"},{"size":476,"mtime":1646256424280,"results":"34","hashOfConfig":"28"},{"size":6858,"mtime":1646604132360,"results":"35","hashOfConfig":"28"},{"size":96,"mtime":1644924189395,"results":"36","hashOfConfig":"28"},{"size":366,"mtime":1645009535354,"results":"37","hashOfConfig":"28"},{"size":623,"mtime":1646601869691,"results":"38","hashOfConfig":"28"},{"size":5282,"mtime":1646691671490,"results":"39","hashOfConfig":"28"},{"size":6483,"mtime":1646652105397,"results":"40","hashOfConfig":"28"},{"size":902,"mtime":1646304756620,"results":"41","hashOfConfig":"28"},{"size":653,"mtime":1646304756620,"results":"42","hashOfConfig":"28"},{"size":929,"mtime":1646304756680,"results":"43","hashOfConfig":"28"},{"size":906,"mtime":1646603095759,"results":"44","hashOfConfig":"28"},{"size":928,"mtime":1646603099451,"results":"45","hashOfConfig":"28"},{"size":262,"mtime":1646304756620,"results":"46","hashOfConfig":"28"},{"size":2143,"mtime":1646650860422,"results":"47","hashOfConfig":"28"},{"size":2024,"mtime":1646679372701,"results":"48","hashOfConfig":"28"},{"size":1147,"mtime":1646678355466,"results":"49","hashOfConfig":"28"},{"size":202,"mtime":1646589735628,"results":"50","hashOfConfig":"28"},{"size":1195,"mtime":1646678476082,"results":"51","hashOfConfig":"28"},{"size":907,"mtime":1646304756680,"results":"52","hashOfConfig":"28"},{"size":4879,"mtime":1646516994188,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},"151clb",{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"57"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"57"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"57"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"57"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"57"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"57"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"57"},"/home/joe/DISSY/flask_test_1/react-flask-app/src/index.js",["115"],"import React from 'react';\nimport mysql from 'mysql';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst db = mysql.createConnection({\n  user: \"root\",\n  host: \"localhost\",\n  password: \"password\",\n  database: \"LoginSystem\"\n})\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["116","117"],"/home/joe/DISSY/flask_test_1/react-flask-app/src/App.js",["118","119","120","121","122","123","124"],"import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\n\n\nimport Dashboard from './components/Dashboard/Dashboard';\nimport Info from './components/Info/Info';\nimport Login from './components/Login/Login';\nimport SignUp from './components/SignUp/SignUp';\nimport Preferences from './components/Preferences/Preferences';\nimport Profile from './components/Profile/Profile';\nimport useToken from './useToken';\nimport useUserNameCurr from './useUserNameCurr';\n\n\nfunction App() {\n  const { token, setToken } = useToken();\n  const { UserNameCurr, setUserNameCurr} = useUserNameCurr();\n  const [FunctionOutput, setFunctionOutput] = useState(0);\n  const [PrintOutputs, setPrintOutput] = useState(0);\n  const [name, setName] = useState('');\n  const editor = document.querySelector(\".editor\");\n\n  \n  const handleSubmit = (event) => {\n    event.preventDefault();\n    alert(`The name you entered was: ${name}`)\n  }\n\n  // useEffect(() => {\n  //     // Simple POST request with a JSON body using fetch\n  //     const requestOptions = {\n  //         method: 'POST',\n  //         headers: { 'Content-Type': 'application/json' },\n  //         body: JSON.stringify({ title: 'return(\"yo\"+\"yo\");' })\n  //     };\n  //     fetch('/write', requestOptions)\n  //         .then(response => response.json());\n  // }, []);\n\n  useEffect(() => {\n    fetch('/time').then(res => res.json()).then(data => {\n      setFunctionOutput(data.time);\n      setPrintOutput(data.prints);\n    });\n  }, []);\n\n  function buttonpress(){\n    // Simple POST request with a JSON body using fetch\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ title: editor.textContent })\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    alert(`The name you entered was: ${name}`);\n  }\n\n  fetch('/write', requestOptions)\n      .then(response => response.json());\n  };\n\n  console.log(\"===========\")\n  console.log(token)\n  // console.log(token.tokenelem)\n  console.log(UserNameCurr)\n  console.log(\"===========\")\n\n  if(!token){\n    console.log(\"no token\")\n    console.log(token)\n    return <Login setToken={setToken} setUserNameCurr = {setUserNameCurr}/>\n  } \n\n  if(token == 'signup'){\n    console.log(\"yeh token\")\n    console.log(token)\n    return <SignUp setToken={setToken} setUserNameCurr = {setUserNameCurr}/>\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"wrapper\">\n      <Router>\n        <Routes>\n        <Route\n            path=\"/\"\n            element={<Navigate to=\"/dashboard\" />}\n          />\n          <Route exact path=\"/dashboard\" element={<Dashboard />}></Route>\n          <Route exact path=\"/preferences\"element={<Preferences />}></Route>\n          <Route exact path=\"/info\"element={<Info />}></Route>\n          <Route exact path=\"/profile\"element={<Profile />}></Route>\n        </Routes>\n      </Router>\n    </div>\n    </div> \n  );\n}\n\nexport default App;","/home/joe/DISSY/flask_test_1/react-flask-app/src/reportWebVitals.js",[],"/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Dashboard/Dashboard.js",["125","126","127","128","129","130"],"import React, { useRef, useState, useEffect } from 'react';\nimport { Chessboard } from \"react-chessboard\";\nimport { Button } from 'react-bootstrap';\nimport { useNavigate } from \"react-router-dom\";\n\nimport Editor from \"@monaco-editor/react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Accordion from 'react-bootstrap/Accordion'\n\nimport './Dashboard.css';\nimport useToken from '../../useToken';\nimport useUserNameCurr from '../../useUserNameCurr.js';\n\nimport Game from './chess/components/game.js'\n\nfunction Dashboard() {\n\n  const { UserNameCurr, setUserNameCurr } = useUserNameCurr();\n  const { token, setToken } = useToken();\n\n  const [result, setResult] = useState([\"Console - use this to test your code with 'RUN' before using 'SAVE' to see it's effects in game\"]);\n\n  const [theme, setTheme] = useState(\"vs-dark\");\n  const editorRef = useRef(null);\n\n\n  function handleEditorDidMount(editor, monaco) {\n    editorRef.current = editor; \n  }\n\n  let navigate = useNavigate(); \n  const routeChange = () =>{ \n    let path = `../info`; \n    navigate(path);\n  }\n\n  const profile = () =>{ \n    let path = `../profile`; \n    navigate(path);\n  }\n\n  function signOut() { \n    setToken('')\n    setUserNameCurr('')\n    let path = `../`; \n    navigate(path);\n    window.location.reload();\n  }\n\n  function toggleThemedark() {\n    setTheme(\"vs-dark\");\n  }\n  function toggleThemelight() {\n    setTheme(\"light\");\n  }\n\n  function buttonpress(){\n    // Simple POST request with a JSON body using fetch\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ title: editorRef.current.getValue() })\n    }\n  \n    fetch('/write', requestOptions)\n    .then(res => res.json()).then(data => {\n      if(data.errorbool == false){\n        setResult(Object.keys(data.prints).map((key) => data.prints[key]));\n      }\n      else{\n        setResult(Object.keys(data.errors).map((key) => data.errors[key]))\n      }\n    });\n  };\n\n  function savebuttonpress(){\n    // Simple POST request with a JSON body using fetch\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ title: editorRef.current.getValue(), username: UserNameCurr })\n    }\n  \n    fetch('/save', requestOptions)\n    .then(res => res.json()).then(data => {\n      if(data.errorbool == false){\n      }\n      else{\n      }\n    });\n  };\n  \n\n  console.log(UserNameCurr);\n\n\n  return (\n    <div className=\"Dashboard\">\n\n      <header className=\"App-header\">\n        <nav class=\"navbar navbar-dark bg-dark pt-3 pb-3\">\n        <form class=\"form-inline\">\n          <h1>Hale - A web based interpreter</h1>\n          <button onClick={toggleThemelight} class=\"btn btn-lg btn-light\" type=\"button\">Light Mode</button>\n          <button onClick={toggleThemedark} class=\"btn btn-lg btn-secondary\" type=\"button\">Dark Mode</button>\n          <button onClick={routeChange} class=\"btn btn-lg btn-info\" type=\"button\">Info</button>\n          <button onClick={buttonpress} class=\"btn btn-lg btn-success float-right\" type=\"button\">Run</button>\n          <button onClick={savebuttonpress} class=\"btn btn-lg btn-warning float-right\" type=\"button\">Save</button>\n        </form>\n        <form class=\"form-inline float-right\">\n          <h1>‎</h1>\n          <button onClick={profile} class=\"btn btn-lg btn-primary\" type=\"button\">Profie</button>\n          <button onClick={signOut} class=\"btn btn-lg btn-danger\" type=\"button\">Sign Out</button>\n        </form>\n      </nav>\n\n    <div class=\"mycontainer\">\n        <div class=\"mynewleft\">\n          <div class=\"mymonacocontainer\">\n          <Editor\n            height=\"100%\"\n            options={{\n              minimap: {\n                enabled: false,\n              },\n            }}\n            defaultValue=\"#Write a Hale Program Here\"\n            onMount={handleEditorDidMount}\n            theme={theme}\n          />\n          </div>\n        </div>\n        <div class=\"mynewright\">\n\n        <div class=\"myfakeMenu\">\n          <div class=\"fakeButtons fakeClose\"></div>\n          <div class=\"fakeButtons fakeMinimize\"></div>\n          <div class=\"fakeButtons fakeZoom\"></div>\n        </div>\n        <div class=\"myfakeScreen\">\n          <div>\n            {result.map(value => <p class=\"line4 terminalp\">{value.toString()}</p>)}\n          </div>\n        </div>\n\n\n        <br></br>\n\n\n        <div class=\"accordianny\">\n        <Accordion defaultActiveKey={['0']} alwaysOpen>\n          <Accordion.Item eventKey=\"1\">\n            <Accordion.Header><div class =\"accordhead\">Task 1 - Pawns</div></Accordion.Header>\n            <Accordion.Body>\n              <ol type=\"a\">\n                <li>Define a function 'spaceForward' which takes as an input, a list containing the space number of a pawn, returns a list representing the space of the space directly in front of it (that's a decrease of 8).\n                </li>\n                <br></br><li>Define a function 'equalPos' which takes 2 inputs, the positions of 2 pieces, and returns a boolean if the piece is on that space. This will be used to see if any enemy pieces are at\n                  the space directly in front of the pawn.\n                </li>\n                <br></br><li>Define a function 'pawnMoveForward' which takes a position of the pawn and a bool (false meaning there is not space in front of it, true meaning there is). It returns a list of available spaces the pawn can move. You will need to make use of your\n                'pieceAt' function, since a pawn can only move forward if a piece isn't in that space. You do not need to consider the 2 space move or the diagonals. Make use of your 'spaceforward' function.</li>\n                <br></br>\n              </ol>\n              Once you have completed and tested all these functions, hit save and see the effects in game. If you have code them correctly the white pawns should be able to move according to chess moves.\n            </Accordion.Body>\n          </Accordion.Item>\n          <Accordion.Item eventKey=\"2\">\n            <Accordion.Header><div class =\"accordhead\">Task 2 - Fallen Soldiers</div></Accordion.Header>\n            <Accordion.Body>\n              Brilliant you got pawns working, and learnt some basic Hale at the same time. Now it's time to move onto our next challenge... Fallen Soldiers. Currently our chess game does not record when pieces are taken by the\n              opposing player. With the function below you are going to fix that. In this function you will need to work with lists. Remember to make use of the basic list operations, see info if you don't know what those are.\n              <br></br>\n              <br></br>\n              <ol type=\"a\">\n                <li>Define a function 'addFallen' which takes as a list and a piece id (an int), It should return the list with the piece id appended to the end.\n                </li>\n              </ol>\n            </Accordion.Body>\n          </Accordion.Item>\n          <Accordion.Item eventKey=\"3\">\n            <Accordion.Header><div class =\"accordhead\">Task 3 - Queen's Path</div></Accordion.Header>\n            <Accordion.Body>\n              The Queen is one of the most important pieces in chess, and the most powerful. She can move in any direction and any distance. This makes this challenge quite tricky. It works similarly to the previous challenge, but is\n              definitely a step up.\n              <br></br>\n              <br></br>\n              <ol type=\"a\">\n                <li>Define a function 'getQueenPath' which a start and end space as well as increment and a current path (originally the empty list). Add all the spaces to that list. Until you get to the end destination. HINT: you\n                  will want to make use of recursion here!\n                </li>\n              </ol>\n            </Accordion.Body>\n          </Accordion.Item>\n        </Accordion>\n        </div>\n\n        <br></br>  \n        \n        <div class=\"chess\">\n          <Game username={UserNameCurr}/>\n        </div>\n\n\n      </div>\n \n    </div>\n    <div class=\"footer2\">\n          © Joe Moore\n        </div>\n      </header>\n    </div>\n    \n  );\n}\nexport default Dashboard;","/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Preferences/Preferences.js",[],"/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Login/Login.js",["131","132","133","134","135","136"],"import React, {useState} from 'react';\nimport { useNavigate } from \"react-router-dom\";\n\nimport PropTypes from 'prop-types';\nimport axios from \"axios\";\n\nimport './Login.css';\n\n\nasync function loginUser(credentials) {\n  try{\n    const responsey = await axios({\n      method: \"POST\",\n      url:\"/hostlogin\",\n      data:{\n        email: credentials.username,\n        password: credentials.password\n      }\n    }\n    ).then((response)=>{\n      return response\n      // axios returns API response body in .data\n    })\n    return([{\n        token: responsey.data.token,\n      }, null]);\n  }\n  catch (error){\n    return([{\n      token: '',\n    }, error.response.data]);\n  }\n}\n\nasync function SignUpUser(credentials) {\n  return({\n      token: 'signup'\n    });\n}\n\n\n\nexport default function Login({ setToken, setUserNameCurr }) {\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n  const [error, setError] = useState();\n\n\n  const handleSubmit = async e => {\n      e.preventDefault();\n      \n      if((username == null || username == '') && (password == null || password == '')){\n        setError(\"No login information was provided\");\n        return;\n      }\n      else if(username == null || username == ''){\n        setError(\"Username must be filled in\");\n        return;\n      }\n      else if(password == null || password == ''){\n        setError(\"Password must be filled in\");\n        return;\n      }\n      const token = await loginUser({\n        username,\n        password\n      });\n      console.log(token)\n      console.log(token[1])\n      setToken(token[0]);\n      setError(token[1]);\n      // if(token == 'token1234'){\n      const UserNameCurr = { UserNameCurr: username}\n      setUserNameCurr(UserNameCurr)\n      console.log(UserNameCurr)\n      // }\n      console.log(token)\n  }\n\n  const signup = async e => {\n    e.preventDefault();\n    const token = await SignUpUser({\n      username,\n      password\n    });\n    setToken(token);\n    // if(token == 'token1234'){\n    const UserNameCurr = { UserNameCurr: username}\n    setUserNameCurr(UserNameCurr)\n    console.log(UserNameCurr)\n    // }\n    console.log(token)\n  }\n\n  return(\n    <div>\n      <div className=\"login-wrapper\">\n          <h2 class=\"title\">Hale - A Web Based Interpreter</h2>\n          <h3 class=\"signin\">Please Login</h3>\n          <form onSubmit={handleSubmit}>\n            <div class=\"form-group\">\n              <label for=\"exampleInputEmail1\">Email address</label>\n              <input type=\"email\" class=\"form-control input-lg\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" onChange={e => setUserName(e.target.value)}></input>\n              <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n            </div>\n            <br></br>\n            <div class=\"form-group\">\n              <label for=\"exampleInputPassword1\">Password</label>\n              <input type=\"password\" class=\"form-control input-lg\" id=\"exampleInputPassword1\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)}></input>\n            </div>\n            {/* <div class=\"form-check\">\n              <input type=\"checkbox\" class=\"form-check-input input-lg\" id=\"exampleCheck1\"></input>\n              <label class=\"form-check-label\" for=\"exampleCheck1\">Check me out</label>\n            </div> */}\n            <br></br>\n            <button type=\"submit\" class=\"btn btn-primary\"><div class=\"btntextloginpage\">Submit</div></button>\n            <br></br>\n            <br></br>\n            <a href=\"#\" onClick={signup}>Don't have an account? Sign up Here!</a>\n          </form>\n          <div class=\"errorMessage\">{error}</div>\n      </div>\n      <div class=\"footer\">\n        © Joe Moore\n      </div>\n    </div>\n  )\n}\n\nLogin.propTypes = {\n    setToken: PropTypes.func.isRequired\n  }","/home/joe/DISSY/flask_test_1/react-flask-app/src/useToken.js",[],"/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Info/Info.js",["137","138","139","140","141","142","143","144","145","146"],"import React, { useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useNavigate } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Info.css';\n\nimport useToken from '../../useToken';\nimport useUserNameCurr from '../../useUserNameCurr.js';\n\n\nfunction Info() {\n  const { UserNameCurr, setUserNameCurr } = useUserNameCurr();\n  const { token, setToken } = useToken();\n  \n  const [FunctionOutput, setFunctionOutput] = useState(0);\n  const [PrintOutputs, setPrintOutput] = useState(0);\n  const [name, setName] = useState('');\n  const editor = document.querySelector(\".editor\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    alert(`The name you entered was: ${name}`)\n  }\n\n  let navigate = useNavigate(); \n  const inforouteChange = () =>{ \n    let path = `../info`; \n    navigate(path);\n  }\n\n  const dashboardrouteChange = () =>{ \n    let path = `../dashboard`; \n    navigate(path);\n  }\n\n  useEffect(() => {\n    fetch('/time').then(res => res.json()).then(data => {\n      setFunctionOutput(data.time);\n      setPrintOutput(data.prints);\n    });\n  }, []);\n\n\n  function buttonpress(){\n    // Simple POST request with a JSON body using fetch\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ title: editor.textContent })\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    alert(`The name you entered was: ${name}`);\n  }\n\n  fetch('/write', requestOptions)\n      .then(response => response.json());\n  };\n\n  const profile = () =>{ \n    let path = `../profile`; \n    navigate(path);\n  }\n\n  function signOut() { \n    setToken('')\n    setUserNameCurr('')\n    let path = `../`; \n    navigate(path);\n    window.location.reload();\n  }\n\n  return (\n    <div className=\"Info\">\n\n      <header className=\"App-header\">\n        <nav class=\"navbar navbar-dark bg-dark pt-3 pb-3\">\n        <form class=\"form-inline\">\n          <h1>Hale - A web based interpreter</h1>\n          <button onClick={dashboardrouteChange} class=\"btn btn-lg btn-secondary\" type=\"button\">Dashboard</button>\n        </form>\n        <form class=\"form-inline float-right\">\n          <h1>‎</h1>\n          <button onClick={profile} class=\"btn btn-lg btn-primary\" type=\"button\">Profie</button>\n          <button onClick={signOut} class=\"btn btn-lg btn-danger\" type=\"button\">Sign Out</button>\n        </form>\n      </nav>\n      \n      <div class=\"cover-container d-flex w-100 h-100 p-3 mx-auto flex-column\">\n        <br></br>\n        <br></br>\n        <h2>Hale</h2>\n        <br></br>\n        <p>Hale is a purely functional statically typed functional programming language. It was designed by Joe Moore to make learning functional programming easier. For such reason it\n          excludes some of the more trickier elements of the paradigm and focuses on the core essentials. Hale supports:\n        </p><p>\n        <ul>\n          <li>Lambda Expressions (or basic functions)</li>\n          <li>Primitive Types (integers, bools and strings)</li>\n          <li>Function application</li>\n          <li>Lists and list operations</li>\n          <li>Higher order functions</li>\n          <li>Recursion</li>\n        </ul>\n        </p>\n        <h3>Getting started with Hale</h3>\n        <p>A simple Hale program looks a little like this:</p>\n        <p class=\"inlineterminalp\">def cube ::= λ x : int. x * x * x;</p>\n        <p>Although the purpose of this function might be obvious from its name, let's break it down further. We start with the 'def' keyword. This indicates to the compiler and\n          the programmer that we are defining a new function rather than calling an existing one, or performing some other operation. This is followed by the function name, in this\n          case 'cube'. We then see the '::=' which is common notation in many functional programming languages. This is followed by a lambda. This is just again more symbolic and a\n          little nod thrown into the language to pay homage to the functional languages that came before Hale. The lambda is followed by any function parameters, in this instance we\n          have one, 'x'. A colon, ':', then means we are getting into the nitty gritty. The type the function should returned is then declared and full stop signifies the beginning\n          of the function. The following expression can call other functions, use any of the built in ones, or many other things. The rule of thumb is it has to be an expression. We\n          will cover in more detail what this means later. In this case it's an arithmetic operation x is multiplied by itself and then multiplied by x again. Giving the cube of x.\n          We finish with a semi-colon, ';'. Let's give that a run. \n        </p>\n        <div class=\"fakeMenu\">\n          <div class=\"fakeButtons fakeClose\"></div>\n          <div class=\"fakeButtons fakeMinimize\"></div>\n          <div class=\"fakeButtons fakeZoom\"></div>\n        </div>\n        <div class=\"fakeScreen\">\n          <p class=\"line4 terminalp\">$ def cube ::= λ x : int. x * x * x;</p>\n          <p class=\"line4 terminalp\">$ cube(3);</p>\n          <p class=\"line4 terminalp\">> 9</p>\n          <p class=\"line4 terminalp\">$ cube(5);</p>\n          <p class=\"line4 terminalp\">> 125</p>\n          <p class=\"line4 terminalp\">$ cube(\"Aubergine\");</p>\n          <p class=\"line4 terminalp\">> LOGICAL ERROR: Multiplication can only be applied to type ints. You have applied it to 'Aubergine' which is type 'str'_</p>\n        </div>\n        <br></br>\n        <p>So what we're saying with our function definition is this. We are defining a function called bue, it takes one input called x. We expect it to give us an integer back\n          and to get that we are going to multiply x by x by x. Simple right? In case you are slightly confused here is a generic rule of thumb for function definition in Hale:\n        </p>\n        <p class=\"inlineterminalp\">def [function name] :: = λ [function parameters] : [function type] . [function body]</p>\n        <p>Congratulations! You've written your first Hale function. Feel free to return to the exercises or to keep reading if you want to unlock more yummy functional programming\n          secrets!\n        </p>\n      </div>\n\n    {/* <div class=\"mycontainer\">\n        <div class=\"myleft\">\n            <div class=\"myeditor\" contenteditable=\"\">\n                Write Code here...\n            </div>\n        </div>\n        <div class=\"mybar\"title=\"Click and Drag\"></div>\n        <div class=\"myright\">\n        <div class=\"mymids\">\n          <p>{FunctionOutput}.</p>\n        </div>\n        <div class=\"mymids\">\n        <p>{PrintOutputs}</p>\n        </div>\n        </div>\n    </div>*/}\n      </header>\n      <div class=\"footer2\">\n          © Joe Moore\n        </div>\n    </div> \n  );\n}\n\nexport default Info;","/home/joe/DISSY/flask_test_1/react-flask-app/src/backendApi.js",[],"/home/joe/DISSY/flask_test_1/react-flask-app/src/server.js",[],"/home/joe/DISSY/flask_test_1/react-flask-app/src/useUserNameCurr.js",[],"/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Profile/Profile.js",["147","148","149","150","151","152","153","154","155","156","157"],"/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Dashboard/chess/components/game.js",["158","159","160","161","162","163","164"],"import React from 'react';\n\nimport '../index.css';\nimport Board from './board.js';\nimport King from '../pieces/king'\nimport FallenSoldierBlock from './fallen-soldier-block.js';\nimport initialiseChessBoard from '../helpers/board-initialiser.js';\n\nexport default class Game extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      squares: initialiseChessBoard(),\n      whiteFallenSoldiers: [],\n      blackFallenSoldiers: [],\n      player: 1,\n      sourceSelection: -1,\n      status: '',\n      turn: 'white'\n    };\n  }\n\n\n  async getFallen(username) {\n    console.log(\"start33\");\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ username: username})\n    }\n    const response = await fetch('/task2', requestOptions)\n    const data = await response.json();\n    // console.log(useUserNameCurr());\n    return data.finallist;\n  }\n\n  async handleClick(i) {\n    console.log(this.props.username);\n    const squares = [...this.state.squares];\n\n    if (this.state.sourceSelection === -1) {\n      if (!squares[i] || squares[i].player !== this.state.player) {\n        this.setState({ status: \"Wrong selection. Choose player \" + this.state.player + \" pieces.\" });\n        if (squares[i]) {\n          squares[i].style = { ...squares[i].style, backgroundColor: \"\" };\n        }\n      }\n      else {\n        squares[i].style = { ...squares[i].style, backgroundColor: \"RGB(111,143,114)\" }; // Emerald from http://omgchess.blogspot.com/2015/09/chess-board-color-schemes.html\n        this.setState({\n          status: \"Choose destination for the selected piece\",\n          sourceSelection: i\n        })\n      }\n      return\n    }\n\n    squares[this.state.sourceSelection].style = { ...squares[this.state.sourceSelection].style, backgroundColor: \"\" };\n\n    if (squares[i] && squares[i].player === this.state.player) {\n      this.setState({\n        status: \"Wrong selection. Choose valid source and destination again.\",\n        sourceSelection: -1,\n      });\n    }\n    else {\n\n      const whiteFallenSoldiers = [];\n      const blackFallenSoldiers = [];\n      const isDestEnemyOccupied = Boolean(squares[i]);\n      const isMovePossible = await squares[this.state.sourceSelection].isMovePossible(this.state.sourceSelection, i, isDestEnemyOccupied, this.props.username);\n      console.log(isMovePossible);\n      if (isMovePossible) {\n        if (squares[i] !== null) {\n          if (squares[i].player === 1) {\n            let listy = await this.getFallen(this.props.username);\n            let fallenWorks = true;\n            let listtest =  [1, 2, 3, 5, 6, 7, 9]\n            for (let index = 0; index < listy.length; index++) {\n              if(listy[index] != listtest[index]){\n                fallenWorks = false;\n                break;\n              }\n            }\n            if(listtest.length != listy.length){\n              fallenWorks = false;\n            }\n            if(fallenWorks){\n              whiteFallenSoldiers.push(squares[i]);\n            }\n          }\n          else {\n            let listy = await this.getFallen(this.props.username);\n            let fallenWorks = true;\n            let listtest =  [1, 2, 3, 5, 6, 7, 9]\n            for (let index = 0; index < listy.length; index++) {\n              if(listy[index] != listtest[index]){\n                fallenWorks = false;\n                break;\n              }\n            }\n            if(listtest.length != listy.length){\n              fallenWorks = false;\n            }\n            if(fallenWorks){\n              blackFallenSoldiers.push(squares[i]);\n            }\n          }\n        }\n\n        squares[i] = squares[this.state.sourceSelection];\n        squares[this.state.sourceSelection] = null;\n\n        const isCheckMe = await this.isCheckForPlayer(squares, this.state.player)\n\n        if (isCheckMe) {\n          this.setState(oldState => ({\n            status: \"Wrong selection. Choose valid source and destination again. Now you have a check!\",\n            sourceSelection: -1,\n          }))\n        } else {\n          let player = this.state.player === 1 ? 2 : 1;\n          let turn = this.state.turn === 'white' ? 'black' : 'white';\n\n          this.setState(oldState => ({\n            sourceSelection: -1,\n            squares,\n            whiteFallenSoldiers: [...oldState.whiteFallenSoldiers, ...whiteFallenSoldiers],\n            blackFallenSoldiers: [...oldState.blackFallenSoldiers, ...blackFallenSoldiers],\n            player,\n            status: '',\n            turn\n          }));\n        }\n      }\n      else {\n        this.setState({\n          status: \"Wrong selection. Choose valid source and destination again.\",\n          sourceSelection: -1,\n        });\n      }\n    }\n  }\n\n  getKingPosition(squares, player) {\n    return squares.reduce((acc, curr, i) =>\n      acc || //King may be only one, if we had found it, returned his position\n      ((curr //current squre mustn't be a null\n        && (curr.getPlayer() === player)) //we are looking for aspecial king \n        && (curr instanceof King)\n        && i), // returned position if all conditions are completed\n      null)\n  }\n\n  async isCheckForPlayer(squares, player) {\n    const opponent = player === 1 ? 2 : 1\n    const playersKingPosition = this.getKingPosition(squares, player)\n    const canPieceKillPlayersKing = false\n    \n    // (piece, i) => piece.isMovePossible(playersKingPosition, i, squares)\n    // return squares.reduce((acc, curr, idx) =>\n    //   acc ||\n    //   (curr &&\n    //     (curr.getPlayer() === opponent) &&\n    //     canPieceKillPlayersKing(curr, idx)\n    //     && true),\n    //   false)\n  }\n\n  render() {\n\n    return (\n      <div>\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board\n              squares={this.state.squares}\n              onClick={(i) => this.handleClick(i)}\n            />\n          </div>\n          <div className=\"game-info\">\n            <h3>Turn</h3>\n            <div id=\"player-turn-box\" style={{ backgroundColor: this.state.turn }}>\n\n            </div>\n            <div className=\"game-status\">{this.state.status}</div>\n\n            <div className=\"fallen-soldier-block\">\n\n              {<FallenSoldierBlock\n                whiteFallenSoldiers={this.state.whiteFallenSoldiers}\n                blackFallenSoldiers={this.state.blackFallenSoldiers}\n              />\n              }\n            </div>\n\n          </div>\n        </div>\n\n\n      </div>\n\n\n    );\n  }\n}\n\n","/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Dashboard/chess/components/board.js",[],"/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Dashboard/chess/components/fallen-soldier-block.js",[],"/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Dashboard/chess/helpers/board-initialiser.js",[],"/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Dashboard/chess/pieces/king.js",[],"/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Dashboard/chess/pieces/knight.js",[],"/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Dashboard/chess/components/square.js",[],"/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Dashboard/chess/pieces/pawn.js",[],"/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Dashboard/chess/pieces/queen.js",[],"/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Dashboard/chess/pieces/bishop.js",[],"/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Dashboard/chess/pieces/piece.js",[],"/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Dashboard/chess/pieces/rook.js",["165"],"import Piece from './piece.js';\nimport { isSameRow, isSameColumn, isSameDiagonal, isPathClean } from '../helpers'\n\nexport default class Rook extends Piece {\n  constructor(player) {\n    super(player, (player === 1 ? \"https://upload.wikimedia.org/wikipedia/commons/7/72/Chess_rlt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/f/ff/Chess_rdt45.svg\"));\n  }\n\n  isMovePossible(src, dest, squares, username) {\n    return isPathClean(this.getSrcToDestPath(src, dest, username), squares) && (isSameColumn(src, dest) || isSameRow(src, dest));\n  }\n\n  /**\n   * get path between src and dest (src and dest exclusive)\n   * @param  {num} src  \n   * @param  {num} dest \n   * @return {[array]}      \n   */\n  getSrcToDestPath(src, dest, username) {\n    let path = [], pathStart, pathEnd, incrementBy;\n    if (src > dest) {\n      pathStart = dest;\n      pathEnd = src;\n    }\n    else {\n      pathStart = src;\n      pathEnd = dest;\n    }\n    if (Math.abs(src - dest) % 8 === 0) {\n      incrementBy = 8;\n      pathStart += 8;\n    }\n    else {\n      incrementBy = 1;\n      pathStart += 1;\n    }\n\n    for (let i = pathStart; i < pathEnd; i += incrementBy) {\n      path.push(i);\n    }\n    return path;\n  }\n}\n","/home/joe/DISSY/flask_test_1/react-flask-app/src/components/Dashboard/chess/helpers/index.js",[],"/home/joe/DISSY/flask_test_1/react-flask-app/src/components/SignUp/SignUp.js",["166","167","168","169","170","171"],"import React, {useState} from 'react';\nimport { useNavigate } from \"react-router-dom\";\n\nimport PropTypes from 'prop-types';\nimport axios from \"axios\";\n\nimport './SignUp.css';\n\nasync function SignUpUser(credentials) {\n  try{\n    const responsey = await axios({\n      method: \"POST\",\n      url:\"/hostSignUp\",\n      data:{\n        email: credentials.username,\n        password: credentials.password,\n        firstname: credentials.fname,\n        surname: credentials.sname\n      }\n    }\n    ).then((response)=>{\n      return response\n      // axios returns API response body in .data\n    })\n    return([{\n        token: responsey.data.token,\n      }, null]);\n  }\n  catch (error){\n    return([{\n      token: 'signup',\n    }, error.response.data]);\n  }\n}\n\nasync function loginUser(credentials) {\n  return({\n      token: ''\n    });\n}\n\n\nexport default function SignUp({ setToken, setUserNameCurr }) {\n    const [username, setUserName] = useState();\n    const [password, setPassword] = useState();\n    const [fname, setFname] = useState();\n    const [sname, setSname] = useState();\n    const [error, setError] = useState();\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        if(username == null || username == ''){\n          setError(\"Username must be filled in\");\n          return;\n        }\n        if(fname == null || fname == ''){\n          setError(\"First Name must be filled in\");\n          return;\n        }\n        if(sname == null || sname == ''){\n          setError(\"Surname must be filled in\");\n          return;\n        }\n        if(password == null || password == ''){\n          setError(\"Surname must be filled in\");\n          return;\n        }\n        const token = await SignUpUser({\n          username,\n          password,\n          fname,\n          sname\n        });\n\n        setToken(token[0]);\n        setError(token[1]);\n        // if(token == 'token1234'){\n        const UserNameCurr = { UserNameCurr: username}\n        setUserNameCurr(UserNameCurr)\n        //console.log(UserNameCurr)\n        // }\n        console.log(token)\n        console.log(token[1])\n        console.log(error)\n    }\n\n    const login = async e => {\n      e.preventDefault();\n      const token = await loginUser({\n        username,\n        password,\n      });\n      setToken(token);\n      // if(token == 'token1234'){\n      const UserNameCurr = { UserNameCurr: username}\n      setUserNameCurr(UserNameCurr)\n      console.log(UserNameCurr)\n      // }\n      console.log(token)\n    }\n\n\n    return(\n      <div>\n        <div className=\"login-wrapper\">\n            <h2 class=\"title\">Hale - A Web Based Interpreter</h2>\n            <h3 class=\"signin\">Please Sign Up</h3>\n            <form onSubmit={handleSubmit}>\n              <div class=\"form-group\">\n                <label for=\"exampleInputEmail1\">First Name</label>\n                <input type=\"name\" class=\"form-control input-lg\" id=\"exampleInpuFtName1\" aria-describedby=\"emailHelp\" placeholder=\"John\" onChange={e => setFname(e.target.value)}></input>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"exampleInputEmail1\">Surname</label>\n                <input type=\"name\" class=\"form-control input-lg\" id=\"exampleInputSName1\" aria-describedby=\"emailHelp\" placeholder=\"Doe\" onChange={e => setSname(e.target.value)}></input>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"exampleInputEmail1\">Email address</label>\n                <input type=\"email\" class=\"form-control input-lg\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" onChange={e => setUserName(e.target.value)}></input>\n                <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n              </div>\n              <br></br>\n              <div class=\"form-group\">\n                <label for=\"exampleInputPassword1\">Password</label>\n                <input type=\"password\" class=\"form-control input-lg\" id=\"exampleInputPassword1\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)}></input>\n              </div>\n              {/* <div class=\"form-check\">\n                <input type=\"checkbox\" class=\"form-check-input input-lg\" id=\"exampleCheck1\"></input>\n                <label class=\"form-check-label\" for=\"exampleCheck1\">Check me out</label>\n              </div> */}\n              <br></br>\n              <button type=\"submit\" class=\"btn btn-primary\"><div class=\"btntextloginpage\">Submit</div></button>\n              <br></br>\n              <br></br>\n              <a href=\"#\" onClick={login}>Already have an account? Login here!</a>\n            </form>\n            <div class=\"errorMessage\">{error}</div>\n        </div>\n        <div class=\"footer\">\n          © Joe Moore\n        </div>\n    </div>\n\n\n    )\n}\n\nSignUp.propTypes = {\n    setToken: PropTypes.func.isRequired\n  }",{"ruleId":"172","severity":1,"message":"173","line":8,"column":7,"nodeType":"174","messageId":"175","endLine":8,"endColumn":9},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"172","severity":1,"message":"180","line":19,"column":10,"nodeType":"174","messageId":"175","endLine":19,"endColumn":24},{"ruleId":"172","severity":1,"message":"181","line":20,"column":10,"nodeType":"174","messageId":"175","endLine":20,"endColumn":22},{"ruleId":"172","severity":1,"message":"182","line":21,"column":16,"nodeType":"174","messageId":"175","endLine":21,"endColumn":23},{"ruleId":"172","severity":1,"message":"183","line":25,"column":9,"nodeType":"174","messageId":"175","endLine":25,"endColumn":21},{"ruleId":"172","severity":1,"message":"184","line":48,"column":12,"nodeType":"174","messageId":"175","endLine":48,"endColumn":23},{"ruleId":"172","severity":1,"message":"183","line":56,"column":9,"nodeType":"174","messageId":"175","endLine":56,"endColumn":21},{"ruleId":"185","severity":1,"message":"186","line":77,"column":12,"nodeType":"187","messageId":"188","endLine":77,"endColumn":14},{"ruleId":"172","severity":1,"message":"189","line":1,"column":35,"nodeType":"174","messageId":"175","endLine":1,"endColumn":44},{"ruleId":"172","severity":1,"message":"190","line":2,"column":10,"nodeType":"174","messageId":"175","endLine":2,"endColumn":20},{"ruleId":"172","severity":1,"message":"191","line":3,"column":10,"nodeType":"174","messageId":"175","endLine":3,"endColumn":16},{"ruleId":"172","severity":1,"message":"192","line":19,"column":11,"nodeType":"174","messageId":"175","endLine":19,"endColumn":16},{"ruleId":"185","severity":1,"message":"186","line":67,"column":25,"nodeType":"187","messageId":"188","endLine":67,"endColumn":27},{"ruleId":"185","severity":1,"message":"186","line":86,"column":25,"nodeType":"187","messageId":"188","endLine":86,"endColumn":27},{"ruleId":"172","severity":1,"message":"193","line":2,"column":10,"nodeType":"174","messageId":"175","endLine":2,"endColumn":21},{"ruleId":"185","severity":1,"message":"186","line":52,"column":40,"nodeType":"187","messageId":"188","endLine":52,"endColumn":42},{"ruleId":"185","severity":1,"message":"186","line":52,"column":80,"nodeType":"187","messageId":"188","endLine":52,"endColumn":82},{"ruleId":"185","severity":1,"message":"186","line":56,"column":44,"nodeType":"187","messageId":"188","endLine":56,"endColumn":46},{"ruleId":"185","severity":1,"message":"186","line":60,"column":44,"nodeType":"187","messageId":"188","endLine":60,"endColumn":46},{"ruleId":"194","severity":1,"message":"195","line":119,"column":13,"nodeType":"196","endLine":119,"endColumn":42},{"ruleId":"172","severity":1,"message":"191","line":2,"column":10,"nodeType":"174","messageId":"175","endLine":2,"endColumn":16},{"ruleId":"172","severity":1,"message":"197","line":12,"column":11,"nodeType":"174","messageId":"175","endLine":12,"endColumn":23},{"ruleId":"172","severity":1,"message":"192","line":13,"column":11,"nodeType":"174","messageId":"175","endLine":13,"endColumn":16},{"ruleId":"172","severity":1,"message":"180","line":15,"column":10,"nodeType":"174","messageId":"175","endLine":15,"endColumn":24},{"ruleId":"172","severity":1,"message":"181","line":16,"column":10,"nodeType":"174","messageId":"175","endLine":16,"endColumn":22},{"ruleId":"172","severity":1,"message":"182","line":17,"column":16,"nodeType":"174","messageId":"175","endLine":17,"endColumn":23},{"ruleId":"172","severity":1,"message":"183","line":20,"column":9,"nodeType":"174","messageId":"175","endLine":20,"endColumn":21},{"ruleId":"172","severity":1,"message":"198","line":26,"column":9,"nodeType":"174","messageId":"175","endLine":26,"endColumn":24},{"ruleId":"172","severity":1,"message":"184","line":44,"column":12,"nodeType":"174","messageId":"175","endLine":44,"endColumn":23},{"ruleId":"172","severity":1,"message":"183","line":52,"column":9,"nodeType":"174","messageId":"175","endLine":52,"endColumn":21},{"ruleId":"172","severity":1,"message":"191","line":2,"column":10,"nodeType":"174","messageId":"175","endLine":2,"endColumn":16},{"ruleId":"172","severity":1,"message":"192","line":14,"column":11,"nodeType":"174","messageId":"175","endLine":14,"endColumn":16},{"ruleId":"172","severity":1,"message":"199","line":16,"column":35,"nodeType":"174","messageId":"175","endLine":16,"endColumn":61},{"ruleId":"172","severity":1,"message":"200","line":17,"column":35,"nodeType":"174","messageId":"175","endLine":17,"endColumn":61},{"ruleId":"172","severity":1,"message":"201","line":18,"column":35,"nodeType":"174","messageId":"175","endLine":18,"endColumn":61},{"ruleId":"172","severity":1,"message":"202","line":19,"column":35,"nodeType":"174","messageId":"175","endLine":19,"endColumn":61},{"ruleId":"172","severity":1,"message":"198","line":25,"column":9,"nodeType":"174","messageId":"175","endLine":25,"endColumn":24},{"ruleId":"203","severity":1,"message":"204","line":78,"column":6,"nodeType":"205","endLine":78,"endColumn":8,"suggestions":"206"},{"ruleId":"203","severity":1,"message":"207","line":92,"column":6,"nodeType":"205","endLine":92,"endColumn":8,"suggestions":"208"},{"ruleId":"172","severity":1,"message":"184","line":95,"column":12,"nodeType":"174","messageId":"175","endLine":95,"endColumn":23},{"ruleId":"209","severity":1,"message":"210","line":127,"column":9,"nodeType":"196","endLine":127,"endColumn":44},{"ruleId":"185","severity":1,"message":"211","line":80,"column":31,"nodeType":"187","messageId":"188","endLine":80,"endColumn":33},{"ruleId":"185","severity":1,"message":"211","line":85,"column":32,"nodeType":"187","messageId":"188","endLine":85,"endColumn":34},{"ruleId":"185","severity":1,"message":"211","line":97,"column":31,"nodeType":"187","messageId":"188","endLine":97,"endColumn":33},{"ruleId":"185","severity":1,"message":"211","line":102,"column":32,"nodeType":"187","messageId":"188","endLine":102,"endColumn":34},{"ruleId":"172","severity":1,"message":"212","line":156,"column":11,"nodeType":"174","messageId":"175","endLine":156,"endColumn":19},{"ruleId":"172","severity":1,"message":"213","line":157,"column":11,"nodeType":"174","messageId":"175","endLine":157,"endColumn":30},{"ruleId":"172","severity":1,"message":"214","line":158,"column":11,"nodeType":"174","messageId":"175","endLine":158,"endColumn":34},{"ruleId":"172","severity":1,"message":"215","line":2,"column":35,"nodeType":"174","messageId":"175","endLine":2,"endColumn":49},{"ruleId":"172","severity":1,"message":"193","line":2,"column":10,"nodeType":"174","messageId":"175","endLine":2,"endColumn":21},{"ruleId":"185","severity":1,"message":"186","line":52,"column":41,"nodeType":"187","messageId":"188","endLine":52,"endColumn":43},{"ruleId":"185","severity":1,"message":"186","line":56,"column":35,"nodeType":"187","messageId":"188","endLine":56,"endColumn":37},{"ruleId":"185","severity":1,"message":"186","line":60,"column":35,"nodeType":"187","messageId":"188","endLine":60,"endColumn":37},{"ruleId":"185","severity":1,"message":"186","line":64,"column":41,"nodeType":"187","messageId":"188","endLine":64,"endColumn":43},{"ruleId":"194","severity":1,"message":"195","line":135,"column":15,"nodeType":"196","endLine":135,"endColumn":43},"no-unused-vars","'db' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["216"],"no-negated-in-lhs",["217"],"'FunctionOutput' is assigned a value but never used.","'PrintOutputs' is assigned a value but never used.","'setName' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'buttonpress' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'Chessboard' is defined but never used.","'Button' is defined but never used.","'token' is assigned a value but never used.","'useNavigate' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'UserNameCurr' is assigned a value but never used.","'inforouteChange' is assigned a value but never used.","'setTask1CompletedFunctions' is assigned a value but never used.","'setTask2CompletedFunctions' is assigned a value but never used.","'setTask3CompletedFunctions' is assigned a value but never used.","'setTask4CompletedFunctions' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Task1CompletedFunctions', 'Task2CompletedFunctions', 'Task3CompletedFunctions', and 'UserNameCurr'. Either include them or remove the dependency array.","ArrayExpression",["218"],"React Hook useEffect has a missing dependency: 'UserNameCurr'. Either include it or remove the dependency array.",["219"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","Expected '!==' and instead saw '!='.","'opponent' is assigned a value but never used.","'playersKingPosition' is assigned a value but never used.","'canPieceKillPlayersKing' is assigned a value but never used.","'isSameDiagonal' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},"Update the dependencies array to be: [Task1CompletedFunctions, Task2CompletedFunctions, Task3CompletedFunctions, UserNameCurr]",{"range":"224","text":"225"},"Update the dependencies array to be: [UserNameCurr]",{"range":"226","text":"227"},[2321,2323],"[Task1CompletedFunctions, Task2CompletedFunctions, Task3CompletedFunctions, UserNameCurr]",[2689,2691],"[UserNameCurr]"]