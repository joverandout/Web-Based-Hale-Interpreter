[{"/home/joe/DISSY/flask_test_1/react-flask-app/src/index.js":"1","/home/joe/DISSY/flask_test_1/react-flask-app/src/App.js":"2","/home/joe/DISSY/flask_test_1/react-flask-app/src/reportWebVitals.js":"3"},{"size":500,"mtime":1634920968113,"results":"4","hashOfConfig":"5"},{"size":2204,"mtime":1643111399405,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1634920968113,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"151clb",{"filePath":"11","messages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"/home/joe/DISSY/flask_test_1/react-flask-app/src/index.js",[],["16","17"],"/home/joe/DISSY/flask_test_1/react-flask-app/src/App.js",["18","19","20","21"],"import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n\n  const [FunctionOutput, setFunctionOutput] = useState(0);\n  const [PrintOutputs, setPrintOutput] = useState(0);\n  const [name, setName] = useState('');\n  const editor = document.querySelector(\".editor\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    alert(`The name you entered was: ${name}`)\n  }\n\n  // useEffect(() => {\n  //     // Simple POST request with a JSON body using fetch\n  //     const requestOptions = {\n  //         method: 'POST',\n  //         headers: { 'Content-Type': 'application/json' },\n  //         body: JSON.stringify({ title: 'return(\"yo\"+\"yo\");' })\n  //     };\n  //     fetch('/write', requestOptions)\n  //         .then(response => response.json());\n  // }, []);\n\n  useEffect(() => {\n    fetch('/time').then(res => res.json()).then(data => {\n      setFunctionOutput(data.time);\n      setPrintOutput(data.prints);\n    });\n  }, []);\n\n\n  function buttonpress(){\n    // Simple POST request with a JSON body using fetch\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ title: editor.textContent })\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    alert(`The name you entered was: ${name}`);\n  }\n\n  fetch('/write', requestOptions)\n      .then(response => response.json());\n  };\n\n  return (\n    <div className=\"App\">\n\n      <header className=\"App-header\">\n      <div class=\"editor-menu\">\n        <button class=\"btn btn-dark\">Dark Mode</button>\n        <button class=\"btn btn-light\">Light Mode</button>\n        <button class=\"btn btn-run\" onClick={buttonpress}>Run</button>\n    </div>\n\n    <div class=\"container\">\n        <div class=\"left\">\n            <div class=\"editor\" contenteditable=\"\">\n                Write Code here...\n            </div>\n        </div>\n        <div class=\"bar\"title=\"Click and Drag\"></div>\n        <div class=\"right\">\n        <p>{FunctionOutput}.</p>\n        <br></br>\n        <p>{PrintOutputs}[END]</p>\n        <p>hell</p>\n        </div>\n    </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;","/home/joe/DISSY/flask_test_1/react-flask-app/src/reportWebVitals.js",[],{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","severity":1,"message":"27","line":2,"column":8,"nodeType":"28","messageId":"29","endLine":2,"endColumn":12},{"ruleId":"26","severity":1,"message":"30","line":9,"column":16,"nodeType":"28","messageId":"29","endLine":9,"endColumn":23},{"ruleId":"26","severity":1,"message":"31","line":12,"column":9,"nodeType":"28","messageId":"29","endLine":12,"endColumn":21},{"ruleId":"26","severity":1,"message":"31","line":44,"column":9,"nodeType":"28","messageId":"29","endLine":44,"endColumn":21},"no-native-reassign",["32"],"no-negated-in-lhs",["33"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'setName' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]